pretender_rebels = {
	color = { 179 51 51 }
	area = nation
	government = monarchy
	defection = none
	independence = none
	unit_transfer = yes
	gfx_type = culture_province
	resilient = yes
	reinforcing = yes
	general = yes
	smart = yes
	disband_on_leader_death = yes
	will_relocate = yes
	artillery = 0.1
	infantry = 0.6
	cavalry = 0.3
	morale = 1.2
	handle_action_negotiate = no
	handle_action_stability = no
	handle_action_build_core = no
	handle_action_send_missionary = yes
	spawn_chance = {
		factor = 1
		modifier = {
			factor = 0
			owner = {
				OR = {
					AND = {
						OR = {
							has_reform = papacy_reform
							has_reform = papal_government
						}
					}
				}
			}
		}
		modifier = {
			factor = 0
			owner = {
				is_colonial_nation = yes
			}
		}
		modifier = {
			factor = 0
			owner = {
				NOT = {
					num_of_cities = 3
				}
			}
		}
		modifier = {
			factor = 0
			is_overseas = yes
		}
		modifier = {
			factor = 2
			owner = {
				government = republic
				aristocracy_ideas = 1
			}
		}
		modifier = {
			factor = 20
			owner = {
				has_disaster = civil_war
			}
		}
		modifier = {
			factor = 5.0
			owner = {
				government = republic
				NOT = {
					republican_tradition = 40
				}
			}
		}
		modifier = {
			factor = 50.0
			owner = {
				has_country_flag = war_of_the_roses
			}
		}
		modifier = {
			factor = 30
			owner = {
				government = monarchy
				has_regency = yes
				has_heir = no
			}
		}
		modifier = {
			factor = 5
			owner = {
				government = monarchy
				has_regency = yes
				has_heir = yes
				NOT = {
					heir_claim = 33
				}
			}
		}
		modifier = {
			factor = 5
			owner = {
				government = monarchy
				has_regency = yes
				has_heir = yes
				NOT = {
					heir_claim = 66
				}
			}
		}
		modifier = {
			factor = 2
			owner = {
				government = monarchy
				has_regency = yes
				has_heir = yes
				NOT = {
					heir_claim = 85
				}
			}
		}
		modifier = {
			factor = 3
			owner = {
				is_lesser_in_union = yes
			}
		}
		modifier = {
			factor = 3
			owner = {
				is_lesser_in_union = yes
				NOT = {
					legitimacy = 75
				}
			}
		}
		modifier = {
			factor = 3
			owner = {
				is_lesser_in_union = yes
				NOT = {
					legitimacy = 50
				}
			}
		}
		modifier = {
			factor = 3
			owner = {
				is_lesser_in_union = yes
				NOT = {
					legitimacy = 25
				}
			}
		}
		modifier = {
			factor = 1.5
			owner = {
				aristocracy_ideas = 3
			}
		}
		modifier = {
			factor = 1.5
			owner = {
				aristocracy_ideas = 5
			}
		}
		modifier = {
			factor = 0.25
			owner = {
				NOT = {
					primary_culture = ROOT
				}
				NOT = {
					has_disaster = white_horde_collapse
				}
			}
		}
		modifier = {
			factor = 0.1
			NOT = {
				is_core = ROOT
			}
			any_core_country = {
				primary_culture = ROOT
			}
		}
		modifier = {
			factor = 0.75
			owner = {
				government = monarchy
				legitimacy = 66
			}
		}
		modifier = {
			factor = 0.5
			owner = {
				government = monarchy
				legitimacy = 75
			}
		}
		modifier = {
			factor = 4
			owner = {
				has_country_modifier = time_of_troubles
			}
		}
		modifier = {
			factor = 10
			owner = {
				has_country_modifier = "tribal_succession_crisis"
			}
		}
		modifier = {
			factor = 2.5
			owner = {
				OR = {
					AND = {
						OR = {
							has_reform = tribal_kingdom
							has_reform = tribal_kingdom_legacy
						}
					}
					AND = {
						OR = {
							has_reform = tribal_despotism
							has_reform = tribal_despotism_legacy
						}
					}
				}
			}
		}
		modifier = {
			factor = 3
			has_province_modifier = pretender_organizing
		}
		modifier = {
			factor = 0.5
			has_province_modifier = nationalists_organizing
		}
		modifier = {
			factor = 40
			owner = {
				has_disaster = white_horde_collapse
			}
		}
		modifier = {
			factor = 0
			owner = {
				tag = CHU
			}
		}
	}
	movement_evaluation = {
		factor = 1
		modifier = {
			factor = 0.1
			units_in_province = 1
		}
		modifier = {
			factor = 0.001
			controlled_by = REB
		}
		modifier = {
			factor = 4.0
			is_capital = yes
		}
		modifier = {
			factor = 1.5
			unrest = 2
		}
		modifier = {
			factor = 1.5
			unrest = 4
		}
		modifier = {
			factor = 1.5
			unrest = 6
		}
	}
	siege_won_trigger = {}
	siege_won_effect = {}
	can_negotiate_trigger = {
		always = no
	}
	can_enforce_trigger = {
		always = yes
	}
	demands_description = "pretender_rebels_demand"
	demands_enforced_effect = {
		every_owned_province = {
			limit = {
				is_city = yes
			}
			add_local_autonomy = 10
		}
		hidden_effect = {
			set_variable = {
				which = nobles_loyalty_added_a
				value = 10
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_greater_nobles_weight_share
					value = 0.05
				}
				OR = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						which = estate_lesser_nobles_weight_share
					}
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.10
					}
				}
			}
			custom_tooltip = t_estate_greater_nobles_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = greater_nobles_loyalty_added
					value = 0
				}
				set_variable = {
					which = greater_nobles_loyalty_added
					which = nobles_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 64
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 32
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 16
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 8
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 4
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 2
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 1
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_greater_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_greater_nobles_loyalty
						}
						set_variable = {
							which = estate_greater_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_lesser_nobles_weight_share
					value = 0.15
				}
				OR = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						which = estate_greater_nobles_weight_share
					}
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.25
					}
				}
			}
			custom_tooltip = t_estate_lesser_nobles_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = lesser_nobles_loyalty_added
					value = 0
				}
				set_variable = {
					which = lesser_nobles_loyalty_added
					which = nobles_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 64
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 32
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 16
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 8
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 4
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 2
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 1
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_lesser_nobles_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = lesser_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_lesser_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_lesser_nobles_loyalty
						}
						set_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		add_stability = -1
		hidden_effect = {
			country_event = {
				id = POP_Stability.003
			}
		}
		if = {
			limit = {
				is_emperor_of_china = yes
			}
			add_mandate = -5
		}
		if = {
			limit = {
				has_disaster = civil_war
			}
			add_prestige = -200
			add_legitimacy = 25
		}
		set_country_flag = no_new_succession_crisis_if_pretender_rebels
		define_ruler = {
			rebel = yes
		}
		clr_country_flag = no_new_succession_crisis_if_pretender_rebels
		if = {
			limit = {
				has_heir = yes
			}
			kill_heir = yes
		}
		if = {
			limit = {
				has_disaster = internal_conflicts
			}
			country_event = {
				id = internal_conflicts.8
			}
			end_disaster = internal_conflicts
		}
		if = {
			limit = {
				has_disaster = english_civil_war
			}
			country_event = {
				id = english_civil_war.100
			}
			end_disaster = english_civil_war
		}
		if = {
			limit = {
				has_disaster = civil_war
			}
			end_disaster = civil_war
			clr_country_flag = civilwar_on_capital
		}
		if = {
			limit = {
				is_subject_of_type = warlord
			}
			overlord = {
				country_event = {
					id = tianxia.131
					days = 30
					random = 50
				}
			}
		}
	}
}
