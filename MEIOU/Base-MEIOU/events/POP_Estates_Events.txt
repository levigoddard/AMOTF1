namespace = POP_Estates_Events
country_event = {
	id = POP_Estates_Events.001
	title = "POP_Estates_Events.001.t"
	desc = "POP_Estates_Events.001.d"
	picture = COURT_eventPicture
	is_triggered_only = yes
	hidden = yes
	immediate = {
		every_country = {
			limit = {
				exists = yes
				has_country_flag = stuffs_set
			}
			set_variable = {
				which = privilege_demand_modifier
				value = 1
			}
			set_variable = {
				which = privilege_admin_modifier
				value = 0
			}
			set_variable = {
				which = privilege_admin_modifier
				value = 40
			}
			set_variable = {
				which = privilege_admin_modifier_den
				value = 40
			}
			change_variable = {
				which = privilege_admin_modifier_den
				which = tech_admin_level
			}
			if = {
				limit = {
					is_variable_equal = {
						which = privilege_admin_modifier_den
						value = 0
					}
				}
			}
			else = {
				divide_variable = {
					which = privilege_admin_modifier
					which = privilege_admin_modifier_den
				}
			}
			multiply_variable = {
				which = privilege_demand_modifier
				which = privilege_admin_modifier
			}
			if = {
				limit = {
					check_variable = {
						which = country_total_pop
						value = 100
					}
				}
				if = {
					limit = {
						check_variable = {
							which = country_total_pop
							value = 50000
						}
					}
					set_variable = {
						which = multiplier
						value = 5
					}
				}
				else = {
					set_variable = {
						which = logistic_input
						which = country_total_pop
					}
					multiply_variable = {
						which = logistic_input
						value = 0.01
					}
					set_variable = {
						which = expntLogi
						which = logistic_input
					}
					subtract_variable = {
						which = expntLogi
						value = 0
					}
					multiply_variable = {
						which = expntLogi
						value = 0.01
					}
					multiply_variable = {
						which = expntLogi
						value = -1
					}
					if = {
						limit = {
							check_variable = {
								which = expntLogi
								value = 14.58
							}
						}
						set_variable = {
							which = divisor
							value = 2143267.367
						}
					}
					else = {
						set_variable = {
							which = math.e.expnt
							which = expntLogi
						}
						set_variable = {
							which = math.e.return
							value = 1
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = math.e.expnt
										value = -6.999
									}
								}
							}
							set_variable = {
								which = divisor
								value = 0
							}
						}
						else = {
							while = {
								limit = {
									check_variable = {
										which = math.e.expnt
										value = 1
									}
								}
								subtract_variable = {
									which = math.e.expnt
									value = 1
								}
								multiply_variable = {
									which = math.e.return
									value = 2.718
								}
							}
							while = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = 0
										}
									}
								}
								change_variable = {
									which = math.e.expnt
									value = 1
								}
								divide_variable = {
									which = math.e.return
									value = 2.718
								}
							}
							set_variable = {
								which = math.e.sm
								value = 1
							}
							if = {
								limit = {
									NOT = {
										is_variable_equal = {
											which = math.e.expnt
											value = 0
										}
									}
								}
								set_variable = {
									which = math.e.sq
									which = math.e.expnt
								}
								multiply_variable = {
									which = math.e.sq
									which = math.e.expnt
								}
								set_variable = {
									which = math.e.fct
									value = 2
								}
								set_variable = {
									which = math.e.fctl
									value = 2
								}
								set_variable = {
									which = math.e.a1
									which = math.e.sq
								}
								set_variable = {
									which = math.e.a2
									which = math.e.expnt
								}
								set_variable = {
									which = math.e.a3
									value = 2
								}
								set_variable = {
									which = math.e.tmp
									which = math.e.a2
								}
								multiply_variable = {
									which = math.e.tmp
									which = math.e.a3
								}
								change_variable = {
									which = math.e.tmp
									which = math.e.a1
								}
								divide_variable = {
									which = math.e.tmp
									which = math.e.fct
								}
								change_variable = {
									which = math.e.sm
									which = math.e.tmp
								}
								set_variable = {
									which = math.e.prec
									value = 3
								}
								subtract_variable = {
									which = math.e.prec
									value = 1
								}
								while = {
									limit = {
										check_variable = {
											which = math.e.prec
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									change_variable = {
										which = math.e.fctl
										value = 1
									}
									multiply_variable = {
										which = math.e.fct
										which = math.e.fctl
									}
									change_variable = {
										which = math.e.fctl
										value = 1
									}
									multiply_variable = {
										which = math.e.fct
										which = math.e.fctl
									}
									multiply_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									multiply_variable = {
										which = math.e.a2
										which = math.e.sq
									}
									change_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
								}
							}
							multiply_variable = {
								which = math.e.return
								which = math.e.sm
							}
							set_variable = {
								which = divisor
								which = math.e.return
							}
							set_variable = {
								which = math.e.sm
								value = 0
							}
							set_variable = {
								which = math.e.tmp
								value = 0
							}
							set_variable = {
								which = math.e.a1
								value = 0
							}
							set_variable = {
								which = math.e.a2
								value = 0
							}
							set_variable = {
								which = math.e.a3
								value = 0
							}
							set_variable = {
								which = math.e.fctl
								value = 0
							}
							set_variable = {
								which = math.e.fct
								value = 0
							}
							set_variable = {
								which = math.e.prec
								value = 0
							}
							set_variable = {
								which = math.e.sq
								value = 0
							}
						}
						set_variable = {
							which = math.e.expnt
							value = 0
						}
						set_variable = {
							which = math.e.return
							value = 0
						}
					}
					set_variable = {
						which = logistic_val
						value = 8
					}
					change_variable = {
						which = divisor
						value = 1
					}
					divide_variable = {
						which = logistic_val
						which = divisor
					}
					set_variable = {
						which = e
						value = 0
					}
					set_variable = {
						which = divisor
						value = 0
					}
					set_variable = {
						which = expntLogi
						value = 0
					}
					set_variable = {
						which = multiplier
						which = logistic_val
					}
					subtract_variable = {
						which = multiplier
						value = 3
					}
				}
				multiply_variable = {
					which = privilege_demand_modifier
					which = multiplier
				}
				set_variable = {
					which = multiplier
					value = 0
				}
			}
			if = {
				limit = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.05
					}
				}
				set_variable = {
					which = privilege_GN_counter_inertia
					value = 1.45
				}
				set_variable = {
					which = privilege_GN_counter_inertia_adjust
					which = privilege_GN_base
				}
				multiply_variable = {
					which = privilege_GN_counter_inertia_adjust
					value = 0.01
				}
				subtract_variable = {
					which = privilege_GN_counter_inertia
					which = privilege_GN_counter_inertia_adjust
				}
				set_variable = {
					which = privilege_GN_weight_malus
					which = estate_greater_nobles_weight_share
				}
				divide_variable = {
					which = privilege_GN_weight_malus
					value = 2
				}
				change_variable = {
					which = privilege_GN_weight_malus
					value = 0.9
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = privilege_demand_ticker_greater_nobles
								value = 0.01
							}
						}
					}
					set_variable = {
						which = privilege_demand_ticker_greater_nobles
						value = 0
					}
				}
				set_variable = {
					which = privilege_demand_greater_nobles_yearly
					value = 0
				}
				random_list = {
					10 = {
						set_variable = {
							which = privilege_demand_greater_nobles_yearly
							value = 0.5
						}
					}
					20 = {
						set_variable = {
							which = privilege_demand_greater_nobles_yearly
							value = 0.75
						}
					}
					40 = {
						set_variable = {
							which = privilege_demand_greater_nobles_yearly
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = privilege_demand_greater_nobles_yearly
							value = 1.25
						}
					}
					10 = {
						set_variable = {
							which = privilege_demand_greater_nobles_yearly
							value = 1.5
						}
					}
				}
				set_variable = {
					which = privilege_GN_loyalty_malus
					value = 0
				}
				set_variable = {
					which = privilege_GN_loyalty_malus
					which = estate_greater_nobles_loyalty
				}
				subtract_variable = {
					which = privilege_GN_loyalty_malus
					value = 0.5
				}
				multiply_variable = {
					which = privilege_GN_loyalty_malus
					value = 0.25
				}
				change_variable = {
					which = privilege_GN_loyalty_malus
					value = 1
				}
				multiply_variable = {
					which = privilege_demand_greater_nobles_yearly
					which = privilege_GN_loyalty_malus
				}
				multiply_variable = {
					which = privilege_demand_greater_nobles_yearly
					which = privilege_GN_weight_malus
				}
				multiply_variable = {
					which = privilege_demand_greater_nobles_yearly
					which = privilege_demand_modifier
				}
				multiply_variable = {
					which = privilege_demand_greater_nobles_yearly
					which = privilege_GN_counter_inertia
				}
				change_variable = {
					which = privilege_demand_ticker_greater_nobles
					which = privilege_demand_greater_nobles_yearly
				}
				if = {
					limit = {
						check_variable = {
							which = privilege_demand_ticker_greater_nobles
							value = 40
						}
						NOT = {
							is_at_war = yes
						}
					}
					subtract_variable = {
						which = privilege_demand_ticker_greater_nobles
						value = 40
					}
					set_variable = {
						which = GN_privilege_pain_modifier
						value = 1.1
					}
					random = {
						chance = 60
						set_country_flag = GN_hit_to_legitimacy
						multiply_variable = {
							which = GN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 40
						set_country_flag = GN_hit_to_prestige
						multiply_variable = {
							which = GN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 40
						set_country_flag = GN_hit_to_military
						multiply_variable = {
							which = GN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 80
						set_country_flag = GN_hit_to_loyalty
						multiply_variable = {
							which = GN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 60
						set_country_flag = GN_hit_to_stability
						multiply_variable = {
							which = GN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 50
						set_country_flag = GN_hit_to_mil_points
						multiply_variable = {
							which = GN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 70
						set_country_flag = GN_unrest
						multiply_variable = {
							which = GN_privilege_pain_modifier
							value = 0.9
						}
					}
					random_list = {
						20 = {
							country_event = {
								id = POP_Estates_Events.002
								days = 2
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.002
								days = 5
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.002
								days = 10
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.002
								days = 15
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.002
								days = 20
							}
						}
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.05
					}
				}
				set_variable = {
					which = privilege_LN_counter_inertia
					value = 1.45
				}
				set_variable = {
					which = privilege_LN_counter_inertia_adjust
					which = privilege_LN_base
				}
				multiply_variable = {
					which = privilege_LN_counter_inertia_adjust
					value = 0.01
				}
				subtract_variable = {
					which = privilege_LN_counter_inertia
					which = privilege_LN_counter_inertia_adjust
				}
				set_variable = {
					which = privilege_LN_weight_malus
					which = estate_lesser_nobles_weight_share
				}
				divide_variable = {
					which = privilege_LN_weight_malus
					value = 2
				}
				change_variable = {
					which = privilege_LN_weight_malus
					value = 0.9
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = privilege_demand_ticker_lesser_nobles
								value = 0.01
							}
						}
					}
					set_variable = {
						which = privilege_demand_ticker_lesser_nobles
						value = 0
					}
				}
				set_variable = {
					which = privilege_demand_lesser_nobles_yearly
					value = 0
				}
				random_list = {
					10 = {
						set_variable = {
							which = privilege_demand_lesser_nobles_yearly
							value = 0.5
						}
					}
					20 = {
						set_variable = {
							which = privilege_demand_lesser_nobles_yearly
							value = 0.75
						}
					}
					40 = {
						set_variable = {
							which = privilege_demand_lesser_nobles_yearly
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = privilege_demand_lesser_nobles_yearly
							value = 1.25
						}
					}
					10 = {
						set_variable = {
							which = privilege_demand_lesser_nobles_yearly
							value = 1.5
						}
					}
				}
				set_variable = {
					which = privilege_LN_loyalty_malus
					value = 0
				}
				set_variable = {
					which = privilege_LN_loyalty_malus
					which = estate_lesser_nobles_loyalty
				}
				subtract_variable = {
					which = privilege_LN_loyalty_malus
					value = 0.5
				}
				multiply_variable = {
					which = privilege_LN_loyalty_malus
					value = 0.25
				}
				change_variable = {
					which = privilege_LN_loyalty_malus
					value = 1
				}
				multiply_variable = {
					which = privilege_demand_lesser_nobles_yearly
					which = privilege_LN_loyalty_malus
				}
				multiply_variable = {
					which = privilege_demand_lesser_nobles_yearly
					which = privilege_LN_weight_malus
				}
				multiply_variable = {
					which = privilege_demand_lesser_nobles_yearly
					which = privilege_demand_modifier
				}
				multiply_variable = {
					which = privilege_demand_lesser_nobles_yearly
					which = privilege_LN_counter_inertia
				}
				change_variable = {
					which = privilege_demand_ticker_lesser_nobles
					which = privilege_demand_lesser_nobles_yearly
				}
				if = {
					limit = {
						check_variable = {
							which = privilege_demand_ticker_lesser_nobles
							value = 40
						}
						NOT = {
							is_at_war = yes
						}
					}
					subtract_variable = {
						which = privilege_demand_ticker_lesser_nobles
						value = 40
					}
					set_variable = {
						which = LN_privilege_pain_modifier
						value = 1.1
					}
					random = {
						chance = 40
						set_country_flag = LN_hit_to_legitimacy
						multiply_variable = {
							which = LN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 40
						set_country_flag = LN_hit_to_prestige
						multiply_variable = {
							which = LN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 40
						set_country_flag = LN_hit_to_military
						multiply_variable = {
							which = LN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 80
						set_country_flag = LN_hit_to_loyalty
						multiply_variable = {
							which = LN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 60
						set_country_flag = LN_hit_to_stability
						multiply_variable = {
							which = LN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 50
						set_country_flag = LN_hit_to_adm_points
						multiply_variable = {
							which = LN_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 70
						set_country_flag = LN_unrest
						multiply_variable = {
							which = LN_privilege_pain_modifier
							value = 0.9
						}
					}
					random_list = {
						20 = {
							country_event = {
								id = POP_Estates_Events.003
								days = 2
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.003
								days = 5
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.003
								days = 10
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.003
								days = 15
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.003
								days = 20
							}
						}
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = estate_burghers_weight_share
						value = 0.05
					}
				}
				set_variable = {
					which = privilege_BG_counter_inertia
					value = 1.45
				}
				set_variable = {
					which = privilege_BG_counter_inertia_adjust
					which = privilege_BG_base
				}
				multiply_variable = {
					which = privilege_BG_counter_inertia_adjust
					value = 0.01
				}
				subtract_variable = {
					which = privilege_BG_counter_inertia
					which = privilege_BG_counter_inertia_adjust
				}
				set_variable = {
					which = privilege_BG_weight_malus
					which = estate_burghers_weight_share
				}
				divide_variable = {
					which = privilege_BG_weight_malus
					value = 2
				}
				change_variable = {
					which = privilege_BG_weight_malus
					value = 0.9
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = privilege_demand_ticker_burghers
								value = 0.01
							}
						}
					}
					set_variable = {
						which = privilege_demand_ticker_burghers
						value = 0
					}
				}
				set_variable = {
					which = privilege_demand_burghers_yearly
					value = 0
				}
				random_list = {
					10 = {
						set_variable = {
							which = privilege_demand_burghers_yearly
							value = 0.5
						}
					}
					20 = {
						set_variable = {
							which = privilege_demand_burghers_yearly
							value = 0.75
						}
					}
					40 = {
						set_variable = {
							which = privilege_demand_burghers_yearly
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = privilege_demand_burghers_yearly
							value = 1.25
						}
					}
					10 = {
						set_variable = {
							which = privilege_demand_burghers_yearly
							value = 1.5
						}
					}
				}
				set_variable = {
					which = privilege_BG_loyalty_malus
					value = 0
				}
				set_variable = {
					which = privilege_BG_loyalty_malus
					which = estate_burghers_loyalty
				}
				subtract_variable = {
					which = privilege_BG_loyalty_malus
					value = 0.5
				}
				multiply_variable = {
					which = privilege_BG_loyalty_malus
					value = 0.25
				}
				change_variable = {
					which = privilege_BG_loyalty_malus
					value = 1
				}
				multiply_variable = {
					which = privilege_demand_burghers_yearly
					which = privilege_BG_loyalty_malus
				}
				multiply_variable = {
					which = privilege_demand_burghers_yearly
					which = privilege_BG_weight_malus
				}
				multiply_variable = {
					which = privilege_demand_burghers_yearly
					which = privilege_demand_modifier
				}
				multiply_variable = {
					which = privilege_demand_burghers_yearly
					which = privilege_BG_counter_inertia
				}
				change_variable = {
					which = privilege_demand_ticker_burghers
					which = privilege_demand_burghers_yearly
				}
				if = {
					limit = {
						check_variable = {
							which = privilege_demand_ticker_burghers
							value = 40
						}
						NOT = {
							is_at_war = yes
						}
					}
					subtract_variable = {
						which = privilege_demand_ticker_burghers
						value = 40
					}
					set_variable = {
						which = BG_privilege_pain_modifier
						value = 1.1
					}
					random = {
						chance = 40
						set_country_flag = BG_hit_to_legitimacy
						multiply_variable = {
							which = BG_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 40
						set_country_flag = BG_hit_to_prestige
						multiply_variable = {
							which = BG_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 60
						set_country_flag = BG_commercial_havoc
						multiply_variable = {
							which = BG_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 80
						set_country_flag = BG_hit_to_loyalty
						multiply_variable = {
							which = BG_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 60
						set_country_flag = BG_hit_to_stability
						multiply_variable = {
							which = BG_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 70
						set_country_flag = BG_hit_to_dip_points
						multiply_variable = {
							which = BG_privilege_pain_modifier
							value = 0.9
						}
					}
					random = {
						chance = 60
						set_country_flag = BG_unrest
						multiply_variable = {
							which = BG_privilege_pain_modifier
							value = 0.9
						}
					}
					random_list = {
						20 = {
							country_event = {
								id = POP_Estates_Events.004
								days = 2
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.004
								days = 5
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.004
								days = 10
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.004
								days = 15
							}
						}
						20 = {
							country_event = {
								id = POP_Estates_Events.004
								days = 20
							}
						}
					}
				}
			}
			if = {
				limit = {
					always = no
					check_variable = {
						which = estate_bureaucracy_weight_share
						value = 0.05
					}
				}
				set_variable = {
					which = privilege_BU_counter_inertia
					value = 1.45
				}
				set_variable = {
					which = privilege_BU_counter_inertia_adjust
					which = privilege_BU_base
				}
				multiply_variable = {
					which = privilege_BU_counter_inertia_adjust
					value = 0.01
				}
				subtract_variable = {
					which = privilege_BU_counter_inertia
					which = privilege_BU_counter_inertia_adjust
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = privilege_demand_ticker_bureaucracy
								value = 0.01
							}
						}
					}
					set_variable = {
						which = privilege_demand_ticker_bureaucracy
						value = 0
					}
				}
				set_variable = {
					which = privilege_demand_bureaucracy_yearly
					value = 0
				}
				set_variable = {
					which = privilege_demand_bureaucracy_yearly
					which = estate_bureaucracy_weight_share
				}
				random_list = {
					10 = {
						multiply_variable = {
							which = privilege_demand_bureaucracy_yearly
							value = 0.5
						}
					}
					20 = {
						multiply_variable = {
							which = privilege_demand_bureaucracy_yearly
							value = 0.75
						}
					}
					40 = {
						multiply_variable = {
							which = privilege_demand_bureaucracy_yearly
							value = 1
						}
					}
					20 = {
						multiply_variable = {
							which = privilege_demand_bureaucracy_yearly
							value = 1.25
						}
					}
					10 = {
						multiply_variable = {
							which = privilege_demand_bureaucracy_yearly
							value = 1.5
						}
					}
				}
				multiply_variable = {
					which = privilege_demand_bureaucracy_yearly
					which = privilege_demand_modifier
				}
				multiply_variable = {
					which = privilege_demand_bureaucracy_yearly
					which = privilege_BU_counter_inertia
				}
				change_variable = {
					which = privilege_demand_bureaucracy_yearly
					value = 1
				}
				change_variable = {
					which = privilege_demand_ticker_bureaucracy
					which = privilege_demand_bureaucracy_yearly
				}
			}
		}
	}
	option = {
		name = "POP_Estates_Events.001.a"
		ai_chance = {
			factor = 100
		}
	}
	after = {
		every_country = {
			limit = {
				exists = yes
			}
			set_variable = {
				which = privilege_admin_modifier
				value = 0
			}
			set_variable = {
				which = privilege_admin_modifier_den
				value = 0
			}
			set_variable = {
				which = privilege_demand_greater_nobles_yearly
				value = 0
			}
			set_variable = {
				which = privilege_demand_lesser_nobles_yearly
				value = 0
			}
			set_variable = {
				which = privilege_demand_burghers_yearly
				value = 0
			}
			set_variable = {
				which = privilege_demand_bureaucracy_yearly
				value = 0
			}
			set_variable = {
				which = privilege_demand_modifier
				value = 0
			}
			set_variable = {
				which = privilege_GN_counter_inertia
				value = 0
			}
			set_variable = {
				which = privilege_GN_counter_inertia_adjust
				value = 0
			}
			set_variable = {
				which = privilege_LN_counter_inertia
				value = 0
			}
			set_variable = {
				which = privilege_LN_counter_inertia_adjust
				value = 0
			}
			set_variable = {
				which = privilege_BG_counter_inertia
				value = 0
			}
			set_variable = {
				which = privilege_BG_counter_inertia_adjust
				value = 0
			}
			set_variable = {
				which = privilege_BU_counter_inertia
				value = 0
			}
			set_variable = {
				which = privilege_BU_counter_inertia_adjust
				value = 0
			}
			set_variable = {
				which = privilege_GN_loyalty_malus
				value = 0
			}
			set_variable = {
				which = privilege_LN_loyalty_malus
				value = 0
			}
			set_variable = {
				which = privilege_BG_loyalty_malus
				value = 0
			}
			set_variable = {
				which = privilege_GN_weight_malus
				value = 0
			}
			set_variable = {
				which = privilege_LN_weight_malus
				value = 0
			}
			set_variable = {
				which = privilege_BG_weight_malus
				value = 0
			}
		}
	}
}
country_event = {
	id = POP_Estates_Events.002
	title = "POP_Estates_Events.002.t"
	desc = "POP_Estates_Events.002.d"
	picture = {
		trigger = {
			technology_group = western
		}
		picture = WE_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = muslim
				technology_group = turkishtech
				technology_group = steppestech
			}
		}
		picture = ISL_GN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = eastern
		}
		picture = EE_GN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = indian
		}
		picture = IND_GN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = chinese
		}
		picture = EA_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = soudantech
				technology_group = sub_saharan
				technology_group = central_african
				technology_group = malagasy_tech
				technology_group = east_african
			}
		}
		picture = AFR_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = austranesian
				technology_group = hawaii_tech
			}
		}
		picture = SEA_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = mesoamerican
				technology_group = south_american
			}
		}
		picture = AMR_GN_eventPicture
	}
	is_triggered_only = yes
	hidden = no
	immediate = {
		hidden_effect = {
			set_variable = {
				which = GN_corruption_current
				value = 0
			}
			change_variable = {
				which = GN_corruption_current
				which = privilege_corruption_GN
			}
			multiply_variable = {
				which = GN_corruption_current
				value = 0.01
			}
			set_variable = {
				which = GN_corruption_cost_1
				value = 0
			}
			change_variable = {
				which = GN_corruption_cost_1
				value = 5
			}
			multiply_variable = {
				which = GN_corruption_cost_1
				value = 2
			}
			multiply_variable = {
				which = GN_corruption_cost_1
				value = 0.01
			}
			multiply_variable = {
				which = GN_corruption_cost_1
				which = estate_greater_nobles_weight_share
			}
			set_country_flag = freeze_all_privileges
			set_variable = {
				which = ai_corruption_choice
				value = -2
			}
			if = {
				limit = {
					has_country_flag = GN_hit_to_loyalty
				}
				random_list = {
					10 = {
						set_variable = {
							which = greater_nobles_loyalty_removed_a
							value = 2
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
					20 = {
						set_variable = {
							which = greater_nobles_loyalty_removed_a
							value = 5
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = greater_nobles_loyalty_removed_a
							value = 10
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = greater_nobles_loyalty_removed_a
							value = 15
						}
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
					10 = {
						set_variable = {
							which = greater_nobles_loyalty_removed_a
							value = 20
						}
						change_variable = {
							which = ai_corruption_choice
							value = 6
						}
					}
				}
				multiply_variable = {
					which = greater_nobles_loyalty_removed_a
					which = GN_privilege_pain_modifier
				}
				multiply_variable = {
					which = greater_nobles_loyalty_removed_a
					value = 0.001
				}
				multiply_variable = {
					which = greater_nobles_loyalty_removed_a
					value = 1000
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.40
							}
						}
					}
					change_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 0.60
						}
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
			}
			if = {
				limit = {
					has_country_flag = GN_hit_to_legitimacy
				}
				random_list = {
					10 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 10
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
					20 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 25
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 40
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 55
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 75
						}
						change_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
				}
				multiply_variable = {
					which = hit_to_legitimacy
					which = GN_privilege_pain_modifier
				}
				multiply_variable = {
					which = hit_to_legitimacy
					which = estate_greater_nobles_weight_share
				}
				if = {
					limit = {
						NOT = {
							legitimacy = 50
						}
					}
					change_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
				if = {
					limit = {
						legitimacy = 70
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 1
					}
				}
			}
			if = {
				limit = {
					has_country_flag = GN_hit_to_prestige
				}
				random_list = {
					10 = {
						set_variable = {
							which = hit_to_prestige
							value = 10
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_variable = {
							which = hit_to_prestige
							value = 25
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					40 = {
						set_variable = {
							which = hit_to_prestige
							value = 40
						}
						change_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					20 = {
						set_variable = {
							which = hit_to_prestige
							value = 55
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					10 = {
						set_variable = {
							which = hit_to_prestige
							value = 75
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
				}
				multiply_variable = {
					which = hit_to_prestige
					which = GN_privilege_pain_modifier
				}
				multiply_variable = {
					which = hit_to_prestige
					which = estate_greater_nobles_weight_share
				}
			}
			if = {
				limit = {
					has_country_flag = GN_hit_to_military
				}
				random_list = {
					10 = {
						set_variable = {
							which = GN_hit_to_military
							value = 30
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
					20 = {
						set_variable = {
							which = GN_hit_to_military
							value = 60
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = GN_hit_to_military
							value = 100
						}
						change_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					20 = {
						set_variable = {
							which = GN_hit_to_military
							value = 150
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = GN_hit_to_military
							value = 200
						}
						change_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
				}
				multiply_variable = {
					which = GN_hit_to_military
					which = GN_privilege_pain_modifier
				}
				multiply_variable = {
					which = GN_hit_to_military
					which = estate_greater_nobles_weight_share
				}
			}
			if = {
				limit = {
					has_country_flag = GN_hit_to_stability
				}
				random_list = {
					10 = {
						set_variable = {
							which = stability_hit
							value = 30
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 5
						}
					}
					20 = {
						set_variable = {
							which = stability_hit
							value = 50
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = stability_hit
							value = 75
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = stability_hit
							value = 100
						}
						change_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
					10 = {
						set_variable = {
							which = stability_hit
							value = 125
						}
						change_variable = {
							which = ai_corruption_choice
							value = 6
						}
					}
				}
				multiply_variable = {
					which = stability_hit
					which = GN_privilege_pain_modifier
				}
				multiply_variable = {
					which = stability_hit
					which = estate_greater_nobles_weight_share
				}
				if = {
					limit = {
						NOT = {
							stability = 1
						}
					}
					change_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
				if = {
					limit = {
						stability = 2
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
			}
			if = {
				limit = {
					has_country_flag = GN_hit_to_mil_points
				}
				random_list = {
					10 = {
						set_variable = {
							which = milit_cost_a
							value = 100
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_variable = {
							which = milit_cost_a
							value = 150
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					40 = {
						set_variable = {
							which = milit_cost_a
							value = 200
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = milit_cost_a
							value = 250
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = milit_cost_a
							value = 300
						}
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
				}
				multiply_variable = {
					which = milit_cost_a
					which = GN_privilege_pain_modifier
				}
				multiply_variable = {
					which = milit_cost_a
					which = estate_greater_nobles_weight_share
				}
				multiply_variable = {
					which = milit_cost_a
					value = 0.001
				}
				multiply_variable = {
					which = milit_cost_a
					value = 1000
				}
			}
			if = {
				limit = {
					has_country_flag = GN_autonomy_demands
				}
				random_list = {
					10 = {
						set_variable = {
							which = autonomy_added
							value = 10
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_variable = {
							which = autonomy_added
							value = 15
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					40 = {
						set_variable = {
							which = autonomy_added
							value = 25
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = autonomy_added
							value = 35
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = autonomy_added
							value = 50
						}
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
				}
				multiply_variable = {
					which = autonomy_added
					which = GN_privilege_pain_modifier
				}
				multiply_variable = {
					which = autonomy_added
					value = 0.001
				}
				multiply_variable = {
					which = autonomy_added
					value = 1000
				}
			}
			if = {
				limit = {
					has_country_flag = GN_unrest
				}
				random_list = {
					10 = {
						set_country_flag = GN_unrest_1
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_country_flag = GN_unrest_2
						subtract_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					40 = {
						set_country_flag = GN_unrest_3
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_country_flag = GN_unrest_4
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_country_flag = GN_unrest_5
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = GN_privilege_pain_modifier
						value = 1.1
					}
				}
				set_variable = {
					which = greater_nobles_loyalty_removed_a
					value = 5
				}
				set_variable = {
					which = ai_corruption_choice
					value = -5
				}
			}
			change_variable = {
				which = ai_corruption_choice
				value = 3
			}
			if = {
				limit = {
					check_variable = {
						which = GN_privilege_pain_modifier
						value = 0.59
					}
				}
				subtract_variable = {
					which = ai_corruption_choice
					value = 1
				}
				if = {
					limit = {
						check_variable = {
							which = GN_privilege_pain_modifier
							value = 0.66
						}
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 1
					}
					if = {
						limit = {
							check_variable = {
								which = GN_privilege_pain_modifier
								value = 0.72
							}
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 1
						}
						if = {
							limit = {
								check_variable = {
									which = GN_privilege_pain_modifier
									value = 0.82
								}
							}
							subtract_variable = {
								which = ai_corruption_choice
								value = 1
							}
							if = {
								limit = {
									check_variable = {
										which = GN_privilege_pain_modifier
										value = 0.91
									}
								}
								subtract_variable = {
									which = ai_corruption_choice
									value = 1
								}
								if = {
									limit = {
										check_variable = {
											which = GN_privilege_pain_modifier
											value = 1.01
										}
									}
									subtract_variable = {
										which = ai_corruption_choice
										value = 1
									}
								}
							}
						}
					}
				}
			}
			set_variable = {
				which = privilege_ticker
				value = 10
			}
		}
		while = {
			limit = {
				check_variable = {
					which = privilege_ticker
					value = 1
				}
			}
			subtract_variable = {
				which = privilege_ticker
				value = 1
			}
			random_list = {
				20 = {
					if = {
						limit = {
							has_country_flag = GN_authority_to_govern_locally_3
							NOT = {
								has_country_flag = GN_authority_to_govern_locally_4
							}
						}
						set_country_flag = choose_GN_authority_to_govern_locally_4
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							has_country_flag = GN_authority_to_govern_locally_2
							NOT = {
								has_country_flag = GN_authority_to_govern_locally_3
							}
						}
						set_country_flag = choose_GN_authority_to_govern_locally_3
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							has_country_flag = GN_authority_to_govern_locally_1
							NOT = {
								has_country_flag = GN_authority_to_govern_locally_2
							}
						}
						set_country_flag = choose_GN_authority_to_govern_locally_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = GN_authority_to_govern_locally_1
							}
							NOT = {
								has_country_flag = GN_authority_to_govern_locally_2
							}
							NOT = {
								has_country_flag = GN_authority_to_govern_locally_3
							}
							NOT = {
								has_country_flag = GN_authority_to_govern_locally_4
							}
						}
						set_country_flag = choose_GN_authority_to_govern_locally_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = ceremonial_generalships_1
							NOT = {
								has_country_flag = ceremonial_generalships_2
							}
						}
						set_country_flag = choose_ceremonial_generalships_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = ceremonial_generalships_1
							}
							NOT = {
								has_country_flag = ceremonial_generalships_2
							}
						}
						set_country_flag = choose_ceremonial_generalships_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = GN_relaxed_levy_obligations_1
							NOT = {
								has_country_flag = GN_relaxed_levy_obligations_2
							}
						}
						set_country_flag = choose_GN_relaxed_levy_obligations_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = GN_relaxed_levy_obligations_1
							}
							NOT = {
								has_country_flag = GN_relaxed_levy_obligations_2
							}
						}
						set_country_flag = choose_GN_relaxed_levy_obligations_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = GN_tax_exemptions_1
						}
						set_country_flag = choose_GN_tax_exemptions_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					else_if = {
						limit = {
							has_country_flag = GN_tax_exemptions_2
						}
						set_country_flag = choose_GN_tax_exemptions_3
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					else_if = {
						limit = {
							has_country_flag = GN_tax_exemptions_3
						}
						set_country_flag = choose_GN_tax_exemptions_4
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					else_if = {
						limit = {
							NOT = {
								has_country_flag = GN_tax_exemptions_4
							}
						}
						set_country_flag = choose_GN_tax_exemptions_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = GN_exclude_commoners_cabinet_1
							NOT = {
								has_country_flag = GN_exclude_commoners_cabinet_2
							}
						}
						set_country_flag = choose_GN_exclude_commoners_cabinet_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = GN_exclude_commoners_cabinet_1
							}
							NOT = {
								has_country_flag = GN_exclude_commoners_cabinet_2
							}
						}
						set_country_flag = choose_GN_exclude_commoners_cabinet_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = GN_high_court_titles_1
							NOT = {
								has_country_flag = GN_high_court_titles_2
							}
						}
						set_country_flag = choose_GN_high_court_titles_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = GN_high_court_titles_1
							}
							NOT = {
								has_country_flag = GN_high_court_titles_2
							}
						}
						set_country_flag = choose_GN_high_court_titles_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = GN_high_nobles_court_1
							NOT = {
								has_country_flag = GN_high_nobles_court_2
							}
						}
						set_country_flag = choose_GN_high_nobles_court_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = GN_high_nobles_court_1
							}
							NOT = {
								has_country_flag = GN_high_nobles_court_2
							}
						}
						set_country_flag = choose_GN_high_nobles_court_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = commoners_banned_from_officers_corps_1
							NOT = {
								has_country_flag = commoners_banned_from_officers_corps_2
							}
						}
						set_country_flag = choose_commoners_banned_from_officers_corps_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = commoners_banned_from_officers_corps_1
							}
							NOT = {
								has_country_flag = commoners_banned_from_officers_corps_2
							}
						}
						set_country_flag = choose_commoners_banned_from_officers_corps_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							culture_group = japanese
							AND = {
								OR = {
									AND = {
										culture_group = japanese
										has_reform = celestial_empire
									}
									has_reform = daimyo_legacy
									has_reform = shogunate_legacy
									has_reform = indep_daimyo_legacy
								}
							}
							AND = {
								OR = {
									is_subject = no
									is_subject_of_type = tributary_state
									is_subject_of_type = close_tributary_state
								}
							}
							num_of_cities = 2
							NOT = {
								calc_true_if = {
									all_country = {
										culture_group = japanese
									}
									amount = 52
								}
							}
							any_owned_province = {
								is_capital = no
								has_province_flag = greater_nobles_control_province
							}
						}
						random_owned_province = {
							limit = {
								is_capital = no
								has_province_flag = greater_nobles_control_province
							}
							save_event_target_as = daimyo_province
						}
						set_country_flag = choose_release_daimyo
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
			}
		}
	}
	option = {
		name = "POP_Estates_Events.002.a"
		ai_chance = {
			factor = 1
			modifier = {
				factor = 1000
				check_variable = {
					which = ai_corruption_choice
					value = 0
				}
			}
		}
		hidden_effect = {
			clr_country_flag = GN_hit_to_loyalty
			clr_country_flag = GN_hit_to_legitimacy
			clr_country_flag = GN_hit_to_prestige
			clr_country_flag = GN_hit_to_military
			clr_country_flag = GN_hit_to_stability
			clr_country_flag = GN_hit_to_mil_points
			clr_country_flag = GN_autonomy_demands
			clr_country_flag = GN_unrest
			clr_country_flag = GN_unrest_1
			clr_country_flag = GN_unrest_2
			clr_country_flag = GN_unrest_3
			clr_country_flag = GN_unrest_4
			clr_country_flag = GN_unrest_5
		}
		trigger_switch = {
			on_trigger = has_country_flag
			choose_GN_authority_to_govern_locally_1 = {
				custom_tooltip = GN_authority_to_govern_locally_1_privilege
				hidden_effect = {
					set_country_flag = GN_authority_to_govern_locally_1
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = GN_authority_to_govern_locally_1
							}
							extend_province_modifier = {
								name = GN_authority_to_govern_locally_1
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = GN_authority_to_govern_locally_1
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_GN_authority_to_govern_locally_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
			}
			choose_GN_authority_to_govern_locally_2 = {
				custom_tooltip = GN_authority_to_govern_locally_2_privilege
				hidden_effect = {
					clr_country_flag = GN_authority_to_govern_locally_1
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = GN_authority_to_govern_locally_1
							}
							remove_province_modifier = GN_authority_to_govern_locally_1
						}
					}
				}
				hidden_effect = {
					set_country_flag = GN_authority_to_govern_locally_2
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = GN_authority_to_govern_locally_2
							}
							extend_province_modifier = {
								name = GN_authority_to_govern_locally_2
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = GN_authority_to_govern_locally_2
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_GN_authority_to_govern_locally_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
			}
			choose_GN_authority_to_govern_locally_3 = {
				custom_tooltip = GN_authority_to_govern_locally_3_privilege
				hidden_effect = {
					clr_country_flag = GN_authority_to_govern_locally_2
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = GN_authority_to_govern_locally_2
							}
							remove_province_modifier = GN_authority_to_govern_locally_2
						}
					}
				}
				hidden_effect = {
					set_country_flag = GN_authority_to_govern_locally_3
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = GN_authority_to_govern_locally_3
							}
							extend_province_modifier = {
								name = GN_authority_to_govern_locally_3
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = GN_authority_to_govern_locally_3
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_GN_authority_to_govern_locally_3
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
			}
			choose_GN_authority_to_govern_locally_4 = {
				custom_tooltip = GN_authority_to_govern_locally_4_privilege
				hidden_effect = {
					clr_country_flag = GN_authority_to_govern_locally_3
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = GN_authority_to_govern_locally_3
							}
							remove_province_modifier = GN_authority_to_govern_locally_3
						}
					}
				}
				hidden_effect = {
					set_country_flag = GN_authority_to_govern_locally_4
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = GN_authority_to_govern_locally_4
							}
							extend_province_modifier = {
								name = GN_authority_to_govern_locally_4
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = GN_authority_to_govern_locally_4
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_GN_authority_to_govern_locally_4
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
			}
			choose_ceremonial_generalships_1 = {
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = ceremonial_generalships_1
							}
						}
						set_country_flag = ceremonial_generalships_1
					}
				}
				custom_tooltip = ceremonial_generalships_1_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = ceremonial_generalships_1_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								ceremonial_generalships_1_20 = {
									remove_country_modifier = ceremonial_generalships_1_20
								}
								ceremonial_generalships_1_40 = {
									remove_country_modifier = ceremonial_generalships_1_40
								}
								ceremonial_generalships_1_60 = {
									remove_country_modifier = ceremonial_generalships_1_60
								}
								ceremonial_generalships_1_80 = {
									remove_country_modifier = ceremonial_generalships_1_80
								}
								ceremonial_generalships_1_100 = {
									remove_country_modifier = ceremonial_generalships_1_100
								}
							}
							add_country_modifier = {
								name = ceremonial_generalships_1_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = ceremonial_generalships_1_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								ceremonial_generalships_1_20 = {
									remove_country_modifier = ceremonial_generalships_1_20
								}
								ceremonial_generalships_1_40 = {
									remove_country_modifier = ceremonial_generalships_1_40
								}
								ceremonial_generalships_1_60 = {
									remove_country_modifier = ceremonial_generalships_1_60
								}
								ceremonial_generalships_1_80 = {
									remove_country_modifier = ceremonial_generalships_1_80
								}
								ceremonial_generalships_1_100 = {
									remove_country_modifier = ceremonial_generalships_1_100
								}
							}
							add_country_modifier = {
								name = ceremonial_generalships_1_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = ceremonial_generalships_1_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								ceremonial_generalships_1_20 = {
									remove_country_modifier = ceremonial_generalships_1_20
								}
								ceremonial_generalships_1_40 = {
									remove_country_modifier = ceremonial_generalships_1_40
								}
								ceremonial_generalships_1_60 = {
									remove_country_modifier = ceremonial_generalships_1_60
								}
								ceremonial_generalships_1_80 = {
									remove_country_modifier = ceremonial_generalships_1_80
								}
								ceremonial_generalships_1_100 = {
									remove_country_modifier = ceremonial_generalships_1_100
								}
							}
							add_country_modifier = {
								name = ceremonial_generalships_1_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = ceremonial_generalships_1_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								ceremonial_generalships_1_20 = {
									remove_country_modifier = ceremonial_generalships_1_20
								}
								ceremonial_generalships_1_40 = {
									remove_country_modifier = ceremonial_generalships_1_40
								}
								ceremonial_generalships_1_60 = {
									remove_country_modifier = ceremonial_generalships_1_60
								}
								ceremonial_generalships_1_80 = {
									remove_country_modifier = ceremonial_generalships_1_80
								}
								ceremonial_generalships_1_100 = {
									remove_country_modifier = ceremonial_generalships_1_100
								}
							}
							add_country_modifier = {
								name = ceremonial_generalships_1_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = ceremonial_generalships_1_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								ceremonial_generalships_1_20 = {
									remove_country_modifier = ceremonial_generalships_1_20
								}
								ceremonial_generalships_1_40 = {
									remove_country_modifier = ceremonial_generalships_1_40
								}
								ceremonial_generalships_1_60 = {
									remove_country_modifier = ceremonial_generalships_1_60
								}
								ceremonial_generalships_1_80 = {
									remove_country_modifier = ceremonial_generalships_1_80
								}
								ceremonial_generalships_1_100 = {
									remove_country_modifier = ceremonial_generalships_1_100
								}
							}
							add_country_modifier = {
								name = ceremonial_generalships_1_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							ceremonial_generalships_1_20 = {
								remove_country_modifier = ceremonial_generalships_1_20
							}
							ceremonial_generalships_1_40 = {
								remove_country_modifier = ceremonial_generalships_1_40
							}
							ceremonial_generalships_1_60 = {
								remove_country_modifier = ceremonial_generalships_1_60
							}
							ceremonial_generalships_1_80 = {
								remove_country_modifier = ceremonial_generalships_1_80
							}
							ceremonial_generalships_1_100 = {
								remove_country_modifier = ceremonial_generalships_1_100
							}
						}
					}
				}
				clr_country_flag = choose_ceremonial_generalships_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = ceremonial_generalships_1_privilege_desc
			}
			choose_ceremonial_generalships_2 = {
				clr_country_flag = ceremonial_generalships_1
				trigger_switch = {
					on_trigger = has_country_modifier
					ceremonial_generalships_1_20 = {
						remove_country_modifier = ceremonial_generalships_1_20
					}
					ceremonial_generalships_1_40 = {
						remove_country_modifier = ceremonial_generalships_1_40
					}
					ceremonial_generalships_1_60 = {
						remove_country_modifier = ceremonial_generalships_1_60
					}
					ceremonial_generalships_1_80 = {
						remove_country_modifier = ceremonial_generalships_1_80
					}
					ceremonial_generalships_1_100 = {
						remove_country_modifier = ceremonial_generalships_1_100
					}
				}
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = ceremonial_generalships_2
							}
						}
						set_country_flag = ceremonial_generalships_2
					}
				}
				custom_tooltip = ceremonial_generalships_2_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = ceremonial_generalships_2_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								ceremonial_generalships_2_20 = {
									remove_country_modifier = ceremonial_generalships_2_20
								}
								ceremonial_generalships_2_40 = {
									remove_country_modifier = ceremonial_generalships_2_40
								}
								ceremonial_generalships_2_60 = {
									remove_country_modifier = ceremonial_generalships_2_60
								}
								ceremonial_generalships_2_80 = {
									remove_country_modifier = ceremonial_generalships_2_80
								}
								ceremonial_generalships_2_100 = {
									remove_country_modifier = ceremonial_generalships_2_100
								}
							}
							add_country_modifier = {
								name = ceremonial_generalships_2_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = ceremonial_generalships_2_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								ceremonial_generalships_2_20 = {
									remove_country_modifier = ceremonial_generalships_2_20
								}
								ceremonial_generalships_2_40 = {
									remove_country_modifier = ceremonial_generalships_2_40
								}
								ceremonial_generalships_2_60 = {
									remove_country_modifier = ceremonial_generalships_2_60
								}
								ceremonial_generalships_2_80 = {
									remove_country_modifier = ceremonial_generalships_2_80
								}
								ceremonial_generalships_2_100 = {
									remove_country_modifier = ceremonial_generalships_2_100
								}
							}
							add_country_modifier = {
								name = ceremonial_generalships_2_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = ceremonial_generalships_2_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								ceremonial_generalships_2_20 = {
									remove_country_modifier = ceremonial_generalships_2_20
								}
								ceremonial_generalships_2_40 = {
									remove_country_modifier = ceremonial_generalships_2_40
								}
								ceremonial_generalships_2_60 = {
									remove_country_modifier = ceremonial_generalships_2_60
								}
								ceremonial_generalships_2_80 = {
									remove_country_modifier = ceremonial_generalships_2_80
								}
								ceremonial_generalships_2_100 = {
									remove_country_modifier = ceremonial_generalships_2_100
								}
							}
							add_country_modifier = {
								name = ceremonial_generalships_2_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = ceremonial_generalships_2_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								ceremonial_generalships_2_20 = {
									remove_country_modifier = ceremonial_generalships_2_20
								}
								ceremonial_generalships_2_40 = {
									remove_country_modifier = ceremonial_generalships_2_40
								}
								ceremonial_generalships_2_60 = {
									remove_country_modifier = ceremonial_generalships_2_60
								}
								ceremonial_generalships_2_80 = {
									remove_country_modifier = ceremonial_generalships_2_80
								}
								ceremonial_generalships_2_100 = {
									remove_country_modifier = ceremonial_generalships_2_100
								}
							}
							add_country_modifier = {
								name = ceremonial_generalships_2_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = ceremonial_generalships_2_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								ceremonial_generalships_2_20 = {
									remove_country_modifier = ceremonial_generalships_2_20
								}
								ceremonial_generalships_2_40 = {
									remove_country_modifier = ceremonial_generalships_2_40
								}
								ceremonial_generalships_2_60 = {
									remove_country_modifier = ceremonial_generalships_2_60
								}
								ceremonial_generalships_2_80 = {
									remove_country_modifier = ceremonial_generalships_2_80
								}
								ceremonial_generalships_2_100 = {
									remove_country_modifier = ceremonial_generalships_2_100
								}
							}
							add_country_modifier = {
								name = ceremonial_generalships_2_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							ceremonial_generalships_2_20 = {
								remove_country_modifier = ceremonial_generalships_2_20
							}
							ceremonial_generalships_2_40 = {
								remove_country_modifier = ceremonial_generalships_2_40
							}
							ceremonial_generalships_2_60 = {
								remove_country_modifier = ceremonial_generalships_2_60
							}
							ceremonial_generalships_2_80 = {
								remove_country_modifier = ceremonial_generalships_2_80
							}
							ceremonial_generalships_2_100 = {
								remove_country_modifier = ceremonial_generalships_2_100
							}
						}
					}
				}
				clr_country_flag = choose_ceremonial_generalships_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = ceremonial_generalships_2_privilege_desc
			}
			choose_GN_relaxed_levy_obligations_1 = {
				custom_tooltip = GN_relaxed_levy_obligations_1_privilege
				hidden_effect = {
					set_country_flag = GN_relaxed_levy_obligations_1
				}
				clr_country_flag = choose_GN_relaxed_levy_obligations_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_relaxed_levy_obligations_1_privilege_desc
			}
			choose_GN_relaxed_levy_obligations_2 = {
				custom_tooltip = GN_relaxed_levy_obligations_2_privilege
				hidden_effect = {
					clr_country_flag = GN_relaxed_levy_obligations_1
				}
				hidden_effect = {
					set_country_flag = GN_relaxed_levy_obligations_2
				}
				clr_country_flag = choose_GN_relaxed_levy_obligations_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_relaxed_levy_obligations_1_privilege_desc
			}
			choose_GN_tax_exemptions_1 = {
				custom_tooltip = GN_tax_exemptions_1_privilege
				hidden_effect = {
					set_country_flag = GN_tax_exemptions_1
				}
				clr_country_flag = choose_GN_tax_exemptions_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_tax_exemptions_1_privilege_desc
			}
			choose_GN_tax_exemptions_2 = {
				custom_tooltip = GN_tax_exemptions_2_privilege
				hidden_effect = {
					clr_country_flag = GN_tax_exemptions_1
				}
				hidden_effect = {
					set_country_flag = GN_tax_exemptions_2
				}
				clr_country_flag = choose_GN_tax_exemptions_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_tax_exemptions_2_privilege_desc
			}
			choose_GN_tax_exemptions_3 = {
				custom_tooltip = GN_tax_exemptions_3_privilege
				hidden_effect = {
					clr_country_flag = GN_tax_exemptions_2
				}
				hidden_effect = {
					set_country_flag = GN_tax_exemptions_3
				}
				clr_country_flag = choose_GN_tax_exemptions_3
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_tax_exemptions_3_privilege_desc
			}
			choose_GN_tax_exemptions_4 = {
				custom_tooltip = GN_tax_exemptions_4_privilege
				hidden_effect = {
					clr_country_flag = GN_tax_exemptions_3
				}
				hidden_effect = {
					set_country_flag = GN_tax_exemptions_4
				}
				clr_country_flag = choose_GN_tax_exemptions_4
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_tax_exemptions_4_privilege_desc
			}
			choose_GN_exclude_commoners_cabinet_1 = {
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = GN_exclude_commoners_cabinet_1
							}
						}
						set_country_flag = GN_exclude_commoners_cabinet_1
					}
				}
				custom_tooltip = GN_exclude_commoners_cabinet_1_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_exclude_commoners_cabinet_1_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_exclude_commoners_cabinet_1_20 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_20
								}
								GN_exclude_commoners_cabinet_1_40 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_40
								}
								GN_exclude_commoners_cabinet_1_60 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_60
								}
								GN_exclude_commoners_cabinet_1_80 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_80
								}
								GN_exclude_commoners_cabinet_1_100 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_100
								}
							}
							add_country_modifier = {
								name = GN_exclude_commoners_cabinet_1_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_exclude_commoners_cabinet_1_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_exclude_commoners_cabinet_1_20 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_20
								}
								GN_exclude_commoners_cabinet_1_40 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_40
								}
								GN_exclude_commoners_cabinet_1_60 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_60
								}
								GN_exclude_commoners_cabinet_1_80 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_80
								}
								GN_exclude_commoners_cabinet_1_100 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_100
								}
							}
							add_country_modifier = {
								name = GN_exclude_commoners_cabinet_1_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_exclude_commoners_cabinet_1_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_exclude_commoners_cabinet_1_20 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_20
								}
								GN_exclude_commoners_cabinet_1_40 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_40
								}
								GN_exclude_commoners_cabinet_1_60 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_60
								}
								GN_exclude_commoners_cabinet_1_80 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_80
								}
								GN_exclude_commoners_cabinet_1_100 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_100
								}
							}
							add_country_modifier = {
								name = GN_exclude_commoners_cabinet_1_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_exclude_commoners_cabinet_1_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_exclude_commoners_cabinet_1_20 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_20
								}
								GN_exclude_commoners_cabinet_1_40 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_40
								}
								GN_exclude_commoners_cabinet_1_60 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_60
								}
								GN_exclude_commoners_cabinet_1_80 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_80
								}
								GN_exclude_commoners_cabinet_1_100 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_100
								}
							}
							add_country_modifier = {
								name = GN_exclude_commoners_cabinet_1_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_exclude_commoners_cabinet_1_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_exclude_commoners_cabinet_1_20 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_20
								}
								GN_exclude_commoners_cabinet_1_40 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_40
								}
								GN_exclude_commoners_cabinet_1_60 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_60
								}
								GN_exclude_commoners_cabinet_1_80 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_80
								}
								GN_exclude_commoners_cabinet_1_100 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_1_100
								}
							}
							add_country_modifier = {
								name = GN_exclude_commoners_cabinet_1_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							GN_exclude_commoners_cabinet_1_20 = {
								remove_country_modifier = GN_exclude_commoners_cabinet_1_20
							}
							GN_exclude_commoners_cabinet_1_40 = {
								remove_country_modifier = GN_exclude_commoners_cabinet_1_40
							}
							GN_exclude_commoners_cabinet_1_60 = {
								remove_country_modifier = GN_exclude_commoners_cabinet_1_60
							}
							GN_exclude_commoners_cabinet_1_80 = {
								remove_country_modifier = GN_exclude_commoners_cabinet_1_80
							}
							GN_exclude_commoners_cabinet_1_100 = {
								remove_country_modifier = GN_exclude_commoners_cabinet_1_100
							}
						}
					}
				}
				clr_country_flag = choose_GN_exclude_commoners_cabinet_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_exclude_commoners_cabinet_1_privilege_desc
			}
			choose_GN_exclude_commoners_cabinet_2 = {
				clr_country_flag = GN_exclude_commoners_cabinet_1
				trigger_switch = {
					on_trigger = has_country_modifier
					GN_exclude_commoners_cabinet_1_20 = {
						remove_country_modifier = GN_exclude_commoners_cabinet_1_20
					}
					GN_exclude_commoners_cabinet_1_40 = {
						remove_country_modifier = GN_exclude_commoners_cabinet_1_40
					}
					GN_exclude_commoners_cabinet_1_60 = {
						remove_country_modifier = GN_exclude_commoners_cabinet_1_60
					}
					GN_exclude_commoners_cabinet_1_80 = {
						remove_country_modifier = GN_exclude_commoners_cabinet_1_80
					}
					GN_exclude_commoners_cabinet_1_100 = {
						remove_country_modifier = GN_exclude_commoners_cabinet_1_100
					}
				}
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = GN_exclude_commoners_cabinet_2
							}
						}
						set_country_flag = GN_exclude_commoners_cabinet_2
					}
				}
				custom_tooltip = GN_exclude_commoners_cabinet_2_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_exclude_commoners_cabinet_2_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_exclude_commoners_cabinet_2_20 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_20
								}
								GN_exclude_commoners_cabinet_2_40 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_40
								}
								GN_exclude_commoners_cabinet_2_60 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_60
								}
								GN_exclude_commoners_cabinet_2_80 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_80
								}
								GN_exclude_commoners_cabinet_2_100 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_100
								}
							}
							add_country_modifier = {
								name = GN_exclude_commoners_cabinet_2_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_exclude_commoners_cabinet_2_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_exclude_commoners_cabinet_2_20 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_20
								}
								GN_exclude_commoners_cabinet_2_40 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_40
								}
								GN_exclude_commoners_cabinet_2_60 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_60
								}
								GN_exclude_commoners_cabinet_2_80 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_80
								}
								GN_exclude_commoners_cabinet_2_100 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_100
								}
							}
							add_country_modifier = {
								name = GN_exclude_commoners_cabinet_2_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_exclude_commoners_cabinet_2_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_exclude_commoners_cabinet_2_20 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_20
								}
								GN_exclude_commoners_cabinet_2_40 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_40
								}
								GN_exclude_commoners_cabinet_2_60 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_60
								}
								GN_exclude_commoners_cabinet_2_80 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_80
								}
								GN_exclude_commoners_cabinet_2_100 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_100
								}
							}
							add_country_modifier = {
								name = GN_exclude_commoners_cabinet_2_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_exclude_commoners_cabinet_2_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_exclude_commoners_cabinet_2_20 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_20
								}
								GN_exclude_commoners_cabinet_2_40 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_40
								}
								GN_exclude_commoners_cabinet_2_60 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_60
								}
								GN_exclude_commoners_cabinet_2_80 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_80
								}
								GN_exclude_commoners_cabinet_2_100 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_100
								}
							}
							add_country_modifier = {
								name = GN_exclude_commoners_cabinet_2_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_exclude_commoners_cabinet_2_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_exclude_commoners_cabinet_2_20 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_20
								}
								GN_exclude_commoners_cabinet_2_40 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_40
								}
								GN_exclude_commoners_cabinet_2_60 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_60
								}
								GN_exclude_commoners_cabinet_2_80 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_80
								}
								GN_exclude_commoners_cabinet_2_100 = {
									remove_country_modifier = GN_exclude_commoners_cabinet_2_100
								}
							}
							add_country_modifier = {
								name = GN_exclude_commoners_cabinet_2_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							GN_exclude_commoners_cabinet_2_20 = {
								remove_country_modifier = GN_exclude_commoners_cabinet_2_20
							}
							GN_exclude_commoners_cabinet_2_40 = {
								remove_country_modifier = GN_exclude_commoners_cabinet_2_40
							}
							GN_exclude_commoners_cabinet_2_60 = {
								remove_country_modifier = GN_exclude_commoners_cabinet_2_60
							}
							GN_exclude_commoners_cabinet_2_80 = {
								remove_country_modifier = GN_exclude_commoners_cabinet_2_80
							}
							GN_exclude_commoners_cabinet_2_100 = {
								remove_country_modifier = GN_exclude_commoners_cabinet_2_100
							}
						}
					}
				}
				clr_country_flag = choose_GN_exclude_commoners_cabinet_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_exclude_commoners_cabinet_2_privilege_desc
			}
			choose_GN_high_court_titles_1 = {
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = GN_high_court_titles_1
							}
						}
						set_country_flag = GN_high_court_titles_1
					}
				}
				custom_tooltip = GN_high_court_titles_1_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_high_court_titles_1_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_high_court_titles_1_20 = {
									remove_country_modifier = GN_high_court_titles_1_20
								}
								GN_high_court_titles_1_40 = {
									remove_country_modifier = GN_high_court_titles_1_40
								}
								GN_high_court_titles_1_60 = {
									remove_country_modifier = GN_high_court_titles_1_60
								}
								GN_high_court_titles_1_80 = {
									remove_country_modifier = GN_high_court_titles_1_80
								}
								GN_high_court_titles_1_100 = {
									remove_country_modifier = GN_high_court_titles_1_100
								}
							}
							add_country_modifier = {
								name = GN_high_court_titles_1_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_high_court_titles_1_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_high_court_titles_1_20 = {
									remove_country_modifier = GN_high_court_titles_1_20
								}
								GN_high_court_titles_1_40 = {
									remove_country_modifier = GN_high_court_titles_1_40
								}
								GN_high_court_titles_1_60 = {
									remove_country_modifier = GN_high_court_titles_1_60
								}
								GN_high_court_titles_1_80 = {
									remove_country_modifier = GN_high_court_titles_1_80
								}
								GN_high_court_titles_1_100 = {
									remove_country_modifier = GN_high_court_titles_1_100
								}
							}
							add_country_modifier = {
								name = GN_high_court_titles_1_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_high_court_titles_1_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_high_court_titles_1_20 = {
									remove_country_modifier = GN_high_court_titles_1_20
								}
								GN_high_court_titles_1_40 = {
									remove_country_modifier = GN_high_court_titles_1_40
								}
								GN_high_court_titles_1_60 = {
									remove_country_modifier = GN_high_court_titles_1_60
								}
								GN_high_court_titles_1_80 = {
									remove_country_modifier = GN_high_court_titles_1_80
								}
								GN_high_court_titles_1_100 = {
									remove_country_modifier = GN_high_court_titles_1_100
								}
							}
							add_country_modifier = {
								name = GN_high_court_titles_1_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_high_court_titles_1_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_high_court_titles_1_20 = {
									remove_country_modifier = GN_high_court_titles_1_20
								}
								GN_high_court_titles_1_40 = {
									remove_country_modifier = GN_high_court_titles_1_40
								}
								GN_high_court_titles_1_60 = {
									remove_country_modifier = GN_high_court_titles_1_60
								}
								GN_high_court_titles_1_80 = {
									remove_country_modifier = GN_high_court_titles_1_80
								}
								GN_high_court_titles_1_100 = {
									remove_country_modifier = GN_high_court_titles_1_100
								}
							}
							add_country_modifier = {
								name = GN_high_court_titles_1_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_high_court_titles_1_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_high_court_titles_1_20 = {
									remove_country_modifier = GN_high_court_titles_1_20
								}
								GN_high_court_titles_1_40 = {
									remove_country_modifier = GN_high_court_titles_1_40
								}
								GN_high_court_titles_1_60 = {
									remove_country_modifier = GN_high_court_titles_1_60
								}
								GN_high_court_titles_1_80 = {
									remove_country_modifier = GN_high_court_titles_1_80
								}
								GN_high_court_titles_1_100 = {
									remove_country_modifier = GN_high_court_titles_1_100
								}
							}
							add_country_modifier = {
								name = GN_high_court_titles_1_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							GN_high_court_titles_1_20 = {
								remove_country_modifier = GN_high_court_titles_1_20
							}
							GN_high_court_titles_1_40 = {
								remove_country_modifier = GN_high_court_titles_1_40
							}
							GN_high_court_titles_1_60 = {
								remove_country_modifier = GN_high_court_titles_1_60
							}
							GN_high_court_titles_1_80 = {
								remove_country_modifier = GN_high_court_titles_1_80
							}
							GN_high_court_titles_1_100 = {
								remove_country_modifier = GN_high_court_titles_1_100
							}
						}
					}
				}
				clr_country_flag = choose_GN_high_court_titles_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_high_court_titles_1_privilege_desc
			}
			choose_GN_high_court_titles_2 = {
				clr_country_flag = GN_high_court_titles_1
				trigger_switch = {
					on_trigger = has_country_modifier
					GN_high_court_titles_1_20 = {
						remove_country_modifier = GN_high_court_titles_1_20
					}
					GN_high_court_titles_1_40 = {
						remove_country_modifier = GN_high_court_titles_1_40
					}
					GN_high_court_titles_1_60 = {
						remove_country_modifier = GN_high_court_titles_1_60
					}
					GN_high_court_titles_1_80 = {
						remove_country_modifier = GN_high_court_titles_1_80
					}
					GN_high_court_titles_1_100 = {
						remove_country_modifier = GN_high_court_titles_1_100
					}
				}
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = GN_high_court_titles_2
							}
						}
						set_country_flag = GN_high_court_titles_2
					}
				}
				custom_tooltip = GN_high_court_titles_1_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_high_court_titles_2_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_high_court_titles_2_20 = {
									remove_country_modifier = GN_high_court_titles_2_20
								}
								GN_high_court_titles_2_40 = {
									remove_country_modifier = GN_high_court_titles_2_40
								}
								GN_high_court_titles_2_60 = {
									remove_country_modifier = GN_high_court_titles_2_60
								}
								GN_high_court_titles_2_80 = {
									remove_country_modifier = GN_high_court_titles_2_80
								}
								GN_high_court_titles_2_100 = {
									remove_country_modifier = GN_high_court_titles_2_100
								}
							}
							add_country_modifier = {
								name = GN_high_court_titles_2_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_high_court_titles_2_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_high_court_titles_2_20 = {
									remove_country_modifier = GN_high_court_titles_2_20
								}
								GN_high_court_titles_2_40 = {
									remove_country_modifier = GN_high_court_titles_2_40
								}
								GN_high_court_titles_2_60 = {
									remove_country_modifier = GN_high_court_titles_2_60
								}
								GN_high_court_titles_2_80 = {
									remove_country_modifier = GN_high_court_titles_2_80
								}
								GN_high_court_titles_2_100 = {
									remove_country_modifier = GN_high_court_titles_2_100
								}
							}
							add_country_modifier = {
								name = GN_high_court_titles_2_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_high_court_titles_2_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_high_court_titles_2_20 = {
									remove_country_modifier = GN_high_court_titles_2_20
								}
								GN_high_court_titles_2_40 = {
									remove_country_modifier = GN_high_court_titles_2_40
								}
								GN_high_court_titles_2_60 = {
									remove_country_modifier = GN_high_court_titles_2_60
								}
								GN_high_court_titles_2_80 = {
									remove_country_modifier = GN_high_court_titles_2_80
								}
								GN_high_court_titles_2_100 = {
									remove_country_modifier = GN_high_court_titles_2_100
								}
							}
							add_country_modifier = {
								name = GN_high_court_titles_2_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_high_court_titles_2_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_high_court_titles_2_20 = {
									remove_country_modifier = GN_high_court_titles_2_20
								}
								GN_high_court_titles_2_40 = {
									remove_country_modifier = GN_high_court_titles_2_40
								}
								GN_high_court_titles_2_60 = {
									remove_country_modifier = GN_high_court_titles_2_60
								}
								GN_high_court_titles_2_80 = {
									remove_country_modifier = GN_high_court_titles_2_80
								}
								GN_high_court_titles_2_100 = {
									remove_country_modifier = GN_high_court_titles_2_100
								}
							}
							add_country_modifier = {
								name = GN_high_court_titles_2_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = GN_high_court_titles_2_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								GN_high_court_titles_2_20 = {
									remove_country_modifier = GN_high_court_titles_2_20
								}
								GN_high_court_titles_2_40 = {
									remove_country_modifier = GN_high_court_titles_2_40
								}
								GN_high_court_titles_2_60 = {
									remove_country_modifier = GN_high_court_titles_2_60
								}
								GN_high_court_titles_2_80 = {
									remove_country_modifier = GN_high_court_titles_2_80
								}
								GN_high_court_titles_2_100 = {
									remove_country_modifier = GN_high_court_titles_2_100
								}
							}
							add_country_modifier = {
								name = GN_high_court_titles_2_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							GN_high_court_titles_2_20 = {
								remove_country_modifier = GN_high_court_titles_2_20
							}
							GN_high_court_titles_2_40 = {
								remove_country_modifier = GN_high_court_titles_2_40
							}
							GN_high_court_titles_2_60 = {
								remove_country_modifier = GN_high_court_titles_2_60
							}
							GN_high_court_titles_2_80 = {
								remove_country_modifier = GN_high_court_titles_2_80
							}
							GN_high_court_titles_2_100 = {
								remove_country_modifier = GN_high_court_titles_2_100
							}
						}
					}
				}
				clr_country_flag = choose_GN_high_court_titles_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_high_court_titles_2_privilege_desc
			}
			choose_GN_high_nobles_court_1 = {
				custom_tooltip = GN_high_nobles_court_1_privilege
				hidden_effect = {
					set_country_flag = GN_high_nobles_court_1
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = GN_high_nobles_court_1
							}
							extend_province_modifier = {
								name = GN_high_nobles_court_1
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = GN_high_nobles_court_1
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_GN_high_nobles_court_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_high_nobles_court_1_privilege_desc
			}
			choose_GN_high_nobles_court_2 = {
				custom_tooltip = GN_high_nobles_court_2_privilege
				hidden_effect = {
					clr_country_flag = GN_high_nobles_court_1
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = GN_high_nobles_court_1
							}
							remove_province_modifier = GN_high_nobles_court_1
						}
					}
				}
				hidden_effect = {
					set_country_flag = GN_high_nobles_court_2
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = GN_high_nobles_court_2
							}
							extend_province_modifier = {
								name = GN_high_nobles_court_2
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = GN_high_nobles_court_2
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_GN_high_nobles_court_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = GN_high_nobles_court_2_privilege_desc
			}
			choose_commoners_banned_from_officers_corps_1 = {
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = commoners_banned_from_officers_corps_1
							}
						}
						set_country_flag = commoners_banned_from_officers_corps_1
					}
				}
				custom_tooltip = commoners_banned_from_officers_corps_1_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = commoners_banned_from_officers_corps_1_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								commoners_banned_from_officers_corps_1_20 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_20
								}
								commoners_banned_from_officers_corps_1_40 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_40
								}
								commoners_banned_from_officers_corps_1_60 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_60
								}
								commoners_banned_from_officers_corps_1_80 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_80
								}
								commoners_banned_from_officers_corps_1_100 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_100
								}
							}
							add_country_modifier = {
								name = commoners_banned_from_officers_corps_1_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = commoners_banned_from_officers_corps_1_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								commoners_banned_from_officers_corps_1_20 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_20
								}
								commoners_banned_from_officers_corps_1_40 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_40
								}
								commoners_banned_from_officers_corps_1_60 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_60
								}
								commoners_banned_from_officers_corps_1_80 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_80
								}
								commoners_banned_from_officers_corps_1_100 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_100
								}
							}
							add_country_modifier = {
								name = commoners_banned_from_officers_corps_1_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = commoners_banned_from_officers_corps_1_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								commoners_banned_from_officers_corps_1_20 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_20
								}
								commoners_banned_from_officers_corps_1_40 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_40
								}
								commoners_banned_from_officers_corps_1_60 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_60
								}
								commoners_banned_from_officers_corps_1_80 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_80
								}
								commoners_banned_from_officers_corps_1_100 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_100
								}
							}
							add_country_modifier = {
								name = commoners_banned_from_officers_corps_1_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = commoners_banned_from_officers_corps_1_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								commoners_banned_from_officers_corps_1_20 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_20
								}
								commoners_banned_from_officers_corps_1_40 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_40
								}
								commoners_banned_from_officers_corps_1_60 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_60
								}
								commoners_banned_from_officers_corps_1_80 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_80
								}
								commoners_banned_from_officers_corps_1_100 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_100
								}
							}
							add_country_modifier = {
								name = commoners_banned_from_officers_corps_1_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = commoners_banned_from_officers_corps_1_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								commoners_banned_from_officers_corps_1_20 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_20
								}
								commoners_banned_from_officers_corps_1_40 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_40
								}
								commoners_banned_from_officers_corps_1_60 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_60
								}
								commoners_banned_from_officers_corps_1_80 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_80
								}
								commoners_banned_from_officers_corps_1_100 = {
									remove_country_modifier = commoners_banned_from_officers_corps_1_100
								}
							}
							add_country_modifier = {
								name = commoners_banned_from_officers_corps_1_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							commoners_banned_from_officers_corps_1_20 = {
								remove_country_modifier = commoners_banned_from_officers_corps_1_20
							}
							commoners_banned_from_officers_corps_1_40 = {
								remove_country_modifier = commoners_banned_from_officers_corps_1_40
							}
							commoners_banned_from_officers_corps_1_60 = {
								remove_country_modifier = commoners_banned_from_officers_corps_1_60
							}
							commoners_banned_from_officers_corps_1_80 = {
								remove_country_modifier = commoners_banned_from_officers_corps_1_80
							}
							commoners_banned_from_officers_corps_1_100 = {
								remove_country_modifier = commoners_banned_from_officers_corps_1_100
							}
						}
					}
				}
				clr_country_flag = choose_commoners_banned_from_officers_corps_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = commoners_banned_from_officers_corps_1_privilege_desc
			}
			choose_commoners_banned_from_officers_corps_2 = {
				clr_country_flag = commoners_banned_from_officers_corps_1
				trigger_switch = {
					on_trigger = has_country_modifier
					commoners_banned_from_officers_corps_1_20 = {
						remove_country_modifier = commoners_banned_from_officers_corps_1_20
					}
					commoners_banned_from_officers_corps_1_40 = {
						remove_country_modifier = commoners_banned_from_officers_corps_1_40
					}
					commoners_banned_from_officers_corps_1_60 = {
						remove_country_modifier = commoners_banned_from_officers_corps_1_60
					}
					commoners_banned_from_officers_corps_1_80 = {
						remove_country_modifier = commoners_banned_from_officers_corps_1_80
					}
					commoners_banned_from_officers_corps_1_100 = {
						remove_country_modifier = commoners_banned_from_officers_corps_1_100
					}
				}
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = commoners_banned_from_officers_corps_2
							}
						}
						set_country_flag = commoners_banned_from_officers_corps_2
					}
				}
				custom_tooltip = commoners_banned_from_officers_corps_2_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = commoners_banned_from_officers_corps_2_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								commoners_banned_from_officers_corps_2_20 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_20
								}
								commoners_banned_from_officers_corps_2_40 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_40
								}
								commoners_banned_from_officers_corps_2_60 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_60
								}
								commoners_banned_from_officers_corps_2_80 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_80
								}
								commoners_banned_from_officers_corps_2_100 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_100
								}
							}
							add_country_modifier = {
								name = commoners_banned_from_officers_corps_2_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = commoners_banned_from_officers_corps_2_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								commoners_banned_from_officers_corps_2_20 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_20
								}
								commoners_banned_from_officers_corps_2_40 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_40
								}
								commoners_banned_from_officers_corps_2_60 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_60
								}
								commoners_banned_from_officers_corps_2_80 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_80
								}
								commoners_banned_from_officers_corps_2_100 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_100
								}
							}
							add_country_modifier = {
								name = commoners_banned_from_officers_corps_2_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = commoners_banned_from_officers_corps_2_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								commoners_banned_from_officers_corps_2_20 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_20
								}
								commoners_banned_from_officers_corps_2_40 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_40
								}
								commoners_banned_from_officers_corps_2_60 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_60
								}
								commoners_banned_from_officers_corps_2_80 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_80
								}
								commoners_banned_from_officers_corps_2_100 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_100
								}
							}
							add_country_modifier = {
								name = commoners_banned_from_officers_corps_2_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = commoners_banned_from_officers_corps_2_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								commoners_banned_from_officers_corps_2_20 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_20
								}
								commoners_banned_from_officers_corps_2_40 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_40
								}
								commoners_banned_from_officers_corps_2_60 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_60
								}
								commoners_banned_from_officers_corps_2_80 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_80
								}
								commoners_banned_from_officers_corps_2_100 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_100
								}
							}
							add_country_modifier = {
								name = commoners_banned_from_officers_corps_2_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = commoners_banned_from_officers_corps_2_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								commoners_banned_from_officers_corps_2_20 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_20
								}
								commoners_banned_from_officers_corps_2_40 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_40
								}
								commoners_banned_from_officers_corps_2_60 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_60
								}
								commoners_banned_from_officers_corps_2_80 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_80
								}
								commoners_banned_from_officers_corps_2_100 = {
									remove_country_modifier = commoners_banned_from_officers_corps_2_100
								}
							}
							add_country_modifier = {
								name = commoners_banned_from_officers_corps_2_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							commoners_banned_from_officers_corps_2_20 = {
								remove_country_modifier = commoners_banned_from_officers_corps_2_20
							}
							commoners_banned_from_officers_corps_2_40 = {
								remove_country_modifier = commoners_banned_from_officers_corps_2_40
							}
							commoners_banned_from_officers_corps_2_60 = {
								remove_country_modifier = commoners_banned_from_officers_corps_2_60
							}
							commoners_banned_from_officers_corps_2_80 = {
								remove_country_modifier = commoners_banned_from_officers_corps_2_80
							}
							commoners_banned_from_officers_corps_2_100 = {
								remove_country_modifier = commoners_banned_from_officers_corps_2_100
							}
						}
					}
				}
				clr_country_flag = choose_commoners_banned_from_officers_corps_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = GN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = GN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = GN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = GN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = greater_nobles_corruption_added_1d
				}
				custom_tooltip = commoners_banned_from_officers_corps_2_privilege_desc
			}
			choose_release_daimyo = {
				hidden_effect = {
					set_variable = {
						which = daimyo_ticker
						value = 50
					}
				}
				while = {
					limit = {
						check_variable = {
							which = daimyo_ticker
							value = 1
						}
					}
					subtract_variable = {
						which = daimyo_ticker
						value = 1
					}
					random_list = {
						1 = {
							if = {
								limit = {
									AKG = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = AKG
								}
								AKG = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = AKG
									create_subject = {
										who = AKG
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									AKM = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = AKM
								}
								AKM = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = AKM
									create_subject = {
										who = AKM
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									AKW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = AKW
								}
								AKW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = AKW
									create_subject = {
										who = AKW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									ANG = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = ANG
								}
								ANG = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = ANG
									create_subject = {
										who = ANG
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									ANO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = ANO
								}
								ANO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = ANO
									create_subject = {
										who = ANO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									ASA = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = ASA
								}
								ASA = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = ASA
									create_subject = {
										who = ASA
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									CHB = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = CHB
								}
								CHB = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = CHB
									create_subject = {
										who = CHB
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									CSK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = CSK
								}
								CSK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = CSK
									create_subject = {
										who = CSK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									DTE = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = DTE
								}
								DTE = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = DTE
									create_subject = {
										who = DTE
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									HJO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = HJO
								}
								HJO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = HJO
									create_subject = {
										who = HJO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									HKW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = HKW
								}
								HKW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = HKW
									create_subject = {
										who = HKW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									HKY = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = HKY
								}
								HKY = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = HKY
									create_subject = {
										who = HKY
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									HNM = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = HNM
								}
								HNM = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = HNM
									create_subject = {
										who = HNM
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									IGW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = IGW
								}
								IGW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = IGW
									create_subject = {
										who = IGW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									INO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = INO
								}
								INO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = INO
									create_subject = {
										who = INO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									ISK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = ISK
								}
								ISK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = ISK
									create_subject = {
										who = ISK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KKC = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KKC
								}
								KKC = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KKC
									create_subject = {
										who = KKC
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KKZ = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KKZ
								}
								KKZ = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KKZ
									create_subject = {
										who = KKZ
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KOO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KOO
								}
								KOO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KOO
									create_subject = {
										who = KOO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KTK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KTK
								}
								KTK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KTK
									create_subject = {
										who = KTK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KTO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KTO
								}
								KTO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KTO
									create_subject = {
										who = KTO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KWG = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KWG
								}
								KWG = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KWG
									create_subject = {
										who = KWG
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KYO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KYO
								}
								KYO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KYO
									create_subject = {
										who = KYO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									MIY = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = MIY
								}
								MIY = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = MIY
									create_subject = {
										who = MIY
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									MRI = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = MRI
								}
								MRI = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = MRI
									create_subject = {
										who = MRI
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									NIK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = NIK
								}
								NIK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = NIK
									create_subject = {
										who = NIK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									NNB = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = NNB
								}
								NNB = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = NNB
									create_subject = {
										who = NNB
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									ODA = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = ODA
								}
								ODA = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = ODA
									create_subject = {
										who = ODA
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									OGA = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = OGA
								}
								OGA = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = OGA
									create_subject = {
										who = OGA
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									OTM = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = OTM
								}
								OTM = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = OTM
									create_subject = {
										who = OTM
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									OUC = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = OUC
								}
								OUC = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = OUC
									create_subject = {
										who = OUC
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									RZJ = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = RZJ
								}
								RZJ = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = RZJ
									create_subject = {
										who = RZJ
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SBA = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SBA
								}
								SBA = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SBA
									create_subject = {
										who = SBA
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SKW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SKW
								}
								SKW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SKW
									create_subject = {
										who = SKW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SHN = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SHN
								}
								SHN = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SHN
									create_subject = {
										who = SHN
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SMZ = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SMZ
								}
								SMZ = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SMZ
									create_subject = {
										who = SMZ
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									STK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = STK
								}
								STK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = STK
									create_subject = {
										who = STK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SOO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SOO
								}
								SOO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SOO
									create_subject = {
										who = SOO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									STO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = STO
								}
								STO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = STO
									create_subject = {
										who = STO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SUW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SUW
								}
								SUW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SUW
									create_subject = {
										who = SUW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									TKD = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = TKD
								}
								TKD = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = TKD
									create_subject = {
										who = TKD
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									TGS = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = TGS
								}
								TGS = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = TGS
									create_subject = {
										who = TGS
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									TGW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = TGW
								}
								TGW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = TGW
									create_subject = {
										who = TGW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									TKI = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = TKI
								}
								TKI = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = TKI
									create_subject = {
										who = TKI
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									UKI = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = UKI
								}
								UKI = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = UKI
									create_subject = {
										who = UKI
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									USG = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = USG
								}
								USG = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = USG
									create_subject = {
										who = USG
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									UTN = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = UTN
								}
								UTN = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = UTN
									create_subject = {
										who = UTN
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									YSM = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = YSM
								}
								YSM = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = YSM
									create_subject = {
										who = YSM
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									YMN = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = YMN
								}
								YMN = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = YMN
									create_subject = {
										who = YMN
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									YUK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = YUK
								}
								YUK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = YUK
									create_subject = {
										who = YUK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
					}
				}
				clr_country_flag = choose_release_daimyo
			}
		}
		hidden_effect = {
			add_country_modifier = {
				name = greater_nobles_offered_privilege
				duration = 1065
				hidden = yes
			}
			clr_country_flag = freeze_all_privileges
			clr_country_flag = GN_unrest
		}
	}
	option = {
		name = "POP_Estates_Events.002.b"
		ai_chance = {
			factor = 10
		}
		trigger = {
			stability = 0
			is_bankrupt = no
		}
		if = {
			limit = {
				has_country_flag = GN_hit_to_loyalty
			}
			custom_tooltip = estate_greater_nobles_loyalty_removed_a
			hidden_effect = {
				clr_country_flag = GN_hit_to_loyalty
				set_variable = {
					which = greater_nobles_loyalty_removed
					value = 0
				}
				set_variable = {
					which = greater_nobles_loyalty_removed
					which = greater_nobles_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -64
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -32
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -16
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -8
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -4
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -2
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -1
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_greater_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_greater_nobles_loyalty
						}
						set_variable = {
							which = estate_greater_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = GN_hit_to_legitimacy
			}
			hidden_effect = {
				clr_country_flag = GN_hit_to_legitimacy
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 3
						}
					}
				}
				add_legitimacy = -2
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 3
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 5
						}
					}
				}
				add_legitimacy = -5
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 5
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 10
						}
					}
				}
				add_legitimacy = -10
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 10
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 15
						}
					}
				}
				add_legitimacy = -15
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 15
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 20
						}
					}
				}
				add_legitimacy = -20
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 20
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 25
						}
					}
				}
				add_legitimacy = -25
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 25
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 30
						}
					}
				}
				add_legitimacy = -30
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 30
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 35
						}
					}
				}
				add_legitimacy = -35
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 35
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 40
						}
					}
				}
				add_legitimacy = -40
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 40
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 45
						}
					}
				}
				add_legitimacy = -45
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 45
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 50
						}
					}
				}
				add_legitimacy = -50
			}
		}
		if = {
			limit = {
				has_country_flag = GN_hit_to_prestige
			}
			hidden_effect = {
				clr_country_flag = GN_hit_to_prestige
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 3
						}
					}
				}
				add_prestige = -2
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 3
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 5
						}
					}
				}
				add_prestige = -5
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 5
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 10
						}
					}
				}
				add_prestige = -10
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 10
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 15
						}
					}
				}
				add_prestige = -15
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 15
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 20
						}
					}
				}
				add_prestige = -20
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 20
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 25
						}
					}
				}
				add_prestige = -25
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 25
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 30
						}
					}
				}
				add_prestige = -30
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 30
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 35
						}
					}
				}
				add_prestige = -35
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 35
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 40
						}
					}
				}
				add_prestige = -40
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 40
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 45
						}
					}
				}
				add_prestige = -45
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 45
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 50
						}
					}
				}
				add_prestige = -50
			}
		}
		if = {
			limit = {
				has_country_flag = GN_hit_to_stability
			}
			hidden_effect = {
				clr_country_flag = GN_hit_to_stability
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 10
						}
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 10
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 20
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 20
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 30
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 30
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 40
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 40
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 50
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 50
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 60
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 60
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 70
						}
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 70
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 80
						}
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 80
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 90
						}
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 90
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = GN_hit_to_mil_points
			}
			custom_tooltip = milit_cost_a
			hidden_effect = {
				clr_country_flag = GN_hit_to_mil_points
				set_variable = {
					which = milit_cost
					value = 0
				}
				set_variable = {
					which = milit_cost
					which = milit_cost_a
				}
				while = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 1024
						}
					}
					add_mil_power = -1024
					subtract_variable = {
						which = milit_cost
						value = 1024
					}
				}
				if = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 512
						}
					}
					add_mil_power = -512
					subtract_variable = {
						which = milit_cost
						value = 512
					}
				}
				if = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 256
						}
					}
					add_mil_power = -256
					subtract_variable = {
						which = milit_cost
						value = 256
					}
				}
				if = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 128
						}
					}
					add_mil_power = -128
					subtract_variable = {
						which = milit_cost
						value = 128
					}
				}
				if = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 64
						}
					}
					add_mil_power = -64
					subtract_variable = {
						which = milit_cost
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 32
						}
					}
					add_mil_power = -32
					subtract_variable = {
						which = milit_cost
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 16
						}
					}
					add_mil_power = -16
					subtract_variable = {
						which = milit_cost
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 8
						}
					}
					add_mil_power = -8
					subtract_variable = {
						which = milit_cost
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 4
						}
					}
					add_mil_power = -4
					subtract_variable = {
						which = milit_cost
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 2
						}
					}
					add_mil_power = -2
					subtract_variable = {
						which = milit_cost
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = milit_cost
							value = 1
						}
					}
					add_mil_power = -1
					subtract_variable = {
						which = milit_cost
						value = 1
					}
				}
				set_variable = {
					which = milit_cost
					value = 0
				}
			}
		}
		if = {
			limit = {
				has_country_flag = GN_autonomy_demands
			}
			custom_tooltip = GN_autonomy_added
			hidden_effect = {
				clr_country_flag = GN_autonomy_demands
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					set_variable = {
						which = autonomy_added
						value = 0
					}
					set_variable = {
						which = autonomy_added
						which = PREV
					}
					while = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 32
							}
						}
						add_local_autonomy = 32
						subtract_variable = {
							which = autonomy_added
							value = 32
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 16
							}
						}
						add_local_autonomy = 16
						subtract_variable = {
							which = autonomy_added
							value = 16
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 8
							}
						}
						add_local_autonomy = 8
						subtract_variable = {
							which = autonomy_added
							value = 8
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 4
							}
						}
						add_local_autonomy = 4
						subtract_variable = {
							which = autonomy_added
							value = 4
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 2
							}
						}
						add_local_autonomy = 2
						subtract_variable = {
							which = autonomy_added
							value = 2
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 1
							}
						}
						add_local_autonomy = 1
						subtract_variable = {
							which = autonomy_added
							value = 1
						}
					}
					set_variable = {
						which = autonomy_added
						value = 0
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = GN_hit_to_military
			}
			hidden_effect = {
				clr_country_flag = GN_hit_to_military
			}
			if = {
				limit = {
					check_variable = {
						which = GN_hit_to_military
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = GN_hit_to_military
							value = 10
						}
					}
				}
				add_country_modifier = {
					name = GN_hamper_military_1
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = GN_hit_to_military
						value = 10
					}
					NOT = {
						check_variable = {
							which = GN_hit_to_military
							value = 20
						}
					}
				}
				add_country_modifier = {
					name = GN_hamper_military_2
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = GN_hit_to_military
						value = 20
					}
					NOT = {
						check_variable = {
							which = GN_hit_to_military
							value = 30
						}
					}
				}
				add_country_modifier = {
					name = GN_hamper_military_3
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = GN_hit_to_military
						value = 30
					}
					NOT = {
						check_variable = {
							which = GN_hit_to_military
							value = 40
						}
					}
				}
				add_country_modifier = {
					name = GN_hamper_military_4
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = GN_hit_to_military
						value = 40
					}
					NOT = {
						check_variable = {
							which = GN_hit_to_military
							value = 50
						}
					}
				}
				add_country_modifier = {
					name = GN_hamper_military_5
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = GN_hit_to_military
						value = 50
					}
					NOT = {
						check_variable = {
							which = GN_hit_to_military
							value = 60
						}
					}
				}
				add_country_modifier = {
					name = GN_hamper_military_6
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = GN_hit_to_military
						value = 60
					}
					NOT = {
						check_variable = {
							which = GN_hit_to_military
							value = 70
						}
					}
				}
				add_country_modifier = {
					name = GN_hamper_military_7
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = GN_hit_to_military
						value = 70
					}
					NOT = {
						check_variable = {
							which = GN_hit_to_military
							value = 80
						}
					}
				}
				add_country_modifier = {
					name = GN_hamper_military_8
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = GN_hit_to_military
						value = 80
					}
					NOT = {
						check_variable = {
							which = GN_hit_to_military
							value = 90
						}
					}
				}
				add_country_modifier = {
					name = GN_hamper_military_9
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = GN_hit_to_military
						value = 90
					}
				}
				add_country_modifier = {
					name = GN_hamper_military_10
					duration = 3650
				}
			}
		}
		if = {
			limit = {
				has_country_flag = GN_unrest
			}
			hidden_effect = {
				clr_country_flag = GN_unrest
			}
			if = {
				limit = {
					has_country_flag = GN_unrest_1
				}
				custom_tooltip = GN_unrest_1
				hidden_effect = {
					clr_country_flag = GN_unrest_1
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						random = {
							chance = 15
							add_province_modifier = {
								name = GN_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = GN_unrest_2
				}
				custom_tooltip = GN_unrest_2
				hidden_effect = {
					clr_country_flag = GN_unrest_2
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						random = {
							chance = 30
							add_province_modifier = {
								name = GN_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = GN_unrest_3
				}
				custom_tooltip = GN_unrest_3
				hidden_effect = {
					clr_country_flag = GN_unrest_3
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						random = {
							chance = 45
							add_province_modifier = {
								name = GN_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = GN_unrest_4
				}
				custom_tooltip = GN_unrest_4
				hidden_effect = {
					clr_country_flag = GN_unrest_4
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						random = {
							chance = 60
							add_province_modifier = {
								name = GN_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = GN_unrest_5
				}
				custom_tooltip = GN_unrest_5
				hidden_effect = {
					clr_country_flag = GN_unrest_5
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						random = {
							chance = 75
							add_province_modifier = {
								name = GN_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
		}
		if = {
			limit = {
				ai = no
			}
			if = {
				limit = {
					check_variable = {
						which = GN_privilege_pain_modifier
						value = 0.99
					}
				}
				custom_tooltip = estate_demand_costs_money_1
				hidden_effect = {
					set_variable = {
						which = GN_estate_cost
						value = 0
					}
					set_variable = {
						which = GN_estate_cost
						which = estate_greater_nobles_treasury_annual
					}
					multiply_variable = {
						which = GN_estate_cost
						value = 1
					}
					subtract_variable = {
						which = estate_greater_nobles_treasury
						which = GN_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = GN_privilege_pain_modifier
						value = 0.9
					}
				}
				custom_tooltip = estate_demand_costs_money_1.5
				hidden_effect = {
					set_variable = {
						which = GN_estate_cost
						value = 0
					}
					set_variable = {
						which = GN_estate_cost
						which = estate_greater_nobles_treasury_annual
					}
					multiply_variable = {
						which = GN_estate_cost
						value = 1.5
					}
					subtract_variable = {
						which = estate_greater_nobles_treasury
						which = GN_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = GN_privilege_pain_modifier
						value = 0.72
					}
				}
				custom_tooltip = estate_demand_costs_money_2
				hidden_effect = {
					set_variable = {
						which = GN_estate_cost
						value = 0
					}
					set_variable = {
						which = GN_estate_cost
						which = estate_greater_nobles_treasury_annual
					}
					multiply_variable = {
						which = GN_estate_cost
						value = 2
					}
					subtract_variable = {
						which = estate_greater_nobles_treasury
						which = GN_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = GN_privilege_pain_modifier
						value = 0.65
					}
				}
				custom_tooltip = estate_demand_costs_money_2.5
				hidden_effect = {
					set_variable = {
						which = GN_estate_cost
						value = 0
					}
					set_variable = {
						which = GN_estate_cost
						which = estate_greater_nobles_treasury_annual
					}
					multiply_variable = {
						which = GN_estate_cost
						value = 2.5
					}
					subtract_variable = {
						which = estate_greater_nobles_treasury
						which = GN_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = GN_privilege_pain_modifier
						value = 0.58
					}
				}
				custom_tooltip = estate_demand_costs_money_3
				hidden_effect = {
					set_variable = {
						which = GN_estate_cost
						value = 0
					}
					set_variable = {
						which = GN_estate_cost
						which = estate_greater_nobles_treasury_annual
					}
					multiply_variable = {
						which = GN_estate_cost
						value = 3
					}
					subtract_variable = {
						which = estate_greater_nobles_treasury
						which = GN_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = GN_privilege_pain_modifier
						value = 0.51
					}
				}
				custom_tooltip = estate_demand_costs_money_3.5
				hidden_effect = {
					set_variable = {
						which = GN_estate_cost
						value = 0
					}
					set_variable = {
						which = GN_estate_cost
						which = estate_greater_nobles_treasury_annual
					}
					multiply_variable = {
						which = GN_estate_cost
						value = 3.5
					}
					subtract_variable = {
						which = estate_greater_nobles_treasury
						which = GN_estate_cost
					}
				}
			}
		}
		hidden_effect = {
			clr_country_flag = choose_GN_authority_to_govern_locally_1
			clr_country_flag = choose_GN_authority_to_govern_locally_2
			clr_country_flag = choose_ceremonial_generalships_1
			clr_country_flag = choose_ceremonial_generalships_2
			clr_country_flag = choose_GN_relaxed_levy_obligations_1
			clr_country_flag = choose_GN_relaxed_levy_obligations_2
			clr_country_flag = choose_GN_tax_exemptions_1
			clr_country_flag = choose_GN_tax_exemptions_2
			clr_country_flag = choose_GN_tax_exemptions_3
			clr_country_flag = choose_GN_tax_exemptions_4
			clr_country_flag = choose_GN_exclude_commoners_cabinet_1
			clr_country_flag = choose_GN_exclude_commoners_cabinet_2
			clr_country_flag = choose_GN_high_court_titles_1
			clr_country_flag = choose_GN_high_court_titles_2
			clr_country_flag = choose_GN_high_nobles_court_1
			clr_country_flag = choose_GN_high_nobles_court_2
			clr_country_flag = choose_commoners_banned_from_officers_corps_1
			clr_country_flag = choose_commoners_banned_from_officers_corps_2
			clr_country_flag = freeze_all_privileges
		}
	}
	after = {
		set_variable = {
			which = privilege_demand_modifier
			value = 0
		}
		set_variable = {
			which = privilege_admin_modifier
			value = 0
		}
		set_variable = {
			which = privilege_admin_modifier_den
			value = 0
		}
		set_variable = {
			which = privilege_GN_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_GN_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_GN_loyalty_malus
			value = 0
		}
		set_variable = {
			which = privilege_demand_greater_nobles_yearl
			value = 0
		}
		set_variable = {
			which = GN_privilege_pain_modifier
			value = 0
		}
		set_variable = {
			which = privilege_LN_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_LN_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_LN_loyalty_malus
			value = 0
		}
		set_variable = {
			which = privilege_demand_lesser_nobles_yearly
			value = 0
		}
		set_variable = {
			which = LN_privilege_pain_modifier
			value = 0
		}
		set_variable = {
			which = privilege_BG_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_BG_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_BG_loyalty_malus
			value = 0
		}
		set_variable = {
			which = privilege_demand_burghers_yearly
			value = 0
		}
		set_variable = {
			which = BG_privilege_pain_modifier
			value = 0
		}
		set_variable = {
			which = privilege_BU_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_BU_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_demand_bureaucracy_yearly
			value = 0
		}
		set_variable = {
			which = GN_corruption_current
			value = 0
		}
		set_variable = {
			which = GN_corruption_cost_1
			value = 0
		}
		set_variable = {
			which = greater_nobles_loyalty_removed_a
			value = 0
		}
		set_variable = {
			which = hit_to_legitimacy
			value = 0
		}
		set_variable = {
			which = hit_to_prestige
			value = 0
		}
		set_variable = {
			which = GN_hit_to_military
			value = 0
		}
		set_variable = {
			which = stability_hit
			value = 0
		}
		set_variable = {
			which = milit_cost_a
			value = 0
		}
		set_variable = {
			which = ai_corruption_choice
			value = 0
		}
		set_variable = {
			which = LN_corruption_current
			value = 0
		}
		set_variable = {
			which = LN_corruption_cost_1
			value = 0
		}
		set_variable = {
			which = lesser_nobles_loyalty_removed_a
			value = 0
		}
		set_variable = {
			which = hit_to_legitimacy
			value = 0
		}
		set_variable = {
			which = hit_to_prestige
			value = 0
		}
		set_variable = {
			which = LN_hit_to_military
			value = 0
		}
		set_variable = {
			which = stability_hit
			value = 0
		}
		set_variable = {
			which = admin_cost_a
			value = 0
		}
		set_variable = {
			which = ai_corruption_choice
			value = 0
		}
		set_variable = {
			which = estate_lesser_nobles_promotion_check
			value = 0
		}
		set_variable = {
			which = BG_corruption_current
			value = 0
		}
		set_variable = {
			which = BG_corruption_cost_1
			value = 0
		}
		set_variable = {
			which = burghers_loyalty_removed_a
			value = 0
		}
		set_variable = {
			which = hit_to_legitimacy
			value = 0
		}
		set_variable = {
			which = hit_to_prestige
			value = 0
		}
		set_variable = {
			which = BG_commercial_havoc
			value = 0
		}
		set_variable = {
			which = stability_hit
			value = 0
		}
		set_variable = {
			which = diplo_cost_a
			value = 0
		}
		set_variable = {
			which = autonomy_added
			value = 0
		}
	}
}
country_event = {
	id = POP_Estates_Events.003
	title = "POP_Estates_Events.003.t"
	desc = "POP_Estates_Events.003.d"
	picture = {
		trigger = {
			technology_group = western
		}
		picture = WE_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = muslim
				technology_group = turkishtech
				technology_group = steppestech
			}
		}
		picture = ISL_LN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = eastern
		}
		picture = EE_LN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = indian
		}
		picture = IND_LN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = chinese
		}
		picture = EA_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = soudantech
				technology_group = sub_saharan
				technology_group = central_african
				technology_group = malagasy_tech
				technology_group = east_african
			}
		}
		picture = AFR_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = austranesian
				technology_group = hawaii_tech
			}
		}
		picture = SEA_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = mesoamerican
				technology_group = south_american
			}
		}
		picture = AMR_LN_eventPicture
	}
	is_triggered_only = yes
	hidden = no
	immediate = {
		hidden_effect = {
			set_variable = {
				which = LN_corruption_current
				value = 0
			}
			change_variable = {
				which = LN_corruption_current
				which = privilege_corruption_LN
			}
			multiply_variable = {
				which = LN_corruption_current
				value = 0.01
			}
			set_variable = {
				which = LN_corruption_cost_1
				value = 0
			}
			change_variable = {
				which = LN_corruption_cost_1
				value = 5
			}
			multiply_variable = {
				which = LN_corruption_cost_1
				value = 2
			}
			multiply_variable = {
				which = LN_corruption_cost_1
				value = 0.01
			}
			multiply_variable = {
				which = LN_corruption_cost_1
				which = estate_lesser_nobles_weight_share
			}
			set_country_flag = freeze_all_privileges
			set_variable = {
				which = ai_corruption_choice
				value = -2
			}
			if = {
				limit = {
					has_country_flag = LN_hit_to_loyalty
				}
				random_list = {
					10 = {
						set_variable = {
							which = lesser_nobles_loyalty_removed_a
							value = 2
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
					20 = {
						set_variable = {
							which = lesser_nobles_loyalty_removed_a
							value = 5
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = lesser_nobles_loyalty_removed_a
							value = 10
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = lesser_nobles_loyalty_removed_a
							value = 15
						}
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
					10 = {
						set_variable = {
							which = lesser_nobles_loyalty_removed_a
							value = 20
						}
						change_variable = {
							which = ai_corruption_choice
							value = 6
						}
					}
				}
				multiply_variable = {
					which = lesser_nobles_loyalty_removed_a
					which = LN_privilege_pain_modifier
				}
				multiply_variable = {
					which = lesser_nobles_loyalty_removed_a
					value = 0.001
				}
				multiply_variable = {
					which = lesser_nobles_loyalty_removed_a
					value = 1000
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.40
							}
						}
					}
					change_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0.60
						}
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
			}
			if = {
				limit = {
					has_country_flag = LN_hit_to_legitimacy
				}
				random_list = {
					10 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 10
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
					20 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 25
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 40
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 55
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 75
						}
						change_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
				}
				multiply_variable = {
					which = hit_to_legitimacy
					which = LN_privilege_pain_modifier
				}
				multiply_variable = {
					which = hit_to_legitimacy
					which = estate_lesser_nobles_weight_share
				}
				if = {
					limit = {
						NOT = {
							legitimacy = 50
						}
					}
					change_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
				if = {
					limit = {
						legitimacy = 70
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 1
					}
				}
			}
			if = {
				limit = {
					has_country_flag = LN_hit_to_prestige
				}
				random_list = {
					10 = {
						set_variable = {
							which = hit_to_prestige
							value = 10
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_variable = {
							which = hit_to_prestige
							value = 25
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					40 = {
						set_variable = {
							which = hit_to_prestige
							value = 40
						}
						change_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					20 = {
						set_variable = {
							which = hit_to_prestige
							value = 55
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					10 = {
						set_variable = {
							which = hit_to_prestige
							value = 75
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
				}
				multiply_variable = {
					which = hit_to_prestige
					which = LN_privilege_pain_modifier
				}
				multiply_variable = {
					which = hit_to_prestige
					which = estate_lesser_nobles_weight_share
				}
			}
			if = {
				limit = {
					has_country_flag = LN_hit_to_military
				}
				random_list = {
					10 = {
						set_variable = {
							which = LN_hit_to_military
							value = 30
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
					20 = {
						set_variable = {
							which = LN_hit_to_military
							value = 60
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = LN_hit_to_military
							value = 100
						}
						change_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					20 = {
						set_variable = {
							which = LN_hit_to_military
							value = 150
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = LN_hit_to_military
							value = 200
						}
						change_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
				}
				multiply_variable = {
					which = LN_hit_to_military
					which = LN_privilege_pain_modifier
				}
				multiply_variable = {
					which = LN_hit_to_military
					which = estate_lesser_nobles_weight_share
				}
			}
			if = {
				limit = {
					has_country_flag = LN_hit_to_stability
				}
				random_list = {
					10 = {
						set_variable = {
							which = stability_hit
							value = 30
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 5
						}
					}
					20 = {
						set_variable = {
							which = stability_hit
							value = 50
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = stability_hit
							value = 75
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = stability_hit
							value = 100
						}
						change_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
					10 = {
						set_variable = {
							which = stability_hit
							value = 125
						}
						change_variable = {
							which = ai_corruption_choice
							value = 6
						}
					}
				}
				multiply_variable = {
					which = stability_hit
					which = LN_privilege_pain_modifier
				}
				multiply_variable = {
					which = stability_hit
					which = estate_lesser_nobles_weight_share
				}
				if = {
					limit = {
						NOT = {
							stability = 1
						}
					}
					change_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
				if = {
					limit = {
						stability = 2
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
			}
			if = {
				limit = {
					has_country_flag = LN_autonomy_demands
				}
				random_list = {
					10 = {
						set_variable = {
							which = autonomy_added
							value = 10
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_variable = {
							which = autonomy_added
							value = 15
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					40 = {
						set_variable = {
							which = autonomy_added
							value = 25
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = autonomy_added
							value = 35
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = autonomy_added
							value = 50
						}
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
				}
				multiply_variable = {
					which = autonomy_added
					which = LN_privilege_pain_modifier
				}
				multiply_variable = {
					which = autonomy_added
					value = 0.001
				}
				multiply_variable = {
					which = autonomy_added
					value = 1000
				}
			}
			if = {
				limit = {
					has_country_flag = LN_hit_to_adm_points
				}
				random_list = {
					10 = {
						set_variable = {
							which = admin_cost_a
							value = 100
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_variable = {
							which = admin_cost_a
							value = 150
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					40 = {
						set_variable = {
							which = admin_cost_a
							value = 200
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = admin_cost_a
							value = 250
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = admin_cost_a
							value = 300
						}
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
				}
				multiply_variable = {
					which = admin_cost_a
					which = LN_privilege_pain_modifier
				}
				multiply_variable = {
					which = admin_cost_a
					which = estate_lesser_nobles_weight_share
				}
				multiply_variable = {
					which = admin_cost_a
					value = 0.001
				}
				multiply_variable = {
					which = admin_cost_a
					value = 1000
				}
			}
			if = {
				limit = {
					has_country_flag = LN_unrest
				}
				random_list = {
					10 = {
						set_country_flag = LN_unrest_1
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_country_flag = LN_unrest_2
						subtract_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					40 = {
						set_country_flag = LN_unrest_3
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_country_flag = LN_unrest_4
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_country_flag = LN_unrest_5
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = LN_privilege_pain_modifier
						value = 1.1
					}
				}
				set_variable = {
					which = lesser_nobles_loyalty_removed_a
					value = 5
				}
				set_variable = {
					which = ai_corruption_choice
					value = -5
				}
			}
			change_variable = {
				which = ai_corruption_choice
				value = 3
			}
			if = {
				limit = {
					check_variable = {
						which = LN_privilege_pain_modifier
						value = 0.59
					}
				}
				subtract_variable = {
					which = ai_corruption_choice
					value = 1
				}
				if = {
					limit = {
						check_variable = {
							which = LN_privilege_pain_modifier
							value = 0.66
						}
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 1
					}
					if = {
						limit = {
							check_variable = {
								which = LN_privilege_pain_modifier
								value = 0.72
							}
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 1
						}
						if = {
							limit = {
								check_variable = {
									which = LN_privilege_pain_modifier
									value = 0.82
								}
							}
							subtract_variable = {
								which = ai_corruption_choice
								value = 1
							}
							if = {
								limit = {
									check_variable = {
										which = LN_privilege_pain_modifier
										value = 0.91
									}
								}
								subtract_variable = {
									which = ai_corruption_choice
									value = 1
								}
								if = {
									limit = {
										check_variable = {
											which = LN_privilege_pain_modifier
											value = 1.01
										}
									}
									subtract_variable = {
										which = ai_corruption_choice
										value = 1
									}
								}
							}
						}
					}
				}
			}
			set_variable = {
				which = privilege_ticker
				value = 10
			}
		}
		while = {
			limit = {
				check_variable = {
					which = privilege_ticker
					value = 1
				}
			}
			subtract_variable = {
				which = privilege_ticker
				value = 1
			}
			random_list = {
				20 = {
					if = {
						limit = {
							has_country_flag = LN_authority_to_govern_locally_3
							NOT = {
								has_country_flag = LN_authority_to_govern_locally_4
							}
						}
						set_country_flag = choose_LN_authority_to_govern_locally_4
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							has_country_flag = LN_authority_to_govern_locally_2
							NOT = {
								has_country_flag = LN_authority_to_govern_locally_3
							}
						}
						set_country_flag = choose_LN_authority_to_govern_locally_3
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							has_country_flag = LN_authority_to_govern_locally_1
							NOT = {
								has_country_flag = LN_authority_to_govern_locally_2
							}
						}
						set_country_flag = choose_LN_authority_to_govern_locally_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = LN_authority_to_govern_locally_1
							}
							NOT = {
								has_country_flag = LN_authority_to_govern_locally_2
							}
							NOT = {
								has_country_flag = LN_authority_to_govern_locally_3
							}
							NOT = {
								has_country_flag = LN_authority_to_govern_locally_4
							}
						}
						set_country_flag = choose_LN_authority_to_govern_locally_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = LN_relaxed_levy_obligations_1
							NOT = {
								has_country_flag = LN_relaxed_levy_obligations_2
							}
						}
						set_country_flag = choose_LN_relaxed_levy_obligations_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = LN_relaxed_levy_obligations_1
							}
							NOT = {
								has_country_flag = LN_relaxed_levy_obligations_2
							}
						}
						set_country_flag = choose_LN_relaxed_levy_obligations_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = LN_tax_exemptions_1
						}
						set_country_flag = choose_LN_tax_exemptions_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					else_if = {
						limit = {
							has_country_flag = LN_tax_exemptions_2
						}
						set_country_flag = choose_LN_tax_exemptions_3
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					else_if = {
						limit = {
							has_country_flag = LN_tax_exemptions_3
						}
						set_country_flag = choose_LN_tax_exemptions_4
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					else_if = {
						limit = {
							NOT = {
								has_country_flag = LN_tax_exemptions_4
							}
						}
						set_country_flag = choose_LN_tax_exemptions_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = LN_high_court_titles_1
							NOT = {
								has_country_flag = LN_high_court_titles_2
							}
						}
						set_country_flag = choose_LN_high_court_titles_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = LN_high_court_titles_1
							}
							NOT = {
								has_country_flag = LN_high_court_titles_2
							}
						}
						set_country_flag = choose_LN_high_court_titles_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				30 = {
					set_country_flag = choose_LN_promotion
					set_variable = {
						which = privilege_ticker
						value = 0
					}
				}
				10 = {
					if = {
						limit = {
							culture_group = japanese
							AND = {
								OR = {
									AND = {
										culture_group = japanese
										has_reform = celestial_empire
									}
									has_reform = daimyo_legacy
									has_reform = shogunate_legacy
									has_reform = indep_daimyo_legacy
								}
							}
							AND = {
								OR = {
									is_subject = no
									is_subject_of_type = tributary_state
									is_subject_of_type = close_tributary_state
								}
							}
							num_of_cities = 2
							NOT = {
								calc_true_if = {
									all_country = {
										culture_group = japanese
									}
									amount = 52
								}
							}
							any_owned_province = {
								is_capital = no
								has_province_flag = lesser_nobles_control_province
							}
						}
						random_owned_province = {
							limit = {
								is_capital = no
								has_province_flag = lesser_nobles_control_province
							}
							save_event_target_as = daimyo_province
						}
						set_country_flag = choose_release_daimyo
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
			}
		}
	}
	option = {
		name = "POP_Estates_Events.003.a"
		ai_chance = {
			factor = 1
		}
		hidden_effect = {
			clr_country_flag = LN_hit_to_loyalty
			clr_country_flag = LN_hit_to_legitimacy
			clr_country_flag = LN_hit_to_prestige
			clr_country_flag = LN_hit_to_military
			clr_country_flag = LN_hit_to_stability
			clr_country_flag = LN_autonomy_demands
			clr_country_flag = LN_hit_to_adm_points
			clr_country_flag = LN_unrest
			clr_country_flag = LN_unrest_1
			clr_country_flag = LN_unrest_2
			clr_country_flag = LN_unrest_3
			clr_country_flag = LN_unrest_4
			clr_country_flag = LN_unrest_5
		}
		trigger_switch = {
			on_trigger = has_country_flag
			choose_LN_authority_to_govern_locally_1 = {
				custom_tooltip = LN_authority_to_govern_locally_1_privilege
				hidden_effect = {
					set_country_flag = LN_authority_to_govern_locally_1
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = LN_authority_to_govern_locally_1
							}
							extend_province_modifier = {
								name = LN_authority_to_govern_locally_1
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = LN_authority_to_govern_locally_1
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_LN_authority_to_govern_locally_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
			}
			choose_LN_authority_to_govern_locally_2 = {
				custom_tooltip = LN_authority_to_govern_locally_2_privilege
				hidden_effect = {
					clr_country_flag = LN_authority_to_govern_locally_1
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = LN_authority_to_govern_locally_1
							}
							remove_province_modifier = LN_authority_to_govern_locally_1
						}
					}
				}
				hidden_effect = {
					set_country_flag = LN_authority_to_govern_locally_2
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = LN_authority_to_govern_locally_2
							}
							extend_province_modifier = {
								name = LN_authority_to_govern_locally_2
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = LN_authority_to_govern_locally_2
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_LN_authority_to_govern_locally_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
			}
			choose_LN_authority_to_govern_locally_3 = {
				custom_tooltip = LN_authority_to_govern_locally_3_privilege
				hidden_effect = {
					clr_country_flag = LN_authority_to_govern_locally_2
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = LN_authority_to_govern_locally_2
							}
							remove_province_modifier = LN_authority_to_govern_locally_2
						}
					}
				}
				hidden_effect = {
					set_country_flag = LN_authority_to_govern_locally_3
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = LN_authority_to_govern_locally_3
							}
							extend_province_modifier = {
								name = LN_authority_to_govern_locally_3
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = LN_authority_to_govern_locally_3
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_LN_authority_to_govern_locally_3
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
			}
			choose_LN_authority_to_govern_locally_4 = {
				custom_tooltip = LN_authority_to_govern_locally_4_privilege
				hidden_effect = {
					clr_country_flag = LN_authority_to_govern_locally_3
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = LN_authority_to_govern_locally_3
							}
							remove_province_modifier = LN_authority_to_govern_locally_3
						}
					}
				}
				hidden_effect = {
					set_country_flag = LN_authority_to_govern_locally_4
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						if = {
							limit = {
								has_province_modifier = LN_authority_to_govern_locally_4
							}
							extend_province_modifier = {
								name = LN_authority_to_govern_locally_4
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = LN_authority_to_govern_locally_4
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_LN_authority_to_govern_locally_4
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
			}
			choose_LN_relaxed_levy_obligations_1 = {
				custom_tooltip = LN_relaxed_levy_obligations_1_privilege
				hidden_effect = {
					set_country_flag = LN_relaxed_levy_obligations_1
				}
				clr_country_flag = choose_LN_relaxed_levy_obligations_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
				custom_tooltip = LN_relaxed_levy_obligations_1_privilege_desc
			}
			choose_LN_relaxed_levy_obligations_2 = {
				custom_tooltip = LN_relaxed_levy_obligations_2_privilege
				hidden_effect = {
					clr_country_flag = LN_relaxed_levy_obligations_1
				}
				hidden_effect = {
					set_country_flag = LN_relaxed_levy_obligations_2
				}
				clr_country_flag = choose_LN_relaxed_levy_obligations_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
				custom_tooltip = LN_relaxed_levy_obligations_2_privilege_desc
			}
			choose_LN_tax_exemptions_1 = {
				custom_tooltip = LN_tax_exemptions_1_privilege
				hidden_effect = {
					set_country_flag = LN_tax_exemptions_1
				}
				clr_country_flag = choose_LN_tax_exemptions_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
				custom_tooltip = LN_tax_exemptions_1_privilege_desc
			}
			choose_LN_tax_exemptions_2 = {
				custom_tooltip = LN_tax_exemptions_2_privilege
				hidden_effect = {
					clr_country_flag = LN_tax_exemptions_1
				}
				hidden_effect = {
					set_country_flag = LN_tax_exemptions_2
				}
				clr_country_flag = choose_LN_tax_exemptions_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
				custom_tooltip = LN_tax_exemptions_2_privilege_desc
			}
			choose_LN_tax_exemptions_3 = {
				custom_tooltip = LN_tax_exemptions_3_privilege
				hidden_effect = {
					clr_country_flag = LN_tax_exemptions_2
				}
				hidden_effect = {
					set_country_flag = LN_tax_exemptions_3
				}
				clr_country_flag = choose_LN_tax_exemptions_3
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
				custom_tooltip = LN_tax_exemptions_3_privilege_desc
			}
			choose_LN_tax_exemptions_4 = {
				custom_tooltip = LN_tax_exemptions_4_privilege
				hidden_effect = {
					clr_country_flag = LN_tax_exemptions_3
				}
				hidden_effect = {
					set_country_flag = LN_tax_exemptions_4
				}
				clr_country_flag = choose_LN_tax_exemptions_4
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
				custom_tooltip = LN_tax_exemptions_4_privilege_desc
			}
			choose_LN_high_court_titles_1 = {
				custom_tooltip = LN_high_court_titles_1_privilege
				hidden_effect = {
					set_country_flag = LN_high_court_titles_1
				}
				clr_country_flag = choose_LN_high_court_titles_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
				custom_tooltip = LN_high_court_titles_1_privilege_desc
			}
			choose_LN_high_court_titles_2 = {
				custom_tooltip = LN_high_court_titles_2_privilege
				hidden_effect = {
					clr_country_flag = LN_high_court_titles_1
				}
				hidden_effect = {
					set_country_flag = LN_high_court_titles_2
				}
				clr_country_flag = choose_LN_high_court_titles_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = LN_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = LN_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = LN_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = LN_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = lesser_nobles_corruption_added_1d
				}
				custom_tooltip = LN_high_court_titles_2_privilege_desc
			}
			choose_release_daimyo = {
				hidden_effect = {
					set_variable = {
						which = daimyo_ticker
						value = 50
					}
				}
				while = {
					limit = {
						check_variable = {
							which = daimyo_ticker
							value = 1
						}
					}
					subtract_variable = {
						which = daimyo_ticker
						value = 1
					}
					random_list = {
						1 = {
							if = {
								limit = {
									AKG = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = AKG
								}
								AKG = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = AKG
									create_subject = {
										who = AKG
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									AKM = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = AKM
								}
								AKM = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = AKM
									create_subject = {
										who = AKM
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									AKW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = AKW
								}
								AKW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = AKW
									create_subject = {
										who = AKW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									ANG = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = ANG
								}
								ANG = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = ANG
									create_subject = {
										who = ANG
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									ANO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = ANO
								}
								ANO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = ANO
									create_subject = {
										who = ANO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									ASA = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = ASA
								}
								ASA = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = ASA
									create_subject = {
										who = ASA
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									CHB = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = CHB
								}
								CHB = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = CHB
									create_subject = {
										who = CHB
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									CSK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = CSK
								}
								CSK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = CSK
									create_subject = {
										who = CSK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									DTE = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = DTE
								}
								DTE = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = DTE
									create_subject = {
										who = DTE
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									HJO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = HJO
								}
								HJO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = HJO
									create_subject = {
										who = HJO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									HKW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = HKW
								}
								HKW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = HKW
									create_subject = {
										who = HKW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									HKY = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = HKY
								}
								HKY = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = HKY
									create_subject = {
										who = HKY
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									HNM = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = HNM
								}
								HNM = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = HNM
									create_subject = {
										who = HNM
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									IGW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = IGW
								}
								IGW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = IGW
									create_subject = {
										who = IGW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									INO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = INO
								}
								INO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = INO
									create_subject = {
										who = INO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									ISK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = ISK
								}
								ISK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = ISK
									create_subject = {
										who = ISK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KKC = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KKC
								}
								KKC = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KKC
									create_subject = {
										who = KKC
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KKZ = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KKZ
								}
								KKZ = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KKZ
									create_subject = {
										who = KKZ
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KOO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KOO
								}
								KOO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KOO
									create_subject = {
										who = KOO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KTK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KTK
								}
								KTK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KTK
									create_subject = {
										who = KTK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KTO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KTO
								}
								KTO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KTO
									create_subject = {
										who = KTO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KWG = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KWG
								}
								KWG = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KWG
									create_subject = {
										who = KWG
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									KYO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = KYO
								}
								KYO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = KYO
									create_subject = {
										who = KYO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									MIY = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = MIY
								}
								MIY = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = MIY
									create_subject = {
										who = MIY
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									MRI = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = MRI
								}
								MRI = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = MRI
									create_subject = {
										who = MRI
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									NIK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = NIK
								}
								NIK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = NIK
									create_subject = {
										who = NIK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									NNB = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = NNB
								}
								NNB = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = NNB
									create_subject = {
										who = NNB
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									ODA = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = ODA
								}
								ODA = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = ODA
									create_subject = {
										who = ODA
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									OGA = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = OGA
								}
								OGA = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = OGA
									create_subject = {
										who = OGA
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									OTM = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = OTM
								}
								OTM = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = OTM
									create_subject = {
										who = OTM
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									OUC = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = OUC
								}
								OUC = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = OUC
									create_subject = {
										who = OUC
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									RZJ = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = RZJ
								}
								RZJ = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = RZJ
									create_subject = {
										who = RZJ
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SBA = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SBA
								}
								SBA = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SBA
									create_subject = {
										who = SBA
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SKW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SKW
								}
								SKW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SKW
									create_subject = {
										who = SKW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SHN = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SHN
								}
								SHN = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SHN
									create_subject = {
										who = SHN
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SMZ = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SMZ
								}
								SMZ = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SMZ
									create_subject = {
										who = SMZ
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									STK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = STK
								}
								STK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = STK
									create_subject = {
										who = STK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SOO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SOO
								}
								SOO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SOO
									create_subject = {
										who = SOO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									STO = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = STO
								}
								STO = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = STO
									create_subject = {
										who = STO
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									SUW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = SUW
								}
								SUW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = SUW
									create_subject = {
										who = SUW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									TKD = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = TKD
								}
								TKD = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = TKD
									create_subject = {
										who = TKD
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									TGS = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = TGS
								}
								TGS = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = TGS
									create_subject = {
										who = TGS
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									TGW = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = TGW
								}
								TGW = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = TGW
									create_subject = {
										who = TGW
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									TKI = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = TKI
								}
								TKI = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = TKI
									create_subject = {
										who = TKI
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									UKI = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = UKI
								}
								UKI = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = UKI
									create_subject = {
										who = UKI
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									USG = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = USG
								}
								USG = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = USG
									create_subject = {
										who = USG
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									UTN = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = UTN
								}
								UTN = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = UTN
									create_subject = {
										who = UTN
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									YSM = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = YSM
								}
								YSM = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = YSM
									create_subject = {
										who = YSM
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									YMN = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = YMN
								}
								YMN = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = YMN
									create_subject = {
										who = YMN
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
						1 = {
							if = {
								limit = {
									YUK = {
										exists = no
									}
								}
								japan_superregion = {
									remove_core = YUK
								}
								YUK = {
									add_core = event_target:daimyo_province
								}
								ROOT = {
									release = YUK
									create_subject = {
										who = YUK
										subject_type = daimyo_vassal
									}
								}
								set_variable = {
									which = daimyo_ticker
									value = 0
								}
							}
						}
					}
				}
				clr_country_flag = choose_release_daimyo
			}
		}
		if = {
			limit = {
				has_country_flag = choose_LN_promotion
			}
			clr_country_flag = choose_LN_promotion
			custom_tooltip = LN_demand_promotion
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_lesser_nobles_promotion_weight
								value = 0.001
							}
						}
					}
					set_variable = {
						which = estate_lesser_nobles_promotion_weight
						value = 0
					}
				}
				set_variable = {
					which = estate_lesser_nobles_promotion_weight_added
					value = 0
				}
				set_variable = {
					which = estate_lesser_nobles_promotion_weight_added
					value = 1
				}
				multiply_variable = {
					which = estate_lesser_nobles_promotion_weight_added
					value = 0.2
				}
				multiply_variable = {
					which = estate_lesser_nobles_promotion_weight_added
					which = estate_lesser_nobles_weight_country
				}
				change_variable = {
					which = estate_lesser_nobles_promotion_weight
					which = estate_lesser_nobles_promotion_weight_added
				}
				set_variable = {
					which = estate_lesser_nobles_promotion_check
					value = 0
				}
				set_variable = {
					which = estate_lesser_nobles_promotion_check
					which = estate_lesser_nobles_promotion_weight
				}
				multiply_variable = {
					which = estate_lesser_nobles_promotion_check
					value = 5
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_promotion_check
							which = estate_lesser_nobles_weight_country
						}
					}
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						set_variable = {
							which = estate_lesser_nobles_promotion_weight
							value = 0
						}
						set_variable = {
							which = estate_lesser_nobles_promotion_weight
							which = PREV
						}
					}
					while = {
						limit = {
							any_owned_province = {
								has_province_flag = lesser_nobles_control_province
								NOT = {
									has_province_flag = time_to_promote
								}
								check_variable = {
									which = estate_lesser_nobles_promotion_weight
									which = estate_weight
								}
							}
						}
						random_owned_province = {
							limit = {
								check_variable = {
									which = estate_lesser_nobles_promotion_weight
									which = estate_weight
								}
								has_province_flag = lesser_nobles_control_province
								NOT = {
									has_province_flag = time_to_promote
								}
							}
							set_variable = {
								which = estate_lesser_nobles_promotion_weight_subtract
								value = 0
							}
							set_variable = {
								which = estate_lesser_nobles_promotion_weight_subtract
								which = estate_weight
							}
							PREV = {
								set_variable = {
									which = estate_lesser_nobles_promotion_weight_subtract
									value = 0
								}
							}
							PREV = {
								set_variable = {
									which = estate_lesser_nobles_promotion_weight_subtract
									which = PREV
								}
							}
							PREV = {
								subtract_variable = {
									which = estate_lesser_nobles_promotion_weight
									which = estate_lesser_nobles_promotion_weight_subtract
								}
							}
							set_province_flag = time_to_promote
						}
						every_owned_province = {
							limit = {
								has_province_flag = lesser_nobles_control_province
							}
							set_variable = {
								which = estate_lesser_nobles_promotion_weight
								value = 0
							}
							set_variable = {
								which = estate_lesser_nobles_promotion_weight
								which = PREV
							}
						}
					}
					country_event = {
						id = POP_Estates.510
					}
				}
			}
		}
		hidden_effect = {
			add_country_modifier = {
				name = lesser_nobles_offered_privilege
				duration = 1065
				hidden = yes
			}
			clr_country_flag = freeze_all_privileges
			clr_country_flag = lN_unrest
		}
	}
	option = {
		name = "POP_Estates_Events.003.b"
		ai_chance = {
			factor = 20
			modifier = {
				factor = 0.01
				check_variable = {
					which = ai_corruption_choice
					value = 0
				}
			}
		}
		trigger = {
			stability = 0
			is_bankrupt = no
		}
		if = {
			limit = {
				has_country_flag = LN_hit_to_loyalty
			}
			custom_tooltip = estate_lesser_nobles_loyalty_removed_a
			hidden_effect = {
				clr_country_flag = LN_hit_to_loyalty
				set_variable = {
					which = lesser_nobles_loyalty_removed
					value = 0
				}
				set_variable = {
					which = lesser_nobles_loyalty_removed
					which = lesser_nobles_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -64
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -32
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -16
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -8
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -4
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -2
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -1
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = lesser_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_lesser_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_lesser_nobles_loyalty
						}
						set_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = LN_hit_to_legitimacy
			}
			hidden_effect = {
				clr_country_flag = LN_hit_to_legitimacy
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 3
						}
					}
				}
				add_legitimacy = -2
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 3
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 5
						}
					}
				}
				add_legitimacy = -5
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 5
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 10
						}
					}
				}
				add_legitimacy = -10
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 10
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 15
						}
					}
				}
				add_legitimacy = -15
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 15
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 20
						}
					}
				}
				add_legitimacy = -20
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 20
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 25
						}
					}
				}
				add_legitimacy = -25
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 25
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 30
						}
					}
				}
				add_legitimacy = -30
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 30
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 35
						}
					}
				}
				add_legitimacy = -35
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 35
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 40
						}
					}
				}
				add_legitimacy = -40
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 40
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 45
						}
					}
				}
				add_legitimacy = -45
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 45
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 50
						}
					}
				}
				add_legitimacy = -50
			}
		}
		if = {
			limit = {
				has_country_flag = LN_hit_to_prestige
			}
			hidden_effect = {
				clr_country_flag = LN_hit_to_prestige
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 3
						}
					}
				}
				add_prestige = -2
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 3
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 5
						}
					}
				}
				add_prestige = -5
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 5
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 10
						}
					}
				}
				add_prestige = -10
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 10
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 15
						}
					}
				}
				add_prestige = -15
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 15
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 20
						}
					}
				}
				add_prestige = -20
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 20
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 25
						}
					}
				}
				add_prestige = -25
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 25
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 30
						}
					}
				}
				add_prestige = -30
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 30
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 35
						}
					}
				}
				add_prestige = -35
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 35
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 40
						}
					}
				}
				add_prestige = -40
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 40
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 45
						}
					}
				}
				add_prestige = -45
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 45
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 50
						}
					}
				}
				add_prestige = -50
			}
		}
		if = {
			limit = {
				has_country_flag = LN_hit_to_stability
			}
			hidden_effect = {
				clr_country_flag = LN_hit_to_stability
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 10
						}
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 10
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 20
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 20
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 30
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 30
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 40
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 40
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 50
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 50
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 60
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 60
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 70
						}
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 70
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 80
						}
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 80
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 90
						}
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 90
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = LN_autonomy_demands
			}
			custom_tooltip = LN_autonomy_added
			hidden_effect = {
				clr_country_flag = LN_autonomy_demands
				every_owned_province = {
					limit = {
						has_province_flag = lesser_nobles_control_province
					}
					set_variable = {
						which = autonomy_added
						value = 0
					}
					set_variable = {
						which = autonomy_added
						which = PREV
					}
					while = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 32
							}
						}
						add_local_autonomy = 32
						subtract_variable = {
							which = autonomy_added
							value = 32
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 16
							}
						}
						add_local_autonomy = 16
						subtract_variable = {
							which = autonomy_added
							value = 16
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 8
							}
						}
						add_local_autonomy = 8
						subtract_variable = {
							which = autonomy_added
							value = 8
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 4
							}
						}
						add_local_autonomy = 4
						subtract_variable = {
							which = autonomy_added
							value = 4
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 2
							}
						}
						add_local_autonomy = 2
						subtract_variable = {
							which = autonomy_added
							value = 2
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 1
							}
						}
						add_local_autonomy = 1
						subtract_variable = {
							which = autonomy_added
							value = 1
						}
					}
					set_variable = {
						which = autonomy_added
						value = 0
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = LN_hit_to_adm_points
			}
			custom_tooltip = admin_cost_a
			hidden_effect = {
				clr_country_flag = LN_hit_to_adm_points
				set_variable = {
					which = admin_cost
					value = 0
				}
				set_variable = {
					which = admin_cost
					which = admin_cost_a
				}
				while = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 1024
						}
					}
					add_adm_power = -1024
					subtract_variable = {
						which = admin_cost
						value = 1024
					}
				}
				if = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 512
						}
					}
					add_adm_power = -512
					subtract_variable = {
						which = admin_cost
						value = 512
					}
				}
				if = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 256
						}
					}
					add_adm_power = -256
					subtract_variable = {
						which = admin_cost
						value = 256
					}
				}
				if = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 128
						}
					}
					add_adm_power = -128
					subtract_variable = {
						which = admin_cost
						value = 128
					}
				}
				if = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 64
						}
					}
					add_adm_power = -64
					subtract_variable = {
						which = admin_cost
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 32
						}
					}
					add_adm_power = -32
					subtract_variable = {
						which = admin_cost
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 16
						}
					}
					add_adm_power = -16
					subtract_variable = {
						which = admin_cost
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 8
						}
					}
					add_adm_power = -8
					subtract_variable = {
						which = admin_cost
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 4
						}
					}
					add_adm_power = -4
					subtract_variable = {
						which = admin_cost
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 2
						}
					}
					add_adm_power = -2
					subtract_variable = {
						which = admin_cost
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = admin_cost
							value = 1
						}
					}
					add_adm_power = -1
					subtract_variable = {
						which = admin_cost
						value = 1
					}
				}
				set_variable = {
					which = admin_cost
					value = 0
				}
			}
		}
		if = {
			limit = {
				has_country_flag = LN_hit_to_military
			}
			hidden_effect = {
				clr_country_flag = LN_hit_to_military
			}
			if = {
				limit = {
					check_variable = {
						which = LN_hit_to_military
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = LN_hit_to_military
							value = 10
						}
					}
				}
				add_country_modifier = {
					name = LN_hamper_military_1
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = LN_hit_to_military
						value = 10
					}
					NOT = {
						check_variable = {
							which = LN_hit_to_military
							value = 20
						}
					}
				}
				add_country_modifier = {
					name = LN_hamper_military_2
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = LN_hit_to_military
						value = 20
					}
					NOT = {
						check_variable = {
							which = LN_hit_to_military
							value = 30
						}
					}
				}
				add_country_modifier = {
					name = LN_hamper_military_3
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = LN_hit_to_military
						value = 30
					}
					NOT = {
						check_variable = {
							which = LN_hit_to_military
							value = 40
						}
					}
				}
				add_country_modifier = {
					name = LN_hamper_military_4
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = LN_hit_to_military
						value = 40
					}
					NOT = {
						check_variable = {
							which = LN_hit_to_military
							value = 50
						}
					}
				}
				add_country_modifier = {
					name = LN_hamper_military_5
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = LN_hit_to_military
						value = 50
					}
					NOT = {
						check_variable = {
							which = LN_hit_to_military
							value = 60
						}
					}
				}
				add_country_modifier = {
					name = LN_hamper_military_6
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = LN_hit_to_military
						value = 60
					}
					NOT = {
						check_variable = {
							which = LN_hit_to_military
							value = 70
						}
					}
				}
				add_country_modifier = {
					name = LN_hamper_military_7
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = LN_hit_to_military
						value = 70
					}
					NOT = {
						check_variable = {
							which = LN_hit_to_military
							value = 80
						}
					}
				}
				add_country_modifier = {
					name = LN_hamper_military_8
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = LN_hit_to_military
						value = 80
					}
					NOT = {
						check_variable = {
							which = LN_hit_to_military
							value = 90
						}
					}
				}
				add_country_modifier = {
					name = LN_hamper_military_9
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = LN_hit_to_military
						value = 90
					}
				}
				add_country_modifier = {
					name = LN_hamper_military_10
					duration = 3650
				}
			}
		}
		if = {
			limit = {
				has_country_flag = LN_unrest
			}
			if = {
				limit = {
					has_country_flag = LN_unrest_1
				}
				custom_tooltip = LN_unrest_1
				hidden_effect = {
					clr_country_flag = LN_unrest_1
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						random = {
							chance = 15
							add_province_modifier = {
								name = LN_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = LN_unrest_2
				}
				custom_tooltip = LN_unrest_2
				hidden_effect = {
					clr_country_flag = LN_unrest_2
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						random = {
							chance = 30
							add_province_modifier = {
								name = LN_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = LN_unrest_3
				}
				custom_tooltip = LN_unrest_3
				hidden_effect = {
					clr_country_flag = LN_unrest_3
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						random = {
							chance = 45
							add_province_modifier = {
								name = LN_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = LN_unrest_4
				}
				custom_tooltip = LN_unrest_4
				hidden_effect = {
					clr_country_flag = LN_unrest_4
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						random = {
							chance = 60
							add_province_modifier = {
								name = LN_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = LN_unrest_5
				}
				custom_tooltip = LN_unrest_5
				hidden_effect = {
					clr_country_flag = LN_unrest_5
					every_owned_province = {
						limit = {
							has_province_flag = lesser_nobles_control_province
						}
						random = {
							chance = 75
							add_province_modifier = {
								name = LN_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
		}
		if = {
			limit = {
				ai = no
			}
			if = {
				limit = {
					check_variable = {
						which = LN_privilege_pain_modifier
						value = 0.99
					}
				}
				custom_tooltip = estate_demand_costs_money_1
				hidden_effect = {
					set_variable = {
						which = LN_estate_cost
						value = 0
					}
					set_variable = {
						which = LN_estate_cost
						which = estate_lesser_nobles_treasury_annual
					}
					multiply_variable = {
						which = LN_estate_cost
						value = 1
					}
					subtract_variable = {
						which = estate_lesser_nobles_treasury
						which = LN_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = LN_privilege_pain_modifier
						value = 0.9
					}
				}
				custom_tooltip = estate_demand_costs_money_1.5
				hidden_effect = {
					set_variable = {
						which = LN_estate_cost
						value = 0
					}
					set_variable = {
						which = LN_estate_cost
						which = estate_lesser_nobles_treasury_annual
					}
					multiply_variable = {
						which = LN_estate_cost
						value = 1.5
					}
					subtract_variable = {
						which = estate_lesser_nobles_treasury
						which = LN_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = LN_privilege_pain_modifier
						value = 0.72
					}
				}
				custom_tooltip = estate_demand_costs_money_2
				hidden_effect = {
					set_variable = {
						which = LN_estate_cost
						value = 0
					}
					set_variable = {
						which = LN_estate_cost
						which = estate_lesser_nobles_treasury_annual
					}
					multiply_variable = {
						which = LN_estate_cost
						value = 2
					}
					subtract_variable = {
						which = estate_lesser_nobles_treasury
						which = LN_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = LN_privilege_pain_modifier
						value = 0.65
					}
				}
				custom_tooltip = estate_demand_costs_money_2.5
				hidden_effect = {
					set_variable = {
						which = LN_estate_cost
						value = 0
					}
					set_variable = {
						which = LN_estate_cost
						which = estate_lesser_nobles_treasury_annual
					}
					multiply_variable = {
						which = LN_estate_cost
						value = 2.5
					}
					subtract_variable = {
						which = estate_lesser_nobles_treasury
						which = LN_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = LN_privilege_pain_modifier
						value = 0.58
					}
				}
				custom_tooltip = estate_demand_costs_money_3
				hidden_effect = {
					set_variable = {
						which = LN_estate_cost
						value = 0
					}
					set_variable = {
						which = LN_estate_cost
						which = estate_lesser_nobles_treasury_annual
					}
					multiply_variable = {
						which = LN_estate_cost
						value = 3
					}
					subtract_variable = {
						which = estate_lesser_nobles_treasury
						which = LN_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = LN_privilege_pain_modifier
						value = 0.51
					}
				}
				custom_tooltip = estate_demand_costs_money_3.5
				hidden_effect = {
					set_variable = {
						which = LN_estate_cost
						value = 0
					}
					set_variable = {
						which = LN_estate_cost
						which = estate_lesser_nobles_treasury_annual
					}
					multiply_variable = {
						which = LN_estate_cost
						value = 3.5
					}
					subtract_variable = {
						which = estate_lesser_nobles_treasury
						which = LN_estate_cost
					}
				}
			}
		}
		hidden_effect = {
			clr_country_flag = choose_LN_authority_to_govern_locally_1
			clr_country_flag = choose_LN_authority_to_govern_locally_2
			clr_country_flag = choose_LN_relaxed_levy_obligations_1
			clr_country_flag = choose_LN_relaxed_levy_obligations_2
			clr_country_flag = choose_LN_tax_exemptions_1
			clr_country_flag = choose_LN_tax_exemptions_2
			clr_country_flag = choose_LN_tax_exemptions_3
			clr_country_flag = choose_LN_tax_exemptions_4
			clr_country_flag = choose_LN_high_court_titles_1
			clr_country_flag = choose_LN_high_court_titles_2
			clr_country_flag = choose_LN_promotion
			clr_country_flag = freeze_all_privileges
		}
	}
	after = {
		set_variable = {
			which = privilege_demand_modifier
			value = 0
		}
		set_variable = {
			which = privilege_admin_modifier
			value = 0
		}
		set_variable = {
			which = privilege_admin_modifier_den
			value = 0
		}
		set_variable = {
			which = privilege_GN_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_GN_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_GN_loyalty_malus
			value = 0
		}
		set_variable = {
			which = privilege_demand_greater_nobles_yearl
			value = 0
		}
		set_variable = {
			which = GN_privilege_pain_modifier
			value = 0
		}
		set_variable = {
			which = privilege_LN_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_LN_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_LN_loyalty_malus
			value = 0
		}
		set_variable = {
			which = privilege_demand_lesser_nobles_yearly
			value = 0
		}
		set_variable = {
			which = LN_privilege_pain_modifier
			value = 0
		}
		set_variable = {
			which = privilege_BG_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_BG_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_BG_loyalty_malus
			value = 0
		}
		set_variable = {
			which = privilege_demand_burghers_yearly
			value = 0
		}
		set_variable = {
			which = BG_privilege_pain_modifier
			value = 0
		}
		set_variable = {
			which = privilege_BU_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_BU_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_demand_bureaucracy_yearly
			value = 0
		}
		set_variable = {
			which = GN_corruption_current
			value = 0
		}
		set_variable = {
			which = GN_corruption_cost_1
			value = 0
		}
		set_variable = {
			which = greater_nobles_loyalty_removed_a
			value = 0
		}
		set_variable = {
			which = hit_to_legitimacy
			value = 0
		}
		set_variable = {
			which = hit_to_prestige
			value = 0
		}
		set_variable = {
			which = GN_hit_to_military
			value = 0
		}
		set_variable = {
			which = stability_hit
			value = 0
		}
		set_variable = {
			which = milit_cost_a
			value = 0
		}
		set_variable = {
			which = ai_corruption_choice
			value = 0
		}
		set_variable = {
			which = LN_corruption_current
			value = 0
		}
		set_variable = {
			which = LN_corruption_cost_1
			value = 0
		}
		set_variable = {
			which = lesser_nobles_loyalty_removed_a
			value = 0
		}
		set_variable = {
			which = hit_to_legitimacy
			value = 0
		}
		set_variable = {
			which = hit_to_prestige
			value = 0
		}
		set_variable = {
			which = LN_hit_to_military
			value = 0
		}
		set_variable = {
			which = stability_hit
			value = 0
		}
		set_variable = {
			which = admin_cost_a
			value = 0
		}
		set_variable = {
			which = ai_corruption_choice
			value = 0
		}
		set_variable = {
			which = estate_lesser_nobles_promotion_check
			value = 0
		}
		set_variable = {
			which = BG_corruption_current
			value = 0
		}
		set_variable = {
			which = BG_corruption_cost_1
			value = 0
		}
		set_variable = {
			which = burghers_loyalty_removed_a
			value = 0
		}
		set_variable = {
			which = hit_to_legitimacy
			value = 0
		}
		set_variable = {
			which = hit_to_prestige
			value = 0
		}
		set_variable = {
			which = BG_commercial_havoc
			value = 0
		}
		set_variable = {
			which = stability_hit
			value = 0
		}
		set_variable = {
			which = diplo_cost_a
			value = 0
		}
		set_variable = {
			which = autonomy_added
			value = 0
		}
	}
}
country_event = {
	id = POP_Estates_Events.004
	title = "POP_Estates_Events.004.t"
	desc = "POP_Estates_Events.004.d"
	picture = {
		trigger = {
			technology_group = western
		}
		picture = WE_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = muslim
				technology_group = turkishtech
				technology_group = steppestech
			}
		}
		picture = ISL_BUR_eventPicture
	}
	picture = {
		trigger = {
			technology_group = eastern
		}
		picture = EE_BUR_eventPicture
	}
	picture = {
		trigger = {
			technology_group = indian
		}
		picture = IND_BUR_eventPicture
	}
	picture = {
		trigger = {
			technology_group = chinese
		}
		picture = EA_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = soudantech
				technology_group = sub_saharan
				technology_group = central_african
				technology_group = malagasy_tech
				technology_group = east_african
			}
		}
		picture = AFR_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = austranesian
				technology_group = hawaii_tech
			}
		}
		picture = SEA_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = mesoamerican
				technology_group = south_american
			}
		}
		picture = AMR_BUR_eventPicture
	}
	is_triggered_only = yes
	hidden = no
	immediate = {
		hidden_effect = {
			set_variable = {
				which = BG_corruption_current
				value = 0
			}
			change_variable = {
				which = BG_corruption_current
				which = privilege_corruption_BG
			}
			multiply_variable = {
				which = BG_corruption_current
				value = 0.01
			}
			set_variable = {
				which = BG_corruption_cost_1
				value = 0
			}
			change_variable = {
				which = BG_corruption_cost_1
				value = 5
			}
			multiply_variable = {
				which = BG_corruption_cost_1
				value = 2
			}
			multiply_variable = {
				which = BG_corruption_cost_1
				value = 0.01
			}
			multiply_variable = {
				which = BG_corruption_cost_1
				which = estate_burghers_weight_share
			}
			set_country_flag = freeze_all_privileges
			set_variable = {
				which = ai_corruption_choice
				value = -2
			}
			if = {
				limit = {
					has_country_flag = BG_hit_to_loyalty
				}
				random_list = {
					10 = {
						set_variable = {
							which = burghers_loyalty_removed_a
							value = 2
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
					20 = {
						set_variable = {
							which = burghers_loyalty_removed_a
							value = 5
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = burghers_loyalty_removed_a
							value = 10
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = burghers_loyalty_removed_a
							value = 15
						}
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
					10 = {
						set_variable = {
							which = burghers_loyalty_removed_a
							value = 20
						}
						change_variable = {
							which = ai_corruption_choice
							value = 6
						}
					}
				}
				multiply_variable = {
					which = burghers_loyalty_removed_a
					which = BG_privilege_pain_modifier
				}
				multiply_variable = {
					which = burghers_loyalty_removed_a
					value = 0.001
				}
				multiply_variable = {
					which = burghers_loyalty_removed_a
					value = 1000
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_burghers_loyalty
								value = 0.40
							}
						}
					}
					change_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_loyalty
							value = 0.60
						}
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
			}
			if = {
				limit = {
					has_country_flag = BG_hit_to_legitimacy
				}
				random_list = {
					10 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 10
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
					20 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 25
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 40
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 55
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = hit_to_legitimacy
							value = 75
						}
						change_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
				}
				multiply_variable = {
					which = hit_to_legitimacy
					which = BG_privilege_pain_modifier
				}
				multiply_variable = {
					which = hit_to_legitimacy
					which = estate_burghers_weight_share
				}
				if = {
					limit = {
						NOT = {
							legitimacy = 50
						}
					}
					change_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
				if = {
					limit = {
						legitimacy = 70
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 1
					}
				}
			}
			if = {
				limit = {
					has_country_flag = BG_hit_to_prestige
				}
				random_list = {
					10 = {
						set_variable = {
							which = hit_to_prestige
							value = 10
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_variable = {
							which = hit_to_prestige
							value = 25
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					40 = {
						set_variable = {
							which = hit_to_prestige
							value = 40
						}
						change_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					20 = {
						set_variable = {
							which = hit_to_prestige
							value = 55
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					10 = {
						set_variable = {
							which = hit_to_prestige
							value = 75
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
				}
				multiply_variable = {
					which = hit_to_prestige
					which = BG_privilege_pain_modifier
				}
				multiply_variable = {
					which = hit_to_prestige
					which = estate_burghers_weight_share
				}
			}
			if = {
				limit = {
					has_country_flag = BG_commercial_havoc
				}
				random_list = {
					10 = {
						set_variable = {
							which = BG_commercial_havoc
							value = 30
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
					20 = {
						set_variable = {
							which = BG_commercial_havoc
							value = 60
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = BG_commercial_havoc
							value = 100
						}
						change_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					20 = {
						set_variable = {
							which = BG_commercial_havoc
							value = 150
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = BG_commercial_havoc
							value = 200
						}
						change_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
				}
				multiply_variable = {
					which = BG_commercial_havoc
					which = BG_privilege_pain_modifier
				}
				multiply_variable = {
					which = BG_commercial_havoc
					which = estate_burghers_weight_share
				}
			}
			if = {
				limit = {
					has_country_flag = BG_hit_to_stability
				}
				random_list = {
					10 = {
						set_variable = {
							which = stability_hit
							value = 30
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 5
						}
					}
					20 = {
						set_variable = {
							which = stability_hit
							value = 50
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					40 = {
						set_variable = {
							which = stability_hit
							value = 75
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = stability_hit
							value = 100
						}
						change_variable = {
							which = ai_corruption_choice
							value = 4
						}
					}
					10 = {
						set_variable = {
							which = stability_hit
							value = 125
						}
						change_variable = {
							which = ai_corruption_choice
							value = 6
						}
					}
				}
				multiply_variable = {
					which = stability_hit
					which = BG_privilege_pain_modifier
				}
				multiply_variable = {
					which = stability_hit
					which = estate_burghers_weight_share
				}
				if = {
					limit = {
						NOT = {
							stability = 1
						}
					}
					change_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
				if = {
					limit = {
						stability = 2
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 2
					}
				}
			}
			if = {
				limit = {
					has_country_flag = BG_hit_to_dip_points
				}
				random_list = {
					10 = {
						set_variable = {
							which = diplo_cost_a
							value = 100
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_variable = {
							which = diplo_cost_a
							value = 150
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					40 = {
						set_variable = {
							which = diplo_cost_a
							value = 200
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = diplo_cost_a
							value = 250
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = diplo_cost_a
							value = 300
						}
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
				}
				multiply_variable = {
					which = diplo_cost_a
					which = BG_privilege_pain_modifier
				}
				multiply_variable = {
					which = diplo_cost_a
					which = estate_burghers_weight_share
				}
				multiply_variable = {
					which = diplo_cost_a
					value = 0.001
				}
				multiply_variable = {
					which = diplo_cost_a
					value = 1000
				}
			}
			if = {
				limit = {
					has_country_flag = BG_autonomy_demands
				}
				random_list = {
					10 = {
						set_variable = {
							which = autonomy_added
							value = 10
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_variable = {
							which = autonomy_added
							value = 15
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					40 = {
						set_variable = {
							which = autonomy_added
							value = 25
						}
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_variable = {
							which = autonomy_added
							value = 35
						}
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_variable = {
							which = autonomy_added
							value = 50
						}
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
				}
				multiply_variable = {
					which = autonomy_added
					which = BG_privilege_pain_modifier
				}
				multiply_variable = {
					which = autonomy_added
					value = 0.001
				}
				multiply_variable = {
					which = autonomy_added
					value = 1000
				}
			}
			if = {
				limit = {
					has_country_flag = BG_unrest
				}
				random_list = {
					10 = {
						set_country_flag = BG_unrest_1
						subtract_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					20 = {
						set_country_flag = BG_unrest_2
						subtract_variable = {
							which = ai_corruption_choice
							value = 0
						}
					}
					40 = {
						set_country_flag = BG_unrest_3
						change_variable = {
							which = ai_corruption_choice
							value = 1
						}
					}
					20 = {
						set_country_flag = BG_unrest_4
						change_variable = {
							which = ai_corruption_choice
							value = 2
						}
					}
					10 = {
						set_country_flag = BG_unrest_5
						change_variable = {
							which = ai_corruption_choice
							value = 3
						}
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = BG_privilege_pain_modifier
						value = 1.1
					}
				}
				set_variable = {
					which = burghers_loyalty_removed_a
					value = 5
				}
				set_variable = {
					which = ai_corruption_choice
					value = -5
				}
			}
			change_variable = {
				which = ai_corruption_choice
				value = 3
			}
			if = {
				limit = {
					check_variable = {
						which = BG_privilege_pain_modifier
						value = 0.59
					}
				}
				subtract_variable = {
					which = ai_corruption_choice
					value = 1
				}
				if = {
					limit = {
						check_variable = {
							which = BG_privilege_pain_modifier
							value = 0.66
						}
					}
					subtract_variable = {
						which = ai_corruption_choice
						value = 1
					}
					if = {
						limit = {
							check_variable = {
								which = BG_privilege_pain_modifier
								value = 0.72
							}
						}
						subtract_variable = {
							which = ai_corruption_choice
							value = 1
						}
						if = {
							limit = {
								check_variable = {
									which = BG_privilege_pain_modifier
									value = 0.82
								}
							}
							subtract_variable = {
								which = ai_corruption_choice
								value = 1
							}
							if = {
								limit = {
									check_variable = {
										which = BG_privilege_pain_modifier
										value = 0.91
									}
								}
								subtract_variable = {
									which = ai_corruption_choice
									value = 1
								}
								if = {
									limit = {
										check_variable = {
											which = BG_privilege_pain_modifier
											value = 1.01
										}
									}
									subtract_variable = {
										which = ai_corruption_choice
										value = 1
									}
								}
							}
						}
					}
				}
			}
			set_variable = {
				which = privilege_ticker
				value = 10
			}
		}
		while = {
			limit = {
				check_variable = {
					which = privilege_ticker
					value = 1
				}
			}
			subtract_variable = {
				which = privilege_ticker
				value = 1
			}
			random_list = {
				30 = {
					if = {
						limit = {
							has_country_flag = BG_authority_to_govern_locally_3
							NOT = {
								has_country_flag = BG_authority_to_govern_locally_4
							}
						}
						set_country_flag = choose_BG_authority_to_govern_locally_4
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							has_country_flag = BG_authority_to_govern_locally_2
							NOT = {
								has_country_flag = BG_authority_to_govern_locally_3
							}
						}
						set_country_flag = choose_BG_authority_to_govern_locally_3
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							has_country_flag = BG_authority_to_govern_locally_1
							NOT = {
								has_country_flag = BG_authority_to_govern_locally_2
							}
						}
						set_country_flag = choose_BG_authority_to_govern_locally_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_authority_to_govern_locally_1
							}
							NOT = {
								has_country_flag = BG_authority_to_govern_locally_2
							}
							NOT = {
								has_country_flag = BG_authority_to_govern_locally_3
							}
							NOT = {
								has_country_flag = BG_authority_to_govern_locally_4
							}
						}
						set_country_flag = choose_BG_authority_to_govern_locally_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = BG_right_of_commerce_1
							NOT = {
								has_country_flag = BG_right_of_commerce_2
							}
						}
						set_country_flag = choose_BG_right_of_commerce_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_right_of_commerce_1
							}
							NOT = {
								has_country_flag = BG_right_of_commerce_2
							}
						}
						set_country_flag = choose_BG_right_of_commerce_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = BG_resist_embargoes_1
							NOT = {
								has_country_flag = BG_resist_embargoes_2
							}
						}
						set_country_flag = choose_BG_resist_embargoes_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_resist_embargoes_1
							}
							NOT = {
								has_country_flag = BG_resist_embargoes_2
							}
						}
						set_country_flag = choose_BG_resist_embargoes_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = BG_exemption_from_military_services_1
							NOT = {
								has_country_flag = BG_exemption_from_military_services_2
							}
						}
						set_country_flag = choose_BG_exemption_from_military_services_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_exemption_from_military_services_1
							}
							NOT = {
								has_country_flag = BG_exemption_from_military_services_2
							}
						}
						set_country_flag = choose_BG_exemption_from_military_services_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = BG_expanded_ship_builders_privileges_1
							NOT = {
								has_country_flag = BG_expanded_ship_builders_privileges_2
							}
						}
						set_country_flag = choose_BG_expanded_ship_builders_privileges_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_expanded_ship_builders_privileges_1
							}
							NOT = {
								has_country_flag = BG_expanded_ship_builders_privileges_2
							}
						}
						set_country_flag = choose_BG_expanded_ship_builders_privileges_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = BG_appoint_as_court_suppliers_1
							NOT = {
								has_country_flag = BG_appoint_as_court_suppliers_2
							}
						}
						set_country_flag = choose_BG_appoint_as_court_suppliers_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_appoint_as_court_suppliers_1
							}
							NOT = {
								has_country_flag = BG_appoint_as_court_suppliers_2
							}
						}
						set_country_flag = choose_BG_appoint_as_court_suppliers_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = BG_monopoly_on_armaments_1
							NOT = {
								has_country_flag = BG_monopoly_on_armaments_2
							}
						}
						set_country_flag = choose_BG_monopoly_on_armaments_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_monopoly_on_armaments_1
							}
							NOT = {
								has_country_flag = BG_monopoly_on_armaments_2
							}
						}
						set_country_flag = choose_BG_monopoly_on_armaments_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = BG_tolerate_smuggling_1
							NOT = {
								has_country_flag = BG_tolerate_smuggling_2
							}
						}
						set_country_flag = choose_BG_tolerate_smuggling_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_tolerate_smuggling_1
							}
							NOT = {
								has_country_flag = BG_tolerate_smuggling_2
							}
						}
						set_country_flag = choose_BG_tolerate_smuggling_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							has_country_flag = BG_honorary_noble_titles_1
							NOT = {
								has_country_flag = BG_honorary_noble_titles_2
							}
						}
						set_country_flag = choose_BG_honorary_noble_titles_2
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_honorary_noble_titles_1
							}
							NOT = {
								has_country_flag = BG_honorary_noble_titles_2
							}
						}
						set_country_flag = choose_BG_honorary_noble_titles_1
						set_variable = {
							which = privilege_ticker
							value = 0
						}
					}
				}
			}
		}
	}
	option = {
		name = "POP_Estates_Events.002.a"
		ai_chance = {
			factor = 1
			modifier = {
				factor = 1000
				check_variable = {
					which = ai_corruption_choice
					value = 0
				}
			}
		}
		hidden_effect = {
			clr_country_flag = BG_hit_to_loyalty
			clr_country_flag = BG_hit_to_legitimacy
			clr_country_flag = BG_hit_to_prestige
			clr_country_flag = BG_commercial_havoc
			clr_country_flag = BG_hit_to_stability
			clr_country_flag = BG_hit_to_dip_points
			clr_country_flag = BG_autonomy_demands
			clr_country_flag = BG_unrest
			clr_country_flag = BG_unrest_1
			clr_country_flag = BG_unrest_2
			clr_country_flag = BG_unrest_3
			clr_country_flag = BG_unrest_4
			clr_country_flag = BG_unrest_5
		}
		trigger_switch = {
			on_trigger = has_country_flag
			choose_BG_authority_to_govern_locally_1 = {
				custom_tooltip = BG_authority_to_govern_locally_1_privilege
				hidden_effect = {
					set_country_flag = BG_authority_to_govern_locally_1
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						if = {
							limit = {
								has_province_modifier = BG_authority_to_govern_locally_1
							}
							extend_province_modifier = {
								name = BG_authority_to_govern_locally_1
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = BG_authority_to_govern_locally_1
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_BG_authority_to_govern_locally_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
			}
			choose_BG_authority_to_govern_locally_2 = {
				custom_tooltip = BG_authority_to_govern_locally_2_privilege
				hidden_effect = {
					clr_country_flag = BG_authority_to_govern_locally_1
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						if = {
							limit = {
								has_province_modifier = BG_authority_to_govern_locally_1
							}
							remove_province_modifier = BG_authority_to_govern_locally_1
						}
					}
				}
				hidden_effect = {
					set_country_flag = BG_authority_to_govern_locally_2
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						if = {
							limit = {
								has_province_modifier = BG_authority_to_govern_locally_2
							}
							extend_province_modifier = {
								name = BG_authority_to_govern_locally_2
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = BG_authority_to_govern_locally_2
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_BG_authority_to_govern_locally_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
			}
			choose_BG_authority_to_govern_locally_3 = {
				custom_tooltip = BG_authority_to_govern_locally_3_privilege
				hidden_effect = {
					clr_country_flag = BG_authority_to_govern_locally_2
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						if = {
							limit = {
								has_province_modifier = BG_authority_to_govern_locally_2
							}
							remove_province_modifier = BG_authority_to_govern_locally_2
						}
					}
				}
				hidden_effect = {
					set_country_flag = BG_authority_to_govern_locally_3
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						if = {
							limit = {
								has_province_modifier = BG_authority_to_govern_locally_3
							}
							extend_province_modifier = {
								name = BG_authority_to_govern_locally_3
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = BG_authority_to_govern_locally_3
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_BG_authority_to_govern_locally_3
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
			}
			choose_BG_authority_to_govern_locally_4 = {
				custom_tooltip = BG_authority_to_govern_locally_4_privilege
				hidden_effect = {
					clr_country_flag = BG_authority_to_govern_locally_3
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						if = {
							limit = {
								has_province_modifier = BG_authority_to_govern_locally_3
							}
							remove_province_modifier = BG_authority_to_govern_locally_3
						}
					}
				}
				hidden_effect = {
					set_country_flag = BG_authority_to_govern_locally_4
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						if = {
							limit = {
								has_province_modifier = BG_authority_to_govern_locally_4
							}
							extend_province_modifier = {
								name = BG_authority_to_govern_locally_4
								duration = 365
							}
						}
						else = {
							add_province_modifier = {
								name = BG_authority_to_govern_locally_4
								duration = 365
								hidden = yes
							}
						}
					}
				}
				clr_country_flag = choose_BG_authority_to_govern_locally_4
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
			}
			choose_BG_right_of_commerce_1 = {
				custom_tooltip = BG_right_of_commerce_1_privilege
				hidden_effect = {
					set_country_flag = BG_right_of_commerce_1
				}
				clr_country_flag = choose_BG_right_of_commerce_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_right_of_commerce_1_privilege_desc
			}
			choose_BG_right_of_commerce_2 = {
				custom_tooltip = BG_right_of_commerce_2_privilege
				hidden_effect = {
					clr_country_flag = BG_right_of_commerce_1
				}
				hidden_effect = {
					set_country_flag = BG_right_of_commerce_2
				}
				clr_country_flag = choose_BG_right_of_commerce_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_right_of_commerce_2_privilege_desc
			}
			choose_BG_resist_embargoes_1 = {
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_resist_embargoes_1
							}
						}
						set_country_flag = BG_resist_embargoes_1
					}
				}
				custom_tooltip = BG_resist_embargoes_1_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_resist_embargoes_1_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_resist_embargoes_1_20 = {
									remove_country_modifier = BG_resist_embargoes_1_20
								}
								BG_resist_embargoes_1_40 = {
									remove_country_modifier = BG_resist_embargoes_1_40
								}
								BG_resist_embargoes_1_60 = {
									remove_country_modifier = BG_resist_embargoes_1_60
								}
								BG_resist_embargoes_1_80 = {
									remove_country_modifier = BG_resist_embargoes_1_80
								}
								BG_resist_embargoes_1_100 = {
									remove_country_modifier = BG_resist_embargoes_1_100
								}
							}
							add_country_modifier = {
								name = BG_resist_embargoes_1_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_resist_embargoes_1_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_resist_embargoes_1_20 = {
									remove_country_modifier = BG_resist_embargoes_1_20
								}
								BG_resist_embargoes_1_40 = {
									remove_country_modifier = BG_resist_embargoes_1_40
								}
								BG_resist_embargoes_1_60 = {
									remove_country_modifier = BG_resist_embargoes_1_60
								}
								BG_resist_embargoes_1_80 = {
									remove_country_modifier = BG_resist_embargoes_1_80
								}
								BG_resist_embargoes_1_100 = {
									remove_country_modifier = BG_resist_embargoes_1_100
								}
							}
							add_country_modifier = {
								name = BG_resist_embargoes_1_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_resist_embargoes_1_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_resist_embargoes_1_20 = {
									remove_country_modifier = BG_resist_embargoes_1_20
								}
								BG_resist_embargoes_1_40 = {
									remove_country_modifier = BG_resist_embargoes_1_40
								}
								BG_resist_embargoes_1_60 = {
									remove_country_modifier = BG_resist_embargoes_1_60
								}
								BG_resist_embargoes_1_80 = {
									remove_country_modifier = BG_resist_embargoes_1_80
								}
								BG_resist_embargoes_1_100 = {
									remove_country_modifier = BG_resist_embargoes_1_100
								}
							}
							add_country_modifier = {
								name = BG_resist_embargoes_1_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_resist_embargoes_1_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_resist_embargoes_1_20 = {
									remove_country_modifier = BG_resist_embargoes_1_20
								}
								BG_resist_embargoes_1_40 = {
									remove_country_modifier = BG_resist_embargoes_1_40
								}
								BG_resist_embargoes_1_60 = {
									remove_country_modifier = BG_resist_embargoes_1_60
								}
								BG_resist_embargoes_1_80 = {
									remove_country_modifier = BG_resist_embargoes_1_80
								}
								BG_resist_embargoes_1_100 = {
									remove_country_modifier = BG_resist_embargoes_1_100
								}
							}
							add_country_modifier = {
								name = BG_resist_embargoes_1_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_resist_embargoes_1_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_resist_embargoes_1_20 = {
									remove_country_modifier = BG_resist_embargoes_1_20
								}
								BG_resist_embargoes_1_40 = {
									remove_country_modifier = BG_resist_embargoes_1_40
								}
								BG_resist_embargoes_1_60 = {
									remove_country_modifier = BG_resist_embargoes_1_60
								}
								BG_resist_embargoes_1_80 = {
									remove_country_modifier = BG_resist_embargoes_1_80
								}
								BG_resist_embargoes_1_100 = {
									remove_country_modifier = BG_resist_embargoes_1_100
								}
							}
							add_country_modifier = {
								name = BG_resist_embargoes_1_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							BG_resist_embargoes_1_20 = {
								remove_country_modifier = BG_resist_embargoes_1_20
							}
							BG_resist_embargoes_1_40 = {
								remove_country_modifier = BG_resist_embargoes_1_40
							}
							BG_resist_embargoes_1_60 = {
								remove_country_modifier = BG_resist_embargoes_1_60
							}
							BG_resist_embargoes_1_80 = {
								remove_country_modifier = BG_resist_embargoes_1_80
							}
							BG_resist_embargoes_1_100 = {
								remove_country_modifier = BG_resist_embargoes_1_100
							}
						}
					}
				}
				clr_country_flag = choose_BG_resist_embargoes_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_resist_embargoes_1_privilege_desc
			}
			choose_BG_resist_embargoes_2 = {
				hidden_effect = {
					clr_country_flag = BG_resist_embargoes_1
					trigger_switch = {
						on_trigger = has_country_modifier
						BG_resist_embargoes_1_20 = {
							remove_country_modifier = BG_resist_embargoes_1_20
						}
						BG_resist_embargoes_1_40 = {
							remove_country_modifier = BG_resist_embargoes_1_40
						}
						BG_resist_embargoes_1_60 = {
							remove_country_modifier = BG_resist_embargoes_1_60
						}
						BG_resist_embargoes_1_80 = {
							remove_country_modifier = BG_resist_embargoes_1_80
						}
						BG_resist_embargoes_1_100 = {
							remove_country_modifier = BG_resist_embargoes_1_100
						}
					}
				}
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_resist_embargoes_2
							}
						}
						set_country_flag = BG_resist_embargoes_2
					}
				}
				custom_tooltip = BG_resist_embargoes_2_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_resist_embargoes_2_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_resist_embargoes_2_20 = {
									remove_country_modifier = BG_resist_embargoes_2_20
								}
								BG_resist_embargoes_2_40 = {
									remove_country_modifier = BG_resist_embargoes_2_40
								}
								BG_resist_embargoes_2_60 = {
									remove_country_modifier = BG_resist_embargoes_2_60
								}
								BG_resist_embargoes_2_80 = {
									remove_country_modifier = BG_resist_embargoes_2_80
								}
								BG_resist_embargoes_2_100 = {
									remove_country_modifier = BG_resist_embargoes_2_100
								}
							}
							add_country_modifier = {
								name = BG_resist_embargoes_2_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_resist_embargoes_2_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_resist_embargoes_2_20 = {
									remove_country_modifier = BG_resist_embargoes_2_20
								}
								BG_resist_embargoes_2_40 = {
									remove_country_modifier = BG_resist_embargoes_2_40
								}
								BG_resist_embargoes_2_60 = {
									remove_country_modifier = BG_resist_embargoes_2_60
								}
								BG_resist_embargoes_2_80 = {
									remove_country_modifier = BG_resist_embargoes_2_80
								}
								BG_resist_embargoes_2_100 = {
									remove_country_modifier = BG_resist_embargoes_2_100
								}
							}
							add_country_modifier = {
								name = BG_resist_embargoes_2_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_resist_embargoes_2_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_resist_embargoes_2_20 = {
									remove_country_modifier = BG_resist_embargoes_2_20
								}
								BG_resist_embargoes_2_40 = {
									remove_country_modifier = BG_resist_embargoes_2_40
								}
								BG_resist_embargoes_2_60 = {
									remove_country_modifier = BG_resist_embargoes_2_60
								}
								BG_resist_embargoes_2_80 = {
									remove_country_modifier = BG_resist_embargoes_2_80
								}
								BG_resist_embargoes_2_100 = {
									remove_country_modifier = BG_resist_embargoes_2_100
								}
							}
							add_country_modifier = {
								name = BG_resist_embargoes_2_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_resist_embargoes_2_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_resist_embargoes_2_20 = {
									remove_country_modifier = BG_resist_embargoes_2_20
								}
								BG_resist_embargoes_2_40 = {
									remove_country_modifier = BG_resist_embargoes_2_40
								}
								BG_resist_embargoes_2_60 = {
									remove_country_modifier = BG_resist_embargoes_2_60
								}
								BG_resist_embargoes_2_80 = {
									remove_country_modifier = BG_resist_embargoes_2_80
								}
								BG_resist_embargoes_2_100 = {
									remove_country_modifier = BG_resist_embargoes_2_100
								}
							}
							add_country_modifier = {
								name = BG_resist_embargoes_2_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_resist_embargoes_2_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_resist_embargoes_2_20 = {
									remove_country_modifier = BG_resist_embargoes_2_20
								}
								BG_resist_embargoes_2_40 = {
									remove_country_modifier = BG_resist_embargoes_2_40
								}
								BG_resist_embargoes_2_60 = {
									remove_country_modifier = BG_resist_embargoes_2_60
								}
								BG_resist_embargoes_2_80 = {
									remove_country_modifier = BG_resist_embargoes_2_80
								}
								BG_resist_embargoes_2_100 = {
									remove_country_modifier = BG_resist_embargoes_2_100
								}
							}
							add_country_modifier = {
								name = BG_resist_embargoes_2_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							BG_resist_embargoes_2_20 = {
								remove_country_modifier = BG_resist_embargoes_2_20
							}
							BG_resist_embargoes_2_40 = {
								remove_country_modifier = BG_resist_embargoes_2_40
							}
							BG_resist_embargoes_2_60 = {
								remove_country_modifier = BG_resist_embargoes_2_60
							}
							BG_resist_embargoes_2_80 = {
								remove_country_modifier = BG_resist_embargoes_2_80
							}
							BG_resist_embargoes_2_100 = {
								remove_country_modifier = BG_resist_embargoes_2_100
							}
						}
					}
				}
				clr_country_flag = choose_BG_resist_embargoes_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_resist_embargoes_2_privilege_desc
			}
			choose_BG_exemption_from_military_services_1 = {
				custom_tooltip = BG_exemption_from_military_services_1_privilege
				hidden_effect = {
					set_country_flag = BG_exemption_from_military_services_1
				}
				clr_country_flag = choose_BG_exemption_from_military_services_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_exemption_from_military_services_1_privilege_desc
			}
			choose_BG_exemption_from_military_services_2 = {
				custom_tooltip = BG_exemption_from_military_services_2_privilege
				hidden_effect = {
					clr_country_flag = BG_exemption_from_military_services_1
				}
				hidden_effect = {
					set_country_flag = BG_exemption_from_military_services_2
				}
				clr_country_flag = choose_BG_exemption_from_military_services_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_exemption_from_military_services_2_privilege_desc
			}
			choose_BG_expanded_ship_builders_privileges_1 = {
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_expanded_ship_builders_privileges_1
							}
						}
						set_country_flag = BG_expanded_ship_builders_privileges_1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.8
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_expanded_ship_builders_privileges_1_100
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_expanded_ship_builders_privileges_1_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_expanded_ship_builders_privileges_1_20 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_20
								}
								BG_expanded_ship_builders_privileges_1_40 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_40
								}
								BG_expanded_ship_builders_privileges_1_60 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_60
								}
								BG_expanded_ship_builders_privileges_1_80 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_80
								}
								BG_expanded_ship_builders_privileges_1_100 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_100
								}
							}
							add_country_modifier = {
								name = BG_expanded_ship_builders_privileges_1_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.6
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_expanded_ship_builders_privileges_1_80
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_expanded_ship_builders_privileges_1_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_expanded_ship_builders_privileges_1_20 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_20
								}
								BG_expanded_ship_builders_privileges_1_40 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_40
								}
								BG_expanded_ship_builders_privileges_1_60 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_60
								}
								BG_expanded_ship_builders_privileges_1_80 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_80
								}
								BG_expanded_ship_builders_privileges_1_100 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_100
								}
							}
							add_country_modifier = {
								name = BG_expanded_ship_builders_privileges_1_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.4
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_expanded_ship_builders_privileges_1_60
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_expanded_ship_builders_privileges_1_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_expanded_ship_builders_privileges_1_20 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_20
								}
								BG_expanded_ship_builders_privileges_1_40 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_40
								}
								BG_expanded_ship_builders_privileges_1_60 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_60
								}
								BG_expanded_ship_builders_privileges_1_80 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_80
								}
								BG_expanded_ship_builders_privileges_1_100 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_100
								}
							}
							add_country_modifier = {
								name = BG_expanded_ship_builders_privileges_1_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.2
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_expanded_ship_builders_privileges_1_40
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_expanded_ship_builders_privileges_1_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_expanded_ship_builders_privileges_1_20 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_20
								}
								BG_expanded_ship_builders_privileges_1_40 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_40
								}
								BG_expanded_ship_builders_privileges_1_60 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_60
								}
								BG_expanded_ship_builders_privileges_1_80 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_80
								}
								BG_expanded_ship_builders_privileges_1_100 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_100
								}
							}
							add_country_modifier = {
								name = BG_expanded_ship_builders_privileges_1_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_expanded_ship_builders_privileges_1_20
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_expanded_ship_builders_privileges_1_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_expanded_ship_builders_privileges_1_20 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_20
								}
								BG_expanded_ship_builders_privileges_1_40 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_40
								}
								BG_expanded_ship_builders_privileges_1_60 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_60
								}
								BG_expanded_ship_builders_privileges_1_80 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_80
								}
								BG_expanded_ship_builders_privileges_1_100 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_1_100
								}
							}
							add_country_modifier = {
								name = BG_expanded_ship_builders_privileges_1_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							BG_expanded_ship_builders_privileges_1_20 = {
								remove_country_modifier = BG_expanded_ship_builders_privileges_1_20
							}
							BG_expanded_ship_builders_privileges_1_40 = {
								remove_country_modifier = BG_expanded_ship_builders_privileges_1_40
							}
							BG_expanded_ship_builders_privileges_1_60 = {
								remove_country_modifier = BG_expanded_ship_builders_privileges_1_60
							}
							BG_expanded_ship_builders_privileges_1_80 = {
								remove_country_modifier = BG_expanded_ship_builders_privileges_1_80
							}
							BG_expanded_ship_builders_privileges_1_100 = {
								remove_country_modifier = BG_expanded_ship_builders_privileges_1_100
							}
						}
					}
				}
				clr_country_flag = choose_BG_expanded_ship_builders_privileges_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_expanded_ship_builders_privileges_1_privilege_desc
			}
			choose_BG_expanded_ship_builders_privileges_2 = {
				clr_country_flag = BG_expanded_ship_builders_privileges_1
				trigger_switch = {
					on_trigger = has_country_modifier
					BG_expanded_ship_builders_privileges_1_20 = {
						remove_country_modifier = BG_expanded_ship_builders_privileges_1_20
					}
					BG_expanded_ship_builders_privileges_1_40 = {
						remove_country_modifier = BG_expanded_ship_builders_privileges_1_40
					}
					BG_expanded_ship_builders_privileges_1_60 = {
						remove_country_modifier = BG_expanded_ship_builders_privileges_1_60
					}
					BG_expanded_ship_builders_privileges_1_80 = {
						remove_country_modifier = BG_expanded_ship_builders_privileges_1_80
					}
					BG_expanded_ship_builders_privileges_1_100 = {
						remove_country_modifier = BG_expanded_ship_builders_privileges_1_100
					}
				}
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_expanded_ship_builders_privileges_2
							}
						}
						set_country_flag = BG_expanded_ship_builders_privileges_2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.8
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_expanded_ship_builders_privileges_2_100
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_expanded_ship_builders_privileges_2_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_expanded_ship_builders_privileges_2_20 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_20
								}
								BG_expanded_ship_builders_privileges_2_40 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_40
								}
								BG_expanded_ship_builders_privileges_2_60 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_60
								}
								BG_expanded_ship_builders_privileges_2_80 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_80
								}
								BG_expanded_ship_builders_privileges_2_100 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_100
								}
							}
							add_country_modifier = {
								name = BG_expanded_ship_builders_privileges_2_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.6
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_expanded_ship_builders_privileges_2_80
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_expanded_ship_builders_privileges_2_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_expanded_ship_builders_privileges_2_20 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_20
								}
								BG_expanded_ship_builders_privileges_2_40 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_40
								}
								BG_expanded_ship_builders_privileges_2_60 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_60
								}
								BG_expanded_ship_builders_privileges_2_80 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_80
								}
								BG_expanded_ship_builders_privileges_2_100 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_100
								}
							}
							add_country_modifier = {
								name = BG_expanded_ship_builders_privileges_2_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.4
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_expanded_ship_builders_privileges_2_60
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_expanded_ship_builders_privileges_2_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_expanded_ship_builders_privileges_2_20 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_20
								}
								BG_expanded_ship_builders_privileges_2_40 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_40
								}
								BG_expanded_ship_builders_privileges_2_60 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_60
								}
								BG_expanded_ship_builders_privileges_2_80 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_80
								}
								BG_expanded_ship_builders_privileges_2_100 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_100
								}
							}
							add_country_modifier = {
								name = BG_expanded_ship_builders_privileges_2_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.2
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_expanded_ship_builders_privileges_2_40
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_expanded_ship_builders_privileges_2_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_expanded_ship_builders_privileges_2_20 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_20
								}
								BG_expanded_ship_builders_privileges_2_40 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_40
								}
								BG_expanded_ship_builders_privileges_2_60 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_60
								}
								BG_expanded_ship_builders_privileges_2_80 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_80
								}
								BG_expanded_ship_builders_privileges_2_100 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_100
								}
							}
							add_country_modifier = {
								name = BG_expanded_ship_builders_privileges_2_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_expanded_ship_builders_privileges_2_20
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_expanded_ship_builders_privileges_2_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_expanded_ship_builders_privileges_2_20 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_20
								}
								BG_expanded_ship_builders_privileges_2_40 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_40
								}
								BG_expanded_ship_builders_privileges_2_60 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_60
								}
								BG_expanded_ship_builders_privileges_2_80 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_80
								}
								BG_expanded_ship_builders_privileges_2_100 = {
									remove_country_modifier = BG_expanded_ship_builders_privileges_2_100
								}
							}
							add_country_modifier = {
								name = BG_expanded_ship_builders_privileges_2_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							BG_expanded_ship_builders_privileges_2_20 = {
								remove_country_modifier = BG_expanded_ship_builders_privileges_2_20
							}
							BG_expanded_ship_builders_privileges_2_40 = {
								remove_country_modifier = BG_expanded_ship_builders_privileges_2_40
							}
							BG_expanded_ship_builders_privileges_2_60 = {
								remove_country_modifier = BG_expanded_ship_builders_privileges_2_60
							}
							BG_expanded_ship_builders_privileges_2_80 = {
								remove_country_modifier = BG_expanded_ship_builders_privileges_2_80
							}
							BG_expanded_ship_builders_privileges_2_100 = {
								remove_country_modifier = BG_expanded_ship_builders_privileges_2_100
							}
						}
					}
				}
				clr_country_flag = choose_BG_expanded_ship_builders_privileges_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_expanded_ship_builders_privileges_2_privilege_desc
			}
			choose_BG_appoint_as_court_suppliers_1 = {
				custom_tooltip = BG_appoint_as_court_suppliers_1_privilege
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_appoint_as_court_suppliers_1
							}
						}
						set_country_flag = BG_appoint_as_court_suppliers_1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.8
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_appoint_as_court_suppliers_1_100
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_appoint_as_court_suppliers_1_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_appoint_as_court_suppliers_1_20 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_20
								}
								BG_appoint_as_court_suppliers_1_40 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_40
								}
								BG_appoint_as_court_suppliers_1_60 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_60
								}
								BG_appoint_as_court_suppliers_1_80 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_80
								}
								BG_appoint_as_court_suppliers_1_100 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_100
								}
							}
							add_country_modifier = {
								name = BG_appoint_as_court_suppliers_1_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.6
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_appoint_as_court_suppliers_1_80
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_appoint_as_court_suppliers_1_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_appoint_as_court_suppliers_1_20 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_20
								}
								BG_appoint_as_court_suppliers_1_40 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_40
								}
								BG_appoint_as_court_suppliers_1_60 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_60
								}
								BG_appoint_as_court_suppliers_1_80 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_80
								}
								BG_appoint_as_court_suppliers_1_100 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_100
								}
							}
							add_country_modifier = {
								name = BG_appoint_as_court_suppliers_1_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.4
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_appoint_as_court_suppliers_1_60
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_appoint_as_court_suppliers_1_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_appoint_as_court_suppliers_1_20 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_20
								}
								BG_appoint_as_court_suppliers_1_40 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_40
								}
								BG_appoint_as_court_suppliers_1_60 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_60
								}
								BG_appoint_as_court_suppliers_1_80 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_80
								}
								BG_appoint_as_court_suppliers_1_100 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_100
								}
							}
							add_country_modifier = {
								name = BG_appoint_as_court_suppliers_1_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.2
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_appoint_as_court_suppliers_1_40
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_appoint_as_court_suppliers_1_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_appoint_as_court_suppliers_1_20 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_20
								}
								BG_appoint_as_court_suppliers_1_40 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_40
								}
								BG_appoint_as_court_suppliers_1_60 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_60
								}
								BG_appoint_as_court_suppliers_1_80 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_80
								}
								BG_appoint_as_court_suppliers_1_100 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_100
								}
							}
							add_country_modifier = {
								name = BG_appoint_as_court_suppliers_1_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_appoint_as_court_suppliers_1_20
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_appoint_as_court_suppliers_1_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_appoint_as_court_suppliers_1_20 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_20
								}
								BG_appoint_as_court_suppliers_1_40 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_40
								}
								BG_appoint_as_court_suppliers_1_60 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_60
								}
								BG_appoint_as_court_suppliers_1_80 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_80
								}
								BG_appoint_as_court_suppliers_1_100 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_1_100
								}
							}
							add_country_modifier = {
								name = BG_appoint_as_court_suppliers_1_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							BG_appoint_as_court_suppliers_1_20 = {
								remove_country_modifier = BG_appoint_as_court_suppliers_1_20
							}
							BG_appoint_as_court_suppliers_1_40 = {
								remove_country_modifier = BG_appoint_as_court_suppliers_1_40
							}
							BG_appoint_as_court_suppliers_1_60 = {
								remove_country_modifier = BG_appoint_as_court_suppliers_1_60
							}
							BG_appoint_as_court_suppliers_1_80 = {
								remove_country_modifier = BG_appoint_as_court_suppliers_1_80
							}
							BG_appoint_as_court_suppliers_1_100 = {
								remove_country_modifier = BG_appoint_as_court_suppliers_1_100
							}
						}
					}
				}
				clr_country_flag = choose_BG_appoint_as_court_suppliers_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_appoint_as_court_suppliers_1_privilege_desc
			}
			choose_BG_appoint_as_court_suppliers_2 = {
				custom_tooltip = BG_appoint_as_court_suppliers_2_privilege
				clr_country_flag = BG_appoint_as_court_suppliers_1
				trigger_switch = {
					on_trigger = has_country_modifier
					BG_appoint_as_court_suppliers_1_20 = {
						remove_country_modifier = BG_appoint_as_court_suppliers_1_20
					}
					BG_appoint_as_court_suppliers_1_40 = {
						remove_country_modifier = BG_appoint_as_court_suppliers_1_40
					}
					BG_appoint_as_court_suppliers_1_60 = {
						remove_country_modifier = BG_appoint_as_court_suppliers_1_60
					}
					BG_appoint_as_court_suppliers_1_80 = {
						remove_country_modifier = BG_appoint_as_court_suppliers_1_80
					}
					BG_appoint_as_court_suppliers_1_100 = {
						remove_country_modifier = BG_appoint_as_court_suppliers_1_100
					}
				}
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_appoint_as_court_suppliers_2
							}
						}
						set_country_flag = BG_appoint_as_court_suppliers_2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.8
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_appoint_as_court_suppliers_2_100
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_appoint_as_court_suppliers_2_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_appoint_as_court_suppliers_2_20 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_20
								}
								BG_appoint_as_court_suppliers_2_40 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_40
								}
								BG_appoint_as_court_suppliers_2_60 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_60
								}
								BG_appoint_as_court_suppliers_2_80 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_80
								}
								BG_appoint_as_court_suppliers_2_100 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_100
								}
							}
							add_country_modifier = {
								name = BG_appoint_as_court_suppliers_2_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.6
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_appoint_as_court_suppliers_2_80
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_appoint_as_court_suppliers_2_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_appoint_as_court_suppliers_2_20 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_20
								}
								BG_appoint_as_court_suppliers_2_40 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_40
								}
								BG_appoint_as_court_suppliers_2_60 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_60
								}
								BG_appoint_as_court_suppliers_2_80 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_80
								}
								BG_appoint_as_court_suppliers_2_100 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_100
								}
							}
							add_country_modifier = {
								name = BG_appoint_as_court_suppliers_2_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.4
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_appoint_as_court_suppliers_2_60
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_appoint_as_court_suppliers_2_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_appoint_as_court_suppliers_2_20 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_20
								}
								BG_appoint_as_court_suppliers_2_40 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_40
								}
								BG_appoint_as_court_suppliers_2_60 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_60
								}
								BG_appoint_as_court_suppliers_2_80 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_80
								}
								BG_appoint_as_court_suppliers_2_100 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_100
								}
							}
							add_country_modifier = {
								name = BG_appoint_as_court_suppliers_2_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.2
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_appoint_as_court_suppliers_2_40
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_appoint_as_court_suppliers_2_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_appoint_as_court_suppliers_2_20 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_20
								}
								BG_appoint_as_court_suppliers_2_40 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_40
								}
								BG_appoint_as_court_suppliers_2_60 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_60
								}
								BG_appoint_as_court_suppliers_2_80 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_80
								}
								BG_appoint_as_court_suppliers_2_100 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_100
								}
							}
							add_country_modifier = {
								name = BG_appoint_as_court_suppliers_2_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_appoint_as_court_suppliers_2_20
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_appoint_as_court_suppliers_2_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_appoint_as_court_suppliers_2_20 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_20
								}
								BG_appoint_as_court_suppliers_2_40 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_40
								}
								BG_appoint_as_court_suppliers_2_60 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_60
								}
								BG_appoint_as_court_suppliers_2_80 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_80
								}
								BG_appoint_as_court_suppliers_2_100 = {
									remove_country_modifier = BG_appoint_as_court_suppliers_2_100
								}
							}
							add_country_modifier = {
								name = BG_appoint_as_court_suppliers_2_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							BG_appoint_as_court_suppliers_2_20 = {
								remove_country_modifier = BG_appoint_as_court_suppliers_2_20
							}
							BG_appoint_as_court_suppliers_2_40 = {
								remove_country_modifier = BG_appoint_as_court_suppliers_2_40
							}
							BG_appoint_as_court_suppliers_2_60 = {
								remove_country_modifier = BG_appoint_as_court_suppliers_2_60
							}
							BG_appoint_as_court_suppliers_2_80 = {
								remove_country_modifier = BG_appoint_as_court_suppliers_2_80
							}
							BG_appoint_as_court_suppliers_2_100 = {
								remove_country_modifier = BG_appoint_as_court_suppliers_2_100
							}
						}
					}
				}
				clr_country_flag = choose_BG_appoint_as_court_suppliers_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_appoint_as_court_suppliers_2_privilege_desc
			}
			choose_BG_monopoly_on_armaments_1 = {
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_monopoly_on_armaments_1
							}
						}
						set_country_flag = BG_monopoly_on_armaments_1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.8
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_monopoly_on_armaments_1_100
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_monopoly_on_armaments_1_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_monopoly_on_armaments_1_20 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_20
								}
								BG_monopoly_on_armaments_1_40 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_40
								}
								BG_monopoly_on_armaments_1_60 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_60
								}
								BG_monopoly_on_armaments_1_80 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_80
								}
								BG_monopoly_on_armaments_1_100 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_100
								}
							}
							add_country_modifier = {
								name = BG_monopoly_on_armaments_1_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.6
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_monopoly_on_armaments_1_80
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_monopoly_on_armaments_1_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_monopoly_on_armaments_1_20 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_20
								}
								BG_monopoly_on_armaments_1_40 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_40
								}
								BG_monopoly_on_armaments_1_60 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_60
								}
								BG_monopoly_on_armaments_1_80 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_80
								}
								BG_monopoly_on_armaments_1_100 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_100
								}
							}
							add_country_modifier = {
								name = BG_monopoly_on_armaments_1_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.4
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_monopoly_on_armaments_1_60
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_monopoly_on_armaments_1_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_monopoly_on_armaments_1_20 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_20
								}
								BG_monopoly_on_armaments_1_40 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_40
								}
								BG_monopoly_on_armaments_1_60 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_60
								}
								BG_monopoly_on_armaments_1_80 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_80
								}
								BG_monopoly_on_armaments_1_100 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_100
								}
							}
							add_country_modifier = {
								name = BG_monopoly_on_armaments_1_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.2
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_monopoly_on_armaments_1_40
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_monopoly_on_armaments_1_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_monopoly_on_armaments_1_20 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_20
								}
								BG_monopoly_on_armaments_1_40 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_40
								}
								BG_monopoly_on_armaments_1_60 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_60
								}
								BG_monopoly_on_armaments_1_80 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_80
								}
								BG_monopoly_on_armaments_1_100 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_100
								}
							}
							add_country_modifier = {
								name = BG_monopoly_on_armaments_1_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_monopoly_on_armaments_1_20
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_monopoly_on_armaments_1_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_monopoly_on_armaments_1_20 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_20
								}
								BG_monopoly_on_armaments_1_40 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_40
								}
								BG_monopoly_on_armaments_1_60 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_60
								}
								BG_monopoly_on_armaments_1_80 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_80
								}
								BG_monopoly_on_armaments_1_100 = {
									remove_country_modifier = BG_monopoly_on_armaments_1_100
								}
							}
							add_country_modifier = {
								name = BG_monopoly_on_armaments_1_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							BG_monopoly_on_armaments_1_20 = {
								remove_country_modifier = BG_monopoly_on_armaments_1_20
							}
							BG_monopoly_on_armaments_1_40 = {
								remove_country_modifier = BG_monopoly_on_armaments_1_40
							}
							BG_monopoly_on_armaments_1_60 = {
								remove_country_modifier = BG_monopoly_on_armaments_1_60
							}
							BG_monopoly_on_armaments_1_80 = {
								remove_country_modifier = BG_monopoly_on_armaments_1_80
							}
							BG_monopoly_on_armaments_1_100 = {
								remove_country_modifier = BG_monopoly_on_armaments_1_100
							}
						}
					}
				}
				clr_country_flag = choose_BG_monopoly_on_armaments_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_monopoly_on_armaments_1_privilege_desc
			}
			choose_BG_monopoly_on_armaments_2 = {
				hidden_effect = {
					clr_country_flag = BG_monopoly_on_armaments_1
				}
				trigger_switch = {
					on_trigger = has_country_modifier
					BG_monopoly_on_armaments_1_20 = {
						remove_country_modifier = BG_monopoly_on_armaments_1_20
					}
					BG_monopoly_on_armaments_1_40 = {
						remove_country_modifier = BG_monopoly_on_armaments_1_40
					}
					BG_monopoly_on_armaments_1_60 = {
						remove_country_modifier = BG_monopoly_on_armaments_1_60
					}
					BG_monopoly_on_armaments_1_80 = {
						remove_country_modifier = BG_monopoly_on_armaments_1_80
					}
					BG_monopoly_on_armaments_1_100 = {
						remove_country_modifier = BG_monopoly_on_armaments_1_100
					}
				}
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_monopoly_on_armaments_2
							}
						}
						set_country_flag = BG_monopoly_on_armaments_2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.8
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_monopoly_on_armaments_2_100
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_monopoly_on_armaments_2_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_monopoly_on_armaments_2_20 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_20
								}
								BG_monopoly_on_armaments_2_40 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_40
								}
								BG_monopoly_on_armaments_2_60 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_60
								}
								BG_monopoly_on_armaments_2_80 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_80
								}
								BG_monopoly_on_armaments_2_100 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_100
								}
							}
							add_country_modifier = {
								name = BG_monopoly_on_armaments_2_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.6
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_monopoly_on_armaments_2_80
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_monopoly_on_armaments_2_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_monopoly_on_armaments_2_20 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_20
								}
								BG_monopoly_on_armaments_2_40 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_40
								}
								BG_monopoly_on_armaments_2_60 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_60
								}
								BG_monopoly_on_armaments_2_80 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_80
								}
								BG_monopoly_on_armaments_2_100 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_100
								}
							}
							add_country_modifier = {
								name = BG_monopoly_on_armaments_2_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.4
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_monopoly_on_armaments_2_60
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_monopoly_on_armaments_2_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_monopoly_on_armaments_2_20 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_20
								}
								BG_monopoly_on_armaments_2_40 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_40
								}
								BG_monopoly_on_armaments_2_60 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_60
								}
								BG_monopoly_on_armaments_2_80 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_80
								}
								BG_monopoly_on_armaments_2_100 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_100
								}
							}
							add_country_modifier = {
								name = BG_monopoly_on_armaments_2_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.2
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_monopoly_on_armaments_2_40
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_monopoly_on_armaments_2_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_monopoly_on_armaments_2_20 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_20
								}
								BG_monopoly_on_armaments_2_40 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_40
								}
								BG_monopoly_on_armaments_2_60 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_60
								}
								BG_monopoly_on_armaments_2_80 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_80
								}
								BG_monopoly_on_armaments_2_100 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_100
								}
							}
							add_country_modifier = {
								name = BG_monopoly_on_armaments_2_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					tooltip = {
						add_country_modifier = {
							name = BG_monopoly_on_armaments_2_20
							duration = -1
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_monopoly_on_armaments_2_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_monopoly_on_armaments_2_20 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_20
								}
								BG_monopoly_on_armaments_2_40 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_40
								}
								BG_monopoly_on_armaments_2_60 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_60
								}
								BG_monopoly_on_armaments_2_80 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_80
								}
								BG_monopoly_on_armaments_2_100 = {
									remove_country_modifier = BG_monopoly_on_armaments_2_100
								}
							}
							add_country_modifier = {
								name = BG_monopoly_on_armaments_2_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							BG_monopoly_on_armaments_2_20 = {
								remove_country_modifier = BG_monopoly_on_armaments_2_20
							}
							BG_monopoly_on_armaments_2_40 = {
								remove_country_modifier = BG_monopoly_on_armaments_2_40
							}
							BG_monopoly_on_armaments_2_60 = {
								remove_country_modifier = BG_monopoly_on_armaments_2_60
							}
							BG_monopoly_on_armaments_2_80 = {
								remove_country_modifier = BG_monopoly_on_armaments_2_80
							}
							BG_monopoly_on_armaments_2_100 = {
								remove_country_modifier = BG_monopoly_on_armaments_2_100
							}
						}
					}
				}
				clr_country_flag = choose_BG_monopoly_on_armaments_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_monopoly_on_armaments_2_privilege_desc
			}
			choose_BG_tolerate_smuggling_1 = {
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_tolerate_smuggling_1
							}
						}
						set_country_flag = BG_tolerate_smuggling_1
					}
				}
				custom_tooltip = BG_tolerate_smuggling_1_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_tolerate_smuggling_1_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_tolerate_smuggling_1_20 = {
									remove_country_modifier = BG_tolerate_smuggling_1_20
								}
								BG_tolerate_smuggling_1_40 = {
									remove_country_modifier = BG_tolerate_smuggling_1_40
								}
								BG_tolerate_smuggling_1_60 = {
									remove_country_modifier = BG_tolerate_smuggling_1_60
								}
								BG_tolerate_smuggling_1_80 = {
									remove_country_modifier = BG_tolerate_smuggling_1_80
								}
								BG_tolerate_smuggling_1_100 = {
									remove_country_modifier = BG_tolerate_smuggling_1_100
								}
							}
							add_country_modifier = {
								name = BG_tolerate_smuggling_1_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_tolerate_smuggling_1_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_tolerate_smuggling_1_20 = {
									remove_country_modifier = BG_tolerate_smuggling_1_20
								}
								BG_tolerate_smuggling_1_40 = {
									remove_country_modifier = BG_tolerate_smuggling_1_40
								}
								BG_tolerate_smuggling_1_60 = {
									remove_country_modifier = BG_tolerate_smuggling_1_60
								}
								BG_tolerate_smuggling_1_80 = {
									remove_country_modifier = BG_tolerate_smuggling_1_80
								}
								BG_tolerate_smuggling_1_100 = {
									remove_country_modifier = BG_tolerate_smuggling_1_100
								}
							}
							add_country_modifier = {
								name = BG_tolerate_smuggling_1_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_tolerate_smuggling_1_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_tolerate_smuggling_1_20 = {
									remove_country_modifier = BG_tolerate_smuggling_1_20
								}
								BG_tolerate_smuggling_1_40 = {
									remove_country_modifier = BG_tolerate_smuggling_1_40
								}
								BG_tolerate_smuggling_1_60 = {
									remove_country_modifier = BG_tolerate_smuggling_1_60
								}
								BG_tolerate_smuggling_1_80 = {
									remove_country_modifier = BG_tolerate_smuggling_1_80
								}
								BG_tolerate_smuggling_1_100 = {
									remove_country_modifier = BG_tolerate_smuggling_1_100
								}
							}
							add_country_modifier = {
								name = BG_tolerate_smuggling_1_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_tolerate_smuggling_1_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_tolerate_smuggling_1_20 = {
									remove_country_modifier = BG_tolerate_smuggling_1_20
								}
								BG_tolerate_smuggling_1_40 = {
									remove_country_modifier = BG_tolerate_smuggling_1_40
								}
								BG_tolerate_smuggling_1_60 = {
									remove_country_modifier = BG_tolerate_smuggling_1_60
								}
								BG_tolerate_smuggling_1_80 = {
									remove_country_modifier = BG_tolerate_smuggling_1_80
								}
								BG_tolerate_smuggling_1_100 = {
									remove_country_modifier = BG_tolerate_smuggling_1_100
								}
							}
							add_country_modifier = {
								name = BG_tolerate_smuggling_1_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_tolerate_smuggling_1_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_tolerate_smuggling_1_20 = {
									remove_country_modifier = BG_tolerate_smuggling_1_20
								}
								BG_tolerate_smuggling_1_40 = {
									remove_country_modifier = BG_tolerate_smuggling_1_40
								}
								BG_tolerate_smuggling_1_60 = {
									remove_country_modifier = BG_tolerate_smuggling_1_60
								}
								BG_tolerate_smuggling_1_80 = {
									remove_country_modifier = BG_tolerate_smuggling_1_80
								}
								BG_tolerate_smuggling_1_100 = {
									remove_country_modifier = BG_tolerate_smuggling_1_100
								}
							}
							add_country_modifier = {
								name = BG_tolerate_smuggling_1_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							BG_tolerate_smuggling_1_20 = {
								remove_country_modifier = BG_tolerate_smuggling_1_20
							}
							BG_tolerate_smuggling_1_40 = {
								remove_country_modifier = BG_tolerate_smuggling_1_40
							}
							BG_tolerate_smuggling_1_60 = {
								remove_country_modifier = BG_tolerate_smuggling_1_60
							}
							BG_tolerate_smuggling_1_80 = {
								remove_country_modifier = BG_tolerate_smuggling_1_80
							}
							BG_tolerate_smuggling_1_100 = {
								remove_country_modifier = BG_tolerate_smuggling_1_100
							}
						}
					}
				}
				clr_country_flag = choose_BG_tolerate_smuggling_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_tolerate_smuggling_1_privilege_desc
			}
			choose_BG_tolerate_smuggling_2 = {
				clr_country_flag = BG_tolerate_smuggling_1
				trigger_switch = {
					on_trigger = has_country_modifier
					BG_tolerate_smuggling_1_20 = {
						remove_country_modifier = BG_tolerate_smuggling_1_20
					}
					BG_tolerate_smuggling_1_40 = {
						remove_country_modifier = BG_tolerate_smuggling_1_40
					}
					BG_tolerate_smuggling_1_60 = {
						remove_country_modifier = BG_tolerate_smuggling_1_60
					}
					BG_tolerate_smuggling_1_80 = {
						remove_country_modifier = BG_tolerate_smuggling_1_80
					}
					BG_tolerate_smuggling_1_100 = {
						remove_country_modifier = BG_tolerate_smuggling_1_100
					}
				}
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								has_country_flag = BG_tolerate_smuggling_2
							}
						}
						set_country_flag = BG_tolerate_smuggling_2
					}
				}
				custom_tooltip = BG_tolerate_smuggling_2_privilege
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.8
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_tolerate_smuggling_2_100
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_tolerate_smuggling_2_20 = {
									remove_country_modifier = BG_tolerate_smuggling_2_20
								}
								BG_tolerate_smuggling_2_40 = {
									remove_country_modifier = BG_tolerate_smuggling_2_40
								}
								BG_tolerate_smuggling_2_60 = {
									remove_country_modifier = BG_tolerate_smuggling_2_60
								}
								BG_tolerate_smuggling_2_80 = {
									remove_country_modifier = BG_tolerate_smuggling_2_80
								}
								BG_tolerate_smuggling_2_100 = {
									remove_country_modifier = BG_tolerate_smuggling_2_100
								}
							}
							add_country_modifier = {
								name = BG_tolerate_smuggling_2_100
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.6
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_tolerate_smuggling_2_80
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_tolerate_smuggling_2_20 = {
									remove_country_modifier = BG_tolerate_smuggling_2_20
								}
								BG_tolerate_smuggling_2_40 = {
									remove_country_modifier = BG_tolerate_smuggling_2_40
								}
								BG_tolerate_smuggling_2_60 = {
									remove_country_modifier = BG_tolerate_smuggling_2_60
								}
								BG_tolerate_smuggling_2_80 = {
									remove_country_modifier = BG_tolerate_smuggling_2_80
								}
								BG_tolerate_smuggling_2_100 = {
									remove_country_modifier = BG_tolerate_smuggling_2_100
								}
							}
							add_country_modifier = {
								name = BG_tolerate_smuggling_2_80
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.4
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_tolerate_smuggling_2_60
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_tolerate_smuggling_2_20 = {
									remove_country_modifier = BG_tolerate_smuggling_2_20
								}
								BG_tolerate_smuggling_2_40 = {
									remove_country_modifier = BG_tolerate_smuggling_2_40
								}
								BG_tolerate_smuggling_2_60 = {
									remove_country_modifier = BG_tolerate_smuggling_2_60
								}
								BG_tolerate_smuggling_2_80 = {
									remove_country_modifier = BG_tolerate_smuggling_2_80
								}
								BG_tolerate_smuggling_2_100 = {
									remove_country_modifier = BG_tolerate_smuggling_2_100
								}
							}
							add_country_modifier = {
								name = BG_tolerate_smuggling_2_60
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.2
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_tolerate_smuggling_2_40
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_tolerate_smuggling_2_20 = {
									remove_country_modifier = BG_tolerate_smuggling_2_20
								}
								BG_tolerate_smuggling_2_40 = {
									remove_country_modifier = BG_tolerate_smuggling_2_40
								}
								BG_tolerate_smuggling_2_60 = {
									remove_country_modifier = BG_tolerate_smuggling_2_60
								}
								BG_tolerate_smuggling_2_80 = {
									remove_country_modifier = BG_tolerate_smuggling_2_80
								}
								BG_tolerate_smuggling_2_100 = {
									remove_country_modifier = BG_tolerate_smuggling_2_100
								}
							}
							add_country_modifier = {
								name = BG_tolerate_smuggling_2_40
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NOT = {
									has_country_modifier = BG_tolerate_smuggling_2_20
								}
							}
							trigger_switch = {
								on_trigger = has_country_modifier
								BG_tolerate_smuggling_2_20 = {
									remove_country_modifier = BG_tolerate_smuggling_2_20
								}
								BG_tolerate_smuggling_2_40 = {
									remove_country_modifier = BG_tolerate_smuggling_2_40
								}
								BG_tolerate_smuggling_2_60 = {
									remove_country_modifier = BG_tolerate_smuggling_2_60
								}
								BG_tolerate_smuggling_2_80 = {
									remove_country_modifier = BG_tolerate_smuggling_2_80
								}
								BG_tolerate_smuggling_2_100 = {
									remove_country_modifier = BG_tolerate_smuggling_2_100
								}
							}
							add_country_modifier = {
								name = BG_tolerate_smuggling_2_20
								duration = -1
								hidden = yes
							}
						}
					}
				}
				else = {
					hidden_effect = {
						trigger_switch = {
							on_trigger = has_country_modifier
							BG_tolerate_smuggling_2_20 = {
								remove_country_modifier = BG_tolerate_smuggling_2_20
							}
							BG_tolerate_smuggling_2_40 = {
								remove_country_modifier = BG_tolerate_smuggling_2_40
							}
							BG_tolerate_smuggling_2_60 = {
								remove_country_modifier = BG_tolerate_smuggling_2_60
							}
							BG_tolerate_smuggling_2_80 = {
								remove_country_modifier = BG_tolerate_smuggling_2_80
							}
							BG_tolerate_smuggling_2_100 = {
								remove_country_modifier = BG_tolerate_smuggling_2_100
							}
						}
					}
				}
				clr_country_flag = choose_BG_tolerate_smuggling_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_tolerate_smuggling_2_privilege_desc
			}
			choose_BG_honorary_noble_titles_1 = {
				custom_tooltip = BG_honorary_noble_titles_1_privilege
				hidden_effect = {
					set_country_flag = BG_honorary_noble_titles_1
				}
				clr_country_flag = choose_BG_honorary_noble_titles_1
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_honorary_noble_titles_1_privilege_desc
			}
			choose_BG_honorary_noble_titles_2 = {
				custom_tooltip = BG_honorary_noble_titles_2_privilege
				hidden_effect = {
					clr_country_flag = BG_honorary_noble_titles_1
				}
				hidden_effect = {
					set_country_flag = BG_honorary_noble_titles_2
				}
				clr_country_flag = choose_BG_honorary_noble_titles_2
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1a
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						NOT = {
							check_variable = {
								which = BG_corruption_current
								value = 0.01
							}
						}
					}
					custom_tooltip = burghers_corruption_added_1b
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = BG_corruption_cost_1
								value = 0.01
							}
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1c
				}
				if = {
					limit = {
						check_variable = {
							which = BG_corruption_cost_1
							value = 0.01
						}
						check_variable = {
							which = BG_corruption_current
							value = 0.01
						}
					}
					custom_tooltip = burghers_corruption_added_1d
				}
				custom_tooltip = BG_honorary_noble_titles_2_privilege_desc
			}
		}
		hidden_effect = {
			add_country_modifier = {
				name = burghers_offered_privilege
				duration = 1065
				hidden = yes
			}
			clr_country_flag = freeze_all_privileges
			clr_country_flag = BG_unrest
		}
	}
	option = {
		name = "POP_Estates_Events.002.b"
		ai_chance = {
			factor = 10
		}
		trigger = {
			stability = 0
			is_bankrupt = no
		}
		if = {
			limit = {
				has_country_flag = BG_hit_to_loyalty
			}
			custom_tooltip = estate_burghers_loyalty_removed_a
			hidden_effect = {
				clr_country_flag = BG_hit_to_loyalty
				set_variable = {
					which = burghers_loyalty_removed
					value = 0
				}
				set_variable = {
					which = burghers_loyalty_removed
					which = burghers_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -64
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -32
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -16
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -8
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -4
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -2
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -1
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_burghers_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_burghers_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_burghers_loyalty
						}
						set_variable = {
							which = estate_burghers_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = BG_hit_to_legitimacy
			}
			hidden_effect = {
				clr_country_flag = BG_hit_to_legitimacy
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 3
						}
					}
				}
				add_legitimacy = -2
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 3
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 5
						}
					}
				}
				add_legitimacy = -5
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 5
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 10
						}
					}
				}
				add_legitimacy = -10
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 10
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 15
						}
					}
				}
				add_legitimacy = -15
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 15
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 20
						}
					}
				}
				add_legitimacy = -20
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 20
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 25
						}
					}
				}
				add_legitimacy = -25
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 25
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 30
						}
					}
				}
				add_legitimacy = -30
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 30
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 35
						}
					}
				}
				add_legitimacy = -35
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 35
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 40
						}
					}
				}
				add_legitimacy = -40
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 40
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 45
						}
					}
				}
				add_legitimacy = -45
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_legitimacy
						value = 45
					}
					NOT = {
						check_variable = {
							which = hit_to_legitimacy
							value = 50
						}
					}
				}
				add_legitimacy = -50
			}
		}
		if = {
			limit = {
				has_country_flag = BG_hit_to_prestige
			}
			hidden_effect = {
				clr_country_flag = BG_hit_to_prestige
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 3
						}
					}
				}
				add_prestige = -2
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 3
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 5
						}
					}
				}
				add_prestige = -5
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 5
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 10
						}
					}
				}
				add_prestige = -10
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 10
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 15
						}
					}
				}
				add_prestige = -15
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 15
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 20
						}
					}
				}
				add_prestige = -20
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 20
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 25
						}
					}
				}
				add_prestige = -25
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 25
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 30
						}
					}
				}
				add_prestige = -30
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 30
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 35
						}
					}
				}
				add_prestige = -35
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 35
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 40
						}
					}
				}
				add_prestige = -40
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 40
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 45
						}
					}
				}
				add_prestige = -45
			}
			if = {
				limit = {
					check_variable = {
						which = hit_to_prestige
						value = 45
					}
					NOT = {
						check_variable = {
							which = hit_to_prestige
							value = 50
						}
					}
				}
				add_prestige = -50
			}
		}
		if = {
			limit = {
				has_country_flag = BG_hit_to_stability
			}
			hidden_effect = {
				clr_country_flag = BG_hit_to_stability
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 10
						}
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 10
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 20
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 20
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 30
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 30
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 40
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 40
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 50
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 50
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 60
						}
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 60
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 70
						}
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 70
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 80
						}
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 50
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 80
					}
					NOT = {
						check_variable = {
							which = stability_hit
							value = 90
						}
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = stability_hit
						value = 90
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 75
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
				random = {
					chance = 25
					add_stability = -1
					hidden_effect = {
						country_event = {
							id = POP_Stability.003
						}
					}
					if = {
						limit = {
							is_emperor_of_china = yes
						}
						add_mandate = -5
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = BG_hit_to_dip_points
			}
			custom_tooltip = diplo_cost_a
			hidden_effect = {
				clr_country_flag = BG_hit_to_dip_points
				set_variable = {
					which = diplo_cost
					value = 0
				}
				set_variable = {
					which = diplo_cost
					which = diplo_cost_a
				}
				while = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 1024
						}
					}
					add_dip_power = -1024
					subtract_variable = {
						which = diplo_cost
						value = 1024
					}
				}
				if = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 512
						}
					}
					add_dip_power = -512
					subtract_variable = {
						which = diplo_cost
						value = 512
					}
				}
				if = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 256
						}
					}
					add_dip_power = -256
					subtract_variable = {
						which = diplo_cost
						value = 256
					}
				}
				if = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 128
						}
					}
					add_dip_power = -128
					subtract_variable = {
						which = diplo_cost
						value = 128
					}
				}
				if = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 64
						}
					}
					add_dip_power = -64
					subtract_variable = {
						which = diplo_cost
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 32
						}
					}
					add_dip_power = -32
					subtract_variable = {
						which = diplo_cost
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 16
						}
					}
					add_dip_power = -16
					subtract_variable = {
						which = diplo_cost
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 8
						}
					}
					add_dip_power = -8
					subtract_variable = {
						which = diplo_cost
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 4
						}
					}
					add_dip_power = -4
					subtract_variable = {
						which = diplo_cost
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 2
						}
					}
					add_dip_power = -2
					subtract_variable = {
						which = diplo_cost
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = diplo_cost
							value = 1
						}
					}
					add_dip_power = -1
					subtract_variable = {
						which = diplo_cost
						value = 1
					}
				}
				set_variable = {
					which = diplo_cost
					value = 0
				}
			}
		}
		if = {
			limit = {
				has_country_flag = BG_autonomy_demands
			}
			custom_tooltip = BG_autonomy_added
			hidden_effect = {
				clr_country_flag = BG_hit_to_adm_points
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					set_variable = {
						which = autonomy_added
						value = 0
					}
					set_variable = {
						which = autonomy_added
						which = PREV
					}
					while = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 32
							}
						}
						add_local_autonomy = 32
						subtract_variable = {
							which = autonomy_added
							value = 32
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 16
							}
						}
						add_local_autonomy = 16
						subtract_variable = {
							which = autonomy_added
							value = 16
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 8
							}
						}
						add_local_autonomy = 8
						subtract_variable = {
							which = autonomy_added
							value = 8
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 4
							}
						}
						add_local_autonomy = 4
						subtract_variable = {
							which = autonomy_added
							value = 4
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 2
							}
						}
						add_local_autonomy = 2
						subtract_variable = {
							which = autonomy_added
							value = 2
						}
					}
					if = {
						limit = {
							check_variable = {
								which = autonomy_added
								value = 1
							}
						}
						add_local_autonomy = 1
						subtract_variable = {
							which = autonomy_added
							value = 1
						}
					}
					set_variable = {
						which = autonomy_added
						value = 0
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = BG_commercial_havoc
			}
			hidden_effect = {
				clr_country_flag = BG_commercial_havoc
			}
			if = {
				limit = {
					check_variable = {
						which = BG_commercial_havoc
						value = 0.01
					}
					NOT = {
						check_variable = {
							which = BG_commercial_havoc
							value = 10
						}
					}
				}
				add_country_modifier = {
					name = BG_commercial_havoc_1
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = BG_commercial_havoc
						value = 10
					}
					NOT = {
						check_variable = {
							which = BG_commercial_havoc
							value = 20
						}
					}
				}
				add_country_modifier = {
					name = BG_commercial_havoc_2
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = BG_commercial_havoc
						value = 20
					}
					NOT = {
						check_variable = {
							which = BG_commercial_havoc
							value = 30
						}
					}
				}
				add_country_modifier = {
					name = BG_commercial_havoc_3
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = BG_commercial_havoc
						value = 30
					}
					NOT = {
						check_variable = {
							which = BG_commercial_havoc
							value = 40
						}
					}
				}
				add_country_modifier = {
					name = BG_commercial_havoc_4
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = BG_commercial_havoc
						value = 40
					}
					NOT = {
						check_variable = {
							which = BG_commercial_havoc
							value = 50
						}
					}
				}
				add_country_modifier = {
					name = BG_commercial_havoc_5
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = BG_commercial_havoc
						value = 50
					}
					NOT = {
						check_variable = {
							which = BG_commercial_havoc
							value = 60
						}
					}
				}
				add_country_modifier = {
					name = BG_commercial_havoc_6
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = BG_commercial_havoc
						value = 60
					}
					NOT = {
						check_variable = {
							which = BG_commercial_havoc
							value = 70
						}
					}
				}
				add_country_modifier = {
					name = BG_commercial_havoc_7
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = BG_commercial_havoc
						value = 70
					}
					NOT = {
						check_variable = {
							which = BG_commercial_havoc
							value = 80
						}
					}
				}
				add_country_modifier = {
					name = BG_commercial_havoc_8
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = BG_commercial_havoc
						value = 80
					}
					NOT = {
						check_variable = {
							which = BG_commercial_havoc
							value = 90
						}
					}
				}
				add_country_modifier = {
					name = BG_commercial_havoc_9
					duration = 3650
				}
			}
			if = {
				limit = {
					check_variable = {
						which = BG_commercial_havoc
						value = 90
					}
				}
				add_country_modifier = {
					name = BG_commercial_havoc_10
					duration = 3650
				}
			}
		}
		if = {
			limit = {
				has_country_flag = BG_unrest
			}
			if = {
				limit = {
					has_country_flag = BG_unrest_1
				}
				custom_tooltip = BG_unrest_1
				hidden_effect = {
					clr_country_flag = BG_unrest_1
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						random = {
							chance = 15
							add_province_modifier = {
								name = BG_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = BG_unrest_2
				}
				custom_tooltip = BG_unrest_2
				hidden_effect = {
					clr_country_flag = BG_unrest_2
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						random = {
							chance = 30
							add_province_modifier = {
								name = BG_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = BG_unrest_3
				}
				custom_tooltip = BG_unrest_3
				hidden_effect = {
					clr_country_flag = BG_unrest_3
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						random = {
							chance = 45
							add_province_modifier = {
								name = BG_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = BG_unrest_4
				}
				custom_tooltip = BG_unrest_4
				hidden_effect = {
					clr_country_flag = BG_unrest_4
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						random = {
							chance = 60
							add_province_modifier = {
								name = BG_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = BG_unrest_5
				}
				custom_tooltip = BG_unrest_5
				hidden_effect = {
					clr_country_flag = BG_unrest_5
					every_owned_province = {
						limit = {
							has_province_flag = burghers_control_province
						}
						random = {
							chance = 75
							add_province_modifier = {
								name = BG_province_unrest
								duration = 3650
							}
							add_unrest = 10
						}
					}
				}
			}
		}
		if = {
			limit = {
				ai = no
			}
			if = {
				limit = {
					check_variable = {
						which = BG_privilege_pain_modifier
						value = 0.99
					}
				}
				custom_tooltip = estate_demand_costs_money_1
				hidden_effect = {
					set_variable = {
						which = BG_estate_cost
						value = 0
					}
					set_variable = {
						which = BG_estate_cost
						which = estate_burghers_treasury_annual
					}
					multiply_variable = {
						which = BG_estate_cost
						value = 1
					}
					subtract_variable = {
						which = estate_burghers_treasury
						which = BG_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = BG_privilege_pain_modifier
						value = 0.9
					}
				}
				custom_tooltip = estate_demand_costs_money_1.5
				hidden_effect = {
					set_variable = {
						which = BG_estate_cost
						value = 0
					}
					set_variable = {
						which = BG_estate_cost
						which = estate_burghers_treasury_annual
					}
					multiply_variable = {
						which = BG_estate_cost
						value = 1.5
					}
					subtract_variable = {
						which = estate_burghers_treasury
						which = BG_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = BG_privilege_pain_modifier
						value = 0.72
					}
				}
				custom_tooltip = estate_demand_costs_money_2
				hidden_effect = {
					set_variable = {
						which = BG_estate_cost
						value = 0
					}
					set_variable = {
						which = BG_estate_cost
						which = estate_burghers_treasury_annual
					}
					multiply_variable = {
						which = BG_estate_cost
						value = 2
					}
					subtract_variable = {
						which = estate_burghers_treasury
						which = BG_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = BG_privilege_pain_modifier
						value = 0.65
					}
				}
				custom_tooltip = estate_demand_costs_money_2.5
				hidden_effect = {
					set_variable = {
						which = BG_estate_cost
						value = 0
					}
					set_variable = {
						which = BG_estate_cost
						which = estate_burghers_treasury_annual
					}
					multiply_variable = {
						which = BG_estate_cost
						value = 2.5
					}
					subtract_variable = {
						which = estate_burghers_treasury
						which = BG_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = BG_privilege_pain_modifier
						value = 0.58
					}
				}
				custom_tooltip = estate_demand_costs_money_3
				hidden_effect = {
					set_variable = {
						which = BG_estate_cost
						value = 0
					}
					set_variable = {
						which = BG_estate_cost
						which = estate_burghers_treasury_annual
					}
					multiply_variable = {
						which = BG_estate_cost
						value = 3
					}
					subtract_variable = {
						which = estate_burghers_treasury
						which = BG_estate_cost
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = BG_privilege_pain_modifier
						value = 0.51
					}
				}
				custom_tooltip = estate_demand_costs_money_3.5
				hidden_effect = {
					set_variable = {
						which = BG_estate_cost
						value = 0
					}
					set_variable = {
						which = BG_estate_cost
						which = estate_burghers_treasury_annual
					}
					multiply_variable = {
						which = BG_estate_cost
						value = 3.5
					}
					subtract_variable = {
						which = estate_burghers_treasury
						which = BG_estate_cost
					}
				}
			}
		}
		hidden_effect = {
			clr_country_flag = choose_BG_authority_to_govern_locally_1
			clr_country_flag = choose_BG_authority_to_govern_locally_2
			clr_country_flag = choose_BG_right_of_commerce_1
			clr_country_flag = choose_BG_right_of_commerce_2
			clr_country_flag = choose_BG_resist_embargoes_1
			clr_country_flag = choose_BG_resist_embargoes_2
			clr_country_flag = choose_BG_exemption_from_military_services_1
			clr_country_flag = choose_BG_exemption_from_military_services_2
			clr_country_flag = choose_BG_expanded_ship_builders_privileges_1
			clr_country_flag = choose_BG_expanded_ship_builders_privileges_2
			clr_country_flag = choose_BG_appoint_as_court_suppliers_1
			clr_country_flag = choose_BG_appoint_as_court_suppliers_2
			clr_country_flag = choose_BG_tolerate_smuggling_1
			clr_country_flag = choose_BG_tolerate_smuggling_2
			clr_country_flag = choose_BG_honorary_noble_titles_1
			clr_country_flag = choose_BG_honorary_noble_titles_2
			clr_country_flag = freeze_all_privileges
		}
	}
	after = {
		set_variable = {
			which = privilege_demand_modifier
			value = 0
		}
		set_variable = {
			which = privilege_admin_modifier
			value = 0
		}
		set_variable = {
			which = privilege_admin_modifier_den
			value = 0
		}
		set_variable = {
			which = privilege_GN_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_GN_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_GN_loyalty_malus
			value = 0
		}
		set_variable = {
			which = privilege_demand_greater_nobles_yearl
			value = 0
		}
		set_variable = {
			which = GN_privilege_pain_modifier
			value = 0
		}
		set_variable = {
			which = privilege_LN_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_LN_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_LN_loyalty_malus
			value = 0
		}
		set_variable = {
			which = privilege_demand_lesser_nobles_yearly
			value = 0
		}
		set_variable = {
			which = LN_privilege_pain_modifier
			value = 0
		}
		set_variable = {
			which = privilege_BG_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_BG_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_BG_loyalty_malus
			value = 0
		}
		set_variable = {
			which = privilege_demand_burghers_yearly
			value = 0
		}
		set_variable = {
			which = BG_privilege_pain_modifier
			value = 0
		}
		set_variable = {
			which = privilege_BU_counter_inertia
			value = 0
		}
		set_variable = {
			which = privilege_BU_counter_inertia_adjust
			value = 0
		}
		set_variable = {
			which = privilege_demand_bureaucracy_yearly
			value = 0
		}
		set_variable = {
			which = GN_corruption_current
			value = 0
		}
		set_variable = {
			which = GN_corruption_cost_1
			value = 0
		}
		set_variable = {
			which = greater_nobles_loyalty_removed_a
			value = 0
		}
		set_variable = {
			which = hit_to_legitimacy
			value = 0
		}
		set_variable = {
			which = hit_to_prestige
			value = 0
		}
		set_variable = {
			which = GN_hit_to_military
			value = 0
		}
		set_variable = {
			which = stability_hit
			value = 0
		}
		set_variable = {
			which = milit_cost_a
			value = 0
		}
		set_variable = {
			which = ai_corruption_choice
			value = 0
		}
		set_variable = {
			which = LN_corruption_current
			value = 0
		}
		set_variable = {
			which = LN_corruption_cost_1
			value = 0
		}
		set_variable = {
			which = lesser_nobles_loyalty_removed_a
			value = 0
		}
		set_variable = {
			which = hit_to_legitimacy
			value = 0
		}
		set_variable = {
			which = hit_to_prestige
			value = 0
		}
		set_variable = {
			which = LN_hit_to_military
			value = 0
		}
		set_variable = {
			which = stability_hit
			value = 0
		}
		set_variable = {
			which = admin_cost_a
			value = 0
		}
		set_variable = {
			which = ai_corruption_choice
			value = 0
		}
		set_variable = {
			which = estate_lesser_nobles_promotion_check
			value = 0
		}
		set_variable = {
			which = BG_corruption_current
			value = 0
		}
		set_variable = {
			which = BG_corruption_cost_1
			value = 0
		}
		set_variable = {
			which = burghers_loyalty_removed_a
			value = 0
		}
		set_variable = {
			which = hit_to_legitimacy
			value = 0
		}
		set_variable = {
			which = hit_to_prestige
			value = 0
		}
		set_variable = {
			which = BG_commercial_havoc
			value = 0
		}
		set_variable = {
			which = stability_hit
			value = 0
		}
		set_variable = {
			which = diplo_cost_a
			value = 0
		}
		set_variable = {
			which = autonomy_added
			value = 0
		}
	}
}
country_event = {
	id = POP_Estates_Events.121
	title = "POP_Estates_Events.121.t"
	desc = "POP_Estates_Events.121.d"
	picture = {
		trigger = {
			technology_group = western
		}
		picture = WE_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = muslim
				technology_group = turkishtech
				technology_group = steppestech
			}
		}
		picture = ISL_GN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = eastern
		}
		picture = EE_GN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = indian
		}
		picture = IND_GN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = chinese
		}
		picture = EA_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = soudantech
				technology_group = sub_saharan
				technology_group = central_african
				technology_group = malagasy_tech
				technology_group = east_african
			}
		}
		picture = AFR_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = austranesian
				technology_group = hawaii_tech
			}
		}
		picture = SEA_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = mesoamerican
				technology_group = south_american
			}
		}
		picture = AMR_GN_eventPicture
	}
	is_triggered_only = yes
	hidden = no
	immediate = {
		hidden_effect = {
			country_event = {
				id = POP_Estates_Events.131
				days = 1825
			}
		}
	}
	option = {
		name = "POP_Estates_Events.111.a"
		ai_chance = {
			factor = 100
		}
	}
}
country_event = {
	id = POP_Estates_Events.131
	title = "POP_Estates_Events.131.t"
	desc = "POP_Estates_Events.131.d"
	picture = {
		trigger = {
			technology_group = western
		}
		picture = WE_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = muslim
				technology_group = turkishtech
				technology_group = steppestech
			}
		}
		picture = ISL_GN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = eastern
		}
		picture = EE_GN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = indian
		}
		picture = IND_GN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = chinese
		}
		picture = EA_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = soudantech
				technology_group = sub_saharan
				technology_group = central_african
				technology_group = malagasy_tech
				technology_group = east_african
			}
		}
		picture = AFR_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = austranesian
				technology_group = hawaii_tech
			}
		}
		picture = SEA_GN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = mesoamerican
				technology_group = south_american
			}
		}
		picture = AMR_GN_eventPicture
	}
	is_triggered_only = yes
	hidden = no
	immediate = {
		hidden_effect = {
			set_variable = {
				which = greater_nobles_loyalty_added_a
				value = 6
			}
		}
	}
	option = {
		name = "POP_Estates_Events.131.a"
		ai_chance = {
			factor = 100
		}
		custom_tooltip = estate_greater_nobles_loyalty_added_a
		hidden_effect = {
			set_variable = {
				which = greater_nobles_loyalty_added
				value = 0
			}
			set_variable = {
				which = greater_nobles_loyalty_added
				which = greater_nobles_loyalty_added_a
			}
			if = {
				limit = {
					check_variable = {
						which = greater_nobles_loyalty_added
						value = 64
					}
				}
				add_estate_loyalty = {
					estate = estate_greater_nobles
					loyalty = 64
				}
				change_variable = {
					which = estate_greater_nobles_loyalty
					value = 0.64
				}
				subtract_variable = {
					which = greater_nobles_loyalty_added
					value = 64
				}
			}
			if = {
				limit = {
					check_variable = {
						which = greater_nobles_loyalty_added
						value = 32
					}
				}
				add_estate_loyalty = {
					estate = estate_greater_nobles
					loyalty = 32
				}
				change_variable = {
					which = estate_greater_nobles_loyalty
					value = 0.32
				}
				subtract_variable = {
					which = greater_nobles_loyalty_added
					value = 32
				}
			}
			if = {
				limit = {
					check_variable = {
						which = greater_nobles_loyalty_added
						value = 16
					}
				}
				add_estate_loyalty = {
					estate = estate_greater_nobles
					loyalty = 16
				}
				change_variable = {
					which = estate_greater_nobles_loyalty
					value = 0.16
				}
				subtract_variable = {
					which = greater_nobles_loyalty_added
					value = 16
				}
			}
			if = {
				limit = {
					check_variable = {
						which = greater_nobles_loyalty_added
						value = 8
					}
				}
				add_estate_loyalty = {
					estate = estate_greater_nobles
					loyalty = 8
				}
				change_variable = {
					which = estate_greater_nobles_loyalty
					value = 0.08
				}
				subtract_variable = {
					which = greater_nobles_loyalty_added
					value = 8
				}
			}
			if = {
				limit = {
					check_variable = {
						which = greater_nobles_loyalty_added
						value = 4
					}
				}
				add_estate_loyalty = {
					estate = estate_greater_nobles
					loyalty = 4
				}
				change_variable = {
					which = estate_greater_nobles_loyalty
					value = 0.04
				}
				subtract_variable = {
					which = greater_nobles_loyalty_added
					value = 4
				}
			}
			if = {
				limit = {
					check_variable = {
						which = greater_nobles_loyalty_added
						value = 2
					}
				}
				add_estate_loyalty = {
					estate = estate_greater_nobles
					loyalty = 2
				}
				change_variable = {
					which = estate_greater_nobles_loyalty
					value = 0.02
				}
				subtract_variable = {
					which = greater_nobles_loyalty_added
					value = 2
				}
			}
			if = {
				limit = {
					check_variable = {
						which = greater_nobles_loyalty_added
						value = 1
					}
				}
				add_estate_loyalty = {
					estate = estate_greater_nobles
					loyalty = 1
				}
				change_variable = {
					which = estate_greater_nobles_loyalty
					value = 0.01
				}
				subtract_variable = {
					which = greater_nobles_loyalty_added
					value = 1
				}
			}
			if = {
				limit = {
					check_variable = {
						which = estate_greater_nobles_loyalty
						value = 1
					}
				}
				set_variable = {
					which = estate_greater_nobles_loyalty
					value = 1
				}
			}
			every_owned_province = {
				limit = {
					has_province_flag = greater_nobles_control_province
				}
				hidden_effect = {
					set_variable = {
						which = estate_greater_nobles_loyalty
						which = owner
					}
					set_variable = {
						which = EstateProv_UnrestSave
						which = EstateProv_Unrest
					}
					set_variable = {
						which = EstateProv_Unrest
						which = estate_greater_nobles_loyalty
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 0
					}
					if = {
						limit = {
							check_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						set_province_flag = loss
						subtract_variable = {
							which = EstateProv_Unrest
							value = 0.6
						}
					}
					else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.401
								}
							}
						}
						set_province_flag = gain
						subtract_variable = {
							which = EstateProv_Unrest
							value = 0.4
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = -1
						}
					}
					else = {
						set_variable = {
							which = EstateProv_Unrest
							value = 0
						}
					}
					multiply_variable = {
						which = EstateProv_Unrest
						value = 16.62
					}
					set_variable = {
						which = inp_m_exp
						which = EstateProv_Unrest
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = inp_m_exp
									value = 0
								}
							}
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						change_variable = {
							which = err.math.exp.undef
							value = 1
						}
					}
					else_if = {
						limit = {
							is_variable_equal = {
								which = inp_m_exp
								value = 0
							}
						}
						set_variable = {
							which = exp_val
							value = 0
						}
					}
					else = {
						set_variable = {
							which = exp_m_exp
							value = 1.7
						}
						set_variable = {
							which = int_m_exp
							which = exp_m_exp
						}
						multiply_variable = {
							which = int_m_exp
							value = 0.001
						}
						multiply_variable = {
							which = int_m_exp
							value = 1000
						}
						set_variable = {
							which = dec_m_exp
							which = exp_m_exp
						}
						subtract_variable = {
							which = dec_m_exp
							which = int_m_exp
						}
						set_variable = {
							which = inp
							which = inp_m_exp
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp
										value = 0.001
									}
								}
							}
							set_variable = {
								which = ln_val
								value = 0
							}
							change_variable = {
								which = err.math.ln.undef
								value = 1
							}
						}
						else = {
							set_variable = {
								which = ln_val
								value = 0
							}
							set_variable = {
								which = scale
								value = 10000
							}
							set_variable = {
								which = k
								value = 0
							}
							set_variable = {
								which = k_div
								which = scale
							}
							while = {
								limit = {
									check_variable = {
										which = inp
										value = 2.001
									}
								}
								multiply_variable = {
									which = inp
									value = 0.5
								}
								change_variable = {
									which = ln_val
									value = 6931.472
								}
							}
							while = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 1
										}
									}
								}
								multiply_variable = {
									which = inp
									value = 2
								}
								subtract_variable = {
									which = ln_val
									value = 6931.472
								}
							}
							multiply_variable = {
								which = inp
								which = scale
							}
							while = {
								limit = {
									NOT = {
										check_variable = {
											which = k
											value = 10
										}
									}
								}
								change_variable = {
									which = k
									value = 1
								}
								multiply_variable = {
									which = k_div
									value = 0.5
								}
								set_variable = {
									which = t_m_ln
									which = scale
								}
								change_variable = {
									which = t_m_ln
									which = k_div
								}
								if = {
									limit = {
										check_variable = {
											which = inp
											which = t_m_ln
										}
									}
									divide_variable = {
										which = inp
										which = t_m_ln
									}
									multiply_variable = {
										which = inp
										which = scale
									}
									set_variable = {
										which = lt_ind
										which = k
									}
									if = {
										limit = {
											check_variable = {
												which = lt_ind
												value = 6
											}
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 8
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 9
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 10
														}
													}
													set_variable = {
														which = lt_val
														value = 9.761
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 19.512
													}
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 38.986
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 7
													}
												}
												set_variable = {
													which = lt_val
													value = 77.821
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 155.042
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 3
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 4
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 5
														}
													}
													set_variable = {
														which = lt_val
														value = 307.717
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 606.246
													}
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 1177.83
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 2
													}
												}
												set_variable = {
													which = lt_val
													value = 2231.436
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 4054.651
												}
											}
										}
									}
									set_variable = {
										which = lt_ind
										value = 0
									}
									change_variable = {
										which = ln_val
										which = lt_val
									}
								}
								set_variable = {
									which = t_m_ln
									value = 0
								}
							}
							divide_variable = {
								which = ln_val
								value = 10000
							}
							set_variable = {
								which = scale
								value = 0
							}
							set_variable = {
								which = k
								value = 0
							}
							set_variable = {
								which = k_div
								value = 0
							}
							set_variable = {
								which = lt_val
								value = 0
							}
						}
						set_variable = {
							which = inp
							value = 0
						}
						multiply_variable = {
							which = dec_m_exp
							which = ln_val
						}
						set_variable = {
							which = math.e.expnt
							which = dec_m_exp
						}
						set_variable = {
							which = math.e.return
							value = 1
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = math.e.expnt
										value = -6.999
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							while = {
								limit = {
									check_variable = {
										which = math.e.expnt
										value = 1
									}
								}
								subtract_variable = {
									which = math.e.expnt
									value = 1
								}
								multiply_variable = {
									which = math.e.return
									value = 2.718
								}
							}
							while = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = 0
										}
									}
								}
								change_variable = {
									which = math.e.expnt
									value = 1
								}
								divide_variable = {
									which = math.e.return
									value = 2.718
								}
							}
							set_variable = {
								which = math.e.sm
								value = 1
							}
							if = {
								limit = {
									NOT = {
										is_variable_equal = {
											which = math.e.expnt
											value = 0
										}
									}
								}
								set_variable = {
									which = math.e.sq
									which = math.e.expnt
								}
								multiply_variable = {
									which = math.e.sq
									which = math.e.expnt
								}
								set_variable = {
									which = math.e.fct
									value = 2
								}
								set_variable = {
									which = math.e.fctl
									value = 2
								}
								set_variable = {
									which = math.e.a1
									which = math.e.sq
								}
								set_variable = {
									which = math.e.a2
									which = math.e.expnt
								}
								set_variable = {
									which = math.e.a3
									value = 2
								}
								set_variable = {
									which = math.e.tmp
									which = math.e.a2
								}
								multiply_variable = {
									which = math.e.tmp
									which = math.e.a3
								}
								change_variable = {
									which = math.e.tmp
									which = math.e.a1
								}
								divide_variable = {
									which = math.e.tmp
									which = math.e.fct
								}
								change_variable = {
									which = math.e.sm
									which = math.e.tmp
								}
								set_variable = {
									which = math.e.prec
									value = 3
								}
								subtract_variable = {
									which = math.e.prec
									value = 1
								}
								while = {
									limit = {
										check_variable = {
											which = math.e.prec
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									change_variable = {
										which = math.e.fctl
										value = 1
									}
									multiply_variable = {
										which = math.e.fct
										which = math.e.fctl
									}
									change_variable = {
										which = math.e.fctl
										value = 1
									}
									multiply_variable = {
										which = math.e.fct
										which = math.e.fctl
									}
									multiply_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									multiply_variable = {
										which = math.e.a2
										which = math.e.sq
									}
									change_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
								}
							}
							multiply_variable = {
								which = math.e.return
								which = math.e.sm
							}
							set_variable = {
								which = exp_val
								which = math.e.return
							}
							set_variable = {
								which = math.e.sm
								value = 0
							}
							set_variable = {
								which = math.e.tmp
								value = 0
							}
							set_variable = {
								which = math.e.a1
								value = 0
							}
							set_variable = {
								which = math.e.a2
								value = 0
							}
							set_variable = {
								which = math.e.a3
								value = 0
							}
							set_variable = {
								which = math.e.fctl
								value = 0
							}
							set_variable = {
								which = math.e.fct
								value = 0
							}
							set_variable = {
								which = math.e.prec
								value = 0
							}
							set_variable = {
								which = math.e.sq
								value = 0
							}
						}
						set_variable = {
							which = math.e.expnt
							value = 0
						}
						set_variable = {
							which = math.e.return
							value = 0
						}
						while = {
							limit = {
								check_variable = {
									which = int_m_exp
									value = 1
								}
							}
							subtract_variable = {
								which = int_m_exp
								value = 1
							}
							multiply_variable = {
								which = exp_val
								which = inp_m_exp
							}
						}
						set_variable = {
							which = exp_m_exp
							value = 0
						}
						set_variable = {
							which = int_m_exp
							value = 0
						}
						set_variable = {
							which = dec_m_exp
							value = 0
						}
						set_variable = {
							which = ln_val
							value = 0
						}
					}
					set_variable = {
						which = inp_m_exp
						value = 0
					}
					set_variable = {
						which = EstateProv_Unrest
						which = exp_val
					}
					set_variable = {
						which = exp_val
						value = 0
					}
					export_to_variable = {
						which = EstateProv_LA
						value = local_autonomy
					}
					multiply_variable = {
						which = EstateProv_LA
						value = 0.008
					}
					change_variable = {
						which = EstateProv_LA
						value = 0.2
					}
					multiply_variable = {
						which = EstateProv_Unrest
						which = EstateProv_LA
					}
					set_variable = {
						which = EstateProv_Unrest_Inp
						which = EstateProv_Unrest
					}
					if = {
						limit = {
							has_province_flag = loss
						}
						clr_province_flag = loss
						multiply_variable = {
							which = EstateProv_Unrest
							value = -1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 0.1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 10
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 25.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_25.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_25.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_25.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_25.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 12.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_12.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_12.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_12.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_12.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 6.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_6.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_6.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_6.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_6.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 3.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_3.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_3.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_3.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_3.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 1.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_1.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_1.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_1.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_1.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.1
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.1
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.1
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.1
						}
					}
					else_if = {
						limit = {
							has_province_flag = gain
						}
						clr_province_flag = gain
						multiply_variable = {
							which = EstateProv_Unrest
							value = 1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 0.1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 10
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 25.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_25.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_25.6
							}
							remove_province_modifier = EstateProv_UnrestGain_25.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 12.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_12.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_12.8
							}
							remove_province_modifier = EstateProv_UnrestGain_12.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 6.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_6.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_6.4
							}
							remove_province_modifier = EstateProv_UnrestGain_6.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 3.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_3.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_3.2
							}
							remove_province_modifier = EstateProv_UnrestGain_3.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 1.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_1.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_1.6
							}
							remove_province_modifier = EstateProv_UnrestGain_1.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.8
							}
							remove_province_modifier = EstateProv_UnrestGain_0.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.4
							}
							remove_province_modifier = EstateProv_UnrestGain_0.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.2
							}
							remove_province_modifier = EstateProv_UnrestGain_0.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.1
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.1
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.1
							}
							remove_province_modifier = EstateProv_UnrestGain_0.1
						}
					}
					if = {
						limit = {
							check_variable = {
								which = EstateProv_UnrestSave
								value = 0.001
							}
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.001
									}
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
					}
					else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0
								}
							}
							check_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_25.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_25.6
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_12.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_12.8
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_6.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_6.4
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_3.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_3.2
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_1.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_1.6
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.8
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.4
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.2
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.1
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.1
						}
					}
					if = {
						limit = {
							is_variable_equal = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_Unrest
							value = 0
						}
					}
					set_variable = {
						which = EstateProv_UnrestSave
						value = 0
					}
					set_variable = {
						which = EstateProv_LA
						value = 0
					}
					set_variable = {
						which = EstateProv_Unrest_Inp
						value = 0
					}
				}
			}
		}
	}
}
country_event = {
	id = POP_Estates_Events.122
	title = "POP_Estates_Events.122.t"
	desc = "POP_Estates_Events.122.d"
	picture = {
		trigger = {
			technology_group = western
		}
		picture = WE_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = muslim
				technology_group = turkishtech
				technology_group = steppestech
			}
		}
		picture = ISL_LN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = eastern
		}
		picture = EE_LN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = indian
		}
		picture = IND_LN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = chinese
		}
		picture = EA_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = soudantech
				technology_group = sub_saharan
				technology_group = central_african
				technology_group = malagasy_tech
				technology_group = east_african
			}
		}
		picture = AFR_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = austranesian
				technology_group = hawaii_tech
			}
		}
		picture = SEA_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = mesoamerican
				technology_group = south_american
			}
		}
		picture = AMR_LN_eventPicture
	}
	is_triggered_only = yes
	hidden = no
	immediate = {
		hidden_effect = {
			country_event = {
				id = POP_Estates_Events.132
				days = 1825
			}
		}
	}
	option = {
		name = "POP_Estates_Events.122.a"
		ai_chance = {
			factor = 100
		}
	}
}
country_event = {
	id = POP_Estates_Events.132
	title = "POP_Estates_Events.132.t"
	desc = "POP_Estates_Events.132.d"
	picture = {
		trigger = {
			technology_group = western
		}
		picture = WE_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = muslim
				technology_group = turkishtech
				technology_group = steppestech
			}
		}
		picture = ISL_LN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = eastern
		}
		picture = EE_LN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = indian
		}
		picture = IND_LN_eventPicture
	}
	picture = {
		trigger = {
			technology_group = chinese
		}
		picture = EA_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = soudantech
				technology_group = sub_saharan
				technology_group = central_african
				technology_group = malagasy_tech
				technology_group = east_african
			}
		}
		picture = AFR_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = austranesian
				technology_group = hawaii_tech
			}
		}
		picture = SEA_LN_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = mesoamerican
				technology_group = south_american
			}
		}
		picture = AMR_LN_eventPicture
	}
	is_triggered_only = yes
	hidden = no
	immediate = {
		hidden_effect = {
			set_variable = {
				which = lesser_nobles_loyalty_added_a
				value = 6
			}
		}
	}
	option = {
		name = "POP_Estates_Events.132.a"
		ai_chance = {
			factor = 100
		}
		custom_tooltip = estate_lesser_nobles_loyalty_added_a
		hidden_effect = {
			clr_country_flag = already_hit_with_LN_loyalty
			set_variable = {
				which = lesser_nobles_loyalty_added
				value = 0
			}
			set_variable = {
				which = lesser_nobles_loyalty_added
				which = lesser_nobles_loyalty_added_a
			}
			if = {
				limit = {
					check_variable = {
						which = lesser_nobles_loyalty_added
						value = 64
					}
				}
				add_estate_loyalty = {
					estate = estate_lesser_nobles
					loyalty = 64
				}
				change_variable = {
					which = estate_lesser_nobles_loyalty
					value = 0.64
				}
				subtract_variable = {
					which = lesser_nobles_loyalty_added
					value = 64
				}
			}
			if = {
				limit = {
					check_variable = {
						which = lesser_nobles_loyalty_added
						value = 32
					}
				}
				add_estate_loyalty = {
					estate = estate_lesser_nobles
					loyalty = 32
				}
				change_variable = {
					which = estate_lesser_nobles_loyalty
					value = 0.32
				}
				subtract_variable = {
					which = lesser_nobles_loyalty_added
					value = 32
				}
			}
			if = {
				limit = {
					check_variable = {
						which = lesser_nobles_loyalty_added
						value = 16
					}
				}
				add_estate_loyalty = {
					estate = estate_lesser_nobles
					loyalty = 16
				}
				change_variable = {
					which = estate_lesser_nobles_loyalty
					value = 0.16
				}
				subtract_variable = {
					which = lesser_nobles_loyalty_added
					value = 16
				}
			}
			if = {
				limit = {
					check_variable = {
						which = lesser_nobles_loyalty_added
						value = 8
					}
				}
				add_estate_loyalty = {
					estate = estate_lesser_nobles
					loyalty = 8
				}
				change_variable = {
					which = estate_lesser_nobles_loyalty
					value = 0.08
				}
				subtract_variable = {
					which = lesser_nobles_loyalty_added
					value = 8
				}
			}
			if = {
				limit = {
					check_variable = {
						which = lesser_nobles_loyalty_added
						value = 4
					}
				}
				add_estate_loyalty = {
					estate = estate_lesser_nobles
					loyalty = 4
				}
				change_variable = {
					which = estate_lesser_nobles_loyalty
					value = 0.04
				}
				subtract_variable = {
					which = lesser_nobles_loyalty_added
					value = 4
				}
			}
			if = {
				limit = {
					check_variable = {
						which = lesser_nobles_loyalty_added
						value = 2
					}
				}
				add_estate_loyalty = {
					estate = estate_lesser_nobles
					loyalty = 2
				}
				change_variable = {
					which = estate_lesser_nobles_loyalty
					value = 0.02
				}
				subtract_variable = {
					which = lesser_nobles_loyalty_added
					value = 2
				}
			}
			if = {
				limit = {
					check_variable = {
						which = lesser_nobles_loyalty_added
						value = 1
					}
				}
				add_estate_loyalty = {
					estate = estate_lesser_nobles
					loyalty = 1
				}
				change_variable = {
					which = estate_lesser_nobles_loyalty
					value = 0.01
				}
				subtract_variable = {
					which = lesser_nobles_loyalty_added
					value = 1
				}
			}
			if = {
				limit = {
					check_variable = {
						which = estate_lesser_nobles_loyalty
						value = 1
					}
				}
				set_variable = {
					which = estate_lesser_nobles_loyalty
					value = 1
				}
			}
			every_owned_province = {
				limit = {
					has_province_flag = lesser_nobles_control_province
				}
				hidden_effect = {
					set_variable = {
						which = estate_lesser_nobles_loyalty
						which = owner
					}
					set_variable = {
						which = EstateProv_UnrestSave
						which = EstateProv_Unrest
					}
					set_variable = {
						which = EstateProv_Unrest
						which = estate_lesser_nobles_loyalty
					}
					set_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0
					}
					if = {
						limit = {
							check_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						set_province_flag = loss
						subtract_variable = {
							which = EstateProv_Unrest
							value = 0.6
						}
					}
					else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.401
								}
							}
						}
						set_province_flag = gain
						subtract_variable = {
							which = EstateProv_Unrest
							value = 0.4
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = -1
						}
					}
					else = {
						set_variable = {
							which = EstateProv_Unrest
							value = 0
						}
					}
					multiply_variable = {
						which = EstateProv_Unrest
						value = 16.62
					}
					set_variable = {
						which = inp_m_exp
						which = EstateProv_Unrest
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = inp_m_exp
									value = 0
								}
							}
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						change_variable = {
							which = err.math.exp.undef
							value = 1
						}
					}
					else_if = {
						limit = {
							is_variable_equal = {
								which = inp_m_exp
								value = 0
							}
						}
						set_variable = {
							which = exp_val
							value = 0
						}
					}
					else = {
						set_variable = {
							which = exp_m_exp
							value = 1.7
						}
						set_variable = {
							which = int_m_exp
							which = exp_m_exp
						}
						multiply_variable = {
							which = int_m_exp
							value = 0.001
						}
						multiply_variable = {
							which = int_m_exp
							value = 1000
						}
						set_variable = {
							which = dec_m_exp
							which = exp_m_exp
						}
						subtract_variable = {
							which = dec_m_exp
							which = int_m_exp
						}
						set_variable = {
							which = inp
							which = inp_m_exp
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp
										value = 0.001
									}
								}
							}
							set_variable = {
								which = ln_val
								value = 0
							}
							change_variable = {
								which = err.math.ln.undef
								value = 1
							}
						}
						else = {
							set_variable = {
								which = ln_val
								value = 0
							}
							set_variable = {
								which = scale
								value = 10000
							}
							set_variable = {
								which = k
								value = 0
							}
							set_variable = {
								which = k_div
								which = scale
							}
							while = {
								limit = {
									check_variable = {
										which = inp
										value = 2.001
									}
								}
								multiply_variable = {
									which = inp
									value = 0.5
								}
								change_variable = {
									which = ln_val
									value = 6931.472
								}
							}
							while = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 1
										}
									}
								}
								multiply_variable = {
									which = inp
									value = 2
								}
								subtract_variable = {
									which = ln_val
									value = 6931.472
								}
							}
							multiply_variable = {
								which = inp
								which = scale
							}
							while = {
								limit = {
									NOT = {
										check_variable = {
											which = k
											value = 10
										}
									}
								}
								change_variable = {
									which = k
									value = 1
								}
								multiply_variable = {
									which = k_div
									value = 0.5
								}
								set_variable = {
									which = t_m_ln
									which = scale
								}
								change_variable = {
									which = t_m_ln
									which = k_div
								}
								if = {
									limit = {
										check_variable = {
											which = inp
											which = t_m_ln
										}
									}
									divide_variable = {
										which = inp
										which = t_m_ln
									}
									multiply_variable = {
										which = inp
										which = scale
									}
									set_variable = {
										which = lt_ind
										which = k
									}
									if = {
										limit = {
											check_variable = {
												which = lt_ind
												value = 6
											}
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 8
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 9
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 10
														}
													}
													set_variable = {
														which = lt_val
														value = 9.761
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 19.512
													}
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 38.986
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 7
													}
												}
												set_variable = {
													which = lt_val
													value = 77.821
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 155.042
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 3
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 4
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 5
														}
													}
													set_variable = {
														which = lt_val
														value = 307.717
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 606.246
													}
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 1177.83
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 2
													}
												}
												set_variable = {
													which = lt_val
													value = 2231.436
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 4054.651
												}
											}
										}
									}
									set_variable = {
										which = lt_ind
										value = 0
									}
									change_variable = {
										which = ln_val
										which = lt_val
									}
								}
								set_variable = {
									which = t_m_ln
									value = 0
								}
							}
							divide_variable = {
								which = ln_val
								value = 10000
							}
							set_variable = {
								which = scale
								value = 0
							}
							set_variable = {
								which = k
								value = 0
							}
							set_variable = {
								which = k_div
								value = 0
							}
							set_variable = {
								which = lt_val
								value = 0
							}
						}
						set_variable = {
							which = inp
							value = 0
						}
						multiply_variable = {
							which = dec_m_exp
							which = ln_val
						}
						set_variable = {
							which = math.e.expnt
							which = dec_m_exp
						}
						set_variable = {
							which = math.e.return
							value = 1
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = math.e.expnt
										value = -6.999
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							while = {
								limit = {
									check_variable = {
										which = math.e.expnt
										value = 1
									}
								}
								subtract_variable = {
									which = math.e.expnt
									value = 1
								}
								multiply_variable = {
									which = math.e.return
									value = 2.718
								}
							}
							while = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = 0
										}
									}
								}
								change_variable = {
									which = math.e.expnt
									value = 1
								}
								divide_variable = {
									which = math.e.return
									value = 2.718
								}
							}
							set_variable = {
								which = math.e.sm
								value = 1
							}
							if = {
								limit = {
									NOT = {
										is_variable_equal = {
											which = math.e.expnt
											value = 0
										}
									}
								}
								set_variable = {
									which = math.e.sq
									which = math.e.expnt
								}
								multiply_variable = {
									which = math.e.sq
									which = math.e.expnt
								}
								set_variable = {
									which = math.e.fct
									value = 2
								}
								set_variable = {
									which = math.e.fctl
									value = 2
								}
								set_variable = {
									which = math.e.a1
									which = math.e.sq
								}
								set_variable = {
									which = math.e.a2
									which = math.e.expnt
								}
								set_variable = {
									which = math.e.a3
									value = 2
								}
								set_variable = {
									which = math.e.tmp
									which = math.e.a2
								}
								multiply_variable = {
									which = math.e.tmp
									which = math.e.a3
								}
								change_variable = {
									which = math.e.tmp
									which = math.e.a1
								}
								divide_variable = {
									which = math.e.tmp
									which = math.e.fct
								}
								change_variable = {
									which = math.e.sm
									which = math.e.tmp
								}
								set_variable = {
									which = math.e.prec
									value = 3
								}
								subtract_variable = {
									which = math.e.prec
									value = 1
								}
								while = {
									limit = {
										check_variable = {
											which = math.e.prec
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									change_variable = {
										which = math.e.fctl
										value = 1
									}
									multiply_variable = {
										which = math.e.fct
										which = math.e.fctl
									}
									change_variable = {
										which = math.e.fctl
										value = 1
									}
									multiply_variable = {
										which = math.e.fct
										which = math.e.fctl
									}
									multiply_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									multiply_variable = {
										which = math.e.a2
										which = math.e.sq
									}
									change_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
								}
							}
							multiply_variable = {
								which = math.e.return
								which = math.e.sm
							}
							set_variable = {
								which = exp_val
								which = math.e.return
							}
							set_variable = {
								which = math.e.sm
								value = 0
							}
							set_variable = {
								which = math.e.tmp
								value = 0
							}
							set_variable = {
								which = math.e.a1
								value = 0
							}
							set_variable = {
								which = math.e.a2
								value = 0
							}
							set_variable = {
								which = math.e.a3
								value = 0
							}
							set_variable = {
								which = math.e.fctl
								value = 0
							}
							set_variable = {
								which = math.e.fct
								value = 0
							}
							set_variable = {
								which = math.e.prec
								value = 0
							}
							set_variable = {
								which = math.e.sq
								value = 0
							}
						}
						set_variable = {
							which = math.e.expnt
							value = 0
						}
						set_variable = {
							which = math.e.return
							value = 0
						}
						while = {
							limit = {
								check_variable = {
									which = int_m_exp
									value = 1
								}
							}
							subtract_variable = {
								which = int_m_exp
								value = 1
							}
							multiply_variable = {
								which = exp_val
								which = inp_m_exp
							}
						}
						set_variable = {
							which = exp_m_exp
							value = 0
						}
						set_variable = {
							which = int_m_exp
							value = 0
						}
						set_variable = {
							which = dec_m_exp
							value = 0
						}
						set_variable = {
							which = ln_val
							value = 0
						}
					}
					set_variable = {
						which = inp_m_exp
						value = 0
					}
					set_variable = {
						which = EstateProv_Unrest
						which = exp_val
					}
					set_variable = {
						which = exp_val
						value = 0
					}
					export_to_variable = {
						which = EstateProv_LA
						value = local_autonomy
					}
					multiply_variable = {
						which = EstateProv_LA
						value = 0.008
					}
					change_variable = {
						which = EstateProv_LA
						value = 0.2
					}
					multiply_variable = {
						which = EstateProv_Unrest
						which = EstateProv_LA
					}
					set_variable = {
						which = EstateProv_Unrest_Inp
						which = EstateProv_Unrest
					}
					if = {
						limit = {
							has_province_flag = loss
						}
						clr_province_flag = loss
						multiply_variable = {
							which = EstateProv_Unrest
							value = -1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 0.1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 10
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 25.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_25.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_25.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_25.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_25.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 12.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_12.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_12.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_12.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_12.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 6.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_6.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_6.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_6.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_6.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 3.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_3.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_3.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_3.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_3.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 1.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_1.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_1.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_1.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_1.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.1
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.1
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.1
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.1
						}
					}
					else_if = {
						limit = {
							has_province_flag = gain
						}
						clr_province_flag = gain
						multiply_variable = {
							which = EstateProv_Unrest
							value = 1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 0.1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 10
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 25.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_25.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_25.6
							}
							remove_province_modifier = EstateProv_UnrestGain_25.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 12.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_12.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_12.8
							}
							remove_province_modifier = EstateProv_UnrestGain_12.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 6.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_6.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_6.4
							}
							remove_province_modifier = EstateProv_UnrestGain_6.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 3.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_3.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_3.2
							}
							remove_province_modifier = EstateProv_UnrestGain_3.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 1.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_1.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_1.6
							}
							remove_province_modifier = EstateProv_UnrestGain_1.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.8
							}
							remove_province_modifier = EstateProv_UnrestGain_0.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.4
							}
							remove_province_modifier = EstateProv_UnrestGain_0.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.2
							}
							remove_province_modifier = EstateProv_UnrestGain_0.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.1
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.1
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.1
							}
							remove_province_modifier = EstateProv_UnrestGain_0.1
						}
					}
					if = {
						limit = {
							check_variable = {
								which = EstateProv_UnrestSave
								value = 0.001
							}
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.001
									}
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
					}
					else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0
								}
							}
							check_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_25.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_25.6
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_12.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_12.8
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_6.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_6.4
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_3.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_3.2
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_1.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_1.6
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.8
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.4
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.2
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.1
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.1
						}
					}
					if = {
						limit = {
							is_variable_equal = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_Unrest
							value = 0
						}
					}
					set_variable = {
						which = EstateProv_UnrestSave
						value = 0
					}
					set_variable = {
						which = EstateProv_LA
						value = 0
					}
					set_variable = {
						which = EstateProv_Unrest_Inp
						value = 0
					}
				}
			}
		}
	}
}
country_event = {
	id = POP_Estates_Events.123
	title = "POP_Estates_Events.123.t"
	desc = "POP_Estates_Events.123.d"
	picture = {
		trigger = {
			technology_group = western
		}
		picture = WE_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = muslim
				technology_group = turkishtech
				technology_group = steppestech
			}
		}
		picture = ISL_BUR_eventPicture
	}
	picture = {
		trigger = {
			technology_group = eastern
		}
		picture = EE_BUR_eventPicture
	}
	picture = {
		trigger = {
			technology_group = indian
		}
		picture = IND_BUR_eventPicture
	}
	picture = {
		trigger = {
			technology_group = chinese
		}
		picture = EA_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = soudantech
				technology_group = sub_saharan
				technology_group = central_african
				technology_group = malagasy_tech
				technology_group = east_african
			}
		}
		picture = AFR_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = austranesian
				technology_group = hawaii_tech
			}
		}
		picture = SEA_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = mesoamerican
				technology_group = south_american
			}
		}
		picture = AMR_BUR_eventPicture
	}
	is_triggered_only = yes
	hidden = no
	immediate = {
		hidden_effect = {
			country_event = {
				id = POP_Estates_Events.133
				days = 1825
			}
		}
	}
	option = {
		name = "POP_Estates_Events.123.a"
		ai_chance = {
			factor = 100
		}
	}
}
country_event = {
	id = POP_Estates_Events.133
	title = "POP_Estates_Events.133.t"
	desc = "POP_Estates_Events.133.d"
	picture = {
		trigger = {
			technology_group = western
		}
		picture = WE_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = muslim
				technology_group = turkishtech
				technology_group = steppestech
			}
		}
		picture = ISL_BUR_eventPicture
	}
	picture = {
		trigger = {
			technology_group = eastern
		}
		picture = EE_BUR_eventPicture
	}
	picture = {
		trigger = {
			technology_group = indian
		}
		picture = IND_BUR_eventPicture
	}
	picture = {
		trigger = {
			technology_group = chinese
		}
		picture = EA_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = soudantech
				technology_group = sub_saharan
				technology_group = central_african
				technology_group = malagasy_tech
				technology_group = east_african
			}
		}
		picture = AFR_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = austranesian
				technology_group = hawaii_tech
			}
		}
		picture = SEA_BUR_eventPicture
	}
	picture = {
		trigger = {
			OR = {
				technology_group = mesoamerican
				technology_group = south_american
			}
		}
		picture = AMR_BUR_eventPicture
	}
	is_triggered_only = yes
	hidden = no
	immediate = {
		hidden_effect = {
			set_variable = {
				which = burghers_loyalty_added_a
				value = 6
			}
		}
	}
	option = {
		name = "POP_Estates_Events.133.a"
		ai_chance = {
			factor = 100
		}
		custom_tooltip = estate_burghers_loyalty_added_a
		hidden_effect = {
			clr_country_flag = already_hit_with_BG_loyalty
			set_variable = {
				which = burghers_loyalty_added
				value = 0
			}
			set_variable = {
				which = burghers_loyalty_added
				which = burghers_loyalty_added_a
			}
			if = {
				limit = {
					check_variable = {
						which = burghers_loyalty_added
						value = 64
					}
				}
				add_estate_loyalty = {
					estate = estate_city_burghers
					loyalty = 64
				}
				change_variable = {
					which = estate_burghers_loyalty
					value = 0.64
				}
				subtract_variable = {
					which = burghers_loyalty_added
					value = 64
				}
			}
			if = {
				limit = {
					check_variable = {
						which = burghers_loyalty_added
						value = 32
					}
				}
				add_estate_loyalty = {
					estate = estate_city_burghers
					loyalty = 32
				}
				change_variable = {
					which = estate_burghers_loyalty
					value = 0.32
				}
				subtract_variable = {
					which = burghers_loyalty_added
					value = 32
				}
			}
			if = {
				limit = {
					check_variable = {
						which = burghers_loyalty_added
						value = 16
					}
				}
				add_estate_loyalty = {
					estate = estate_city_burghers
					loyalty = 16
				}
				change_variable = {
					which = estate_burghers_loyalty
					value = 0.16
				}
				subtract_variable = {
					which = burghers_loyalty_added
					value = 16
				}
			}
			if = {
				limit = {
					check_variable = {
						which = burghers_loyalty_added
						value = 8
					}
				}
				add_estate_loyalty = {
					estate = estate_city_burghers
					loyalty = 8
				}
				change_variable = {
					which = estate_burghers_loyalty
					value = 0.08
				}
				subtract_variable = {
					which = burghers_loyalty_added
					value = 8
				}
			}
			if = {
				limit = {
					check_variable = {
						which = burghers_loyalty_added
						value = 4
					}
				}
				add_estate_loyalty = {
					estate = estate_city_burghers
					loyalty = 4
				}
				change_variable = {
					which = estate_burghers_loyalty
					value = 0.04
				}
				subtract_variable = {
					which = burghers_loyalty_added
					value = 4
				}
			}
			if = {
				limit = {
					check_variable = {
						which = burghers_loyalty_added
						value = 2
					}
				}
				add_estate_loyalty = {
					estate = estate_city_burghers
					loyalty = 2
				}
				change_variable = {
					which = estate_burghers_loyalty
					value = 0.02
				}
				subtract_variable = {
					which = burghers_loyalty_added
					value = 2
				}
			}
			if = {
				limit = {
					check_variable = {
						which = burghers_loyalty_added
						value = 1
					}
				}
				add_estate_loyalty = {
					estate = estate_city_burghers
					loyalty = 1
				}
				change_variable = {
					which = estate_burghers_loyalty
					value = 0.01
				}
				subtract_variable = {
					which = burghers_loyalty_added
					value = 1
				}
			}
			if = {
				limit = {
					check_variable = {
						which = estate_burghers_loyalty
						value = 1
					}
				}
				set_variable = {
					which = estate_burghers_loyalty
					value = 1
				}
			}
			every_owned_province = {
				limit = {
					has_province_flag = burghers_control_province
				}
				hidden_effect = {
					set_variable = {
						which = estate_burghers_loyalty
						which = owner
					}
					set_variable = {
						which = EstateProv_UnrestSave
						which = EstateProv_Unrest
					}
					set_variable = {
						which = EstateProv_Unrest
						which = estate_burghers_loyalty
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 0
					}
					if = {
						limit = {
							check_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						set_province_flag = loss
						subtract_variable = {
							which = EstateProv_Unrest
							value = 0.6
						}
					}
					else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.401
								}
							}
						}
						set_province_flag = gain
						subtract_variable = {
							which = EstateProv_Unrest
							value = 0.4
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = -1
						}
					}
					else = {
						set_variable = {
							which = EstateProv_Unrest
							value = 0
						}
					}
					multiply_variable = {
						which = EstateProv_Unrest
						value = 16.62
					}
					set_variable = {
						which = inp_m_exp
						which = EstateProv_Unrest
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = inp_m_exp
									value = 0
								}
							}
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						change_variable = {
							which = err.math.exp.undef
							value = 1
						}
					}
					else_if = {
						limit = {
							is_variable_equal = {
								which = inp_m_exp
								value = 0
							}
						}
						set_variable = {
							which = exp_val
							value = 0
						}
					}
					else = {
						set_variable = {
							which = exp_m_exp
							value = 1.7
						}
						set_variable = {
							which = int_m_exp
							which = exp_m_exp
						}
						multiply_variable = {
							which = int_m_exp
							value = 0.001
						}
						multiply_variable = {
							which = int_m_exp
							value = 1000
						}
						set_variable = {
							which = dec_m_exp
							which = exp_m_exp
						}
						subtract_variable = {
							which = dec_m_exp
							which = int_m_exp
						}
						set_variable = {
							which = inp
							which = inp_m_exp
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp
										value = 0.001
									}
								}
							}
							set_variable = {
								which = ln_val
								value = 0
							}
							change_variable = {
								which = err.math.ln.undef
								value = 1
							}
						}
						else = {
							set_variable = {
								which = ln_val
								value = 0
							}
							set_variable = {
								which = scale
								value = 10000
							}
							set_variable = {
								which = k
								value = 0
							}
							set_variable = {
								which = k_div
								which = scale
							}
							while = {
								limit = {
									check_variable = {
										which = inp
										value = 2.001
									}
								}
								multiply_variable = {
									which = inp
									value = 0.5
								}
								change_variable = {
									which = ln_val
									value = 6931.472
								}
							}
							while = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 1
										}
									}
								}
								multiply_variable = {
									which = inp
									value = 2
								}
								subtract_variable = {
									which = ln_val
									value = 6931.472
								}
							}
							multiply_variable = {
								which = inp
								which = scale
							}
							while = {
								limit = {
									NOT = {
										check_variable = {
											which = k
											value = 10
										}
									}
								}
								change_variable = {
									which = k
									value = 1
								}
								multiply_variable = {
									which = k_div
									value = 0.5
								}
								set_variable = {
									which = t_m_ln
									which = scale
								}
								change_variable = {
									which = t_m_ln
									which = k_div
								}
								if = {
									limit = {
										check_variable = {
											which = inp
											which = t_m_ln
										}
									}
									divide_variable = {
										which = inp
										which = t_m_ln
									}
									multiply_variable = {
										which = inp
										which = scale
									}
									set_variable = {
										which = lt_ind
										which = k
									}
									if = {
										limit = {
											check_variable = {
												which = lt_ind
												value = 6
											}
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 8
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 9
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 10
														}
													}
													set_variable = {
														which = lt_val
														value = 9.761
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 19.512
													}
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 38.986
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 7
													}
												}
												set_variable = {
													which = lt_val
													value = 77.821
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 155.042
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 3
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 4
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 5
														}
													}
													set_variable = {
														which = lt_val
														value = 307.717
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 606.246
													}
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 1177.83
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 2
													}
												}
												set_variable = {
													which = lt_val
													value = 2231.436
												}
											}
											else = {
												set_variable = {
													which = lt_val
													value = 4054.651
												}
											}
										}
									}
									set_variable = {
										which = lt_ind
										value = 0
									}
									change_variable = {
										which = ln_val
										which = lt_val
									}
								}
								set_variable = {
									which = t_m_ln
									value = 0
								}
							}
							divide_variable = {
								which = ln_val
								value = 10000
							}
							set_variable = {
								which = scale
								value = 0
							}
							set_variable = {
								which = k
								value = 0
							}
							set_variable = {
								which = k_div
								value = 0
							}
							set_variable = {
								which = lt_val
								value = 0
							}
						}
						set_variable = {
							which = inp
							value = 0
						}
						multiply_variable = {
							which = dec_m_exp
							which = ln_val
						}
						set_variable = {
							which = math.e.expnt
							which = dec_m_exp
						}
						set_variable = {
							which = math.e.return
							value = 1
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = math.e.expnt
										value = -6.999
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							while = {
								limit = {
									check_variable = {
										which = math.e.expnt
										value = 1
									}
								}
								subtract_variable = {
									which = math.e.expnt
									value = 1
								}
								multiply_variable = {
									which = math.e.return
									value = 2.718
								}
							}
							while = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = 0
										}
									}
								}
								change_variable = {
									which = math.e.expnt
									value = 1
								}
								divide_variable = {
									which = math.e.return
									value = 2.718
								}
							}
							set_variable = {
								which = math.e.sm
								value = 1
							}
							if = {
								limit = {
									NOT = {
										is_variable_equal = {
											which = math.e.expnt
											value = 0
										}
									}
								}
								set_variable = {
									which = math.e.sq
									which = math.e.expnt
								}
								multiply_variable = {
									which = math.e.sq
									which = math.e.expnt
								}
								set_variable = {
									which = math.e.fct
									value = 2
								}
								set_variable = {
									which = math.e.fctl
									value = 2
								}
								set_variable = {
									which = math.e.a1
									which = math.e.sq
								}
								set_variable = {
									which = math.e.a2
									which = math.e.expnt
								}
								set_variable = {
									which = math.e.a3
									value = 2
								}
								set_variable = {
									which = math.e.tmp
									which = math.e.a2
								}
								multiply_variable = {
									which = math.e.tmp
									which = math.e.a3
								}
								change_variable = {
									which = math.e.tmp
									which = math.e.a1
								}
								divide_variable = {
									which = math.e.tmp
									which = math.e.fct
								}
								change_variable = {
									which = math.e.sm
									which = math.e.tmp
								}
								set_variable = {
									which = math.e.prec
									value = 3
								}
								subtract_variable = {
									which = math.e.prec
									value = 1
								}
								while = {
									limit = {
										check_variable = {
											which = math.e.prec
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									change_variable = {
										which = math.e.fctl
										value = 1
									}
									multiply_variable = {
										which = math.e.fct
										which = math.e.fctl
									}
									change_variable = {
										which = math.e.fctl
										value = 1
									}
									multiply_variable = {
										which = math.e.fct
										which = math.e.fctl
									}
									multiply_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									multiply_variable = {
										which = math.e.a2
										which = math.e.sq
									}
									change_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
								}
							}
							multiply_variable = {
								which = math.e.return
								which = math.e.sm
							}
							set_variable = {
								which = exp_val
								which = math.e.return
							}
							set_variable = {
								which = math.e.sm
								value = 0
							}
							set_variable = {
								which = math.e.tmp
								value = 0
							}
							set_variable = {
								which = math.e.a1
								value = 0
							}
							set_variable = {
								which = math.e.a2
								value = 0
							}
							set_variable = {
								which = math.e.a3
								value = 0
							}
							set_variable = {
								which = math.e.fctl
								value = 0
							}
							set_variable = {
								which = math.e.fct
								value = 0
							}
							set_variable = {
								which = math.e.prec
								value = 0
							}
							set_variable = {
								which = math.e.sq
								value = 0
							}
						}
						set_variable = {
							which = math.e.expnt
							value = 0
						}
						set_variable = {
							which = math.e.return
							value = 0
						}
						while = {
							limit = {
								check_variable = {
									which = int_m_exp
									value = 1
								}
							}
							subtract_variable = {
								which = int_m_exp
								value = 1
							}
							multiply_variable = {
								which = exp_val
								which = inp_m_exp
							}
						}
						set_variable = {
							which = exp_m_exp
							value = 0
						}
						set_variable = {
							which = int_m_exp
							value = 0
						}
						set_variable = {
							which = dec_m_exp
							value = 0
						}
						set_variable = {
							which = ln_val
							value = 0
						}
					}
					set_variable = {
						which = inp_m_exp
						value = 0
					}
					set_variable = {
						which = EstateProv_Unrest
						which = exp_val
					}
					set_variable = {
						which = exp_val
						value = 0
					}
					export_to_variable = {
						which = EstateProv_LA
						value = local_autonomy
					}
					multiply_variable = {
						which = EstateProv_LA
						value = 0.008
					}
					change_variable = {
						which = EstateProv_LA
						value = 0.2
					}
					multiply_variable = {
						which = EstateProv_Unrest
						which = EstateProv_LA
					}
					set_variable = {
						which = EstateProv_Unrest_Inp
						which = EstateProv_Unrest
					}
					if = {
						limit = {
							has_province_flag = loss
						}
						clr_province_flag = loss
						multiply_variable = {
							which = EstateProv_Unrest
							value = -1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 0.1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 10
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 25.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_25.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_25.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_25.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_25.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 12.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_12.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_12.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_12.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_12.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 6.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_6.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_6.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_6.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_6.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 3.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_3.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_3.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_3.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_3.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 1.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_1.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_1.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_1.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_1.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.1
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestLoss_0.1
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.1
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.1
						}
					}
					else_if = {
						limit = {
							has_province_flag = gain
						}
						clr_province_flag = gain
						multiply_variable = {
							which = EstateProv_Unrest
							value = 1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 0.1
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 10
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 25.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_25.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_25.6
							}
							remove_province_modifier = EstateProv_UnrestGain_25.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 12.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_12.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_12.8
							}
							remove_province_modifier = EstateProv_UnrestGain_12.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 6.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_6.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_6.4
							}
							remove_province_modifier = EstateProv_UnrestGain_6.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 3.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_3.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_3.2
							}
							remove_province_modifier = EstateProv_UnrestGain_3.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 1.6
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_1.6
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_1.6
							}
							remove_province_modifier = EstateProv_UnrestGain_1.6
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.8
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.8
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.8
							}
							remove_province_modifier = EstateProv_UnrestGain_0.8
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.4
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.4
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.4
							}
							remove_province_modifier = EstateProv_UnrestGain_0.4
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.2
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.2
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.2
							}
							remove_province_modifier = EstateProv_UnrestGain_0.2
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
							}
							subtract_variable = {
								which = EstateProv_Unrest_Inp
								value = 0.1
							}
							if = {
								limit = {
									NOT = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
								}
								add_province_modifier = {
									name = EstateProv_UnrestGain_0.1
									duration = -1
									hidden = yes
								}
							}
						}
						else_if = {
							limit = {
								has_province_modifier = EstateProv_UnrestGain_0.1
							}
							remove_province_modifier = EstateProv_UnrestGain_0.1
						}
					}
					if = {
						limit = {
							check_variable = {
								which = EstateProv_UnrestSave
								value = 0.001
							}
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.001
									}
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
					}
					else_if = {
						limit = {
							NOT = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0
								}
							}
							check_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_25.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_25.6
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_12.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_12.8
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_6.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_6.4
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_3.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_3.2
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_1.6
							}
							remove_province_modifier = EstateProv_UnrestLoss_1.6
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.8
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.8
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.4
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.4
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.2
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.2
						}
						if = {
							limit = {
								has_province_modifier = EstateProv_UnrestLoss_0.1
							}
							remove_province_modifier = EstateProv_UnrestLoss_0.1
						}
					}
					if = {
						limit = {
							is_variable_equal = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_Unrest
							value = 0
						}
					}
					set_variable = {
						which = EstateProv_UnrestSave
						value = 0
					}
					set_variable = {
						which = EstateProv_LA
						value = 0
					}
					set_variable = {
						which = EstateProv_Unrest_Inp
						value = 0
					}
				}
			}
		}
	}
}
country_event = {
	id = POP_Estates_Events.501
	title = "POP_Estates_Events.501.t"
	desc = "POP_Estates_Events.501.d"
	picture = COURT_eventPicture
	is_triggered_only = yes
	hidden = yes
	trigger = {
		is_at_war = yes
	}
	immediate = {}
	option = {
		name = "POP_Estates_Events.501.a"
		ai_chance = {
			factor = 100
		}
	}
}
country_event = {
	id = POP_Estates_Events.901
	title = "POP_Estates_Events.901.t"
	desc = "POP_Estates_Events.901.d"
	picture = COURT_eventPicture
	is_triggered_only = yes
	hidden = yes
	immediate = {
		if = {
			limit = {
				has_country_flag = greater_nobles_crisis
			}
			country_event = {
				id = POP_Estates_Events.911
			}
		}
		if = {
			limit = {
				has_country_flag = lesser_nobles_crisis
			}
			country_event = {
				id = POP_Estates_Events.921
			}
		}
		if = {
			limit = {
				has_country_flag = burghers_crisis
			}
			country_event = {
				id = POP_Estates_Events.931
			}
		}
	}
	option = {
		name = "POP_Estates_Events.901.a"
		ai_chance = {
			factor = 100
		}
	}
}
country_event = {
	id = POP_Estates_Events.911
	title = "POP_Estates_Events.911.t"
	desc = "POP_Estates_Events.911.d"
	picture = COURT_eventPicture
	is_triggered_only = yes
	hidden = no
	immediate = {}
	option = {
		name = "POP_Estates_Events.911.a"
		ai_chance = {
			factor = 100
		}
		hidden_effect = {
			change_variable = {
				which = privilege_demand_ticker_greater_nobles
				value = 40
			}
		}
	}
	option = {
		name = "POP_Estates_Events.911.b"
		ai_chance = {
			factor = 100
		}
		every_owned_province = {
			limit = {
				has_province_flag = greater_nobles_control_province
			}
			random = {
				chance = 75
				add_province_modifier = {
					name = GN_province_unrest
					duration = 3650
				}
				add_unrest = 10
			}
		}
	}
}
country_event = {
	id = POP_Estates_Events.921
	title = "POP_Estates_Events.921.t"
	desc = "POP_Estates_Events.921.d"
	picture = COURT_eventPicture
	is_triggered_only = yes
	hidden = no
	immediate = {}
	option = {
		name = "POP_Estates_Events.921.a"
		ai_chance = {
			factor = 100
		}
		hidden_effect = {
			change_variable = {
				which = privilege_demand_ticker_lesser_nobles
				value = 40
			}
		}
	}
	option = {
		name = "POP_Estates_Events.921.b"
		ai_chance = {
			factor = 100
		}
		every_owned_province = {
			limit = {
				has_province_flag = lesser_nobles_control_province
			}
			random = {
				chance = 75
				add_province_modifier = {
					name = LN_province_unrest
					duration = 3650
				}
				add_unrest = 10
			}
		}
	}
}
country_event = {
	id = POP_Estates_Events.931
	title = "POP_Estates_Events.931.t"
	desc = "POP_Estates_Events.931.d"
	picture = COURT_eventPicture
	is_triggered_only = yes
	hidden = no
	immediate = {}
	option = {
		name = "POP_Estates_Events.931.a"
		ai_chance = {
			factor = 100
		}
		change_variable = {
			which = privilege_demand_ticker_burghers
			value = 40
		}
	}
	option = {
		name = "POP_Estates_Events.931.b"
		ai_chance = {
			factor = 100
		}
		every_owned_province = {
			limit = {
				has_province_flag = burghers_control_province
			}
			random = {
				chance = 75
				add_province_modifier = {
					name = BG_province_unrest
					duration = 3650
				}
				add_unrest = 10
			}
		}
	}
}
