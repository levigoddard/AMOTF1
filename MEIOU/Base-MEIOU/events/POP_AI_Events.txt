namespace = POP_AI
country_event = {
	id = POP_AI.001
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = no
	trigger = {
		is_year = 1358
		NOT = {
			has_country_modifier = government_ai_assess_made
		}
	}
	mean_time_to_happen = {
		months = 6
	}
	immediate = {
		add_country_modifier = {
			name = government_ai_assess_made
			duration = 900
			hidden = yes
		}
		export_to_variable = {
			which = tmpDevTotal
			value = total_development
		}
		capital_scope = {
			set_variable = {
				which = tmpDevCap
				which = devPointUrbanCur
			}
			PREV = {
				set_variable = {
					which = tmpDevCap
					which = PREV
				}
			}
			set_variable = {
				which = tmpDevCap
				value = 0
			}
		}
		divide_variable = {
			which = tmpDevTotal
			value = 30
		}
		divide_variable = {
			which = tmpDevCap
			value = 5
		}
		set_variable = {
			which = tmpDevCheck
			which = year_ticker
		}
		subtract_variable = {
			which = tmpDevCheck
			value = 56
		}
		divide_variable = {
			which = tmpDevCheck
			value = 250
		}
		change_variable = {
			which = tmpDevCheck
			value = 1
		}
		if = {
			limit = {
				exists = yes
				OR = {
					ai = yes
					has_country_flag = autoDo
				}
				OR = {
					has_country_flag = autoDo
					check_variable = {
						which = tmpDevTotal
						which = tmpDevCheck
					}
					check_variable = {
						which = tmpDevCap
						which = tmpDevCheck
					}
					capital_scope = {
						OR = {
							continent = north_america
							continent = south_america
							superregion = japan_superregion
						}
					}
					luck = yes
				}
			}
			set_country_flag = aiEventsFired
			save_event_target_as = aiInitTarg
			set_country_flag = aiInitDiploRelated
			if = {
				limit = {
					always = yes
				}
				every_subject_country = {
					limit = {
						NOT = {
							tag = event_target:aiInitTarg
						}
						AND = {
							NOT = {
								liberty_desire = 50
								is_subject_of_type = tributary_state
								is_subject_of_type = rebellious_decentralized_vassal
								is_subject_of_type = rebellious_subjugated_vassal
							}
						}
					}
					set_country_flag = aiInitDiploRelated
					every_subject_country = {
						limit = {
							NOT = {
								tag = event_target:aiInitTarg
							}
							AND = {
								NOT = {
									liberty_desire = 50
									is_subject_of_type = tributary_state
									is_subject_of_type = rebellious_decentralized_vassal
									is_subject_of_type = rebellious_subjugated_vassal
								}
							}
						}
						set_country_flag = aiInitDiploRelated
						every_subject_country = {
							limit = {
								NOT = {
									tag = event_target:aiInitTarg
								}
								AND = {
									NOT = {
										liberty_desire = 50
										is_subject_of_type = tributary_state
										is_subject_of_type = rebellious_decentralized_vassal
										is_subject_of_type = rebellious_subjugated_vassal
									}
								}
							}
							set_country_flag = aiInitDiploRelated
						}
					}
				}
			}
			if = {
				limit = {
					always = yes
				}
				overlord = {
					if = {
						limit = {
							NOT = {
								tag = event_target:aiInitTarg
							}
						}
						if = {
							limit = {
								is_subject = yes
							}
							overlord = {
								if = {
									limit = {
										NOT = {
											tag = event_target:aiInitTarg
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:aiInitTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:aiInitTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:aiInitTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
											}
										}
									}
								}
							}
						}
						else = {
							set_country_flag = aiInitDiploRelated
							every_subject_country = {
								limit = {
									NOT = {
										tag = event_target:aiInitTarg
									}
									AND = {
										NOT = {
											liberty_desire = 50
											is_subject_of_type = tributary_state
											is_subject_of_type = rebellious_decentralized_vassal
											is_subject_of_type = rebellious_subjugated_vassal
										}
									}
								}
								set_country_flag = aiInitDiploRelated
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:aiInitTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:aiInitTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
									}
								}
							}
						}
					}
				}
			}
			set_variable = {
				which = aiInitDiploArmy
				value = 0
			}
			set_variable = {
				which = aiInitDiploNavy
				value = 0
			}
			every_country = {
				limit = {
					has_country_flag = aiInitDiploRelated
				}
				clr_country_flag = aiInitDiploRelated
				if = {
					limit = {
						always = yes
					}
					if = {
						limit = {
							always = yes
						}
						export_to_variable = {
							which = AIMiscArmySize
							value = army_size
						}
					}
					else = {
						set_variable = {
							which = AIMiscArmySize
							value = 0
						}
					}
					export_to_variable = {
						which = AIMiscLFL
						value = land_forcelimit
					}
					export_to_variable = {
						which = AIMiscManpow
						value = manpower
					}
					set_variable = {
						which = AIMiscArmyEstate
						value = 0
					}
					if = {
						limit = {
							check_variable = {
								which = estate_tribals_loyalty
								value = 0.11
							}
						}
						set_variable = {
							which = tmpArmyTR
							which = estate_tribals_infantry_host
						}
						change_variable = {
							which = tmpArmyTR
							which = estate_tribals_cavalry_host
						}
						multiply_variable = {
							which = tmpArmyTR
							value = 1.25
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = tmpArmyTR
						}
						set_variable = {
							which = tmpArmyTR
							value = 0
						}
					}
					if = {
						limit = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.11
							}
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_greater_nobles_infantry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_greater_nobles_cavalry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_greater_nobles_artillery_total
						}
					}
					if = {
						limit = {
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.11
							}
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_lesser_nobles_infantry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_lesser_nobles_cavalry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_lesser_nobles_artillery_total
						}
					}
					multiply_variable = {
						which = AIMiscArmyEstate
						value = 0.85
					}
					if = {
						limit = {
							always = yes
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = AIMiscManpow
										which = AIMiscLFL
									}
								}
							}
							subtract_variable = {
								which = AIMiscLFL
								which = AIMiscManpow
							}
							multiply_variable = {
								which = AIMiscLFL
								value = 0.15
							}
							multiply_variable = {
								which = AIMiscManpow
								value = 0.3
							}
						}
						else = {
							subtract_variable = {
								which = AIMiscManpow
								which = AIMiscLFL
							}
							multiply_variable = {
								which = AIMiscManpow
								value = 0.15
							}
							multiply_variable = {
								which = AIMiscLFL
								value = 0.3
							}
						}
						change_variable = {
							which = AIMiscArmySize
							which = AIMiscLFL
						}
						change_variable = {
							which = AIMiscArmySize
							which = AIMiscManpow
						}
					}
					if = {
						limit = {
							always = yes
						}
						change_variable = {
							which = AIMiscArmySize
							which = AIMiscArmyEstate
						}
					}
					set_variable = {
						which = tmpAIInitDiploArmy
						which = AIMiscArmySize
					}
					set_variable = {
						which = AIMiscArmySize
						value = 0
					}
					set_variable = {
						which = AIMiscLFL
						value = 0
					}
					set_variable = {
						which = AIMiscManpow
						value = 0
					}
					set_variable = {
						which = AIMiscArmyEstate
						value = 0
					}
					export_to_variable = {
						which = AIMiscMilTech
						value = mil_tech
					}
					export_to_variable = {
						which = AIMiscLandMorale
						value = modifier:land_morale
					}
					export_to_variable = {
						which = AIMiscDisc
						value = modifier:discipline
					}
					multiply_variable = {
						which = AIMiscMilTech
						value = 0.1
					}
					multiply_variable = {
						which = AIMiscLandMorale
						value = 2
					}
					multiply_variable = {
						which = AIMiscDisc
						value = 5
					}
					change_variable = {
						which = AIMiscMilTech
						value = 1
					}
					change_variable = {
						which = AIMiscLandMorale
						value = 1
					}
					change_variable = {
						which = AIMiscDisc
						value = 1
					}
					if = {
						limit = {
							OR = {
								NOT = {
									check_variable = {
										which = AIMiscMilTech
										value = 0.001
									}
								}
								NOT = {
									check_variable = {
										which = AIMiscLandMorale
										value = 0.001
									}
								}
								NOT = {
									check_variable = {
										which = AIMiscDisc
										value = 0.001
									}
								}
							}
						}
						set_variable = {
							which = tmpAIInitDiploArmyQual
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploArmyQual
							which = AIMiscMilTech
						}
						multiply_variable = {
							which = tmpAIInitDiploArmyQual
							which = AIMiscLandMorale
						}
						multiply_variable = {
							which = tmpAIInitDiploArmyQual
							which = AIMiscLandMorale
						}
					}
					set_variable = {
						which = AIMiscMilTech
						value = 0
					}
					set_variable = {
						which = AIMiscLandMorale
						value = 0
					}
					set_variable = {
						which = AIMiscDisc
						value = 0
					}
				}
				else = {
					set_variable = {
						which = tmpAIInitDiploArmy
						value = 0
					}
					set_variable = {
						which = tmpAIInitDiploArmyQual
						value = 0
					}
				}
				if = {
					limit = {
						always = yes
					}
					export_to_variable = {
						which = tmpAIInitDiploNavy
						value = navy_size
					}
					export_to_variable = {
						which = AIMiscDipTech
						value = dip_tech
					}
					export_to_variable = {
						which = AIMiscNavMorale
						value = modifier:naval_morale
					}
					multiply_variable = {
						which = AIMiscDipTech
						value = 0.1
					}
					multiply_variable = {
						which = AIMiscNavMorale
						value = 1.5
					}
					change_variable = {
						which = AIMiscDipTech
						value = 1
					}
					change_variable = {
						which = AIMiscNavMorale
						value = 1
					}
					if = {
						limit = {
							OR = {
								NOT = {
									check_variable = {
										which = AIMiscDipTech
										value = 0.001
									}
								}
								NOT = {
									check_variable = {
										which = AIMiscNavMorale
										value = 0.001
									}
								}
							}
						}
						set_variable = {
							which = tmpAIInitDiploNavyQual
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploNavyQual
							which = AIMiscDipTech
						}
						change_variable = {
							which = tmpAIInitDiploNavyQual
							which = AIMiscNavMorale
						}
					}
					set_variable = {
						which = AIMiscDipTech
						value = 0
					}
					set_variable = {
						which = AIMiscNavMorale
						value = 0
					}
				}
				else = {
					set_variable = {
						which = tmpAIInitDiploNavy
						value = 0
					}
					set_variable = {
						which = tmpAIInitDiploNavyQual
						value = 0
					}
				}
				multiply_variable = {
					which = tmpAIInitDiploArmy
					which = tmpAIInitDiploArmyQual
				}
				multiply_variable = {
					which = tmpAIInitDiploNavy
					which = tmpAIInitDiploNavyQual
				}
				PREV = {
					set_variable = {
						which = tmpAIInitDiploArmy
						which = PREV
					}
					set_variable = {
						which = tmpAIInitDiploNavy
						which = PREV
					}
					change_variable = {
						which = aiInitDiploArmy
						which = tmpAIInitDiploArmy
					}
					change_variable = {
						which = aiInitDiploNavy
						which = tmpAIInitDiploNavy
					}
					set_variable = {
						which = tmpAIInitDiploArmy
						value = 0
					}
					set_variable = {
						which = tmpAIInitDiploNavy
						value = 0
					}
				}
				set_variable = {
					which = tmpAIInitDiploArmy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploNavy
					value = 0
				}
			}
			divide_variable = {
				which = aiInitDiploNavy
				value = 2
			}
			set_variable = {
				which = aiInitPower
				which = aiInitDiploArmy
			}
			change_variable = {
				which = aiInitPower
				which = aiInitDiploNavy
			}
			divide_variable = {
				which = aiInitPower
				value = 50
			}
			set_variable = {
				which = aiInitDiploArmy
				value = 0
			}
			set_variable = {
				which = tmpAIInitDiploArmyQual
				value = 0
			}
			set_variable = {
				which = aiInitDiploNavy
				value = 0
			}
			set_variable = {
				which = tmpAIInitDiploNavyQual
				value = 0
			}
			every_owned_province = {
				set_variable = {
					which = aiInitFortPerDev
					value = 0
				}
				trigger_switch = {
					on_trigger = has_building
					fort_14th = {
						set_variable = {
							which = aiInitFortPerDev
							value = 2
						}
					}
					fort_15th = {
						set_variable = {
							which = aiInitFortPerDev
							value = 4
						}
					}
					fort_16th = {
						set_variable = {
							which = aiInitFortPerDev
							value = 6
						}
					}
					fort_17th = {
						set_variable = {
							which = aiInitFortPerDev
							value = 8
						}
					}
					fort_18th = {
						set_variable = {
							which = aiInitFortPerDev
							value = 10
						}
					}
				}
				PREV = {
					change_variable = {
						which = aiInitFortPerDev
						which = PREV
					}
				}
				set_variable = {
					which = aiInitFortPerDev
					value = 0
				}
			}
			export_to_variable = {
				which = aiInitTotalDev
				value = total_development
			}
			divide_variable = {
				which = aiInitFortPerDev
				which = aiInitTotalDev
			}
			set_variable = {
				which = aiInitTotalDev
				value = 0
			}
			every_country = {
				limit = {
					NOT = {
						is_subject = yes
						NOT = {
							is_subject_of_type = tributary_state
						}
						NOT = {
							is_subject_of_type = close_tributary_state
						}
					}
					OR = {
						is_neighbor_of = PREV
						has_casus_belli_against = PREV
						capital_distance = {
							who = event_target:aiInitTarg
							distance = 80
						}
					}
					NOT = {
						tag = PREV
					}
				}
				set_country_flag = aiInitInRange@PREV
				set_country_flag = aiInitDiploRelated
				if = {
					limit = {
						always = yes
					}
					every_subject_country = {
						limit = {
							NOT = {
								tag = event_target:aiInitTarg
							}
							AND = {
								NOT = {
									liberty_desire = 50
									is_subject_of_type = tributary_state
									is_subject_of_type = rebellious_decentralized_vassal
									is_subject_of_type = rebellious_subjugated_vassal
								}
							}
						}
						set_country_flag = aiInitDiploRelated
						every_subject_country = {
							limit = {
								NOT = {
									tag = event_target:aiInitTarg
								}
								AND = {
									NOT = {
										liberty_desire = 50
										is_subject_of_type = tributary_state
										is_subject_of_type = rebellious_decentralized_vassal
										is_subject_of_type = rebellious_subjugated_vassal
									}
								}
							}
							set_country_flag = aiInitDiploRelated
							every_subject_country = {
								limit = {
									NOT = {
										tag = event_target:aiInitTarg
									}
									AND = {
										NOT = {
											liberty_desire = 50
											is_subject_of_type = tributary_state
											is_subject_of_type = rebellious_decentralized_vassal
											is_subject_of_type = rebellious_subjugated_vassal
										}
									}
								}
								set_country_flag = aiInitDiploRelated
							}
						}
					}
				}
				if = {
					limit = {
						always = yes
					}
					overlord = {
						if = {
							limit = {
								NOT = {
									tag = event_target:aiInitTarg
								}
							}
							if = {
								limit = {
									is_subject = yes
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:aiInitTarg
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:aiInitTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:aiInitTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:aiInitTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
												}
											}
										}
									}
								}
							}
							else = {
								set_country_flag = aiInitDiploRelated
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:aiInitTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:aiInitTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:aiInitTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
						}
					}
				}
				set_variable = {
					which = aiInitDiploArmy
					value = 0
				}
				set_variable = {
					which = aiInitDiploNavy
					value = 0
				}
				every_country = {
					limit = {
						has_country_flag = aiInitDiploRelated
					}
					clr_country_flag = aiInitDiploRelated
					if = {
						limit = {
							always = yes
						}
						if = {
							limit = {
								always = yes
							}
							export_to_variable = {
								which = AIMiscArmySize
								value = army_size
							}
						}
						else = {
							set_variable = {
								which = AIMiscArmySize
								value = 0
							}
						}
						export_to_variable = {
							which = AIMiscLFL
							value = land_forcelimit
						}
						export_to_variable = {
							which = AIMiscManpow
							value = manpower
						}
						set_variable = {
							which = AIMiscArmyEstate
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = estate_tribals_loyalty
									value = 0.11
								}
							}
							set_variable = {
								which = tmpArmyTR
								which = estate_tribals_infantry_host
							}
							change_variable = {
								which = tmpArmyTR
								which = estate_tribals_cavalry_host
							}
							multiply_variable = {
								which = tmpArmyTR
								value = 1.25
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = tmpArmyTR
							}
							set_variable = {
								which = tmpArmyTR
								value = 0
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 0.11
								}
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_infantry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_cavalry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_artillery_total
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.11
								}
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_infantry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_cavalry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_artillery_total
							}
						}
						multiply_variable = {
							which = AIMiscArmyEstate
							value = 0.85
						}
						if = {
							limit = {
								always = yes
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = AIMiscManpow
											which = AIMiscLFL
										}
									}
								}
								subtract_variable = {
									which = AIMiscLFL
									which = AIMiscManpow
								}
								multiply_variable = {
									which = AIMiscLFL
									value = 0.15
								}
								multiply_variable = {
									which = AIMiscManpow
									value = 0.3
								}
							}
							else = {
								subtract_variable = {
									which = AIMiscManpow
									which = AIMiscLFL
								}
								multiply_variable = {
									which = AIMiscManpow
									value = 0.15
								}
								multiply_variable = {
									which = AIMiscLFL
									value = 0.3
								}
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscLFL
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscManpow
							}
						}
						if = {
							limit = {
								always = yes
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscArmyEstate
							}
						}
						set_variable = {
							which = tmpAIInitDiploArmy
							which = AIMiscArmySize
						}
						set_variable = {
							which = AIMiscArmySize
							value = 0
						}
						set_variable = {
							which = AIMiscLFL
							value = 0
						}
						set_variable = {
							which = AIMiscManpow
							value = 0
						}
						set_variable = {
							which = AIMiscArmyEstate
							value = 0
						}
						export_to_variable = {
							which = AIMiscMilTech
							value = mil_tech
						}
						export_to_variable = {
							which = AIMiscLandMorale
							value = modifier:land_morale
						}
						export_to_variable = {
							which = AIMiscDisc
							value = modifier:discipline
						}
						multiply_variable = {
							which = AIMiscMilTech
							value = 0.1
						}
						multiply_variable = {
							which = AIMiscLandMorale
							value = 2
						}
						multiply_variable = {
							which = AIMiscDisc
							value = 5
						}
						change_variable = {
							which = AIMiscMilTech
							value = 1
						}
						change_variable = {
							which = AIMiscLandMorale
							value = 1
						}
						change_variable = {
							which = AIMiscDisc
							value = 1
						}
						if = {
							limit = {
								OR = {
									NOT = {
										check_variable = {
											which = AIMiscMilTech
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscLandMorale
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscDisc
											value = 0.001
										}
									}
								}
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
						}
						else = {
							set_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscMilTech
							}
							multiply_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscLandMorale
							}
							multiply_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscLandMorale
							}
						}
						set_variable = {
							which = AIMiscMilTech
							value = 0
						}
						set_variable = {
							which = AIMiscLandMorale
							value = 0
						}
						set_variable = {
							which = AIMiscDisc
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploArmy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploArmyQual
							value = 0
						}
					}
					if = {
						limit = {
							always = yes
						}
						export_to_variable = {
							which = tmpAIInitDiploNavy
							value = navy_size
						}
						export_to_variable = {
							which = AIMiscDipTech
							value = dip_tech
						}
						export_to_variable = {
							which = AIMiscNavMorale
							value = modifier:naval_morale
						}
						multiply_variable = {
							which = AIMiscDipTech
							value = 0.1
						}
						multiply_variable = {
							which = AIMiscNavMorale
							value = 1.5
						}
						change_variable = {
							which = AIMiscDipTech
							value = 1
						}
						change_variable = {
							which = AIMiscNavMorale
							value = 1
						}
						if = {
							limit = {
								OR = {
									NOT = {
										check_variable = {
											which = AIMiscDipTech
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscNavMorale
											value = 0.001
										}
									}
								}
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
						}
						else = {
							set_variable = {
								which = tmpAIInitDiploNavyQual
								which = AIMiscDipTech
							}
							change_variable = {
								which = tmpAIInitDiploNavyQual
								which = AIMiscNavMorale
							}
						}
						set_variable = {
							which = AIMiscDipTech
							value = 0
						}
						set_variable = {
							which = AIMiscNavMorale
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploNavy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploNavyQual
							value = 0
						}
					}
					multiply_variable = {
						which = tmpAIInitDiploArmy
						which = tmpAIInitDiploArmyQual
					}
					multiply_variable = {
						which = tmpAIInitDiploNavy
						which = tmpAIInitDiploNavyQual
					}
					PREV = {
						set_variable = {
							which = tmpAIInitDiploArmy
							which = PREV
						}
						set_variable = {
							which = tmpAIInitDiploNavy
							which = PREV
						}
						change_variable = {
							which = aiInitDiploArmy
							which = tmpAIInitDiploArmy
						}
						change_variable = {
							which = aiInitDiploNavy
							which = tmpAIInitDiploNavy
						}
						set_variable = {
							which = tmpAIInitDiploArmy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploNavy
							value = 0
						}
					}
					set_variable = {
						which = tmpAIInitDiploArmy
						value = 0
					}
					set_variable = {
						which = tmpAIInitDiploNavy
						value = 0
					}
				}
				divide_variable = {
					which = aiInitDiploNavy
					value = 2
				}
				set_variable = {
					which = aiInitPower
					which = aiInitDiploArmy
				}
				change_variable = {
					which = aiInitPower
					which = aiInitDiploNavy
				}
				divide_variable = {
					which = aiInitPower
					value = 50
				}
				set_variable = {
					which = aiInitDiploArmy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploArmyQual
					value = 0
				}
				set_variable = {
					which = aiInitDiploNavy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploNavyQual
					value = 0
				}
				event_target:aiInitTarg = {
					if = {
						limit = {
							NOT = {
								has_opinion_modifier = {
									modifier = aggressive_expansion
									who = PREV
									value = -1000
								}
							}
						}
						set_variable = {
							which = aiInitDiploAE
							value = 0
						}
					}
					else = {
						if = {
							limit = {
								has_opinion_modifier = {
									modifier = aggressive_expansion
									who = PREV
									value = -63
								}
							}
							if = {
								limit = {
									has_opinion_modifier = {
										modifier = aggressive_expansion
										who = PREV
										value = -31
									}
								}
								if = {
									limit = {
										has_opinion_modifier = {
											modifier = aggressive_expansion
											who = PREV
											value = -15
										}
									}
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -7
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -3
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -1
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = 0
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = 0
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -1
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -2
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -2
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -3
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -5
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -4
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -4
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -5
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -6
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -6
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -7
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -11
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -9
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -8
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -8
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -9
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -10
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -10
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -11
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -13
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -12
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -12
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -13
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -14
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -14
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -15
													}
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -23
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -19
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -17
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -16
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -16
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -17
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -18
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -18
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -19
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -21
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -20
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -20
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -21
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -22
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -22
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -23
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -27
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -25
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -24
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -24
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -25
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -26
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -26
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -27
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -29
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -28
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -28
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -29
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -30
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -30
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -31
													}
												}
											}
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										has_opinion_modifier = {
											modifier = aggressive_expansion
											who = PREV
											value = -47
										}
									}
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -39
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -35
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -33
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -32
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -32
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -33
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -34
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -34
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -35
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -37
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -36
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -36
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -37
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -38
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -38
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -39
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -43
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -41
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -40
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -40
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -41
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -42
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -42
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -43
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -45
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -44
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -44
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -45
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -46
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -46
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -47
													}
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -55
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -51
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -49
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -48
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -48
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -49
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -50
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -50
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -51
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -53
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -52
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -52
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -53
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -54
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -54
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -55
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -59
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -57
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -56
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -56
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -57
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -58
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -58
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -59
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -61
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -60
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -60
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -61
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -62
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -62
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -63
													}
												}
											}
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									has_opinion_modifier = {
										modifier = aggressive_expansion
										who = PREV
										value = -95
									}
								}
								if = {
									limit = {
										has_opinion_modifier = {
											modifier = aggressive_expansion
											who = PREV
											value = -79
										}
									}
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -71
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -67
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -65
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -64
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -64
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -65
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -66
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -66
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -67
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -69
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -68
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -68
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -69
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -70
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -70
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -71
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -75
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -73
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -72
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -72
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -73
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -74
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -74
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -75
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -77
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -76
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -76
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -77
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -78
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -78
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -79
													}
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -87
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -83
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -81
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -80
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -80
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -81
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -82
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -82
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -83
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -85
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -84
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -84
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -85
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -86
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -86
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -87
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -91
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -89
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -88
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -88
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -89
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -90
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -90
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -91
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -93
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -92
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -92
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -93
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -94
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -94
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -95
													}
												}
											}
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										has_opinion_modifier = {
											modifier = aggressive_expansion
											who = PREV
											value = -111
										}
									}
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -103
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -99
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -97
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -96
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -96
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -97
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -98
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -98
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -99
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -101
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -100
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -100
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -101
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -102
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -102
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -103
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -107
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -105
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -104
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -104
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -105
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -106
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -106
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -107
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -109
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -108
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -108
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -109
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -110
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -110
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -111
													}
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -119
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -115
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -113
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -112
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -112
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -113
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -114
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -114
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -115
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -117
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -116
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -116
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -117
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -118
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -118
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -119
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -123
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -121
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -120
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -120
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -121
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -122
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -122
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -123
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -125
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -124
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -124
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -125
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -126
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -126
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -127
													}
												}
											}
										}
									}
								}
							}
						}
					}
					PREV = {
						set_variable = {
							which = aiInitDiploAE
							which = PREV
						}
					}
					set_variable = {
						which = aiInitDiploAE
						value = 0
					}
				}
				divide_variable = {
					which = aiInitDiploAE
					value = -40
				}
				set_variable = {
					which = aiInitDiploGrowth
					which = devGrowthSum
				}
				divide_variable = {
					which = aiInitDiploGrowth
					value = 20
				}
				set_variable = {
					which = aiInitThreat
					which = aiInitDiploAE
				}
				change_variable = {
					which = aiInitThreat
					which = aiInitDiploGrowth
				}
				set_variable = {
					which = aiInitDiploAE
					value = 0
				}
				set_variable = {
					which = aiInitDiploGrowth
					value = 0
				}
			}
			set_variable = {
				which = tmpValPos
				value = 0
			}
			set_variable = {
				which = tmpValNeg
				value = 0
			}
			set_variable = {
				which = tmpMultPos
				value = 1
			}
			set_variable = {
				which = tmpMultNeg
				value = 1
			}
			if = {
				limit = {
					personality = ai_militarist
				}
				change_variable = {
					which = tmpMultPos
					value = 0.2
				}
				subtract_variable = {
					which = tmpMultNeg
					value = 0.1
				}
			}
			set_variable = {
				which = tmpValChange
				which = aiInitPower
			}
			multiply_variable = {
				which = tmpValChange
				value = 0.8
			}
			every_country = {
				limit = {
					has_country_flag = aiInitInRange@PREV
					OR = {
						is_neighbor_of = PREV
						has_casus_belli_against = PREV
					}
					NOT = {
						overlord_of = PREV
					}
					check_variable = {
						which = aiInitPower
						which = PREV
					}
				}
				set_variable = {
					which = tmpValChange
					which = aiInitPower
				}
				subtract_variable = {
					which = tmpValChange
					which = PREV
				}
				set_variable = {
					which = tmpValPos
					which = tmpValChange
				}
				divide_variable = {
					which = tmpValPos
					value = 10
				}
				PREV = {
					change_variable = {
						which = tmpValPos
						which = PREV
					}
				}
				set_variable = {
					which = tmpValChange
					value = 0
				}
				set_variable = {
					which = tmpValPos
					value = 0
				}
			}
			set_variable = {
				which = tmpValChange
				value = 0
			}
			set_variable = {
				which = aiEvalAgendaMilitaryThreat
				value = 0
			}
			capital_scope = {
				save_event_target_as = aiEvalAgendaMilitaryTarg
			}
			every_country = {
				limit = {
					has_country_flag = aiInitInRange@PREV
					OR = {
						is_neighbor_of = PREV
						capital_scope = {
							superregion = event_target:aiEvalAgendaMilitaryTarg
						}
					}
					NOT = {
						overlord_of = PREV
						tag = PREV
					}
				}
				set_variable = {
					which = aiEvalAgendaMilitaryThreat
					which = aiInitThreat
				}
				multiply_variable = {
					which = aiEvalAgendaMilitaryThreat
					which = aiInitPower
				}
				divide_variable = {
					which = aiEvalAgendaMilitaryThreat
					value = 15
				}
				PREV = {
					change_variable = {
						which = aiEvalAgendaMilitaryThreat
						which = PREV
					}
				}
				set_variable = {
					which = aiEvalAgendaMilitaryThreat
					value = 0
				}
			}
			change_variable = {
				which = tmpValPos
				which = aiEvalAgendaMilitaryThreat
			}
			set_variable = {
				which = aiEvalAgendaMilitaryThreat
				value = 0
			}
			if = {
				limit = {
					ruler_has_personality = naive_personality
				}
				change_variable = {
					which = tmpMultNeg
					value = 0.2
				}
				subtract_variable = {
					which = tmpMultPos
					value = 0.1
				}
			}
			if = {
				limit = {
					has_country_modifier = manpower_full
				}
				change_variable = {
					which = tmpValNeg
					value = 0.5
				}
			}
			if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = tmpLandArmy
							value = army_size
						}
						export_to_variable = {
							which = tmpLandFL
							value = land_forcelimit
						}
						divide_variable = {
							which = tmpLandArmy
							which = tmpLandFL
						}
						check_variable = {
							which = tmpLandArmy
							value = 0.75
						}
					}
				}
				change_variable = {
					which = tmpValNeg
					value = 1
				}
			}
			if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = tmpNavFL
							value = naval_forcelimit
						}
						export_to_variable = {
							which = tmpTotalDev
							value = total_development
						}
						divide_variable = {
							which = tmpNavFL
							which = tmpTotalDev
						}
						check_variable = {
							which = tmpNavFL
							value = 0.25
						}
					}
				}
				change_variable = {
					which = tmpValNeg
					value = 1
				}
			}
			multiply_variable = {
				which = tmpValPos
				which = tmpMultPos
			}
			multiply_variable = {
				which = tmpValNeg
				which = tmpMultNeg
			}
			subtract_variable = {
				which = tmpValPos
				which = tmpValNeg
			}
			set_variable = {
				which = tmpEval
				which = tmpValPos
			}
			set_variable = {
				which = tmpValPos
				value = 0
			}
			set_variable = {
				which = tmpMultPos
				value = 0
			}
			set_variable = {
				which = tmpValNeg
				value = 0
			}
			set_variable = {
				which = tmpMultNeg
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasAgendaMilitary
					}
					clr_country_flag = aiHasAgendaMilitary
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasAgendaMilitary
						}
					}
					set_country_flag = aiHasAgendaMilitary
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					OR = {
						NOT = {
							is_subject = yes
							NOT = {
								is_subject_of_type = tributary_state
							}
							NOT = {
								is_subject_of_type = close_tributary_state
							}
						}
						is_subject_of_type = daimyo_vassal
						is_subject_of_type = rebellious_decentralized_vassal
						is_subject_of_type = rebellious_subjugated_vassal
						is_subject_of_type = close_tributary_state
						is_subject_of_type = warlord
					}
				}
				set_variable = {
					which = tmpEval
					value = 1
				}
				export_to_variable = {
					which = aiEvalAgendaExpansionDiv
					value = monthly_income
				}
				export_to_variable = {
					which = aiEvalAgendaExpansionTreasury
					value = treasury
				}
				change_variable = {
					which = aiEvalAgendaExpansionTreasury
					which = aiTreasuryGeneral
				}
				multiply_variable = {
					which = aiEvalAgendaExpansionDiv
					value = 12
				}
				change_variable = {
					which = aiEvalAgendaExpansionDiv
					value = 300
				}
				divide_variable = {
					which = aiEvalAgendaExpansionTreasury
					which = aiEvalAgendaExpansionDiv
				}
				multiply_variable = {
					which = aiEvalAgendaExpansionTreasury
					value = 2
				}
				if = {
					limit = {
						check_variable = {
							which = aiEvalAgendaExpansionTreasury
							value = 2
						}
					}
					set_variable = {
						which = aiEvalAgendaExpansionTreasury
						value = 2
					}
				}
				multiply_variable = {
					which = tmpEval
					which = aiEvalAgendaExpansionTreasury
				}
				export_to_variable = {
					which = aiEvalAgendaExpansionDev
					value = total_development
				}
				set_country_flag = aiInitDiploRelated
				if = {
					limit = {
						always = yes
					}
					every_subject_country = {
						limit = {
							NOT = {
								tag = ROOT
							}
							AND = {
								NOT = {
									liberty_desire = 50
									is_subject_of_type = tributary_state
									is_subject_of_type = rebellious_decentralized_vassal
									is_subject_of_type = rebellious_subjugated_vassal
								}
							}
						}
						set_country_flag = aiInitDiploRelated
						every_subject_country = {
							limit = {
								NOT = {
									tag = ROOT
								}
								AND = {
									NOT = {
										liberty_desire = 50
										is_subject_of_type = tributary_state
										is_subject_of_type = rebellious_decentralized_vassal
										is_subject_of_type = rebellious_subjugated_vassal
									}
								}
							}
							set_country_flag = aiInitDiploRelated
							every_subject_country = {
								limit = {
									NOT = {
										tag = ROOT
									}
									AND = {
										NOT = {
											liberty_desire = 50
											is_subject_of_type = tributary_state
											is_subject_of_type = rebellious_decentralized_vassal
											is_subject_of_type = rebellious_subjugated_vassal
										}
									}
								}
								set_country_flag = aiInitDiploRelated
							}
						}
					}
				}
				if = {
					limit = {
						always = no
					}
					overlord = {
						if = {
							limit = {
								NOT = {
									tag = ROOT
								}
							}
							if = {
								limit = {
									is_subject = yes
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = ROOT
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = ROOT
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = ROOT
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = ROOT
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
												}
											}
										}
									}
								}
							}
							else = {
								set_country_flag = aiInitDiploRelated
								every_subject_country = {
									limit = {
										NOT = {
											tag = ROOT
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = ROOT
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = ROOT
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
						}
					}
				}
				set_variable = {
					which = aiInitDiploArmy
					value = 0
				}
				set_variable = {
					which = aiInitDiploNavy
					value = 0
				}
				every_country = {
					limit = {
						has_country_flag = aiInitDiploRelated
					}
					clr_country_flag = aiInitDiploRelated
					if = {
						limit = {
							always = yes
						}
						if = {
							limit = {
								always = yes
							}
							export_to_variable = {
								which = AIMiscArmySize
								value = army_size
							}
						}
						else = {
							set_variable = {
								which = AIMiscArmySize
								value = 0
							}
						}
						export_to_variable = {
							which = AIMiscLFL
							value = land_forcelimit
						}
						export_to_variable = {
							which = AIMiscManpow
							value = manpower
						}
						set_variable = {
							which = AIMiscArmyEstate
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = estate_tribals_loyalty
									value = 0.11
								}
							}
							set_variable = {
								which = tmpArmyTR
								which = estate_tribals_infantry_host
							}
							change_variable = {
								which = tmpArmyTR
								which = estate_tribals_cavalry_host
							}
							multiply_variable = {
								which = tmpArmyTR
								value = 1.25
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = tmpArmyTR
							}
							set_variable = {
								which = tmpArmyTR
								value = 0
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 0.11
								}
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_infantry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_cavalry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_artillery_total
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.11
								}
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_infantry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_cavalry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_artillery_total
							}
						}
						multiply_variable = {
							which = AIMiscArmyEstate
							value = 0.85
						}
						if = {
							limit = {
								always = yes
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = AIMiscManpow
											which = AIMiscLFL
										}
									}
								}
								subtract_variable = {
									which = AIMiscLFL
									which = AIMiscManpow
								}
								multiply_variable = {
									which = AIMiscLFL
									value = 0.15
								}
								multiply_variable = {
									which = AIMiscManpow
									value = 0.3
								}
							}
							else = {
								subtract_variable = {
									which = AIMiscManpow
									which = AIMiscLFL
								}
								multiply_variable = {
									which = AIMiscManpow
									value = 0.15
								}
								multiply_variable = {
									which = AIMiscLFL
									value = 0.3
								}
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscLFL
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscManpow
							}
						}
						if = {
							limit = {
								always = yes
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscArmyEstate
							}
						}
						set_variable = {
							which = tmpAIInitDiploArmy
							which = AIMiscArmySize
						}
						set_variable = {
							which = AIMiscArmySize
							value = 0
						}
						set_variable = {
							which = AIMiscLFL
							value = 0
						}
						set_variable = {
							which = AIMiscManpow
							value = 0
						}
						set_variable = {
							which = AIMiscArmyEstate
							value = 0
						}
						export_to_variable = {
							which = AIMiscMilTech
							value = mil_tech
						}
						export_to_variable = {
							which = AIMiscLandMorale
							value = modifier:land_morale
						}
						export_to_variable = {
							which = AIMiscDisc
							value = modifier:discipline
						}
						multiply_variable = {
							which = AIMiscMilTech
							value = 0.1
						}
						multiply_variable = {
							which = AIMiscLandMorale
							value = 2
						}
						multiply_variable = {
							which = AIMiscDisc
							value = 5
						}
						change_variable = {
							which = AIMiscMilTech
							value = 1
						}
						change_variable = {
							which = AIMiscLandMorale
							value = 1
						}
						change_variable = {
							which = AIMiscDisc
							value = 1
						}
						if = {
							limit = {
								OR = {
									NOT = {
										check_variable = {
											which = AIMiscMilTech
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscLandMorale
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscDisc
											value = 0.001
										}
									}
								}
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
						}
						else = {
							set_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscMilTech
							}
							multiply_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscLandMorale
							}
							multiply_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscLandMorale
							}
						}
						set_variable = {
							which = AIMiscMilTech
							value = 0
						}
						set_variable = {
							which = AIMiscLandMorale
							value = 0
						}
						set_variable = {
							which = AIMiscDisc
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploArmy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploArmyQual
							value = 0
						}
					}
					if = {
						limit = {
							always = yes
						}
						export_to_variable = {
							which = tmpAIInitDiploNavy
							value = navy_size
						}
						export_to_variable = {
							which = AIMiscDipTech
							value = dip_tech
						}
						export_to_variable = {
							which = AIMiscNavMorale
							value = modifier:naval_morale
						}
						multiply_variable = {
							which = AIMiscDipTech
							value = 0.1
						}
						multiply_variable = {
							which = AIMiscNavMorale
							value = 1.5
						}
						change_variable = {
							which = AIMiscDipTech
							value = 1
						}
						change_variable = {
							which = AIMiscNavMorale
							value = 1
						}
						if = {
							limit = {
								OR = {
									NOT = {
										check_variable = {
											which = AIMiscDipTech
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscNavMorale
											value = 0.001
										}
									}
								}
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
						}
						else = {
							set_variable = {
								which = tmpAIInitDiploNavyQual
								which = AIMiscDipTech
							}
							change_variable = {
								which = tmpAIInitDiploNavyQual
								which = AIMiscNavMorale
							}
						}
						set_variable = {
							which = AIMiscDipTech
							value = 0
						}
						set_variable = {
							which = AIMiscNavMorale
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploNavy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploNavyQual
							value = 0
						}
					}
					multiply_variable = {
						which = tmpAIInitDiploArmy
						which = tmpAIInitDiploArmyQual
					}
					multiply_variable = {
						which = tmpAIInitDiploNavy
						which = tmpAIInitDiploNavyQual
					}
					PREV = {
						set_variable = {
							which = tmpAIInitDiploArmy
							which = PREV
						}
						set_variable = {
							which = tmpAIInitDiploNavy
							which = PREV
						}
						change_variable = {
							which = aiInitDiploArmy
							which = tmpAIInitDiploArmy
						}
						change_variable = {
							which = aiInitDiploNavy
							which = tmpAIInitDiploNavy
						}
						set_variable = {
							which = tmpAIInitDiploArmy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploNavy
							value = 0
						}
					}
					set_variable = {
						which = tmpAIInitDiploArmy
						value = 0
					}
					set_variable = {
						which = tmpAIInitDiploNavy
						value = 0
					}
				}
				divide_variable = {
					which = aiInitDiploNavy
					value = 2
				}
				set_variable = {
					which = aiEvalAgendaExpansionPower
					which = aiInitDiploArmy
				}
				change_variable = {
					which = aiEvalAgendaExpansionPower
					which = aiInitDiploNavy
				}
				divide_variable = {
					which = aiEvalAgendaExpansionPower
					value = 50
				}
				set_variable = {
					which = aiInitDiploArmy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploArmyQual
					value = 0
				}
				set_variable = {
					which = aiInitDiploNavy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploNavyQual
					value = 0
				}
				divide_variable = {
					which = aiEvalAgendaExpansionDev
					value = 100
				}
				multiply_variable = {
					which = aiEvalAgendaExpansionDev
					which = aiEvalAgendaExpansionPower
				}
				if = {
					limit = {
						check_variable = {
							which = aiEvalAgendaExpansionDev
							value = 2
						}
					}
					set_variable = {
						which = aiEvalAgendaExpansionDev
						value = 2
					}
				}
				multiply_variable = {
					which = tmpEval
					which = aiEvalAgendaExpansionDev
				}
				export_to_variable = {
					which = aiEvalAgendaExpansionCorr
					value = corruption
				}
				divide_variable = {
					which = aiEvalAgendaExpansionCorr
					value = 20
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = aiEvalAgendaExpansionCorr
								value = 0.5
							}
						}
					}
					set_variable = {
						which = aiEvalAgendaExpansionCorr
						value = 0.5
					}
				}
				divide_variable = {
					which = tmpEval
					which = aiEvalAgendaExpansionCorr
				}
				if = {
					limit = {
						check_variable = {
							which = tmpEval
							value = 3
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					subtract_variable = {
						which = tmpEval
						value = 2.5
					}
					multiply_variable = {
						which = tmpEval
						value = 2
					}
				}
				set_variable = {
					which = aiEvalAgendaExpansionWarGain
					which = aiVarWarGain
				}
				divide_variable = {
					which = aiEvalAgendaExpansionWarGain
					value = 10
				}
				change_variable = {
					which = tmpEval
					which = aiEvalAgendaExpansionWarGain
				}
				set_variable = {
					which = aiEvalAgendaExpansionWarGain
					value = 0
				}
				set_variable = {
					which = aiEvalAgendaExpansionDiv
					value = 0
				}
				set_variable = {
					which = aiEvalAgendaExpansionTreasury
					value = 0
				}
				set_variable = {
					which = aiEvalAgendaExpansionDev
					value = 0
				}
				set_variable = {
					which = aiEvalAgendaExpansionPower
					value = 0
				}
				set_variable = {
					which = aiEvalAgendaExpansionCorr
					value = 0
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasAgendaExpansion
					}
					clr_country_flag = aiHasAgendaExpansion
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasAgendaExpansion
						}
					}
					set_country_flag = aiHasAgendaExpansion
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			set_variable = {
				which = tmpValPos
				value = 0
			}
			set_variable = {
				which = tmpValNeg
				value = 0
			}
			set_variable = {
				which = tmpMultPos
				value = 1
			}
			set_variable = {
				which = tmpMultNeg
				value = 1
			}
			if = {
				limit = {
					OR = {
						personality = ai_administrator
						ruler_has_personality = midas_touched_personality
						ruler_has_personality = architectural_visionary_personality
						ruler_has_personality = entrepreneur_personality
						ruler_has_personality = industrious_personality
					}
				}
				change_variable = {
					which = tmpMultPos
					value = 0.2
				}
				subtract_variable = {
					which = tmpMultNeg
					value = 0.1
				}
			}
			if = {
				limit = {
					government = republic
				}
				change_variable = {
					which = tmpMultPos
					value = 0.1
				}
			}
			else_if = {
				limit = {
					government = theocracy
				}
				change_variable = {
					which = tmpMultPos
					value = 0.1
				}
			}
			if = {
				limit = {
					OR = {
						treasurer = 1
						alderman = 1
						architect = 1
					}
				}
				change_variable = {
					which = tmpMultPos
					value = 0.1
				}
			}
			change_variable = {
				which = tmpValPos
				which = estate_bureaucracy_weight_share
			}
			set_variable = {
				which = tmp_buf
				value = 0
			}
			export_to_variable = {
				which = global_tax_modifier_buf
				value = modifier:global_tax_modifier
			}
			change_variable = {
				which = tmp_buf
				which = global_tax_modifier_buf
			}
			export_to_variable = {
				which = production_efficiency_buf
				value = modifier:production_efficiency
			}
			divide_variable = {
				which = production_efficiency_buf
				value = 2.0
			}
			change_variable = {
				which = tmp_buf
				which = production_efficiency_buf
			}
			export_to_variable = {
				which = trade_efficiency_buf
				value = modifier:trade_efficiency
			}
			change_variable = {
				which = tmp_buf
				which = trade_efficiency_buf
			}
			export_to_variable = {
				which = global_prov_trade_power_modifier_buf
				value = modifier:global_prov_trade_power_modifier
			}
			change_variable = {
				which = tmp_buf
				which = global_prov_trade_power_modifier_buf
			}
			if = {
				limit = {
					check_variable = {
						which = tmp_buf
						value = 2.0
					}
				}
				set_variable = {
					which = tmp_buf
					value = 2.0
				}
			}
			change_variable = {
				which = tmpValPos
				which = tmp_buf
			}
			set_variable = {
				which = tmp_buf
				value = 0
			}
			set_variable = {
				which = check
				value = 1
			}
			THIS = {
				export_to_variable = {
					which = tmpValChange
					value = treasury
				}
				export_to_variable = {
					which = aiTreasuryVanillaLimit
					value = monthly_income
				}
				multiply_variable = {
					which = aiTreasuryVanillaLimit
					value = 3
				}
				change_variable = {
					which = aiTreasuryVanillaLimit
					value = 200
				}
				if = {
					limit = {
						has_country_flag = aiHasActionWarchest
					}
					multiply_variable = {
						which = aiTreasuryVanillaLimit
						value = 2
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = tmpValChange
								which = aiTreasuryVanillaLimit
							}
						}
					}
					set_variable = {
						which = tmpValChange
						value = 0
					}
				}
				else = {
					subtract_variable = {
						which = tmpValChange
						which = aiTreasuryVanillaLimit
					}
				}
				change_variable = {
					which = tmpValChange
					which = aiTreasuryGeneral
				}
				PREV = {
					set_variable = {
						which = tmpValChange
						which = PREV
					}
				}
				if = {
					limit = {
						NOT = {
							is_variable_equal = {
								which = check
								value = 1
							}
						}
					}
					set_variable = {
						which = tmpValChange
						value = 0
					}
				}
				set_variable = {
					which = aiTreasuryVanillaLimit
					value = 0
				}
			}
			set_variable = {
				which = check
				value = 0
			}
			divide_variable = {
				which = tmpValChange
				value = 2000
			}
			change_variable = {
				which = tmpValPos
				which = tmpValChange
			}
			set_variable = {
				which = tmpValChange
				value = 0
			}
			export_to_variable = {
				which = tmpMonthIncome
				value = monthly_income
			}
			set_variable = {
				which = tmpValChange
				which = country_actual_income
			}
			divide_variable = {
				which = tmpValChange
				which = tmpMonthIncome
			}
			if = {
				limit = {
					check_variable = {
						which = tmpValChange
						value = 0
					}
				}
				multiply_variable = {
					which = tmpValChange
					value = 2
				}
				change_variable = {
					which = tmpValPos
					which = tmpValChange
				}
			}
			else = {
				multiply_variable = {
					which = tmpValChange
					value = -2
				}
				change_variable = {
					which = tmpValNeg
					which = tmpValChange
				}
			}
			set_variable = {
				which = tmpMonthIncome
				value = 0
			}
			set_variable = {
				which = tmpValChange
				value = 0
			}
			set_variable = {
				which = tmpValChange
				which = development_level
			}
			if = {
				limit = {
					check_variable = {
						which = tmpValChange
						value = 80
					}
				}
				subtract_variable = {
					which = tmpValChange
					value = 80
				}
				divide_variable = {
					which = tmpValChange
					value = 300
				}
				if = {
					limit = {
						check_variable = {
							which = tmpValChange
							value = 0.8
						}
					}
					set_variable = {
						which = tmpValChange
						value = 0.8
					}
				}
				change_variable = {
					which = tmpValNeg
					which = tmpValChange
				}
			}
			else_if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpValChange
							value = 40
						}
					}
				}
				subtract_variable = {
					which = tmpValChange
					value = 40
				}
				divide_variable = {
					which = tmpValChange
					value = -40
				}
				change_variable = {
					which = tmpValPos
					which = tmpValChange
				}
			}
			set_variable = {
				which = tmpValChange
				value = 0
			}
			if = {
				limit = {
					OR = {
						personality = ai_militarist
						ruler_has_personality = greedy_personality
					}
				}
				change_variable = {
					which = tmpMultNeg
					value = 0.2
				}
				subtract_variable = {
					which = tmpMultPos
					value = 0.1
				}
			}
			if = {
				limit = {
					num_of_loans = 2
				}
				change_variable = {
					which = tmpValNeg
					value = 1
				}
			}
			export_to_variable = {
				which = num_of_rebel_controlled_provinces_buf
				value = num_of_rebel_controlled_provinces
			}
			export_to_variable = {
				which = num_of_cities_buf
				value = num_of_cities
			}
			multiply_variable = {
				which = num_of_rebel_controlled_provinces_buf
				which = 2.0
			}
			divide_variable = {
				which = num_of_rebel_controlled_provinces_buf
				which = num_of_cities_buf
			}
			change_variable = {
				which = tmpValNeg
				which = num_of_rebel_controlled_provinces_buf
			}
			set_variable = {
				which = num_of_rebel_controlled_provinces_buf
				value = 0
			}
			set_variable = {
				which = num_of_cities_buf
				value = 0
			}
			export_to_variable = {
				which = army_size_buf
				value = army_size
			}
			export_to_variable = {
				which = land_forcelimit_buf
				value = land_forcelimit
			}
			divide_variable = {
				which = army_size_buf
				which = land_forcelimit_buf
			}
			set_variable = {
				which = tmp_buf
				value = 1.0
			}
			subtract_variable = {
				which = tmp_buf
				which = army_size_buf
			}
			change_variable = {
				which = tmpValNeg
				which = tmp_buf
			}
			set_variable = {
				which = land_forcelimit_buf
				value = 0
			}
			set_variable = {
				which = army_size_buf
				value = 0
			}
			set_variable = {
				which = tmp_buf
				value = 0
			}
			if = {
				limit = {
					is_at_war = yes
				}
				set_variable = {
					which = tmpMultPos
					value = 0
				}
				set_variable = {
					which = tmpValNeg
					value = -3
				}
			}
			if = {
				limit = {
					has_any_disaster = yes
				}
				set_variable = {
					which = tmpMultPos
					value = 0
				}
				set_variable = {
					which = tmpValNeg
					value = -3
				}
			}
			if = {
				limit = {
					has_country_flag = autoSpending
				}
				set_variable = {
					which = tmpValPos
					value = 3
				}
				set_variable = {
					which = tmpMultPos
					value = 1
				}
				set_variable = {
					which = tmpValNeg
					value = 0
				}
			}
			multiply_variable = {
				which = tmpValPos
				which = tmpMultPos
			}
			multiply_variable = {
				which = tmpValNeg
				which = tmpMultNeg
			}
			subtract_variable = {
				which = tmpValPos
				which = tmpValNeg
			}
			set_variable = {
				which = tmpEval
				which = tmpValPos
			}
			set_variable = {
				which = tmpValPos
				value = 0
			}
			set_variable = {
				which = tmpMultPos
				value = 0
			}
			set_variable = {
				which = tmpValNeg
				value = 0
			}
			set_variable = {
				which = tmpMultNeg
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasAgendaEconomy
					}
					clr_country_flag = aiHasAgendaEconomy
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasAgendaEconomy
						}
					}
					set_country_flag = aiHasAgendaEconomy
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			set_variable = {
				which = tmpValPos
				value = 0
			}
			set_variable = {
				which = tmpValNeg
				value = 0
			}
			set_variable = {
				which = tmpMultPos
				value = 1
			}
			set_variable = {
				which = tmpMultNeg
				value = 1
			}
			if = {
				limit = {
					NOT = {
						government = tribal
					}
				}
				if = {
					limit = {
						check_variable = {
							which = average_autonomy
							value = 0.75
						}
					}
					change_variable = {
						which = tmpValPos
						value = 1.5
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = average_autonomy
							value = 0.65
						}
					}
					change_variable = {
						which = tmpValPos
						value = 1.2
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = average_autonomy
							value = 0.55
						}
					}
					change_variable = {
						which = tmpValPos
						value = 0.8
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = average_autonomy
							value = 0.45
						}
					}
					change_variable = {
						which = tmpValPos
						value = 0.4
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = average_autonomy
							value = 0.35
						}
					}
					change_variable = {
						which = tmpValPos
						value = 0.2
					}
				}
			}
			if = {
				limit = {
					corruption = 30
				}
				change_variable = {
					which = tmpValPos
					value = 1.5
				}
			}
			else_if = {
				limit = {
					corruption = 25
				}
				change_variable = {
					which = tmpValPos
					value = 1.2
				}
			}
			else_if = {
				limit = {
					corruption = 20
				}
				change_variable = {
					which = tmpValPos
					value = 0.8
				}
			}
			else_if = {
				limit = {
					corruption = 15
				}
				change_variable = {
					which = tmpValPos
					value = 0.4
				}
			}
			else_if = {
				limit = {
					corruption = 10
				}
				change_variable = {
					which = tmpValPos
					value = 0.2
				}
			}
			else_if = {
				limit = {
					corruption = 7.5
				}
				change_variable = {
					which = tmpValPos
					value = 0.1
				}
			}
			export_to_variable = {
				which = tmpUnrest
				value = average_effective_unrest
			}
			subtract_variable = {
				which = tmpUnrest
				value = 3
			}
			divide_variable = {
				which = tmpUnrest
				value = 3
			}
			if = {
				limit = {
					check_variable = {
						which = tmpUnrest
						value = 0
					}
				}
				change_variable = {
					which = tmpValPos
					which = tmpUnrest
				}
			}
			else = {
				subtract_variable = {
					which = tmpValNeg
					which = tmpUnrest
				}
			}
			set_variable = {
				which = tmpUnrest
				value = 0
			}
			if = {
				limit = {
					estate_influence = {
						estate = estate_bureaucracy
						influence = 75
					}
				}
				change_variable = {
					which = tmpValNeg
					value = 2
				}
			}
			else_if = {
				limit = {
					estate_influence = {
						estate = estate_bureaucracy
						influence = 65
					}
				}
				change_variable = {
					which = tmpValNeg
					value = 1.4
				}
			}
			else_if = {
				limit = {
					estate_influence = {
						estate = estate_bureaucracy
						influence = 55
					}
				}
				change_variable = {
					which = tmpValNeg
					value = 1
				}
			}
			else_if = {
				limit = {
					estate_influence = {
						estate = estate_bureaucracy
						influence = 45
					}
				}
				change_variable = {
					which = tmpValNeg
					value = 0.6
				}
			}
			else_if = {
				limit = {
					estate_influence = {
						estate = estate_bureaucracy
						influence = 35
					}
				}
				change_variable = {
					which = tmpValNeg
					value = 0.3
				}
			}
			multiply_variable = {
				which = tmpValPos
				which = tmpMultPos
			}
			multiply_variable = {
				which = tmpValNeg
				which = tmpMultNeg
			}
			subtract_variable = {
				which = tmpValPos
				which = tmpValNeg
			}
			set_variable = {
				which = tmpEval
				which = tmpValPos
			}
			set_variable = {
				which = tmpValPos
				value = 0
			}
			set_variable = {
				which = tmpMultPos
				value = 0
			}
			set_variable = {
				which = tmpValNeg
				value = 0
			}
			set_variable = {
				which = tmpMultNeg
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasAgendaGovernance
					}
					clr_country_flag = aiHasAgendaGovernance
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasAgendaGovernance
						}
					}
					set_country_flag = aiHasAgendaGovernance
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiHasAgendaMilitary
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
				random_list = {
					1 = {
						subtract_variable = {
							which = tmpEval
							value = 0.5
						}
					}
					3 = {
						subtract_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					9 = {}
					3 = {
						change_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					1 = {
						change_variable = {
							which = tmpEval
							value = 0.5
						}
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = tmpEval
								value = -1.001
							}
						}
					}
					if = {
						limit = {
							has_country_flag = aiHasAgendaOffense
						}
						clr_country_flag = aiHasAgendaOffense
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = tmpEval
							value = 1.001
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = aiHasAgendaOffense
							}
						}
						set_country_flag = aiHasAgendaOffense
					}
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
				set_variable = {
					which = tmpValPos
					value = 0
				}
				set_variable = {
					which = tmpValNeg
					value = 0
				}
				set_variable = {
					which = tmpMultPos
					value = 1
				}
				set_variable = {
					which = tmpMultNeg
					value = 1
				}
				if = {
					limit = {
						ruler_has_personality = craven_personality
					}
					change_variable = {
						which = tmpMultPos
						value = 0.2
					}
					subtract_variable = {
						which = tmpMultNeg
						value = 0.1
					}
				}
				export_to_variable = {
					which = tmpNumOfCit
					value = num_of_cities
				}
				every_owned_province = {
					limit = {
						has_province_flag = getFortCandSpread
					}
					clr_province_flag = getFortCandSpread
				}
				set_variable = {
					which = getFortCandItr
					value = 0
				}
				if = {
					limit = {
						num_of_cities = 200
					}
					set_variable = {
						which = getFortCandItr
						value = 5
					}
				}
				else_if = {
					limit = {
						num_of_cities = 80
					}
					set_variable = {
						which = getFortCandItr
						value = 4
					}
				}
				else_if = {
					limit = {
						num_of_cities = 30
					}
					set_variable = {
						which = getFortCandItr
						value = 3
					}
				}
				else_if = {
					limit = {
						num_of_cities = 10
					}
					set_variable = {
						which = getFortCandItr
						value = 2
					}
				}
				else = {
					set_variable = {
						which = getFortCandItr
						value = 1
					}
				}
				save_event_target_as = getFortCandTarg
				every_owned_province = {
					limit = {
						any_neighbor_province = {
							is_city = yes
							NOT = {
								owned_by = PREV
								owner = {
									is_subject_of = event_target:getFortCandTarg
								}
							}
						}
					}
					set_province_flag = getFortCandSpread
					set_province_flag = tmpFortCand
				}
				if = {
					limit = {
						check_variable = {
							which = getFortCandItr
							value = 1
						}
					}
					while = {
						limit = {
							check_variable = {
								which = getFortCandItr
								value = 1
							}
						}
						subtract_variable = {
							which = getFortCandItr
							value = 1
						}
						every_owned_province = {
							limit = {
								has_province_flag = getFortCandSpread
							}
							clr_province_flag = getFortCandSpread
							every_neighbor_province = {
								limit = {
									owned_by = PREV
									NOT = {
										has_province_flag = tmpFortCand
									}
								}
								set_province_flag = tmpFortCand
								set_province_flag = getFortCandSpreadCand
							}
						}
						every_owned_province = {
							limit = {
								has_province_flag = getFortCandSpreadCand
							}
							clr_province_flag = getFortCandSpreadCand
							set_province_flag = getFortCandSpread
						}
					}
					every_owned_province = {
						limit = {
							has_province_flag = getFortCandSpread
						}
						clr_province_flag = getFortCandSpread
					}
				}
				every_owned_province = {
					limit = {
						OR = {
							check_variable = {
								which = devPointTotal
								value = 30
							}
							check_variable = {
								which = devPointUrbanCur
								value = 8
							}
						}
					}
					set_province_flag = tmpFortCand
				}
				capital_scope = {
					set_province_flag = tmpFortCand
					every_neighbor_province = {
						limit = {
							has_province_flag = tmpFortCand
						}
						clr_province_flag = tmpFortCand
					}
				}
				every_owned_province = {
					limit = {
						OR = {
							has_province_modifier = fort_is_building
							has_building = fort_14th
							has_building = fort_15th
							has_building = fort_16th
							has_building = fort_17th
							has_building = fort_18th
						}
					}
					every_neighbor_province = {
						limit = {
							has_province_flag = tmpFortCand
							NOT = {
								has_building = fort_14th
								has_building = fort_15th
								has_building = fort_16th
								has_building = fort_17th
								has_building = fort_18th
							}
						}
						clr_province_flag = tmpFortCand
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = tmpFortCand
						NOT = {
							is_city = yes
							NOT = {
								has_province_modifier = fort_is_building
							}
							OR = {
								AND = {
									has_building = fort_17th
									owner = {
										mil_tech = 41
									}
									AND = {
										always = yes
									}
									NOT = {
										has_building = fort_18th
									}
									NOT = {
										has_province_modifier = fort_is_building
									}
								}
								AND = {
									has_building = fort_16th
									owner = {
										mil_tech = 35
									}
									AND = {
										NOT = {
											has_building = fort_18th
										}
									}
									NOT = {
										has_building = fort_17th
									}
									NOT = {
										has_province_modifier = fort_is_building
									}
								}
								AND = {
									has_building = fort_15th
									owner = {
										mil_tech = 26
									}
									AND = {
										NOT = {
											has_building = fort_17th
											has_building = fort_18th
										}
									}
									NOT = {
										has_building = fort_16th
									}
									NOT = {
										has_province_modifier = fort_is_building
									}
								}
								AND = {
									has_building = fort_14th
									owner = {
										mil_tech = 15
									}
									AND = {
										NOT = {
											has_building = fort_16th
											has_building = fort_17th
											has_building = fort_18th
										}
									}
									NOT = {
										has_building = fort_15th
									}
									NOT = {
										has_province_modifier = fort_is_building
									}
								}
								AND = {
									owner = {
										mil_tech = 3
									}
									AND = {
										NOT = {
											has_building = fort_15th
											has_building = fort_16th
											has_building = fort_17th
											has_building = fort_18th
										}
									}
									NOT = {
										has_building = fort_14th
									}
									NOT = {
										has_province_modifier = fort_is_building
									}
								}
							}
						}
					}
					clr_province_flag = tmpFortCand
				}
				set_variable = {
					which = tmpFortCandNum
					value = 0
				}
				every_owned_province = {
					limit = {
						has_province_flag = tmpFortCand
					}
					clr_province_flag = tmpFortCand
					PREV = {
						change_variable = {
							which = tmpFortCandNum
							value = 1
						}
					}
				}
				if = {
					limit = {
						is_variable_equal = {
							which = tmpFortCandNum
							value = 0
						}
					}
					set_variable = {
						which = tmpValNeg
						value = 10
					}
					set_variable = {
						which = tmpMultNeg
						value = 10
					}
				}
				else = {
					multiply_variable = {
						which = tmpFortCandNum
						value = 10
					}
					divide_variable = {
						which = tmpFortCandNum
						which = tmpNumOfCit
					}
					change_variable = {
						which = tmpValPos
						which = tmpFortCandNum
					}
				}
				set_variable = {
					which = tmpFortCandNum
					value = 0
				}
				set_variable = {
					which = tmpNumOfCit
					value = 0
				}
				if = {
					limit = {
						ruler_has_personality = naive_personality
					}
					change_variable = {
						which = tmpValNeg
						value = 0.15
					}
					change_variable = {
						which = tmpMultNeg
						value = 0.4
					}
					subtract_variable = {
						which = tmpMultPos
						value = 0.4
					}
				}
				multiply_variable = {
					which = tmpValPos
					which = tmpMultPos
				}
				multiply_variable = {
					which = tmpValNeg
					which = tmpMultNeg
				}
				subtract_variable = {
					which = tmpValPos
					which = tmpValNeg
				}
				set_variable = {
					which = tmpEval
					which = tmpValPos
				}
				set_variable = {
					which = tmpValPos
					value = 0
				}
				set_variable = {
					which = tmpMultPos
					value = 0
				}
				set_variable = {
					which = tmpValNeg
					value = 0
				}
				set_variable = {
					which = tmpMultNeg
					value = 0
				}
				random_list = {
					1 = {
						subtract_variable = {
							which = tmpEval
							value = 0.5
						}
					}
					3 = {
						subtract_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					9 = {}
					3 = {
						change_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					1 = {
						change_variable = {
							which = tmpEval
							value = 0.5
						}
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = tmpEval
								value = -1.001
							}
						}
					}
					if = {
						limit = {
							has_country_flag = aiHasAgendaDefense
						}
						clr_country_flag = aiHasAgendaDefense
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = tmpEval
							value = 1.001
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = aiHasAgendaDefense
							}
						}
						set_country_flag = aiHasAgendaDefense
					}
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
			}
			else = {
				clr_country_flag = aiHasAgendaOffense
				clr_country_flag = aiHasAgendaDefense
			}
			if = {
				limit = {
					has_country_flag = aiHasAgendaExpansion
				}
				save_event_target_as = getPlanInvTarg
				every_owned_province = {
					limit = {
						NOT = {
							has_province_modifier = martial_law
						}
					}
					every_neighbor_province = {
						limit = {
							NOT = {
								owned_by = event_target:getPlanInvTarg
								owner = {
									OR = {
										is_subject_of = event_target:getPlanInvTarg
										overlord = {
											is_subject_of = event_target:getPlanInvTarg
										}
									}
								}
							}
						}
						set_province_flag = getPlanInvCheck
						owner = {
							set_country_flag = getPlanInvCheck
						}
					}
				}
				every_subject_country = {
					limit = {
						AND = {
							is_subject = yes
							NOT = {
								is_subject_of_type = tributary_state
							}
							NOT = {
								is_subject_of_type = close_tributary_state
							}
						}
					}
					every_owned_province = {
						limit = {
							NOT = {
								has_province_modifier = martial_law
							}
						}
						every_neighbor_province = {
							limit = {
								NOT = {
									owned_by = event_target:getPlanInvTarg
									owner = {
										OR = {
											is_subject_of = event_target:getPlanInvTarg
											overlord = {
												is_subject_of = event_target:getPlanInvTarg
											}
										}
									}
								}
							}
							set_province_flag = getPlanInvCheck
							owner = {
								set_country_flag = getPlanInvCheck
							}
						}
					}
				}
				save_event_target_as = aiEvalAgendaInvasionTarg
				if = {
					limit = {
						always = yes
					}
					export_to_variable = {
						which = AIMiscArmySize
						value = army_size
					}
				}
				else = {
					set_variable = {
						which = AIMiscArmySize
						value = 0
					}
				}
				export_to_variable = {
					which = AIMiscLFL
					value = land_forcelimit
				}
				export_to_variable = {
					which = AIMiscManpow
					value = manpower
				}
				set_variable = {
					which = AIMiscArmyEstate
					value = 0
				}
				if = {
					limit = {
						check_variable = {
							which = estate_tribals_loyalty
							value = 0.11
						}
					}
					set_variable = {
						which = tmpArmyTR
						which = estate_tribals_infantry_host
					}
					change_variable = {
						which = tmpArmyTR
						which = estate_tribals_cavalry_host
					}
					multiply_variable = {
						which = tmpArmyTR
						value = 1.25
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = tmpArmyTR
					}
					set_variable = {
						which = tmpArmyTR
						value = 0
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 0.11
						}
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_infantry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_cavalry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_artillery_total
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0.11
						}
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_infantry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_cavalry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_artillery_total
					}
				}
				multiply_variable = {
					which = AIMiscArmyEstate
					value = 0.85
				}
				if = {
					limit = {
						always = no
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = AIMiscManpow
									which = AIMiscLFL
								}
							}
						}
						subtract_variable = {
							which = AIMiscLFL
							which = AIMiscManpow
						}
						multiply_variable = {
							which = AIMiscLFL
							value = 0.15
						}
						multiply_variable = {
							which = AIMiscManpow
							value = 0.3
						}
					}
					else = {
						subtract_variable = {
							which = AIMiscManpow
							which = AIMiscLFL
						}
						multiply_variable = {
							which = AIMiscManpow
							value = 0.15
						}
						multiply_variable = {
							which = AIMiscLFL
							value = 0.3
						}
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscLFL
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscManpow
					}
				}
				if = {
					limit = {
						always = yes
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscArmyEstate
					}
				}
				set_variable = {
					which = armySizeCheck
					which = AIMiscArmySize
				}
				set_variable = {
					which = AIMiscArmySize
					value = 0
				}
				set_variable = {
					which = AIMiscLFL
					value = 0
				}
				set_variable = {
					which = AIMiscManpow
					value = 0
				}
				set_variable = {
					which = AIMiscArmyEstate
					value = 0
				}
				subtract_variable = {
					which = armySizeCheck
					value = 1
				}
				divide_variable = {
					which = armySizeCheck
					value = 2.5
				}
				set_variable = {
					which = getPlanInvVal
					value = 0.001
				}
				if = {
					limit = {
						is_subject = yes
					}
					trigger_switch = {
						on_trigger = is_subject_of_type
						vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						colony = {
							capital_scope = {
								save_event_target_as = getPlanInvTarg_cap
							}
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
										primitives = yes
										any_owned_province = {
											colonial_region = event_target:getPlanInvTarg_cap
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						daimyo_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									OR = {
										overlord_of = PREV
										AND = {
											is_subject = yes
											NOT = {
												is_subject_of_type = daimyo_vassal
											}
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						centralised_daimyo_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						warlord = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									OR = {
										overlord_of = PREV
										overlord = {
											overlord_of = event_target:getPlanInvTarg
										}
										NOT = {
											is_subject_of_type = warlord
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						personal_union = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						permanent_union = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						appanage_subject = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
										AND = {
											overlord = {
												overlord_of = event_target:getPlanInvTarg
											}
											is_subject_of_type = appanage_subject
											is_subject_of_type = autonomous_vassal
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						autonomous_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
										AND = {
											overlord = {
												overlord_of = event_target:getPlanInvTarg
											}
											is_subject_of_type = appanage_subject
											is_subject_of_type = autonomous_vassal
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						decentralized_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						rebellious_decentralized_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
										is_subject = no
										AND = {
											overlord = {
												overlord_of = event_target:getPlanInvTarg
											}
											is_subject_of_type = decentralized_vassal
											is_subject_of_type = rebellious_decentralized_vassal
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						subjugated_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
										AND = {
											overlord = {
												overlord_of = event_target:getPlanInvTarg
											}
											is_subject_of_type = decentralized_vassal
											is_subject_of_type = rebellious_decentralized_vassal
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						rebellious_subjugated_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									overlord = {
										overlord_of = event_target:getPlanInvTarg
									}
									NOT = {
										is_subject_of_type = decentralized_vassal
										is_subject_of_type = rebellious_decentralized_vassal
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						tributary_state = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									OR = {
										overlord_of = PREV
										AND = {
											overlord = {
												overlord_of = event_target:getPlanInvTarg
											}
											NOT = {
												is_subject_of_type = tributary_state
											}
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						close_tributary_state = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						march = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						overseas_fief = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						roman_territories = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						client_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						client_march = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						protectorate = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
					}
				}
				every_country = {
					limit = {
						has_country_flag = getPlanInvCheck
					}
					clr_country_flag = getPlanInvCheck
					if = {
						limit = {
							NOT = {
								AND = {
									event_target:getPlanInvTarg = {
										is_subject = yes
									}
									OR = {
										AND = {
											is_subject = no
										}
									}
								}
								overlord = {
									is_subject_of = event_target:getPlanInvTarg
								}
								AND = {
									is_part_of_hre = yes
									event_target:getPlanInvTarg = {
										is_part_of_hre = yes
									}
									OR = {
										event_target:getPlanInvTarg = {
											is_emperor = yes
										}
										hre_reform_level = 6
									}
								}
								AND = {
									event_target:getPlanInvTarg = {
										religion = catholic
									}
									OR = {
										tag = PAP
										overlord = {
											OR = {
												tag = PAP
												tag = PA2
											}
										}
									}
								}
								AND = {
									has_global_flag = hundred_years_war
									OR = {
										AND = {
											event_target:getPlanInvTarg = {
												tag = FRA
											}
											NOT = {
												tag = ENG
												is_subject_of = ENG
											}
										}
										AND = {
											event_target:getPlanInvTarg = {
												tag = ENG
											}
											NOT = {
												tag = FRA
												is_subject_of = FRA
												tag = SCO
												is_subject_of = SCO
												tag = TLI
												is_subject_of = TLI
											}
										}
									}
								}
							}
						}
						save_event_target_as = getPlanInvTargDef
						PREV = {
							set_country_flag = aiInitDiploRelated
							if = {
								limit = {
									always = yes
								}
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:getPlanInvTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
							if = {
								limit = {
									always = no
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
										}
										if = {
											limit = {
												is_subject = yes
											}
											overlord = {
												if = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
															}
														}
													}
												}
											}
										}
										else = {
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
													}
												}
											}
										}
									}
								}
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							every_country = {
								limit = {
									has_country_flag = aiInitDiploRelated
								}
								clr_country_flag = aiInitDiploRelated
								if = {
									limit = {
										always = yes
									}
									if = {
										limit = {
											always = yes
										}
										export_to_variable = {
											which = AIMiscArmySize
											value = army_size
										}
									}
									else = {
										set_variable = {
											which = AIMiscArmySize
											value = 0
										}
									}
									export_to_variable = {
										which = AIMiscLFL
										value = land_forcelimit
									}
									export_to_variable = {
										which = AIMiscManpow
										value = manpower
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = estate_tribals_loyalty
												value = 0.11
											}
										}
										set_variable = {
											which = tmpArmyTR
											which = estate_tribals_infantry_host
										}
										change_variable = {
											which = tmpArmyTR
											which = estate_tribals_cavalry_host
										}
										multiply_variable = {
											which = tmpArmyTR
											value = 1.25
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = tmpArmyTR
										}
										set_variable = {
											which = tmpArmyTR
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_greater_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_artillery_total
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_lesser_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_artillery_total
										}
									}
									multiply_variable = {
										which = AIMiscArmyEstate
										value = 0.85
									}
									if = {
										limit = {
											always = yes
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = AIMiscManpow
														which = AIMiscLFL
													}
												}
											}
											subtract_variable = {
												which = AIMiscLFL
												which = AIMiscManpow
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.3
											}
										}
										else = {
											subtract_variable = {
												which = AIMiscManpow
												which = AIMiscLFL
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.3
											}
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscLFL
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscManpow
										}
									}
									if = {
										limit = {
											always = yes
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscArmyEstate
										}
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										which = AIMiscArmySize
									}
									set_variable = {
										which = AIMiscArmySize
										value = 0
									}
									set_variable = {
										which = AIMiscLFL
										value = 0
									}
									set_variable = {
										which = AIMiscManpow
										value = 0
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									export_to_variable = {
										which = AIMiscMilTech
										value = mil_tech
									}
									export_to_variable = {
										which = AIMiscLandMorale
										value = modifier:land_morale
									}
									export_to_variable = {
										which = AIMiscDisc
										value = modifier:discipline
									}
									multiply_variable = {
										which = AIMiscMilTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscLandMorale
										value = 2
									}
									multiply_variable = {
										which = AIMiscDisc
										value = 5
									}
									change_variable = {
										which = AIMiscMilTech
										value = 1
									}
									change_variable = {
										which = AIMiscLandMorale
										value = 1
									}
									change_variable = {
										which = AIMiscDisc
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscMilTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscLandMorale
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscDisc
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploArmyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscMilTech
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
									}
									set_variable = {
										which = AIMiscMilTech
										value = 0
									}
									set_variable = {
										which = AIMiscLandMorale
										value = 0
									}
									set_variable = {
										which = AIMiscDisc
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploArmyQual
										value = 0
									}
								}
								if = {
									limit = {
										always = yes
									}
									export_to_variable = {
										which = tmpAIInitDiploNavy
										value = navy_size
									}
									export_to_variable = {
										which = AIMiscDipTech
										value = dip_tech
									}
									export_to_variable = {
										which = AIMiscNavMorale
										value = modifier:naval_morale
									}
									multiply_variable = {
										which = AIMiscDipTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscNavMorale
										value = 1.5
									}
									change_variable = {
										which = AIMiscDipTech
										value = 1
									}
									change_variable = {
										which = AIMiscNavMorale
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscDipTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscNavMorale
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploNavyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscDipTech
										}
										change_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscNavMorale
										}
									}
									set_variable = {
										which = AIMiscDipTech
										value = 0
									}
									set_variable = {
										which = AIMiscNavMorale
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavyQual
										value = 0
									}
								}
								multiply_variable = {
									which = tmpAIInitDiploArmy
									which = tmpAIInitDiploArmyQual
								}
								multiply_variable = {
									which = tmpAIInitDiploNavy
									which = tmpAIInitDiploNavyQual
								}
								PREV = {
									set_variable = {
										which = tmpAIInitDiploArmy
										which = PREV
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										which = PREV
									}
									change_variable = {
										which = aiInitDiploArmy
										which = tmpAIInitDiploArmy
									}
									change_variable = {
										which = aiInitDiploNavy
										which = tmpAIInitDiploNavy
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
								}
								set_variable = {
									which = tmpAIInitDiploArmy
									value = 0
								}
								set_variable = {
									which = tmpAIInitDiploNavy
									value = 0
								}
							}
							divide_variable = {
								which = aiInitDiploNavy
								value = 2
							}
							set_variable = {
								which = getPlanInvPowerAtt
								which = aiInitDiploArmy
							}
							change_variable = {
								which = getPlanInvPowerAtt
								which = aiInitDiploNavy
							}
							divide_variable = {
								which = getPlanInvPowerAtt
								value = 50
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
							if = {
								limit = {
									coalition_target = event_target:getPlanInvTargDef
								}
								event_target:getPlanInvTargDef = {
									every_country = {
										limit = {
											coalition_target = PREV
											NOT = {
												tag = event_target:getPlanInvTarg
												war_with = event_target:getPlanInvTargDef
											}
										}
										set_country_flag = aiInitDiploRelated
										if = {
											limit = {
												always = yes
											}
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
													}
												}
											}
										}
										if = {
											limit = {
												always = no
											}
											overlord = {
												if = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
													}
													if = {
														limit = {
															is_subject = yes
														}
														overlord = {
															if = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																}
																set_country_flag = aiInitDiploRelated
																every_subject_country = {
																	limit = {
																		NOT = {
																			tag = event_target:getPlanInvTarg
																		}
																		AND = {
																			NOT = {
																				liberty_desire = 50
																				is_subject_of_type = tributary_state
																				is_subject_of_type = rebellious_decentralized_vassal
																				is_subject_of_type = rebellious_subjugated_vassal
																			}
																		}
																	}
																	set_country_flag = aiInitDiploRelated
																	every_subject_country = {
																		limit = {
																			NOT = {
																				tag = event_target:getPlanInvTarg
																			}
																			AND = {
																				NOT = {
																					liberty_desire = 50
																					is_subject_of_type = tributary_state
																					is_subject_of_type = rebellious_decentralized_vassal
																					is_subject_of_type = rebellious_subjugated_vassal
																				}
																			}
																		}
																		set_country_flag = aiInitDiploRelated
																		every_subject_country = {
																			limit = {
																				NOT = {
																					tag = event_target:getPlanInvTarg
																				}
																				AND = {
																					NOT = {
																						liberty_desire = 50
																						is_subject_of_type = tributary_state
																						is_subject_of_type = rebellious_decentralized_vassal
																						is_subject_of_type = rebellious_subjugated_vassal
																					}
																				}
																			}
																			set_country_flag = aiInitDiploRelated
																		}
																	}
																}
															}
														}
													}
													else = {
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
																every_subject_country = {
																	limit = {
																		NOT = {
																			tag = event_target:getPlanInvTarg
																		}
																		AND = {
																			NOT = {
																				liberty_desire = 50
																				is_subject_of_type = tributary_state
																				is_subject_of_type = rebellious_decentralized_vassal
																				is_subject_of_type = rebellious_subjugated_vassal
																			}
																		}
																	}
																	set_country_flag = aiInitDiploRelated
																}
															}
														}
													}
												}
											}
										}
										set_variable = {
											which = aiInitDiploArmy
											value = 0
										}
										set_variable = {
											which = aiInitDiploNavy
											value = 0
										}
										every_country = {
											limit = {
												has_country_flag = aiInitDiploRelated
											}
											clr_country_flag = aiInitDiploRelated
											if = {
												limit = {
													always = yes
												}
												if = {
													limit = {
														always = yes
													}
													export_to_variable = {
														which = AIMiscArmySize
														value = army_size
													}
												}
												else = {
													set_variable = {
														which = AIMiscArmySize
														value = 0
													}
												}
												export_to_variable = {
													which = AIMiscLFL
													value = land_forcelimit
												}
												export_to_variable = {
													which = AIMiscManpow
													value = manpower
												}
												set_variable = {
													which = AIMiscArmyEstate
													value = 0
												}
												if = {
													limit = {
														check_variable = {
															which = estate_tribals_loyalty
															value = 0.11
														}
													}
													set_variable = {
														which = tmpArmyTR
														which = estate_tribals_infantry_host
													}
													change_variable = {
														which = tmpArmyTR
														which = estate_tribals_cavalry_host
													}
													multiply_variable = {
														which = tmpArmyTR
														value = 1.25
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = tmpArmyTR
													}
													set_variable = {
														which = tmpArmyTR
														value = 0
													}
												}
												if = {
													limit = {
														check_variable = {
															which = estate_greater_nobles_loyalty
															value = 0.11
														}
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_greater_nobles_infantry_total
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_greater_nobles_cavalry_total
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_greater_nobles_artillery_total
													}
												}
												if = {
													limit = {
														check_variable = {
															which = estate_lesser_nobles_loyalty
															value = 0.11
														}
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_lesser_nobles_infantry_total
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_lesser_nobles_cavalry_total
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_lesser_nobles_artillery_total
													}
												}
												multiply_variable = {
													which = AIMiscArmyEstate
													value = 0.85
												}
												if = {
													limit = {
														always = yes
													}
													if = {
														limit = {
															NOT = {
																check_variable = {
																	which = AIMiscManpow
																	which = AIMiscLFL
																}
															}
														}
														subtract_variable = {
															which = AIMiscLFL
															which = AIMiscManpow
														}
														multiply_variable = {
															which = AIMiscLFL
															value = 0.15
														}
														multiply_variable = {
															which = AIMiscManpow
															value = 0.3
														}
													}
													else = {
														subtract_variable = {
															which = AIMiscManpow
															which = AIMiscLFL
														}
														multiply_variable = {
															which = AIMiscManpow
															value = 0.15
														}
														multiply_variable = {
															which = AIMiscLFL
															value = 0.3
														}
													}
													change_variable = {
														which = AIMiscArmySize
														which = AIMiscLFL
													}
													change_variable = {
														which = AIMiscArmySize
														which = AIMiscManpow
													}
												}
												if = {
													limit = {
														always = yes
													}
													change_variable = {
														which = AIMiscArmySize
														which = AIMiscArmyEstate
													}
												}
												set_variable = {
													which = tmpAIInitDiploArmy
													which = AIMiscArmySize
												}
												set_variable = {
													which = AIMiscArmySize
													value = 0
												}
												set_variable = {
													which = AIMiscLFL
													value = 0
												}
												set_variable = {
													which = AIMiscManpow
													value = 0
												}
												set_variable = {
													which = AIMiscArmyEstate
													value = 0
												}
												export_to_variable = {
													which = AIMiscMilTech
													value = mil_tech
												}
												export_to_variable = {
													which = AIMiscLandMorale
													value = modifier:land_morale
												}
												export_to_variable = {
													which = AIMiscDisc
													value = modifier:discipline
												}
												multiply_variable = {
													which = AIMiscMilTech
													value = 0.1
												}
												multiply_variable = {
													which = AIMiscLandMorale
													value = 2
												}
												multiply_variable = {
													which = AIMiscDisc
													value = 5
												}
												change_variable = {
													which = AIMiscMilTech
													value = 1
												}
												change_variable = {
													which = AIMiscLandMorale
													value = 1
												}
												change_variable = {
													which = AIMiscDisc
													value = 1
												}
												if = {
													limit = {
														OR = {
															NOT = {
																check_variable = {
																	which = AIMiscMilTech
																	value = 0.001
																}
															}
															NOT = {
																check_variable = {
																	which = AIMiscLandMorale
																	value = 0.001
																}
															}
															NOT = {
																check_variable = {
																	which = AIMiscDisc
																	value = 0.001
																}
															}
														}
													}
													set_variable = {
														which = tmpAIInitDiploArmyQual
														value = 0
													}
												}
												else = {
													set_variable = {
														which = tmpAIInitDiploArmyQual
														which = AIMiscMilTech
													}
													multiply_variable = {
														which = tmpAIInitDiploArmyQual
														which = AIMiscLandMorale
													}
													multiply_variable = {
														which = tmpAIInitDiploArmyQual
														which = AIMiscLandMorale
													}
												}
												set_variable = {
													which = AIMiscMilTech
													value = 0
												}
												set_variable = {
													which = AIMiscLandMorale
													value = 0
												}
												set_variable = {
													which = AIMiscDisc
													value = 0
												}
											}
											else = {
												set_variable = {
													which = tmpAIInitDiploArmy
													value = 0
												}
												set_variable = {
													which = tmpAIInitDiploArmyQual
													value = 0
												}
											}
											if = {
												limit = {
													always = yes
												}
												export_to_variable = {
													which = tmpAIInitDiploNavy
													value = navy_size
												}
												export_to_variable = {
													which = AIMiscDipTech
													value = dip_tech
												}
												export_to_variable = {
													which = AIMiscNavMorale
													value = modifier:naval_morale
												}
												multiply_variable = {
													which = AIMiscDipTech
													value = 0.1
												}
												multiply_variable = {
													which = AIMiscNavMorale
													value = 1.5
												}
												change_variable = {
													which = AIMiscDipTech
													value = 1
												}
												change_variable = {
													which = AIMiscNavMorale
													value = 1
												}
												if = {
													limit = {
														OR = {
															NOT = {
																check_variable = {
																	which = AIMiscDipTech
																	value = 0.001
																}
															}
															NOT = {
																check_variable = {
																	which = AIMiscNavMorale
																	value = 0.001
																}
															}
														}
													}
													set_variable = {
														which = tmpAIInitDiploNavyQual
														value = 0
													}
												}
												else = {
													set_variable = {
														which = tmpAIInitDiploNavyQual
														which = AIMiscDipTech
													}
													change_variable = {
														which = tmpAIInitDiploNavyQual
														which = AIMiscNavMorale
													}
												}
												set_variable = {
													which = AIMiscDipTech
													value = 0
												}
												set_variable = {
													which = AIMiscNavMorale
													value = 0
												}
											}
											else = {
												set_variable = {
													which = tmpAIInitDiploNavy
													value = 0
												}
												set_variable = {
													which = tmpAIInitDiploNavyQual
													value = 0
												}
											}
											multiply_variable = {
												which = tmpAIInitDiploArmy
												which = tmpAIInitDiploArmyQual
											}
											multiply_variable = {
												which = tmpAIInitDiploNavy
												which = tmpAIInitDiploNavyQual
											}
											PREV = {
												set_variable = {
													which = tmpAIInitDiploArmy
													which = PREV
												}
												set_variable = {
													which = tmpAIInitDiploNavy
													which = PREV
												}
												change_variable = {
													which = aiInitDiploArmy
													which = tmpAIInitDiploArmy
												}
												change_variable = {
													which = aiInitDiploNavy
													which = tmpAIInitDiploNavy
												}
												set_variable = {
													which = tmpAIInitDiploArmy
													value = 0
												}
												set_variable = {
													which = tmpAIInitDiploNavy
													value = 0
												}
											}
											set_variable = {
												which = tmpAIInitDiploArmy
												value = 0
											}
											set_variable = {
												which = tmpAIInitDiploNavy
												value = 0
											}
										}
										divide_variable = {
											which = aiInitDiploNavy
											value = 2
										}
										set_variable = {
											which = getPlanInvPowerAtt
											which = aiInitDiploArmy
										}
										change_variable = {
											which = getPlanInvPowerAtt
											which = aiInitDiploNavy
										}
										divide_variable = {
											which = getPlanInvPowerAtt
											value = 50
										}
										set_variable = {
											which = aiInitDiploArmy
											value = 0
										}
										set_variable = {
											which = tmpAIInitDiploArmyQual
											value = 0
										}
										set_variable = {
											which = aiInitDiploNavy
											value = 0
										}
										set_variable = {
											which = tmpAIInitDiploNavyQual
											value = 0
										}
										event_target:getPlanInvTarg = {
											change_variable = {
												which = getPlanInvPowerAtt
												which = PREV
											}
										}
										set_variable = {
											which = getPlanInvPowerAtt
											value = 0
										}
									}
								}
							}
							if = {
								limit = {
									event_target:getPlanInvTargDef = {
										is_at_war = yes
									}
								}
								every_country = {
									limit = {
										war_with = event_target:getPlanInvTargDef
									}
									set_country_flag = aiInitDiploRelated
									if = {
										limit = {
											always = yes
										}
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
												}
											}
										}
									}
									if = {
										limit = {
											always = no
										}
										overlord = {
											if = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
												}
												if = {
													limit = {
														is_subject = yes
													}
													overlord = {
														if = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
																every_subject_country = {
																	limit = {
																		NOT = {
																			tag = event_target:getPlanInvTarg
																		}
																		AND = {
																			NOT = {
																				liberty_desire = 50
																				is_subject_of_type = tributary_state
																				is_subject_of_type = rebellious_decentralized_vassal
																				is_subject_of_type = rebellious_subjugated_vassal
																			}
																		}
																	}
																	set_country_flag = aiInitDiploRelated
																	every_subject_country = {
																		limit = {
																			NOT = {
																				tag = event_target:getPlanInvTarg
																			}
																			AND = {
																				NOT = {
																					liberty_desire = 50
																					is_subject_of_type = tributary_state
																					is_subject_of_type = rebellious_decentralized_vassal
																					is_subject_of_type = rebellious_subjugated_vassal
																				}
																			}
																		}
																		set_country_flag = aiInitDiploRelated
																	}
																}
															}
														}
													}
												}
												else = {
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
															}
														}
													}
												}
											}
										}
									}
									set_variable = {
										which = aiInitDiploArmy
										value = 0
									}
									set_variable = {
										which = aiInitDiploNavy
										value = 0
									}
									every_country = {
										limit = {
											has_country_flag = aiInitDiploRelated
										}
										clr_country_flag = aiInitDiploRelated
										if = {
											limit = {
												always = yes
											}
											if = {
												limit = {
													always = yes
												}
												export_to_variable = {
													which = AIMiscArmySize
													value = army_size
												}
											}
											else = {
												set_variable = {
													which = AIMiscArmySize
													value = 0
												}
											}
											export_to_variable = {
												which = AIMiscLFL
												value = land_forcelimit
											}
											export_to_variable = {
												which = AIMiscManpow
												value = manpower
											}
											set_variable = {
												which = AIMiscArmyEstate
												value = 0
											}
											if = {
												limit = {
													check_variable = {
														which = estate_tribals_loyalty
														value = 0.11
													}
												}
												set_variable = {
													which = tmpArmyTR
													which = estate_tribals_infantry_host
												}
												change_variable = {
													which = tmpArmyTR
													which = estate_tribals_cavalry_host
												}
												multiply_variable = {
													which = tmpArmyTR
													value = 1.25
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = tmpArmyTR
												}
												set_variable = {
													which = tmpArmyTR
													value = 0
												}
											}
											if = {
												limit = {
													check_variable = {
														which = estate_greater_nobles_loyalty
														value = 0.11
													}
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_greater_nobles_infantry_total
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_greater_nobles_cavalry_total
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_greater_nobles_artillery_total
												}
											}
											if = {
												limit = {
													check_variable = {
														which = estate_lesser_nobles_loyalty
														value = 0.11
													}
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_lesser_nobles_infantry_total
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_lesser_nobles_cavalry_total
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_lesser_nobles_artillery_total
												}
											}
											multiply_variable = {
												which = AIMiscArmyEstate
												value = 0.85
											}
											if = {
												limit = {
													always = yes
												}
												if = {
													limit = {
														NOT = {
															check_variable = {
																which = AIMiscManpow
																which = AIMiscLFL
															}
														}
													}
													subtract_variable = {
														which = AIMiscLFL
														which = AIMiscManpow
													}
													multiply_variable = {
														which = AIMiscLFL
														value = 0.15
													}
													multiply_variable = {
														which = AIMiscManpow
														value = 0.3
													}
												}
												else = {
													subtract_variable = {
														which = AIMiscManpow
														which = AIMiscLFL
													}
													multiply_variable = {
														which = AIMiscManpow
														value = 0.15
													}
													multiply_variable = {
														which = AIMiscLFL
														value = 0.3
													}
												}
												change_variable = {
													which = AIMiscArmySize
													which = AIMiscLFL
												}
												change_variable = {
													which = AIMiscArmySize
													which = AIMiscManpow
												}
											}
											if = {
												limit = {
													always = yes
												}
												change_variable = {
													which = AIMiscArmySize
													which = AIMiscArmyEstate
												}
											}
											set_variable = {
												which = tmpAIInitDiploArmy
												which = AIMiscArmySize
											}
											set_variable = {
												which = AIMiscArmySize
												value = 0
											}
											set_variable = {
												which = AIMiscLFL
												value = 0
											}
											set_variable = {
												which = AIMiscManpow
												value = 0
											}
											set_variable = {
												which = AIMiscArmyEstate
												value = 0
											}
											export_to_variable = {
												which = AIMiscMilTech
												value = mil_tech
											}
											export_to_variable = {
												which = AIMiscLandMorale
												value = modifier:land_morale
											}
											export_to_variable = {
												which = AIMiscDisc
												value = modifier:discipline
											}
											multiply_variable = {
												which = AIMiscMilTech
												value = 0.1
											}
											multiply_variable = {
												which = AIMiscLandMorale
												value = 2
											}
											multiply_variable = {
												which = AIMiscDisc
												value = 5
											}
											change_variable = {
												which = AIMiscMilTech
												value = 1
											}
											change_variable = {
												which = AIMiscLandMorale
												value = 1
											}
											change_variable = {
												which = AIMiscDisc
												value = 1
											}
											if = {
												limit = {
													OR = {
														NOT = {
															check_variable = {
																which = AIMiscMilTech
																value = 0.001
															}
														}
														NOT = {
															check_variable = {
																which = AIMiscLandMorale
																value = 0.001
															}
														}
														NOT = {
															check_variable = {
																which = AIMiscDisc
																value = 0.001
															}
														}
													}
												}
												set_variable = {
													which = tmpAIInitDiploArmyQual
													value = 0
												}
											}
											else = {
												set_variable = {
													which = tmpAIInitDiploArmyQual
													which = AIMiscMilTech
												}
												multiply_variable = {
													which = tmpAIInitDiploArmyQual
													which = AIMiscLandMorale
												}
												multiply_variable = {
													which = tmpAIInitDiploArmyQual
													which = AIMiscLandMorale
												}
											}
											set_variable = {
												which = AIMiscMilTech
												value = 0
											}
											set_variable = {
												which = AIMiscLandMorale
												value = 0
											}
											set_variable = {
												which = AIMiscDisc
												value = 0
											}
										}
										else = {
											set_variable = {
												which = tmpAIInitDiploArmy
												value = 0
											}
											set_variable = {
												which = tmpAIInitDiploArmyQual
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											export_to_variable = {
												which = tmpAIInitDiploNavy
												value = navy_size
											}
											export_to_variable = {
												which = AIMiscDipTech
												value = dip_tech
											}
											export_to_variable = {
												which = AIMiscNavMorale
												value = modifier:naval_morale
											}
											multiply_variable = {
												which = AIMiscDipTech
												value = 0.1
											}
											multiply_variable = {
												which = AIMiscNavMorale
												value = 1.5
											}
											change_variable = {
												which = AIMiscDipTech
												value = 1
											}
											change_variable = {
												which = AIMiscNavMorale
												value = 1
											}
											if = {
												limit = {
													OR = {
														NOT = {
															check_variable = {
																which = AIMiscDipTech
																value = 0.001
															}
														}
														NOT = {
															check_variable = {
																which = AIMiscNavMorale
																value = 0.001
															}
														}
													}
												}
												set_variable = {
													which = tmpAIInitDiploNavyQual
													value = 0
												}
											}
											else = {
												set_variable = {
													which = tmpAIInitDiploNavyQual
													which = AIMiscDipTech
												}
												change_variable = {
													which = tmpAIInitDiploNavyQual
													which = AIMiscNavMorale
												}
											}
											set_variable = {
												which = AIMiscDipTech
												value = 0
											}
											set_variable = {
												which = AIMiscNavMorale
												value = 0
											}
										}
										else = {
											set_variable = {
												which = tmpAIInitDiploNavy
												value = 0
											}
											set_variable = {
												which = tmpAIInitDiploNavyQual
												value = 0
											}
										}
										multiply_variable = {
											which = tmpAIInitDiploArmy
											which = tmpAIInitDiploArmyQual
										}
										multiply_variable = {
											which = tmpAIInitDiploNavy
											which = tmpAIInitDiploNavyQual
										}
										PREV = {
											set_variable = {
												which = tmpAIInitDiploArmy
												which = PREV
											}
											set_variable = {
												which = tmpAIInitDiploNavy
												which = PREV
											}
											change_variable = {
												which = aiInitDiploArmy
												which = tmpAIInitDiploArmy
											}
											change_variable = {
												which = aiInitDiploNavy
												which = tmpAIInitDiploNavy
											}
											set_variable = {
												which = tmpAIInitDiploArmy
												value = 0
											}
											set_variable = {
												which = tmpAIInitDiploNavy
												value = 0
											}
										}
										set_variable = {
											which = tmpAIInitDiploArmy
											value = 0
										}
										set_variable = {
											which = tmpAIInitDiploNavy
											value = 0
										}
									}
									divide_variable = {
										which = aiInitDiploNavy
										value = 2
									}
									set_variable = {
										which = getPlanInvPowerAtt
										which = aiInitDiploArmy
									}
									change_variable = {
										which = getPlanInvPowerAtt
										which = aiInitDiploNavy
									}
									divide_variable = {
										which = getPlanInvPowerAtt
										value = 50
									}
									set_variable = {
										which = aiInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploArmyQual
										value = 0
									}
									set_variable = {
										which = aiInitDiploNavy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavyQual
										value = 0
									}
									multiply_variable = {
										which = getPlanInvPowerAtt
										value = 0.25
									}
									event_target:getPlanInvTarg = {
										change_variable = {
											which = getPlanInvPowerAtt
											which = PREV
										}
									}
									set_variable = {
										which = getPlanInvPowerAtt
										value = 0
									}
								}
							}
							PREV = {
								set_variable = {
									which = getPlanInvPowerAtt
									which = PREV
								}
							}
							set_variable = {
								which = getPlanInvPowerAtt
								value = 0
							}
						}
						overlord = {
							if = {
								limit = {
									is_subject = yes
								}
								overlord = {
									save_event_target_as = tmpOverlordDef
								}
							}
							else = {
								save_event_target_as = tmpOverlordDef
							}
						}
						event_target:getPlanInvTarg = {
							overlord = {
								if = {
									limit = {
										is_subject = yes
									}
									overlord = {
										save_event_target_as = tmpOverlordAtt
									}
								}
								else = {
									save_event_target_as = tmpOverlordAtt
								}
							}
						}
						if = {
							limit = {
								is_subject = yes
								event_target:getPlanInvTarg = {
									is_subject = yes
								}
								event_target:tmpOverlordAtt = {
									tag = event_target:tmpOverlordDef
								}
							}
							set_country_flag = aiInitDiploRelated
							if = {
								limit = {
									always = yes
								}
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:getPlanInvTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
							if = {
								limit = {
									always = no
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
										}
										if = {
											limit = {
												is_subject = yes
											}
											overlord = {
												if = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
															}
														}
													}
												}
											}
										}
										else = {
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
													}
												}
											}
										}
									}
								}
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							every_country = {
								limit = {
									has_country_flag = aiInitDiploRelated
								}
								clr_country_flag = aiInitDiploRelated
								if = {
									limit = {
										always = yes
									}
									if = {
										limit = {
											always = yes
										}
										export_to_variable = {
											which = AIMiscArmySize
											value = army_size
										}
									}
									else = {
										set_variable = {
											which = AIMiscArmySize
											value = 0
										}
									}
									export_to_variable = {
										which = AIMiscLFL
										value = land_forcelimit
									}
									export_to_variable = {
										which = AIMiscManpow
										value = manpower
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = estate_tribals_loyalty
												value = 0.11
											}
										}
										set_variable = {
											which = tmpArmyTR
											which = estate_tribals_infantry_host
										}
										change_variable = {
											which = tmpArmyTR
											which = estate_tribals_cavalry_host
										}
										multiply_variable = {
											which = tmpArmyTR
											value = 1.25
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = tmpArmyTR
										}
										set_variable = {
											which = tmpArmyTR
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_greater_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_artillery_total
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_lesser_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_artillery_total
										}
									}
									multiply_variable = {
										which = AIMiscArmyEstate
										value = 0.85
									}
									if = {
										limit = {
											always = yes
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = AIMiscManpow
														which = AIMiscLFL
													}
												}
											}
											subtract_variable = {
												which = AIMiscLFL
												which = AIMiscManpow
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.3
											}
										}
										else = {
											subtract_variable = {
												which = AIMiscManpow
												which = AIMiscLFL
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.3
											}
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscLFL
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscManpow
										}
									}
									if = {
										limit = {
											always = yes
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscArmyEstate
										}
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										which = AIMiscArmySize
									}
									set_variable = {
										which = AIMiscArmySize
										value = 0
									}
									set_variable = {
										which = AIMiscLFL
										value = 0
									}
									set_variable = {
										which = AIMiscManpow
										value = 0
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									export_to_variable = {
										which = AIMiscMilTech
										value = mil_tech
									}
									export_to_variable = {
										which = AIMiscLandMorale
										value = modifier:land_morale
									}
									export_to_variable = {
										which = AIMiscDisc
										value = modifier:discipline
									}
									multiply_variable = {
										which = AIMiscMilTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscLandMorale
										value = 2
									}
									multiply_variable = {
										which = AIMiscDisc
										value = 5
									}
									change_variable = {
										which = AIMiscMilTech
										value = 1
									}
									change_variable = {
										which = AIMiscLandMorale
										value = 1
									}
									change_variable = {
										which = AIMiscDisc
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscMilTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscLandMorale
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscDisc
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploArmyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscMilTech
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
									}
									set_variable = {
										which = AIMiscMilTech
										value = 0
									}
									set_variable = {
										which = AIMiscLandMorale
										value = 0
									}
									set_variable = {
										which = AIMiscDisc
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploArmyQual
										value = 0
									}
								}
								if = {
									limit = {
										always = yes
									}
									export_to_variable = {
										which = tmpAIInitDiploNavy
										value = navy_size
									}
									export_to_variable = {
										which = AIMiscDipTech
										value = dip_tech
									}
									export_to_variable = {
										which = AIMiscNavMorale
										value = modifier:naval_morale
									}
									multiply_variable = {
										which = AIMiscDipTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscNavMorale
										value = 1.5
									}
									change_variable = {
										which = AIMiscDipTech
										value = 1
									}
									change_variable = {
										which = AIMiscNavMorale
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscDipTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscNavMorale
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploNavyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscDipTech
										}
										change_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscNavMorale
										}
									}
									set_variable = {
										which = AIMiscDipTech
										value = 0
									}
									set_variable = {
										which = AIMiscNavMorale
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavyQual
										value = 0
									}
								}
								multiply_variable = {
									which = tmpAIInitDiploArmy
									which = tmpAIInitDiploArmyQual
								}
								multiply_variable = {
									which = tmpAIInitDiploNavy
									which = tmpAIInitDiploNavyQual
								}
								PREV = {
									set_variable = {
										which = tmpAIInitDiploArmy
										which = PREV
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										which = PREV
									}
									change_variable = {
										which = aiInitDiploArmy
										which = tmpAIInitDiploArmy
									}
									change_variable = {
										which = aiInitDiploNavy
										which = tmpAIInitDiploNavy
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
								}
								set_variable = {
									which = tmpAIInitDiploArmy
									value = 0
								}
								set_variable = {
									which = tmpAIInitDiploNavy
									value = 0
								}
							}
							divide_variable = {
								which = aiInitDiploNavy
								value = 2
							}
							set_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploArmy
							}
							change_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploNavy
							}
							divide_variable = {
								which = getPlanInvPowerDef
								value = 50
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
						}
						else = {
							set_country_flag = aiInitDiploRelated
							if = {
								limit = {
									always = yes
								}
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:getPlanInvTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
							if = {
								limit = {
									always = yes
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
										}
										if = {
											limit = {
												is_subject = yes
											}
											overlord = {
												if = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
															}
														}
													}
												}
											}
										}
										else = {
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
													}
												}
											}
										}
									}
								}
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							every_country = {
								limit = {
									has_country_flag = aiInitDiploRelated
								}
								clr_country_flag = aiInitDiploRelated
								if = {
									limit = {
										always = yes
									}
									if = {
										limit = {
											always = yes
										}
										export_to_variable = {
											which = AIMiscArmySize
											value = army_size
										}
									}
									else = {
										set_variable = {
											which = AIMiscArmySize
											value = 0
										}
									}
									export_to_variable = {
										which = AIMiscLFL
										value = land_forcelimit
									}
									export_to_variable = {
										which = AIMiscManpow
										value = manpower
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = estate_tribals_loyalty
												value = 0.11
											}
										}
										set_variable = {
											which = tmpArmyTR
											which = estate_tribals_infantry_host
										}
										change_variable = {
											which = tmpArmyTR
											which = estate_tribals_cavalry_host
										}
										multiply_variable = {
											which = tmpArmyTR
											value = 1.25
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = tmpArmyTR
										}
										set_variable = {
											which = tmpArmyTR
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_greater_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_artillery_total
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_lesser_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_artillery_total
										}
									}
									multiply_variable = {
										which = AIMiscArmyEstate
										value = 0.85
									}
									if = {
										limit = {
											always = yes
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = AIMiscManpow
														which = AIMiscLFL
													}
												}
											}
											subtract_variable = {
												which = AIMiscLFL
												which = AIMiscManpow
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.3
											}
										}
										else = {
											subtract_variable = {
												which = AIMiscManpow
												which = AIMiscLFL
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.3
											}
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscLFL
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscManpow
										}
									}
									if = {
										limit = {
											always = yes
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscArmyEstate
										}
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										which = AIMiscArmySize
									}
									set_variable = {
										which = AIMiscArmySize
										value = 0
									}
									set_variable = {
										which = AIMiscLFL
										value = 0
									}
									set_variable = {
										which = AIMiscManpow
										value = 0
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									export_to_variable = {
										which = AIMiscMilTech
										value = mil_tech
									}
									export_to_variable = {
										which = AIMiscLandMorale
										value = modifier:land_morale
									}
									export_to_variable = {
										which = AIMiscDisc
										value = modifier:discipline
									}
									multiply_variable = {
										which = AIMiscMilTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscLandMorale
										value = 2
									}
									multiply_variable = {
										which = AIMiscDisc
										value = 5
									}
									change_variable = {
										which = AIMiscMilTech
										value = 1
									}
									change_variable = {
										which = AIMiscLandMorale
										value = 1
									}
									change_variable = {
										which = AIMiscDisc
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscMilTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscLandMorale
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscDisc
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploArmyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscMilTech
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
									}
									set_variable = {
										which = AIMiscMilTech
										value = 0
									}
									set_variable = {
										which = AIMiscLandMorale
										value = 0
									}
									set_variable = {
										which = AIMiscDisc
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploArmyQual
										value = 0
									}
								}
								if = {
									limit = {
										always = yes
									}
									export_to_variable = {
										which = tmpAIInitDiploNavy
										value = navy_size
									}
									export_to_variable = {
										which = AIMiscDipTech
										value = dip_tech
									}
									export_to_variable = {
										which = AIMiscNavMorale
										value = modifier:naval_morale
									}
									multiply_variable = {
										which = AIMiscDipTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscNavMorale
										value = 1.5
									}
									change_variable = {
										which = AIMiscDipTech
										value = 1
									}
									change_variable = {
										which = AIMiscNavMorale
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscDipTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscNavMorale
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploNavyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscDipTech
										}
										change_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscNavMorale
										}
									}
									set_variable = {
										which = AIMiscDipTech
										value = 0
									}
									set_variable = {
										which = AIMiscNavMorale
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavyQual
										value = 0
									}
								}
								multiply_variable = {
									which = tmpAIInitDiploArmy
									which = tmpAIInitDiploArmyQual
								}
								multiply_variable = {
									which = tmpAIInitDiploNavy
									which = tmpAIInitDiploNavyQual
								}
								PREV = {
									set_variable = {
										which = tmpAIInitDiploArmy
										which = PREV
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										which = PREV
									}
									change_variable = {
										which = aiInitDiploArmy
										which = tmpAIInitDiploArmy
									}
									change_variable = {
										which = aiInitDiploNavy
										which = tmpAIInitDiploNavy
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
								}
								set_variable = {
									which = tmpAIInitDiploArmy
									value = 0
								}
								set_variable = {
									which = tmpAIInitDiploNavy
									value = 0
								}
							}
							divide_variable = {
								which = aiInitDiploNavy
								value = 2
							}
							set_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploArmy
							}
							change_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploNavy
							}
							divide_variable = {
								which = getPlanInvPowerDef
								value = 50
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
							overlord = {
								every_ally = {
									limit = {
										NOT = {
											is_subject = yes
											NOT = {
												is_subject_of_type = tributary_state
											}
											NOT = {
												is_subject_of_type = close_tributary_state
											}
										}
										NOT = {
											tag = event_target:getPlanInvTarg
										}
									}
									set_country_flag = getPowerDefAlly
								}
								if = {
									limit = {
										is_part_of_hre = yes
										is_emperor = no
										OR = {
											is_subject = no
											overlord = {
												is_emperor = no
												OR = {
													is_subject = no
													overlord = {
														is_emperor = no
													}
												}
											}
										}
										OR = {
											AND = {
												OR = {
													has_reform = free_city
													has_reform = imperial_city
													has_reform = trading_city_legacy
												}
											}
											event_target:getPlanInvTarg = {
												is_part_of_hre = no
											}
										}
									}
									emperor = {
										if = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
											}
											set_country_flag = getPowerDefAlly
											every_ally = {
												limit = {
													NOT = {
														is_subject = yes
														NOT = {
															is_subject_of_type = tributary_state
														}
														NOT = {
															is_subject_of_type = close_tributary_state
														}
													}
												}
												set_country_flag = getPowerDefAlly
											}
										}
									}
								}
								every_country = {
									limit = {
										has_guaranteed = PREV
										NOT = {
											tag = event_target:getPlanInvTarg
										}
									}
									set_country_flag = getPowerDefAlly
								}
								if = {
									limit = {
										coalition_target = event_target:getPlanInvTarg
									}
									every_country = {
										limit = {
											coalition_target = event_target:getPlanInvTarg
											NOT = {
												tag = PREV
												overlord_of = PREV
											}
										}
										set_country_flag = getPowerDefAlly
									}
								}
								if = {
									limit = {
										is_in_trade_league = yes
									}
									every_country = {
										limit = {
											is_in_trade_league_with = PREV
											NOT = {
												tag = event_target:getPlanInvTarg
											}
										}
										set_country_flag = getPowerDefAlly
									}
								}
							}
						}
						every_ally = {
							limit = {
								NOT = {
									is_subject = yes
									NOT = {
										is_subject_of_type = tributary_state
									}
									NOT = {
										is_subject_of_type = close_tributary_state
									}
								}
								NOT = {
									tag = event_target:getPlanInvTarg
								}
							}
							set_country_flag = getPowerDefAlly
						}
						if = {
							limit = {
								is_part_of_hre = yes
								is_emperor = no
								OR = {
									is_subject = no
									overlord = {
										is_emperor = no
										OR = {
											is_subject = no
											overlord = {
												is_emperor = no
											}
										}
									}
								}
								OR = {
									AND = {
										OR = {
											has_reform = free_city
											has_reform = imperial_city
											has_reform = trading_city_legacy
										}
									}
									event_target:getPlanInvTarg = {
										is_part_of_hre = no
									}
								}
							}
							emperor = {
								if = {
									limit = {
										NOT = {
											tag = event_target:getPlanInvTarg
										}
									}
									set_country_flag = getPowerDefAlly
									every_ally = {
										limit = {
											NOT = {
												is_subject = yes
												NOT = {
													is_subject_of_type = tributary_state
												}
												NOT = {
													is_subject_of_type = close_tributary_state
												}
											}
										}
										set_country_flag = getPowerDefAlly
									}
								}
							}
						}
						every_country = {
							limit = {
								has_guaranteed = PREV
								NOT = {
									tag = event_target:getPlanInvTarg
								}
							}
							set_country_flag = getPowerDefAlly
						}
						if = {
							limit = {
								coalition_target = event_target:getPlanInvTarg
							}
							every_country = {
								limit = {
									coalition_target = event_target:getPlanInvTarg
									NOT = {
										tag = PREV
										overlord_of = PREV
									}
								}
								set_country_flag = getPowerDefAlly
							}
						}
						if = {
							limit = {
								is_in_trade_league = yes
							}
							every_country = {
								limit = {
									is_in_trade_league_with = PREV
									NOT = {
										tag = event_target:getPlanInvTarg
									}
								}
								set_country_flag = getPowerDefAlly
							}
						}
						every_country = {
							limit = {
								has_country_flag = getPowerDefAlly
							}
							clr_country_flag = getPowerDefAlly
							set_country_flag = aiInitDiploRelated
							if = {
								limit = {
									always = yes
								}
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:getPlanInvTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
							if = {
								limit = {
									always = no
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
										}
										if = {
											limit = {
												is_subject = yes
											}
											overlord = {
												if = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
															}
														}
													}
												}
											}
										}
										else = {
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
													}
												}
											}
										}
									}
								}
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							every_country = {
								limit = {
									has_country_flag = aiInitDiploRelated
								}
								clr_country_flag = aiInitDiploRelated
								if = {
									limit = {
										always = yes
									}
									if = {
										limit = {
											always = yes
										}
										export_to_variable = {
											which = AIMiscArmySize
											value = army_size
										}
									}
									else = {
										set_variable = {
											which = AIMiscArmySize
											value = 0
										}
									}
									export_to_variable = {
										which = AIMiscLFL
										value = land_forcelimit
									}
									export_to_variable = {
										which = AIMiscManpow
										value = manpower
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = estate_tribals_loyalty
												value = 0.11
											}
										}
										set_variable = {
											which = tmpArmyTR
											which = estate_tribals_infantry_host
										}
										change_variable = {
											which = tmpArmyTR
											which = estate_tribals_cavalry_host
										}
										multiply_variable = {
											which = tmpArmyTR
											value = 1.25
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = tmpArmyTR
										}
										set_variable = {
											which = tmpArmyTR
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_greater_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_artillery_total
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_lesser_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_artillery_total
										}
									}
									multiply_variable = {
										which = AIMiscArmyEstate
										value = 0.85
									}
									if = {
										limit = {
											always = yes
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = AIMiscManpow
														which = AIMiscLFL
													}
												}
											}
											subtract_variable = {
												which = AIMiscLFL
												which = AIMiscManpow
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.3
											}
										}
										else = {
											subtract_variable = {
												which = AIMiscManpow
												which = AIMiscLFL
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.3
											}
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscLFL
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscManpow
										}
									}
									if = {
										limit = {
											always = yes
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscArmyEstate
										}
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										which = AIMiscArmySize
									}
									set_variable = {
										which = AIMiscArmySize
										value = 0
									}
									set_variable = {
										which = AIMiscLFL
										value = 0
									}
									set_variable = {
										which = AIMiscManpow
										value = 0
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									export_to_variable = {
										which = AIMiscMilTech
										value = mil_tech
									}
									export_to_variable = {
										which = AIMiscLandMorale
										value = modifier:land_morale
									}
									export_to_variable = {
										which = AIMiscDisc
										value = modifier:discipline
									}
									multiply_variable = {
										which = AIMiscMilTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscLandMorale
										value = 2
									}
									multiply_variable = {
										which = AIMiscDisc
										value = 5
									}
									change_variable = {
										which = AIMiscMilTech
										value = 1
									}
									change_variable = {
										which = AIMiscLandMorale
										value = 1
									}
									change_variable = {
										which = AIMiscDisc
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscMilTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscLandMorale
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscDisc
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploArmyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscMilTech
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
									}
									set_variable = {
										which = AIMiscMilTech
										value = 0
									}
									set_variable = {
										which = AIMiscLandMorale
										value = 0
									}
									set_variable = {
										which = AIMiscDisc
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploArmyQual
										value = 0
									}
								}
								if = {
									limit = {
										always = yes
									}
									export_to_variable = {
										which = tmpAIInitDiploNavy
										value = navy_size
									}
									export_to_variable = {
										which = AIMiscDipTech
										value = dip_tech
									}
									export_to_variable = {
										which = AIMiscNavMorale
										value = modifier:naval_morale
									}
									multiply_variable = {
										which = AIMiscDipTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscNavMorale
										value = 1.5
									}
									change_variable = {
										which = AIMiscDipTech
										value = 1
									}
									change_variable = {
										which = AIMiscNavMorale
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscDipTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscNavMorale
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploNavyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscDipTech
										}
										change_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscNavMorale
										}
									}
									set_variable = {
										which = AIMiscDipTech
										value = 0
									}
									set_variable = {
										which = AIMiscNavMorale
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavyQual
										value = 0
									}
								}
								multiply_variable = {
									which = tmpAIInitDiploArmy
									which = tmpAIInitDiploArmyQual
								}
								multiply_variable = {
									which = tmpAIInitDiploNavy
									which = tmpAIInitDiploNavyQual
								}
								PREV = {
									set_variable = {
										which = tmpAIInitDiploArmy
										which = PREV
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										which = PREV
									}
									change_variable = {
										which = aiInitDiploArmy
										which = tmpAIInitDiploArmy
									}
									change_variable = {
										which = aiInitDiploNavy
										which = tmpAIInitDiploNavy
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
								}
								set_variable = {
									which = tmpAIInitDiploArmy
									value = 0
								}
								set_variable = {
									which = tmpAIInitDiploNavy
									value = 0
								}
							}
							divide_variable = {
								which = aiInitDiploNavy
								value = 2
							}
							set_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploArmy
							}
							change_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploNavy
							}
							divide_variable = {
								which = getPlanInvPowerDef
								value = 50
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
							PREV = {
								change_variable = {
									which = getPlanInvPowerDef
									which = PREV
								}
							}
							set_variable = {
								which = getPlanInvPowerDef
								value = 0
							}
						}
						multiply_variable = {
							which = getPlanInvPowerDef
							value = 1.25
						}
						if = {
							limit = {
								check_variable = {
									which = getPlanInvPowerAtt
									which = getPlanInvPowerDef
								}
							}
							set_variable = {
								which = tmpAtt
								which = getPlanInvPowerAtt
							}
							set_variable = {
								which = tmpDef
								which = getPlanInvPowerDef
							}
							multiply_variable = {
								which = tmpAtt
								which = tmpAtt
							}
							multiply_variable = {
								which = tmpDef
								which = tmpDef
							}
							subtract_variable = {
								which = tmpAtt
								which = tmpDef
							}
							set_variable = {
								which = inp_m_exp
								which = tmpAtt
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp_m_exp
											value = 0
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
								change_variable = {
									which = err.math.exp.undef
									value = 1
								}
							}
							else_if = {
								limit = {
									is_variable_equal = {
										which = inp_m_exp
										value = 0
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								set_variable = {
									which = exp_m_exp
									value = 0.5
								}
								set_variable = {
									which = int_m_exp
									which = exp_m_exp
								}
								multiply_variable = {
									which = int_m_exp
									value = 0.001
								}
								multiply_variable = {
									which = int_m_exp
									value = 1000
								}
								set_variable = {
									which = dec_m_exp
									which = exp_m_exp
								}
								subtract_variable = {
									which = dec_m_exp
									which = int_m_exp
								}
								set_variable = {
									which = inp
									which = inp_m_exp
								}
								if = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 0.001
											}
										}
									}
									set_variable = {
										which = ln_val
										value = 0
									}
									change_variable = {
										which = err.math.ln.undef
										value = 1
									}
								}
								else = {
									set_variable = {
										which = ln_val
										value = 0
									}
									set_variable = {
										which = scale
										value = 10000
									}
									set_variable = {
										which = k
										value = 0
									}
									set_variable = {
										which = k_div
										which = scale
									}
									while = {
										limit = {
											check_variable = {
												which = inp
												value = 2.001
											}
										}
										multiply_variable = {
											which = inp
											value = 0.5
										}
										change_variable = {
											which = ln_val
											value = 6931.472
										}
									}
									while = {
										limit = {
											NOT = {
												check_variable = {
													which = inp
													value = 1
												}
											}
										}
										multiply_variable = {
											which = inp
											value = 2
										}
										subtract_variable = {
											which = ln_val
											value = 6931.472
										}
									}
									multiply_variable = {
										which = inp
										which = scale
									}
									while = {
										limit = {
											NOT = {
												check_variable = {
													which = k
													value = 10
												}
											}
										}
										change_variable = {
											which = k
											value = 1
										}
										multiply_variable = {
											which = k_div
											value = 0.5
										}
										set_variable = {
											which = t_m_ln
											which = scale
										}
										change_variable = {
											which = t_m_ln
											which = k_div
										}
										if = {
											limit = {
												check_variable = {
													which = inp
													which = t_m_ln
												}
											}
											divide_variable = {
												which = inp
												which = t_m_ln
											}
											multiply_variable = {
												which = inp
												which = scale
											}
											set_variable = {
												which = lt_ind
												which = k
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 6
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 8
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 9
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 10
																}
															}
															set_variable = {
																which = lt_val
																value = 9.761
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 19.512
															}
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 38.986
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 7
															}
														}
														set_variable = {
															which = lt_val
															value = 77.821
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 155.042
														}
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 3
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 4
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 5
																}
															}
															set_variable = {
																which = lt_val
																value = 307.717
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 606.246
															}
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 1177.83
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 2
															}
														}
														set_variable = {
															which = lt_val
															value = 2231.436
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 4054.651
														}
													}
												}
											}
											set_variable = {
												which = lt_ind
												value = 0
											}
											change_variable = {
												which = ln_val
												which = lt_val
											}
										}
										set_variable = {
											which = t_m_ln
											value = 0
										}
									}
									divide_variable = {
										which = ln_val
										value = 10000
									}
									set_variable = {
										which = scale
										value = 0
									}
									set_variable = {
										which = k
										value = 0
									}
									set_variable = {
										which = k_div
										value = 0
									}
									set_variable = {
										which = lt_val
										value = 0
									}
								}
								set_variable = {
									which = inp
									value = 0
								}
								multiply_variable = {
									which = dec_m_exp
									which = ln_val
								}
								set_variable = {
									which = math.e.expnt
									which = dec_m_exp
								}
								set_variable = {
									which = math.e.return
									value = 1
								}
								if = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = -6.999
											}
										}
									}
									set_variable = {
										which = exp_val
										value = 0
									}
								}
								else = {
									while = {
										limit = {
											check_variable = {
												which = math.e.expnt
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.expnt
											value = 1
										}
										multiply_variable = {
											which = math.e.return
											value = 2.718
										}
									}
									while = {
										limit = {
											NOT = {
												check_variable = {
													which = math.e.expnt
													value = 0
												}
											}
										}
										change_variable = {
											which = math.e.expnt
											value = 1
										}
										divide_variable = {
											which = math.e.return
											value = 2.718
										}
									}
									set_variable = {
										which = math.e.sm
										value = 1
									}
									if = {
										limit = {
											NOT = {
												is_variable_equal = {
													which = math.e.expnt
													value = 0
												}
											}
										}
										set_variable = {
											which = math.e.sq
											which = math.e.expnt
										}
										multiply_variable = {
											which = math.e.sq
											which = math.e.expnt
										}
										set_variable = {
											which = math.e.fct
											value = 2
										}
										set_variable = {
											which = math.e.fctl
											value = 2
										}
										set_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										set_variable = {
											which = math.e.a2
											which = math.e.expnt
										}
										set_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
										set_variable = {
											which = math.e.prec
											value = 3
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										while = {
											limit = {
												check_variable = {
													which = math.e.prec
													value = 1
												}
											}
											subtract_variable = {
												which = math.e.prec
												value = 1
											}
											change_variable = {
												which = math.e.fctl
												value = 1
											}
											multiply_variable = {
												which = math.e.fct
												which = math.e.fctl
											}
											change_variable = {
												which = math.e.fctl
												value = 1
											}
											multiply_variable = {
												which = math.e.fct
												which = math.e.fctl
											}
											multiply_variable = {
												which = math.e.a1
												which = math.e.sq
											}
											multiply_variable = {
												which = math.e.a2
												which = math.e.sq
											}
											change_variable = {
												which = math.e.a3
												value = 2
											}
											set_variable = {
												which = math.e.tmp
												which = math.e.a2
											}
											multiply_variable = {
												which = math.e.tmp
												which = math.e.a3
											}
											change_variable = {
												which = math.e.tmp
												which = math.e.a1
											}
											divide_variable = {
												which = math.e.tmp
												which = math.e.fct
											}
											change_variable = {
												which = math.e.sm
												which = math.e.tmp
											}
										}
									}
									multiply_variable = {
										which = math.e.return
										which = math.e.sm
									}
									set_variable = {
										which = exp_val
										which = math.e.return
									}
									set_variable = {
										which = math.e.sm
										value = 0
									}
									set_variable = {
										which = math.e.tmp
										value = 0
									}
									set_variable = {
										which = math.e.a1
										value = 0
									}
									set_variable = {
										which = math.e.a2
										value = 0
									}
									set_variable = {
										which = math.e.a3
										value = 0
									}
									set_variable = {
										which = math.e.fctl
										value = 0
									}
									set_variable = {
										which = math.e.fct
										value = 0
									}
									set_variable = {
										which = math.e.prec
										value = 0
									}
									set_variable = {
										which = math.e.sq
										value = 0
									}
								}
								set_variable = {
									which = math.e.expnt
									value = 0
								}
								set_variable = {
									which = math.e.return
									value = 0
								}
								while = {
									limit = {
										check_variable = {
											which = int_m_exp
											value = 1
										}
									}
									subtract_variable = {
										which = int_m_exp
										value = 1
									}
									multiply_variable = {
										which = exp_val
										which = inp_m_exp
									}
								}
								set_variable = {
									which = exp_m_exp
									value = 0
								}
								set_variable = {
									which = int_m_exp
									value = 0
								}
								set_variable = {
									which = dec_m_exp
									value = 0
								}
								set_variable = {
									which = ln_val
									value = 0
								}
							}
							set_variable = {
								which = inp_m_exp
								value = 0
							}
							set_variable = {
								which = getPlanInvPowerLanch
								which = getPlanInvPowerAtt
							}
							subtract_variable = {
								which = getPlanInvPowerLanch
								which = exp_val
							}
							divide_variable = {
								which = getPlanInvPowerLanch
								which = getPlanInvPowerAtt
							}
							if = {
								limit = {
									always = yes
								}
								set_variable = {
									which = getPlanInvPowerAtt
									value = 0
								}
								set_variable = {
									which = getPlanInvPowerDef
									value = 0
								}
							}
							set_variable = {
								which = tmpAtt
								value = 0
							}
							set_variable = {
								which = tmpDef
								value = 0
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = getPlanInvPowerLanch
								value = 3
							}
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = getPlanInvPowerLanch
										value = 1
									}
								}
							}
							every_owned_province = {
								limit = {
									has_province_flag = getPlanInvCheck
								}
								set_variable = {
									which = armySizeCheck
									which = event_target:getPlanInvTarg
								}
								export_to_variable = {
									which = getPlanInvFortLevel
									value = trigger_value:fort_level
								}
								subtract_variable = {
									which = getPlanInvFortLevel
									value = 1
								}
								if = {
									limit = {
										check_variable = {
											which = armySizeCheck
											which = getPlanInvFortLevel
										}
									}
									set_variable = {
										which = getPlanInvPowerLanch
										which = owner
									}
									subtract_variable = {
										which = getPlanInvPowerLanch
										value = 1
									}
									multiply_variable = {
										which = getPlanInvPowerLanch
										which = getPlanInvPowerLanch
									}
									set_variable = {
										which = getPlanInvCE
										value = 300
									}
									every_neighbor_province = {
										limit = {
											NOT = {
												has_province_modifier = martial_law
											}
											OR = {
												owned_by = event_target:getPlanInvTarg
												owner = {
													OR = {
														is_subject_of = event_target:getPlanInvTarg
														overlord = {
															is_subject_of = event_target:getPlanInvTarg
														}
													}
												}
											}
										}
										if = {
											limit = {
												owner = {
													OR = {
														is_subject_of = event_target:getPlanInvTarg
														overlord = {
															is_subject_of = event_target:getPlanInvTarg
														}
													}
												}
											}
											set_variable = {
												which = getPlanInvCE
												which = runner_final_time_overlord
											}
										}
										else = {
											set_variable = {
												which = getPlanInvCE
												which = runner_final_time
											}
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getPlanInvCE
														which = PREV
													}
												}
											}
											PREV = {
												set_variable = {
													which = getPlanInvCE
													which = PREV
												}
											}
										}
										set_variable = {
											which = getPlanInvCE
											value = 0
										}
									}
									if = {
										limit = {
											event_target:getPlanInvTarg = {
												government = nomad
											}
										}
										subtract_variable = {
											which = getPlanInvCE
											value = 120
										}
										multiply_variable = {
											which = getPlanInvCE
											value = -0.1
										}
									}
									else = {
										subtract_variable = {
											which = getPlanInvCE
											value = 60
										}
										multiply_variable = {
											which = getPlanInvCE
											value = -0.2
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getPlanInvCE
													value = 0
												}
											}
										}
										set_variable = {
											which = getPlanInvCE
											value = 0
										}
									}
									set_variable = {
										which = getPlanInvVal
										value = 1
									}
									if = {
										limit = {
											event_target:getPlanInvTarg = {
												OR = {
													accepted_culture = PREV
													primary_culture = PREV
													culture_group = PREV
												}
											}
										}
										if = {
											limit = {
												NOT = {
													event_target:getPlanInvTarg = {
														total_development = 50
													}
												}
											}
											change_variable = {
												which = getPlanInvVal
												value = 4
											}
										}
										else_if = {
											limit = {
												event_target:getPlanInvTarg = {
													total_development = 1000
												}
											}
											change_variable = {
												which = getPlanInvVal
												value = 1
											}
										}
										else = {
											change_variable = {
												which = getPlanInvVal
												value = 2
											}
										}
									}
									if = {
										limit = {
											event_target:getPlanInvTarg = {
												religion = PREV
											}
										}
										change_variable = {
											which = getPlanInvVal
											value = 0.5
										}
									}
									if = {
										limit = {
											event_target:getPlanInvTarg = {
												religion_group = PREV
												NOT = {
													AND = {
														PREV = {
															religion = catholic
														}
														religion = orthodox
													}
												}
											}
										}
										change_variable = {
											which = getPlanInvVal
											value = 0.5
										}
									}
									if = {
										limit = {
											is_core = event_target:getPlanInvTarg
										}
										change_variable = {
											which = getPlanInvVal
											value = 100
										}
									}
									if = {
										limit = {
											is_claim = event_target:getPlanInvTarg
										}
										change_variable = {
											which = getPlanInvVal
											value = 0.5
										}
									}
									if = {
										limit = {
											has_province_flag = tribals_control_province
											NOT = {
												event_target:getPlanInvTarg = {
													OR = {
														government = tribal
														government = nomad
													}
												}
											}
										}
										multiply_variable = {
											which = getPlanInvVal
											value = 0.5
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getPlanInvVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = getPlanInvVal
											value = 0.001
										}
									}
									multiply_variable = {
										which = getPlanInvVal
										which = aiProvValue
									}
									multiply_variable = {
										which = getPlanInvVal
										which = getPlanInvCE
									}
									multiply_variable = {
										which = getPlanInvVal
										which = getPlanInvPowerLanch
									}
									if = {
										limit = {
											owner = {
												OR = {
													event_target:getPlanInvTarg = {
														is_subject_of = PREV
													}
													alliance_with = event_target:getPlanInvTarg
													marriage_with = event_target:getPlanInvTarg
													truce_with = event_target:getPlanInvTarg
													any_ally = {
														alliance_with = event_target:getPlanInvTarg
													}
													any_country = {
														has_guaranteed = PREV
														OR = {
															tag = event_target:getPlanInvTarg
															alliance_with = event_target:getPlanInvTarg
														}
													}
													overlord = {
														OR = {
															alliance_with = event_target:getPlanInvTarg
															marriage_with = event_target:getPlanInvTarg
															any_ally = {
																alliance_with = event_target:getPlanInvTarg
															}
															any_country = {
																has_guaranteed = PREV
																OR = {
																	tag = event_target:getPlanInvTarg
																	alliance_with = event_target:getPlanInvTarg
																}
															}
														}
													}
												}
											}
										}
										multiply_variable = {
											which = getPlanInvVal
											value = 0.5
										}
									}
									if = {
										limit = {
											check_variable = {
												which = getPlanInvVal
												which = event_target:aiEvalAgendaInvasionTarg
											}
										}
										event_target:aiEvalAgendaInvasionTarg = {
											set_variable = {
												which = getPlanInvVal
												value = 0
											}
										}
										save_event_target_as = aiEvalAgendaInvasionTarg
									}
									else = {
										set_variable = {
											which = getPlanInvVal
											value = 0
										}
									}
									set_variable = {
										which = getPlanInvCE
										value = 0
									}
									set_variable = {
										which = getPlanInvPowerLanch
										value = 0
									}
								}
								set_variable = {
									which = armySizeCheck
									value = 0
								}
								set_variable = {
									which = getPlanInvFortLevel
									value = 0
								}
							}
						}
						set_variable = {
							which = getPlanInvPowerAtt
							value = 0
						}
						set_variable = {
							which = getPlanInvPowerDef
							value = 0
						}
						set_variable = {
							which = getPlanInvPowerLanch
							value = 0
						}
					}
					every_owned_province = {
						clr_province_flag = getPlanInvCheck
					}
				}
				event_target:aiEvalAgendaInvasionTarg = {
					set_variable = {
						which = none
						value = 102842.336
					}
					if = {
						limit = {
							NOT = {
								is_variable_equal = {
									which = none
									value = 102842.336
								}
							}
						}
						set_variable = {
							which = none
							which = getPlanInvVal
						}
					}
					set_variable = {
						which = none
						value = 0
					}
					set_variable = {
						which = getPlanInvVal
						value = 0
					}
				}
				set_variable = {
					which = getPlanInvVal
					value = 0
				}
				set_variable = {
					which = armySizeCheck
					value = 0
				}
				set_variable = {
					which = aiEvalAgendaInvasionCheck
					value = 1
				}
				if = {
					limit = {
						NOT = {
							event_target:aiEvalAgendaInvasionTarg = {
								is_variable_equal = {
									which = aiEvalAgendaInvasionCheck
									value = 1
								}
							}
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
				set_variable = {
					which = aiEvalAgendaInvasionCheck
					value = 0
				}
				random_list = {
					1 = {
						subtract_variable = {
							which = tmpEval
							value = 0.5
						}
					}
					3 = {
						subtract_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					9 = {}
					3 = {
						change_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					1 = {
						change_variable = {
							which = tmpEval
							value = 0.5
						}
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = tmpEval
								value = -1.001
							}
						}
					}
					if = {
						limit = {
							has_country_flag = aiHasAgendaInvasion
						}
						clr_country_flag = aiHasAgendaInvasion
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = tmpEval
							value = 1.001
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = aiHasAgendaInvasion
							}
						}
						set_country_flag = aiHasAgendaInvasion
					}
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
				random_list = {
					1 = {
						subtract_variable = {
							which = tmpEval
							value = 0.5
						}
					}
					3 = {
						subtract_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					9 = {}
					3 = {
						change_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					1 = {
						change_variable = {
							which = tmpEval
							value = 0.5
						}
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = tmpEval
								value = -1.001
							}
						}
					}
					if = {
						limit = {
							has_country_flag = aiHasAgendaColonization
						}
						clr_country_flag = aiHasAgendaColonization
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = tmpEval
							value = 1.001
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = aiHasAgendaColonization
							}
						}
						set_country_flag = aiHasAgendaColonization
					}
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
			}
			else = {
				clr_country_flag = aiHasAgendaInvasion
				clr_country_flag = aiHasAgendaColonization
			}
			if = {
				limit = {
					has_country_flag = aiHasAgendaEconomy
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
				random_list = {
					1 = {
						subtract_variable = {
							which = tmpEval
							value = 0.5
						}
					}
					3 = {
						subtract_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					9 = {}
					3 = {
						change_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					1 = {
						change_variable = {
							which = tmpEval
							value = 0.5
						}
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = tmpEval
								value = -1.001
							}
						}
					}
					if = {
						limit = {
							has_country_flag = aiHasAgendaTrade
						}
						clr_country_flag = aiHasAgendaTrade
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = tmpEval
							value = 1.001
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = aiHasAgendaTrade
							}
						}
						set_country_flag = aiHasAgendaTrade
					}
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
				random_list = {
					1 = {
						subtract_variable = {
							which = tmpEval
							value = 0.5
						}
					}
					3 = {
						subtract_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					9 = {}
					3 = {
						change_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					1 = {
						change_variable = {
							which = tmpEval
							value = 0.5
						}
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = tmpEval
								value = -1.001
							}
						}
					}
					if = {
						limit = {
							has_country_flag = aiHasAgendaProduction
						}
						clr_country_flag = aiHasAgendaProduction
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = tmpEval
							value = 1.001
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = aiHasAgendaProduction
							}
						}
						set_country_flag = aiHasAgendaProduction
					}
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
			}
			else = {
				clr_country_flag = aiHasAgendaTrade
				clr_country_flag = aiHasAgendaProduction
			}
			if = {
				limit = {
					has_country_flag = aiHasAgendaGovernance
				}
				set_variable = {
					which = tmpValPos
					value = 0
				}
				set_variable = {
					which = tmpValNeg
					value = 0
				}
				set_variable = {
					which = tmpMultPos
					value = 1
				}
				set_variable = {
					which = tmpMultNeg
					value = 1
				}
				if = {
					limit = {
						ruler_has_personality = scholar_personality
					}
					change_variable = {
						which = tmpValPos
						value = 0.15
					}
					change_variable = {
						which = tmpMultPos
						value = 0.4
					}
					subtract_variable = {
						which = tmpMultNeg
						value = 0.4
					}
				}
				if = {
					limit = {
						ruler_has_personality = free_thinker_personality
					}
					change_variable = {
						which = tmpValPos
						value = 0.15
					}
					change_variable = {
						which = tmpMultPos
						value = 0.4
					}
					subtract_variable = {
						which = tmpMultNeg
						value = 0.4
					}
				}
				export_to_variable = {
					which = getEduWeightTechAdm
					value = adm_tech
				}
				export_to_variable = {
					which = getEduWeightTechDip
					value = dip_tech
				}
				export_to_variable = {
					which = getEduWeightTechMil
					value = mil_tech
				}
				set_variable = {
					which = getEduWeightTechNeighbAdm
					value = 0
				}
				set_variable = {
					which = getEduWeightTechNeighbDip
					value = 0
				}
				set_variable = {
					which = getEduWeightTechNeighbMil
					value = 0
				}
				set_variable = {
					which = getEduWeightTechNeighb
					value = 0
				}
				capital_scope = {
					save_event_target_as = getEduWeightTarg
				}
				every_country = {
					limit = {
						capital_scope = {
							continent = event_target:getEduWeightTarg
						}
						NOT = {
							tag = PREV
						}
					}
					export_to_variable = {
						which = getEduWeightTechNeighbAdm
						value = adm_tech
					}
					export_to_variable = {
						which = getEduWeightTechNeighbDip
						value = dip_tech
					}
					export_to_variable = {
						which = getEduWeightTechNeighbMil
						value = mil_tech
					}
					PREV = {
						change_variable = {
							which = getEduWeightTechNeighbAdm
							which = PREV
						}
						change_variable = {
							which = getEduWeightTechNeighbDip
							which = PREV
						}
						change_variable = {
							which = getEduWeightTechNeighbMil
							which = PREV
						}
						change_variable = {
							which = getEduWeightTechNeighb
							value = 1
						}
					}
					set_variable = {
						which = getEduWeightTechNeighbAdm
						value = 0
					}
					set_variable = {
						which = getEduWeightTechNeighbDip
						value = 0
					}
					set_variable = {
						which = getEduWeightTechNeighbMil
						value = 0
					}
				}
				every_neighbor_country = {
					export_to_variable = {
						which = getEduWeightTechNeighbAdm
						value = adm_tech
					}
					export_to_variable = {
						which = getEduWeightTechNeighbDip
						value = dip_tech
					}
					export_to_variable = {
						which = getEduWeightTechNeighbMil
						value = mil_tech
					}
					PREV = {
						change_variable = {
							which = getEduWeightTechNeighbAdm
							which = PREV
						}
						change_variable = {
							which = getEduWeightTechNeighbDip
							which = PREV
						}
						change_variable = {
							which = getEduWeightTechNeighbMil
							which = PREV
						}
						change_variable = {
							which = getEduWeightTechNeighb
							value = 1
						}
					}
					set_variable = {
						which = getEduWeightTechNeighbAdm
						value = 0
					}
					set_variable = {
						which = getEduWeightTechNeighbDip
						value = 0
					}
					set_variable = {
						which = getEduWeightTechNeighbMil
						value = 0
					}
				}
				divide_variable = {
					which = getEduWeightTechNeighbAdm
					which = getEduWeightTechNeighb
				}
				divide_variable = {
					which = getEduWeightTechNeighbDip
					which = getEduWeightTechNeighb
				}
				divide_variable = {
					which = getEduWeightTechNeighbMil
					which = getEduWeightTechNeighb
				}
				subtract_variable = {
					which = getEduWeightTechAdm
					which = getEduWeightTechNeighbAdm
				}
				subtract_variable = {
					which = getEduWeightTechDip
					which = getEduWeightTechNeighbDip
				}
				subtract_variable = {
					which = getEduWeightTechMil
					which = getEduWeightTechNeighbMil
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = getEduWeightTechAdm
								value = 0
							}
						}
					}
					multiply_variable = {
						which = getEduWeightTechAdm
						value = -1
					}
				}
				else = {
					set_variable = {
						which = getEduWeightTechAdm
						value = 0
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = getEduWeightTechDip
								value = 0
							}
						}
					}
					multiply_variable = {
						which = getEduWeightTechDip
						value = -1
					}
				}
				else = {
					set_variable = {
						which = getEduWeightTechDip
						value = 0
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = getEduWeightTechMil
								value = 0
							}
						}
					}
					multiply_variable = {
						which = getEduWeightTechMil
						value = -1
					}
				}
				else = {
					set_variable = {
						which = getEduWeightTechMil
						value = 0
					}
				}
				set_variable = {
					which = tmpValChange
					which = getEduWeightTechAdm
				}
				change_variable = {
					which = tmpValChange
					which = getEduWeightTechDip
				}
				change_variable = {
					which = tmpValChange
					which = getEduWeightTechMil
				}
				set_variable = {
					which = getEduWeightTechAdm
					value = 0
				}
				set_variable = {
					which = getEduWeightTechDip
					value = 0
				}
				set_variable = {
					which = getEduWeightTechMil
					value = 0
				}
				set_variable = {
					which = getEduWeightTechNeighbAdm
					value = 0
				}
				set_variable = {
					which = getEduWeightTechNeighbDip
					value = 0
				}
				set_variable = {
					which = getEduWeightTechNeighbMil
					value = 0
				}
				set_variable = {
					which = getEduWeightTechNeighb
					value = 0
				}
				divide_variable = {
					which = tmpValChange
					value = 10
				}
				change_variable = {
					which = tmpValPos
					which = tmpValChange
				}
				divide_variable = {
					which = tmpValChange
					value = 3
				}
				change_variable = {
					which = tmpMultPos
					which = tmpValChange
				}
				set_variable = {
					which = tmpValChange
					value = 0
				}
				export_to_variable = {
					which = tmpInc
					value = monthly_income
				}
				set_variable = {
					which = tmpValChange
					which = tmpInc
				}
				multiply_variable = {
					which = tmpValChange
					value = 15
				}
				subtract_variable = {
					which = tmpValChange
					which = court_money_endowed
				}
				divide_variable = {
					which = tmpValChange
					which = tmpInc
				}
				divide_variable = {
					which = tmpValChange
					value = 15
				}
				subtract_variable = {
					which = tmpValChange
					value = 0.333
				}
				if = {
					limit = {
						check_variable = {
							which = tmpValChange
							value = 0
						}
					}
					divide_variable = {
						which = tmpValChange
						value = 2
					}
					change_variable = {
						which = tmpValPos
						which = tmpValChange
					}
					divide_variable = {
						which = tmpValChange
						value = 3
					}
					change_variable = {
						which = tmpMultPos
						which = tmpValChange
					}
				}
				else = {
					multiply_variable = {
						which = tmpValChange
						value = -1
					}
					change_variable = {
						which = tmpValNeg
						which = tmpValChange
					}
					divide_variable = {
						which = tmpValChange
						value = 3
					}
					change_variable = {
						which = tmpMultNeg
						which = tmpValChange
					}
				}
				set_variable = {
					which = tmpValChange
					value = 0
				}
				set_variable = {
					which = tmpValChange
					which = tmpInc
				}
				multiply_variable = {
					which = tmpValChange
					value = 30
				}
				subtract_variable = {
					which = tmpValChange
					which = court_money_endowed
				}
				divide_variable = {
					which = tmpValChange
					which = tmpInc
				}
				divide_variable = {
					which = tmpValChange
					value = 30
				}
				subtract_variable = {
					which = tmpValChange
					value = 0.333
				}
				if = {
					limit = {
						check_variable = {
							which = tmpValChange
							value = 0
						}
					}
					divide_variable = {
						which = tmpValChange
						value = 2
					}
					change_variable = {
						which = tmpValPos
						which = tmpValChange
					}
					divide_variable = {
						which = tmpValChange
						value = 3
					}
					change_variable = {
						which = tmpMultPos
						which = tmpValChange
					}
				}
				else = {
					multiply_variable = {
						which = tmpValChange
						value = -1
					}
					change_variable = {
						which = tmpValNeg
						which = tmpValChange
					}
					divide_variable = {
						which = tmpValChange
						value = 3
					}
					change_variable = {
						which = tmpMultNeg
						which = tmpValChange
					}
				}
				set_variable = {
					which = tmpValChange
					value = 0
				}
				multiply_variable = {
					which = tmpValPos
					which = tmpMultPos
				}
				multiply_variable = {
					which = tmpValNeg
					which = tmpMultNeg
				}
				subtract_variable = {
					which = tmpValPos
					which = tmpValNeg
				}
				set_variable = {
					which = tmpEval
					which = tmpValPos
				}
				set_variable = {
					which = tmpValPos
					value = 0
				}
				set_variable = {
					which = tmpMultPos
					value = 0
				}
				set_variable = {
					which = tmpValNeg
					value = 0
				}
				set_variable = {
					which = tmpMultNeg
					value = 0
				}
				random_list = {
					1 = {
						subtract_variable = {
							which = tmpEval
							value = 0.5
						}
					}
					3 = {
						subtract_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					9 = {}
					3 = {
						change_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					1 = {
						change_variable = {
							which = tmpEval
							value = 0.5
						}
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = tmpEval
								value = -1.001
							}
						}
					}
					if = {
						limit = {
							has_country_flag = aiHasAgendaTech
						}
						clr_country_flag = aiHasAgendaTech
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = tmpEval
							value = 1.001
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = aiHasAgendaTech
							}
						}
						set_country_flag = aiHasAgendaTech
					}
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
				set_variable = {
					which = tmpValPos
					value = 0
				}
				set_variable = {
					which = tmpValNeg
					value = 0
				}
				set_variable = {
					which = tmpMultPos
					value = 1
				}
				set_variable = {
					which = tmpMultNeg
					value = 1
				}
				if = {
					limit = {
						ruler_has_personality = incorruptible_personality
					}
					change_variable = {
						which = tmpMultPos
						value = 0.2
					}
					subtract_variable = {
						which = tmpMultNeg
						value = 0.1
					}
				}
				export_to_variable = {
					which = tmpValChange
					value = corruption
				}
				subtract_variable = {
					which = tmpValChange
					value = 10
				}
				divide_variable = {
					which = tmpValChange
					value = 10
				}
				if = {
					limit = {
						check_variable = {
							which = tmpValChange
							value = 0
						}
					}
					change_variable = {
						which = tmpValPos
						which = tmpValChange
					}
				}
				else = {
					multiply_variable = {
						which = tmpValChange
						value = -3
					}
					change_variable = {
						which = tmpValNeg
						which = tmpValChange
					}
				}
				export_to_variable = {
					which = tmpMultChange
					value = stability
				}
				divide_variable = {
					which = tmpMultChange
					value = 3
				}
				if = {
					limit = {
						check_variable = {
							which = tmpMultChange
							value = 0
						}
					}
					change_variable = {
						which = tmpMultPos
						which = tmpMultChange
					}
					divide_variable = {
						which = tmpMultChange
						value = 2
					}
					subtract_variable = {
						which = tmpMultNeg
						which = tmpMultChange
					}
				}
				else = {
					multiply_variable = {
						which = tmpMultChange
						value = -1
					}
					change_variable = {
						which = tmpMultNeg
						which = tmpMultChange
					}
					divide_variable = {
						which = tmpMultChange
						value = 2
					}
					subtract_variable = {
						which = tmpMultPos
						which = tmpMultChange
					}
				}
				if = {
					limit = {
						ruler_has_personality = embezzler_personality
					}
					change_variable = {
						which = tmpMultNeg
						value = 0.2
					}
					subtract_variable = {
						which = tmpMultPos
						value = 0.1
					}
				}
				if = {
					limit = {
						is_at_war = yes
					}
					set_variable = {
						which = tmpMultPos
						value = 0
					}
					set_variable = {
						which = tmpValNeg
						value = -3
					}
				}
				if = {
					limit = {
						has_any_disaster = yes
					}
					set_variable = {
						which = tmpMultPos
						value = 0
					}
					set_variable = {
						which = tmpValNeg
						value = -3
					}
				}
				multiply_variable = {
					which = tmpValPos
					which = tmpMultPos
				}
				multiply_variable = {
					which = tmpValNeg
					which = tmpMultNeg
				}
				subtract_variable = {
					which = tmpValPos
					which = tmpValNeg
				}
				set_variable = {
					which = tmpEval
					which = tmpValPos
				}
				set_variable = {
					which = tmpValPos
					value = 0
				}
				set_variable = {
					which = tmpMultPos
					value = 0
				}
				set_variable = {
					which = tmpValNeg
					value = 0
				}
				set_variable = {
					which = tmpMultNeg
					value = 0
				}
				set_variable = {
					which = tmpValChange
					value = 0
				}
				set_variable = {
					which = tmpMultChange
					value = 0
				}
				random_list = {
					1 = {
						subtract_variable = {
							which = tmpEval
							value = 0.5
						}
					}
					3 = {
						subtract_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					9 = {}
					3 = {
						change_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					1 = {
						change_variable = {
							which = tmpEval
							value = 0.5
						}
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = tmpEval
								value = -1.001
							}
						}
					}
					if = {
						limit = {
							has_country_flag = aiHasAgendaReform
						}
						clr_country_flag = aiHasAgendaReform
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = tmpEval
							value = 1.001
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = aiHasAgendaReform
							}
						}
						set_country_flag = aiHasAgendaReform
					}
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
				set_variable = {
					which = tmpValPos
					value = 0
				}
				set_variable = {
					which = tmpValNeg
					value = 0
				}
				set_variable = {
					which = tmpMultPos
					value = 1
				}
				set_variable = {
					which = tmpMultNeg
					value = 1
				}
				set_variable = {
					which = tmpValChange
					which = country_CE_average
				}
				export_to_variable = {
					which = tmpValMed
					value = num_of_cities
				}
				divide_variable = {
					which = tmpValMed
					value = 10
				}
				change_variable = {
					which = tmpValMed
					value = 10
				}
				subtract_variable = {
					which = tmpValChange
					which = tmpValMed
				}
				if = {
					limit = {
						check_variable = {
							which = tmpValChange
							value = 0
						}
					}
					divide_variable = {
						which = tmpValChange
						value = 10
					}
					change_variable = {
						which = tmpValPos
						which = tmpValChange
					}
				}
				else = {
					change_variable = {
						which = tmpValNeg
						value = 3
					}
				}
				multiply_variable = {
					which = tmpValPos
					which = tmpMultPos
				}
				multiply_variable = {
					which = tmpValNeg
					which = tmpMultNeg
				}
				subtract_variable = {
					which = tmpValPos
					which = tmpValNeg
				}
				set_variable = {
					which = tmpEval
					which = tmpValPos
				}
				set_variable = {
					which = tmpValPos
					value = 0
				}
				set_variable = {
					which = tmpMultPos
					value = 0
				}
				set_variable = {
					which = tmpValNeg
					value = 0
				}
				set_variable = {
					which = tmpMultNeg
					value = 0
				}
				set_variable = {
					which = tmpValChange
					value = 0
				}
				set_variable = {
					which = tmpValMed
					value = 0
				}
				random_list = {
					1 = {
						subtract_variable = {
							which = tmpEval
							value = 0.5
						}
					}
					3 = {
						subtract_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					9 = {}
					3 = {
						change_variable = {
							which = tmpEval
							value = 0.25
						}
					}
					1 = {
						change_variable = {
							which = tmpEval
							value = 0.5
						}
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = tmpEval
								value = -1.001
							}
						}
					}
					if = {
						limit = {
							has_country_flag = aiHasAgendaCE
						}
						clr_country_flag = aiHasAgendaCE
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = tmpEval
							value = 1.001
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = aiHasAgendaCE
							}
						}
						set_country_flag = aiHasAgendaCE
					}
				}
				set_variable = {
					which = tmpEval
					value = 0
				}
			}
			else = {
				clr_country_flag = aiHasAgendaTech
				clr_country_flag = aiHasAgendaReform
				clr_country_flag = aiHasAgendaCE
			}
			set_variable = {
				which = aiInitPower
				value = 0
			}
			set_variable = {
				which = aiInitFortPerDev
				value = 0
			}
			every_country = {
				limit = {
					has_country_flag = aiInitInRange@PREV
				}
				clr_country_flag = aiInitInRange@PREV
				set_variable = {
					which = aiInitPower
					value = 0
				}
				set_variable = {
					which = aiInitThreat
					value = 0
				}
			}
		}
		else_if = {
			limit = {
				has_country_flag = aiEventsFired
			}
			clr_country_flag = aiEventsFired
			clr_country_flag = aiHasAgendaMilitary
			clr_country_flag = aiHasAgendaExpansion
			clr_country_flag = aiHasAgendaGovernance
			clr_country_flag = aiHasAgendaEconomy
			clr_country_flag = aiHasAgendaOffense
			clr_country_flag = aiHasAgendaDefense
			clr_country_flag = aiHasAgendaInvasion
			clr_country_flag = aiHasAgendaColonization
			clr_country_flag = aiHasAgendaTrade
			clr_country_flag = aiHasAgendaProduction
			clr_country_flag = aiHasAgendaTech
			clr_country_flag = aiHasAgendaReform
			clr_country_flag = aiHasAgendaCE
			clr_country_flag = aiHasActionManpower
			clr_country_flag = aiHasActionBuildShipyards
			clr_country_flag = aiHasActionBuildForts
			clr_country_flag = aiHasActionWarchest
			clr_country_flag = aiHasActionDuringWar
			clr_country_flag = aiHasActionPlanInvasion
			clr_country_flag = aiHasActionPlanColonization
			clr_country_flag = aiHasActionDoColonization
			clr_country_flag = aiHasActionGetCB
			clr_country_flag = aiHasActionDecWar
			clr_country_flag = aiHasActionBuildCity
			clr_country_flag = aiHasActionEstLoyaltyImp
			clr_country_flag = aiHasActionEstFavorSpend
			clr_country_flag = aiHasActionEstDemote
			clr_country_flag = aiHasActionEstPromote
			clr_country_flag = aiHasActionEstPrivGrant
			clr_country_flag = aiHasActionEstPrivRevoke
			clr_country_flag = aiHasActionSolveDis
			clr_country_flag = aiHasActionSolveObs
			clr_country_flag = aiHasActionMoveCapital
			clr_country_flag = aiHasActionManageVassal
			clr_country_flag = aiHasActionEmbraceInst
			clr_country_flag = aiHasActionEducation
			clr_country_flag = aiHasActionArt
			clr_country_flag = aiHasActionSaveTreasury
			clr_country_flag = aiHasActionManageLoan
			clr_country_flag = aiHasActionBuildBureau
			clr_country_flag = aiHasActionBuildRoad
			clr_country_flag = aiHasActionBuildPort
			clr_country_flag = aiHasActionRebel
			if = {
				limit = {
					ai = yes
				}
				set_variable = {
					which = aiTreasuryGeneral
					value = 0
				}
			}
			set_variable = {
				which = aiVarWarGain
				value = 0
			}
		}
		set_variable = {
			which = tmpDevTotal
			value = 0
		}
		set_variable = {
			which = tmpDevCap
			value = 0
		}
		set_variable = {
			which = tmpDevCheck
			value = 0
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.002
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = aiEventsFired
	}
	immediate = {
		if = {
			limit = {
				exists = yes
			}
			save_event_target_as = aiInitTarg
			set_country_flag = aiInitDiploRelated
			if = {
				limit = {
					always = yes
				}
				every_subject_country = {
					limit = {
						NOT = {
							tag = event_target:aiInitTarg
						}
						AND = {
							NOT = {
								liberty_desire = 50
								is_subject_of_type = tributary_state
								is_subject_of_type = rebellious_decentralized_vassal
								is_subject_of_type = rebellious_subjugated_vassal
							}
						}
					}
					set_country_flag = aiInitDiploRelated
					every_subject_country = {
						limit = {
							NOT = {
								tag = event_target:aiInitTarg
							}
							AND = {
								NOT = {
									liberty_desire = 50
									is_subject_of_type = tributary_state
									is_subject_of_type = rebellious_decentralized_vassal
									is_subject_of_type = rebellious_subjugated_vassal
								}
							}
						}
						set_country_flag = aiInitDiploRelated
						every_subject_country = {
							limit = {
								NOT = {
									tag = event_target:aiInitTarg
								}
								AND = {
									NOT = {
										liberty_desire = 50
										is_subject_of_type = tributary_state
										is_subject_of_type = rebellious_decentralized_vassal
										is_subject_of_type = rebellious_subjugated_vassal
									}
								}
							}
							set_country_flag = aiInitDiploRelated
						}
					}
				}
			}
			if = {
				limit = {
					always = yes
				}
				overlord = {
					if = {
						limit = {
							NOT = {
								tag = event_target:aiInitTarg
							}
						}
						if = {
							limit = {
								is_subject = yes
							}
							overlord = {
								if = {
									limit = {
										NOT = {
											tag = event_target:aiInitTarg
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:aiInitTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:aiInitTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:aiInitTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
											}
										}
									}
								}
							}
						}
						else = {
							set_country_flag = aiInitDiploRelated
							every_subject_country = {
								limit = {
									NOT = {
										tag = event_target:aiInitTarg
									}
									AND = {
										NOT = {
											liberty_desire = 50
											is_subject_of_type = tributary_state
											is_subject_of_type = rebellious_decentralized_vassal
											is_subject_of_type = rebellious_subjugated_vassal
										}
									}
								}
								set_country_flag = aiInitDiploRelated
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:aiInitTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:aiInitTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
									}
								}
							}
						}
					}
				}
			}
			set_variable = {
				which = aiInitDiploArmy
				value = 0
			}
			set_variable = {
				which = aiInitDiploNavy
				value = 0
			}
			every_country = {
				limit = {
					has_country_flag = aiInitDiploRelated
				}
				clr_country_flag = aiInitDiploRelated
				if = {
					limit = {
						always = yes
					}
					if = {
						limit = {
							always = yes
						}
						export_to_variable = {
							which = AIMiscArmySize
							value = army_size
						}
					}
					else = {
						set_variable = {
							which = AIMiscArmySize
							value = 0
						}
					}
					export_to_variable = {
						which = AIMiscLFL
						value = land_forcelimit
					}
					export_to_variable = {
						which = AIMiscManpow
						value = manpower
					}
					set_variable = {
						which = AIMiscArmyEstate
						value = 0
					}
					if = {
						limit = {
							check_variable = {
								which = estate_tribals_loyalty
								value = 0.11
							}
						}
						set_variable = {
							which = tmpArmyTR
							which = estate_tribals_infantry_host
						}
						change_variable = {
							which = tmpArmyTR
							which = estate_tribals_cavalry_host
						}
						multiply_variable = {
							which = tmpArmyTR
							value = 1.25
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = tmpArmyTR
						}
						set_variable = {
							which = tmpArmyTR
							value = 0
						}
					}
					if = {
						limit = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.11
							}
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_greater_nobles_infantry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_greater_nobles_cavalry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_greater_nobles_artillery_total
						}
					}
					if = {
						limit = {
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.11
							}
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_lesser_nobles_infantry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_lesser_nobles_cavalry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_lesser_nobles_artillery_total
						}
					}
					multiply_variable = {
						which = AIMiscArmyEstate
						value = 0.85
					}
					if = {
						limit = {
							always = yes
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = AIMiscManpow
										which = AIMiscLFL
									}
								}
							}
							subtract_variable = {
								which = AIMiscLFL
								which = AIMiscManpow
							}
							multiply_variable = {
								which = AIMiscLFL
								value = 0.15
							}
							multiply_variable = {
								which = AIMiscManpow
								value = 0.3
							}
						}
						else = {
							subtract_variable = {
								which = AIMiscManpow
								which = AIMiscLFL
							}
							multiply_variable = {
								which = AIMiscManpow
								value = 0.15
							}
							multiply_variable = {
								which = AIMiscLFL
								value = 0.3
							}
						}
						change_variable = {
							which = AIMiscArmySize
							which = AIMiscLFL
						}
						change_variable = {
							which = AIMiscArmySize
							which = AIMiscManpow
						}
					}
					if = {
						limit = {
							always = yes
						}
						change_variable = {
							which = AIMiscArmySize
							which = AIMiscArmyEstate
						}
					}
					set_variable = {
						which = tmpAIInitDiploArmy
						which = AIMiscArmySize
					}
					set_variable = {
						which = AIMiscArmySize
						value = 0
					}
					set_variable = {
						which = AIMiscLFL
						value = 0
					}
					set_variable = {
						which = AIMiscManpow
						value = 0
					}
					set_variable = {
						which = AIMiscArmyEstate
						value = 0
					}
					export_to_variable = {
						which = AIMiscMilTech
						value = mil_tech
					}
					export_to_variable = {
						which = AIMiscLandMorale
						value = modifier:land_morale
					}
					export_to_variable = {
						which = AIMiscDisc
						value = modifier:discipline
					}
					multiply_variable = {
						which = AIMiscMilTech
						value = 0.1
					}
					multiply_variable = {
						which = AIMiscLandMorale
						value = 2
					}
					multiply_variable = {
						which = AIMiscDisc
						value = 5
					}
					change_variable = {
						which = AIMiscMilTech
						value = 1
					}
					change_variable = {
						which = AIMiscLandMorale
						value = 1
					}
					change_variable = {
						which = AIMiscDisc
						value = 1
					}
					if = {
						limit = {
							OR = {
								NOT = {
									check_variable = {
										which = AIMiscMilTech
										value = 0.001
									}
								}
								NOT = {
									check_variable = {
										which = AIMiscLandMorale
										value = 0.001
									}
								}
								NOT = {
									check_variable = {
										which = AIMiscDisc
										value = 0.001
									}
								}
							}
						}
						set_variable = {
							which = tmpAIInitDiploArmyQual
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploArmyQual
							which = AIMiscMilTech
						}
						multiply_variable = {
							which = tmpAIInitDiploArmyQual
							which = AIMiscLandMorale
						}
						multiply_variable = {
							which = tmpAIInitDiploArmyQual
							which = AIMiscLandMorale
						}
					}
					set_variable = {
						which = AIMiscMilTech
						value = 0
					}
					set_variable = {
						which = AIMiscLandMorale
						value = 0
					}
					set_variable = {
						which = AIMiscDisc
						value = 0
					}
				}
				else = {
					set_variable = {
						which = tmpAIInitDiploArmy
						value = 0
					}
					set_variable = {
						which = tmpAIInitDiploArmyQual
						value = 0
					}
				}
				if = {
					limit = {
						always = yes
					}
					export_to_variable = {
						which = tmpAIInitDiploNavy
						value = navy_size
					}
					export_to_variable = {
						which = AIMiscDipTech
						value = dip_tech
					}
					export_to_variable = {
						which = AIMiscNavMorale
						value = modifier:naval_morale
					}
					multiply_variable = {
						which = AIMiscDipTech
						value = 0.1
					}
					multiply_variable = {
						which = AIMiscNavMorale
						value = 1.5
					}
					change_variable = {
						which = AIMiscDipTech
						value = 1
					}
					change_variable = {
						which = AIMiscNavMorale
						value = 1
					}
					if = {
						limit = {
							OR = {
								NOT = {
									check_variable = {
										which = AIMiscDipTech
										value = 0.001
									}
								}
								NOT = {
									check_variable = {
										which = AIMiscNavMorale
										value = 0.001
									}
								}
							}
						}
						set_variable = {
							which = tmpAIInitDiploNavyQual
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploNavyQual
							which = AIMiscDipTech
						}
						change_variable = {
							which = tmpAIInitDiploNavyQual
							which = AIMiscNavMorale
						}
					}
					set_variable = {
						which = AIMiscDipTech
						value = 0
					}
					set_variable = {
						which = AIMiscNavMorale
						value = 0
					}
				}
				else = {
					set_variable = {
						which = tmpAIInitDiploNavy
						value = 0
					}
					set_variable = {
						which = tmpAIInitDiploNavyQual
						value = 0
					}
				}
				multiply_variable = {
					which = tmpAIInitDiploArmy
					which = tmpAIInitDiploArmyQual
				}
				multiply_variable = {
					which = tmpAIInitDiploNavy
					which = tmpAIInitDiploNavyQual
				}
				PREV = {
					set_variable = {
						which = tmpAIInitDiploArmy
						which = PREV
					}
					set_variable = {
						which = tmpAIInitDiploNavy
						which = PREV
					}
					change_variable = {
						which = aiInitDiploArmy
						which = tmpAIInitDiploArmy
					}
					change_variable = {
						which = aiInitDiploNavy
						which = tmpAIInitDiploNavy
					}
					set_variable = {
						which = tmpAIInitDiploArmy
						value = 0
					}
					set_variable = {
						which = tmpAIInitDiploNavy
						value = 0
					}
				}
				set_variable = {
					which = tmpAIInitDiploArmy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploNavy
					value = 0
				}
			}
			divide_variable = {
				which = aiInitDiploNavy
				value = 2
			}
			set_variable = {
				which = aiInitPower
				which = aiInitDiploArmy
			}
			change_variable = {
				which = aiInitPower
				which = aiInitDiploNavy
			}
			divide_variable = {
				which = aiInitPower
				value = 50
			}
			set_variable = {
				which = aiInitDiploArmy
				value = 0
			}
			set_variable = {
				which = tmpAIInitDiploArmyQual
				value = 0
			}
			set_variable = {
				which = aiInitDiploNavy
				value = 0
			}
			set_variable = {
				which = tmpAIInitDiploNavyQual
				value = 0
			}
			every_owned_province = {
				set_variable = {
					which = aiInitFortPerDev
					value = 0
				}
				trigger_switch = {
					on_trigger = has_building
					fort_14th = {
						set_variable = {
							which = aiInitFortPerDev
							value = 2
						}
					}
					fort_15th = {
						set_variable = {
							which = aiInitFortPerDev
							value = 4
						}
					}
					fort_16th = {
						set_variable = {
							which = aiInitFortPerDev
							value = 6
						}
					}
					fort_17th = {
						set_variable = {
							which = aiInitFortPerDev
							value = 8
						}
					}
					fort_18th = {
						set_variable = {
							which = aiInitFortPerDev
							value = 10
						}
					}
				}
				PREV = {
					change_variable = {
						which = aiInitFortPerDev
						which = PREV
					}
				}
				set_variable = {
					which = aiInitFortPerDev
					value = 0
				}
			}
			export_to_variable = {
				which = aiInitTotalDev
				value = total_development
			}
			divide_variable = {
				which = aiInitFortPerDev
				which = aiInitTotalDev
			}
			set_variable = {
				which = aiInitTotalDev
				value = 0
			}
			every_country = {
				limit = {
					NOT = {
						is_subject = yes
						NOT = {
							is_subject_of_type = tributary_state
						}
						NOT = {
							is_subject_of_type = close_tributary_state
						}
					}
					OR = {
						is_neighbor_of = PREV
						has_casus_belli_against = PREV
						capital_distance = {
							who = event_target:aiInitTarg
							distance = 80
						}
					}
					NOT = {
						tag = PREV
					}
				}
				set_country_flag = aiInitInRange@PREV
				set_country_flag = aiInitDiploRelated
				if = {
					limit = {
						always = yes
					}
					every_subject_country = {
						limit = {
							NOT = {
								tag = event_target:aiInitTarg
							}
							AND = {
								NOT = {
									liberty_desire = 50
									is_subject_of_type = tributary_state
									is_subject_of_type = rebellious_decentralized_vassal
									is_subject_of_type = rebellious_subjugated_vassal
								}
							}
						}
						set_country_flag = aiInitDiploRelated
						every_subject_country = {
							limit = {
								NOT = {
									tag = event_target:aiInitTarg
								}
								AND = {
									NOT = {
										liberty_desire = 50
										is_subject_of_type = tributary_state
										is_subject_of_type = rebellious_decentralized_vassal
										is_subject_of_type = rebellious_subjugated_vassal
									}
								}
							}
							set_country_flag = aiInitDiploRelated
							every_subject_country = {
								limit = {
									NOT = {
										tag = event_target:aiInitTarg
									}
									AND = {
										NOT = {
											liberty_desire = 50
											is_subject_of_type = tributary_state
											is_subject_of_type = rebellious_decentralized_vassal
											is_subject_of_type = rebellious_subjugated_vassal
										}
									}
								}
								set_country_flag = aiInitDiploRelated
							}
						}
					}
				}
				if = {
					limit = {
						always = yes
					}
					overlord = {
						if = {
							limit = {
								NOT = {
									tag = event_target:aiInitTarg
								}
							}
							if = {
								limit = {
									is_subject = yes
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:aiInitTarg
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:aiInitTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:aiInitTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:aiInitTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
												}
											}
										}
									}
								}
							}
							else = {
								set_country_flag = aiInitDiploRelated
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:aiInitTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:aiInitTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:aiInitTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
						}
					}
				}
				set_variable = {
					which = aiInitDiploArmy
					value = 0
				}
				set_variable = {
					which = aiInitDiploNavy
					value = 0
				}
				every_country = {
					limit = {
						has_country_flag = aiInitDiploRelated
					}
					clr_country_flag = aiInitDiploRelated
					if = {
						limit = {
							always = yes
						}
						if = {
							limit = {
								always = yes
							}
							export_to_variable = {
								which = AIMiscArmySize
								value = army_size
							}
						}
						else = {
							set_variable = {
								which = AIMiscArmySize
								value = 0
							}
						}
						export_to_variable = {
							which = AIMiscLFL
							value = land_forcelimit
						}
						export_to_variable = {
							which = AIMiscManpow
							value = manpower
						}
						set_variable = {
							which = AIMiscArmyEstate
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = estate_tribals_loyalty
									value = 0.11
								}
							}
							set_variable = {
								which = tmpArmyTR
								which = estate_tribals_infantry_host
							}
							change_variable = {
								which = tmpArmyTR
								which = estate_tribals_cavalry_host
							}
							multiply_variable = {
								which = tmpArmyTR
								value = 1.25
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = tmpArmyTR
							}
							set_variable = {
								which = tmpArmyTR
								value = 0
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 0.11
								}
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_infantry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_cavalry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_artillery_total
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.11
								}
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_infantry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_cavalry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_artillery_total
							}
						}
						multiply_variable = {
							which = AIMiscArmyEstate
							value = 0.85
						}
						if = {
							limit = {
								always = yes
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = AIMiscManpow
											which = AIMiscLFL
										}
									}
								}
								subtract_variable = {
									which = AIMiscLFL
									which = AIMiscManpow
								}
								multiply_variable = {
									which = AIMiscLFL
									value = 0.15
								}
								multiply_variable = {
									which = AIMiscManpow
									value = 0.3
								}
							}
							else = {
								subtract_variable = {
									which = AIMiscManpow
									which = AIMiscLFL
								}
								multiply_variable = {
									which = AIMiscManpow
									value = 0.15
								}
								multiply_variable = {
									which = AIMiscLFL
									value = 0.3
								}
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscLFL
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscManpow
							}
						}
						if = {
							limit = {
								always = yes
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscArmyEstate
							}
						}
						set_variable = {
							which = tmpAIInitDiploArmy
							which = AIMiscArmySize
						}
						set_variable = {
							which = AIMiscArmySize
							value = 0
						}
						set_variable = {
							which = AIMiscLFL
							value = 0
						}
						set_variable = {
							which = AIMiscManpow
							value = 0
						}
						set_variable = {
							which = AIMiscArmyEstate
							value = 0
						}
						export_to_variable = {
							which = AIMiscMilTech
							value = mil_tech
						}
						export_to_variable = {
							which = AIMiscLandMorale
							value = modifier:land_morale
						}
						export_to_variable = {
							which = AIMiscDisc
							value = modifier:discipline
						}
						multiply_variable = {
							which = AIMiscMilTech
							value = 0.1
						}
						multiply_variable = {
							which = AIMiscLandMorale
							value = 2
						}
						multiply_variable = {
							which = AIMiscDisc
							value = 5
						}
						change_variable = {
							which = AIMiscMilTech
							value = 1
						}
						change_variable = {
							which = AIMiscLandMorale
							value = 1
						}
						change_variable = {
							which = AIMiscDisc
							value = 1
						}
						if = {
							limit = {
								OR = {
									NOT = {
										check_variable = {
											which = AIMiscMilTech
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscLandMorale
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscDisc
											value = 0.001
										}
									}
								}
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
						}
						else = {
							set_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscMilTech
							}
							multiply_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscLandMorale
							}
							multiply_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscLandMorale
							}
						}
						set_variable = {
							which = AIMiscMilTech
							value = 0
						}
						set_variable = {
							which = AIMiscLandMorale
							value = 0
						}
						set_variable = {
							which = AIMiscDisc
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploArmy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploArmyQual
							value = 0
						}
					}
					if = {
						limit = {
							always = yes
						}
						export_to_variable = {
							which = tmpAIInitDiploNavy
							value = navy_size
						}
						export_to_variable = {
							which = AIMiscDipTech
							value = dip_tech
						}
						export_to_variable = {
							which = AIMiscNavMorale
							value = modifier:naval_morale
						}
						multiply_variable = {
							which = AIMiscDipTech
							value = 0.1
						}
						multiply_variable = {
							which = AIMiscNavMorale
							value = 1.5
						}
						change_variable = {
							which = AIMiscDipTech
							value = 1
						}
						change_variable = {
							which = AIMiscNavMorale
							value = 1
						}
						if = {
							limit = {
								OR = {
									NOT = {
										check_variable = {
											which = AIMiscDipTech
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscNavMorale
											value = 0.001
										}
									}
								}
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
						}
						else = {
							set_variable = {
								which = tmpAIInitDiploNavyQual
								which = AIMiscDipTech
							}
							change_variable = {
								which = tmpAIInitDiploNavyQual
								which = AIMiscNavMorale
							}
						}
						set_variable = {
							which = AIMiscDipTech
							value = 0
						}
						set_variable = {
							which = AIMiscNavMorale
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploNavy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploNavyQual
							value = 0
						}
					}
					multiply_variable = {
						which = tmpAIInitDiploArmy
						which = tmpAIInitDiploArmyQual
					}
					multiply_variable = {
						which = tmpAIInitDiploNavy
						which = tmpAIInitDiploNavyQual
					}
					PREV = {
						set_variable = {
							which = tmpAIInitDiploArmy
							which = PREV
						}
						set_variable = {
							which = tmpAIInitDiploNavy
							which = PREV
						}
						change_variable = {
							which = aiInitDiploArmy
							which = tmpAIInitDiploArmy
						}
						change_variable = {
							which = aiInitDiploNavy
							which = tmpAIInitDiploNavy
						}
						set_variable = {
							which = tmpAIInitDiploArmy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploNavy
							value = 0
						}
					}
					set_variable = {
						which = tmpAIInitDiploArmy
						value = 0
					}
					set_variable = {
						which = tmpAIInitDiploNavy
						value = 0
					}
				}
				divide_variable = {
					which = aiInitDiploNavy
					value = 2
				}
				set_variable = {
					which = aiInitPower
					which = aiInitDiploArmy
				}
				change_variable = {
					which = aiInitPower
					which = aiInitDiploNavy
				}
				divide_variable = {
					which = aiInitPower
					value = 50
				}
				set_variable = {
					which = aiInitDiploArmy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploArmyQual
					value = 0
				}
				set_variable = {
					which = aiInitDiploNavy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploNavyQual
					value = 0
				}
				event_target:aiInitTarg = {
					if = {
						limit = {
							NOT = {
								has_opinion_modifier = {
									modifier = aggressive_expansion
									who = PREV
									value = -1000
								}
							}
						}
						set_variable = {
							which = aiInitDiploAE
							value = 0
						}
					}
					else = {
						if = {
							limit = {
								has_opinion_modifier = {
									modifier = aggressive_expansion
									who = PREV
									value = -63
								}
							}
							if = {
								limit = {
									has_opinion_modifier = {
										modifier = aggressive_expansion
										who = PREV
										value = -31
									}
								}
								if = {
									limit = {
										has_opinion_modifier = {
											modifier = aggressive_expansion
											who = PREV
											value = -15
										}
									}
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -7
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -3
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -1
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = 0
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = 0
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -1
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -2
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -2
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -3
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -5
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -4
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -4
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -5
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -6
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -6
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -7
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -11
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -9
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -8
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -8
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -9
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -10
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -10
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -11
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -13
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -12
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -12
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -13
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -14
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -14
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -15
													}
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -23
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -19
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -17
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -16
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -16
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -17
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -18
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -18
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -19
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -21
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -20
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -20
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -21
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -22
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -22
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -23
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -27
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -25
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -24
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -24
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -25
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -26
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -26
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -27
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -29
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -28
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -28
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -29
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -30
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -30
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -31
													}
												}
											}
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										has_opinion_modifier = {
											modifier = aggressive_expansion
											who = PREV
											value = -47
										}
									}
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -39
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -35
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -33
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -32
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -32
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -33
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -34
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -34
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -35
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -37
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -36
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -36
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -37
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -38
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -38
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -39
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -43
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -41
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -40
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -40
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -41
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -42
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -42
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -43
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -45
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -44
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -44
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -45
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -46
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -46
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -47
													}
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -55
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -51
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -49
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -48
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -48
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -49
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -50
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -50
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -51
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -53
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -52
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -52
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -53
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -54
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -54
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -55
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -59
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -57
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -56
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -56
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -57
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -58
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -58
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -59
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -61
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -60
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -60
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -61
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -62
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -62
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -63
													}
												}
											}
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									has_opinion_modifier = {
										modifier = aggressive_expansion
										who = PREV
										value = -95
									}
								}
								if = {
									limit = {
										has_opinion_modifier = {
											modifier = aggressive_expansion
											who = PREV
											value = -79
										}
									}
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -71
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -67
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -65
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -64
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -64
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -65
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -66
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -66
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -67
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -69
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -68
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -68
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -69
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -70
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -70
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -71
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -75
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -73
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -72
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -72
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -73
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -74
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -74
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -75
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -77
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -76
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -76
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -77
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -78
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -78
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -79
													}
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -87
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -83
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -81
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -80
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -80
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -81
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -82
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -82
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -83
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -85
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -84
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -84
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -85
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -86
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -86
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -87
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -91
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -89
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -88
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -88
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -89
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -90
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -90
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -91
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -93
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -92
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -92
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -93
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -94
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -94
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -95
													}
												}
											}
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										has_opinion_modifier = {
											modifier = aggressive_expansion
											who = PREV
											value = -111
										}
									}
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -103
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -99
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -97
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -96
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -96
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -97
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -98
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -98
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -99
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -101
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -100
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -100
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -101
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -102
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -102
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -103
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -107
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -105
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -104
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -104
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -105
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -106
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -106
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -107
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -109
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -108
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -108
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -109
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -110
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -110
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -111
													}
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											has_opinion_modifier = {
												modifier = aggressive_expansion
												who = PREV
												value = -119
											}
										}
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -115
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -113
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -112
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -112
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -113
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -114
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -114
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -115
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -117
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -116
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -116
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -117
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -118
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -118
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -119
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												has_opinion_modifier = {
													modifier = aggressive_expansion
													who = PREV
													value = -123
												}
											}
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -121
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -120
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -120
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -121
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -122
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -122
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -123
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													has_opinion_modifier = {
														modifier = aggressive_expansion
														who = PREV
														value = -125
													}
												}
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -124
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -124
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -125
													}
												}
											}
											else = {
												if = {
													limit = {
														has_opinion_modifier = {
															modifier = aggressive_expansion
															who = PREV
															value = -126
														}
													}
													set_variable = {
														which = aiInitDiploAE
														value = -126
													}
												}
												else = {
													set_variable = {
														which = aiInitDiploAE
														value = -127
													}
												}
											}
										}
									}
								}
							}
						}
					}
					PREV = {
						set_variable = {
							which = aiInitDiploAE
							which = PREV
						}
					}
					set_variable = {
						which = aiInitDiploAE
						value = 0
					}
				}
				divide_variable = {
					which = aiInitDiploAE
					value = -40
				}
				set_variable = {
					which = aiInitDiploGrowth
					which = devGrowthSum
				}
				divide_variable = {
					which = aiInitDiploGrowth
					value = 20
				}
				set_variable = {
					which = aiInitThreat
					which = aiInitDiploAE
				}
				change_variable = {
					which = aiInitThreat
					which = aiInitDiploGrowth
				}
				set_variable = {
					which = aiInitDiploAE
					value = 0
				}
				set_variable = {
					which = aiInitDiploGrowth
					value = 0
				}
			}
			if = {
				limit = {
					always = yes
				}
				set_country_flag = aiEvalActionManageLoan
				set_country_flag = aiEvalActionSaveTreasury
				set_country_flag = aiEvalActionImpStab
				set_country_flag = aiEvalActionEstFavor
			}
			if = {
				limit = {
					has_country_flag = aiHasAgendaMilitary
				}
				set_country_flag = aiEvalActionBuildShipyards
				set_country_flag = aiEvalActionWarchest
				if = {
					limit = {
						has_country_flag = aiHasAgendaOffense
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasAgendaDefense
					}
					set_country_flag = aiEvalActionBuildForts
				}
				else = {
					clr_country_flag = aiHasActionBuildForts
				}
			}
			else = {
				clr_country_flag = aiHasActionBuildShipyards
				clr_country_flag = aiHasActionWarchest
				clr_country_flag = aiHasActionBuildForts
			}
			if = {
				limit = {
					has_country_flag = aiHasAgendaExpansion
				}
				if = {
					limit = {
						has_country_flag = aiHasAgendaInvasion
					}
					set_country_flag = aiEvalActionDecWar
					set_country_flag = aiEvalActionWarchest
				}
				else = {
					clr_country_flag = aiHasActionDecWar
					clr_country_flag = aiHasActionWarchest
				}
				if = {
					limit = {
						has_country_flag = aiHasAgendaColonization
					}
				}
				else = {}
			}
			else = {
				clr_country_flag = aiHasActionDecWar
				clr_country_flag = aiHasActionWarchest
			}
			if = {
				limit = {
					has_country_flag = aiHasAgendaEconomy
				}
				set_country_flag = aiEvalActionBuildCity
				if = {
					limit = {
						has_country_flag = aiHasAgendaTrade
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasAgendaProduction
					}
				}
			}
			else = {
				clr_country_flag = aiEvalActionBuildCity
			}
			if = {
				limit = {
					has_country_flag = aiHasAgendaGovernance
				}
				set_country_flag = aiEvalActionEstDemand
				set_country_flag = aiEvalActionEstGrant
				if = {
					limit = {
						has_country_flag = aiHasAgendaTech
					}
					set_country_flag = aiEvalActionEduArt
				}
				else = {
					clr_country_flag = aiHasActionEduArt
				}
				if = {
					limit = {
						has_country_flag = aiHasAgendaReform
					}
					set_country_flag = aiEvalActionEstDemote
					set_country_flag = aiEvalActionEstRevoke
				}
				else = {
					clr_country_flag = aiHasActionEstDemote
					clr_country_flag = aiHasActionEstRevoke
				}
				if = {
					limit = {
						has_country_flag = aiHasAgendaCE
					}
					if = {
						limit = {
							check_variable = {
								which = fixed_cap
								value = 1
							}
						}
						set_variable = {
							which = prov_id
							which = fixed_cap
						}
						if = {
							limit = {
								NOT = {
									capital_scope = {
										is_variable_equal = {
											which = prov_id
											which = PREV
										}
									}
								}
							}
							set_country_flag = aiEvalActionMoveCapital
						}
						set_variable = {
							which = prov_id
							value = 0
						}
					}
					else = {
						set_country_flag = aiEvalActionMoveCapital
					}
					set_country_flag = aiEvalActionBuildBureau
					set_country_flag = aiEvalActionBuildPort
					set_country_flag = aiEvalActionBuildRoad
				}
				else = {
					clr_country_flag = aiHasActionMoveCapital
					clr_country_flag = aiHasActionBuildBureau
					clr_country_flag = aiHasActionBuildPort
					clr_country_flag = aiHasActionBuildRoad
				}
			}
			else = {
				clr_country_flag = aiHasActionEstDemand
				clr_country_flag = aiHasActionEstGrant
				clr_country_flag = aiHasActionEduArt
				clr_country_flag = aiHasActionEstDemote
				clr_country_flag = aiHasActionEstRevoke
				clr_country_flag = aiHasActionMoveCapital
				clr_country_flag = aiHasActionBuildBureau
				clr_country_flag = aiHasActionBuildPort
				clr_country_flag = aiHasActionBuildRoad
			}
			if = {
				limit = {
					has_country_flag = autoDo
				}
				clr_country_flag = aiEvalActionEmbraceInst
				clr_country_flag = aiEvalActionWarchest
				clr_country_flag = aiEvalActionManageLoan
				clr_country_flag = aiEvalActionMoveCapital
				clr_country_flag = aiEvalActionImpStab
				clr_country_flag = aiEvalActionDecWar
				if = {
					limit = {
						NOT = {
							has_country_flag = autoEstAll
						}
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = autoEstFavor
							}
						}
						clr_country_flag = aiEvalActionEstFavor
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = autoEstDemand
							}
						}
						clr_country_flag = aiEvalActionEstDemand
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = autoEstGrant
							}
						}
						clr_country_flag = aiEvalActionEstGrant
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = autoEstRevoke
							}
						}
						clr_country_flag = aiEvalActionEstRevoke
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = autoEstDemote
							}
						}
						clr_country_flag = aiEvalActionEstDemote
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = autoSpendingAll
						}
					}
					clr_country_flag = aiEvalActionBuildBureau
					clr_country_flag = aiEvalActionBuildShipyards
					if = {
						limit = {
							NOT = {
								has_country_flag = autoSpending
							}
						}
						clr_country_flag = aiEvalActionSaveTreasury
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = autoSpendingFort
							}
						}
						clr_country_flag = aiEvalActionBuildForts
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = autoSpendingRoad
							}
						}
						clr_country_flag = aiEvalActionBuildRoad
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = autoSpendingPort
							}
						}
						clr_country_flag = aiEvalActionBuildPort
					}
					if = {
						limit = {
							NOT = {
								has_country_flag = autoSpendingCity
							}
						}
						clr_country_flag = aiEvalActionBuildCity
					}
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionManpower
					}
					clr_country_flag = aiHasActionManpower
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionManpower
						}
					}
					set_country_flag = aiHasActionManpower
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionBuildShipyards
				}
				clr_country_flag = aiEvalActionBuildShipyards
				set_variable = {
					which = tmpNatHarb
					value = 0
				}
				set_variable = {
					which = tmpFullHarb
					value = 0
				}
				every_owned_province = {
					if = {
						limit = {
							has_province_flag = has_natural_harbour
						}
						PREV = {
							change_variable = {
								which = tmpNatHarb
								value = 1
							}
						}
					}
					if = {
						limit = {
							has_port = yes
							NOT = {
								AND = {
									OR = {
										has_building = harbour_infrastructure_1
										has_building = harbour_infrastructure_2
										has_building = harbour_infrastructure_3x
										has_building = harbour_infrastructure_4
										has_building = harbour_infrastructure_5
									}
								}
								has_province_flag = infra_calc_done
								NOT = {
									has_province_modifier = lack_of_harbour
								}
								owner = {
									dip_tech = 3
								}
								AND = {
									NOT = {
										has_building = military_harbour_2
										has_building = military_harbour_3
										has_building = military_harbour_4
									}
								}
								NOT = {
									has_building = military_harbour_1
								}
							}
							NOT = {
								AND = {
									OR = {
										has_building = harbour_infrastructure_1
										has_building = harbour_infrastructure_2
										has_building = harbour_infrastructure_3x
										has_building = harbour_infrastructure_4
										has_building = harbour_infrastructure_5
									}
								}
								has_building = military_harbour_1
								has_province_flag = infra_calc_done
								has_province_flag = has_natural_harbour
								owner = {
									dip_tech = 6
								}
								AND = {
									NOT = {
										has_building = military_harbour_3
										has_building = military_harbour_4
									}
								}
								NOT = {
									has_building = military_harbour_2
								}
							}
							NOT = {
								AND = {
									OR = {
										has_building = harbour_infrastructure_1
										has_building = harbour_infrastructure_2
										has_building = harbour_infrastructure_3x
										has_building = harbour_infrastructure_4
										has_building = harbour_infrastructure_5
									}
								}
								has_building = military_harbour_2
								has_province_flag = infra_calc_done
								has_province_flag = has_natural_harbour
								owner = {
									dip_tech = 19
								}
								AND = {
									NOT = {
										has_building = military_harbour_4
									}
								}
								NOT = {
									has_building = military_harbour_3
								}
							}
							NOT = {
								AND = {
									OR = {
										has_building = harbour_infrastructure_1
										has_building = harbour_infrastructure_2
										has_building = harbour_infrastructure_3x
										has_building = harbour_infrastructure_4
										has_building = harbour_infrastructure_5
									}
								}
								has_building = military_harbour_3
								has_province_flag = infra_calc_done
								NOT = {
									has_building = harbour_infrastructure_5
								}
								has_province_flag = has_great_natural_harbour
								owner = {
									dip_tech = 40
								}
								AND = {
									NOT = {
										has_building = harbour_infrastructure_5
									}
								}
								NOT = {
									has_building = military_harbour_4
								}
							}
						}
						PREV = {
							change_variable = {
								which = tmpFullHarb
								value = 1
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = {
							which = tmpFullHarb
							which = tmpNatHarb
						}
					}
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
				else = {
					export_to_variable = {
						which = tmpEval
						value = naval_forcelimit
					}
					export_to_variable = {
						which = tmpTotalDev
						value = total_development
					}
					divide_variable = {
						which = tmpEval
						which = tmpTotalDev
					}
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
					multiply_variable = {
						which = tmpEval
						value = -16
					}
					set_variable = {
						which = tmpTotalDev
						value = 0
					}
				}
				set_variable = {
					which = tmpNatHarb
					value = 0
				}
				set_variable = {
					which = tmpFullHarb
					value = 0
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildShipyards
					}
					clr_country_flag = aiHasActionBuildShipyards
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionBuildShipyards
						}
					}
					set_country_flag = aiHasActionBuildShipyards
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionBuildForts
				}
				clr_country_flag = aiEvalActionBuildForts
				if = {
					limit = {
						any_owned_province = {
							AND = {
								is_city = yes
								NOT = {
									has_province_modifier = fort_is_building
								}
								OR = {
									AND = {
										has_building = fort_17th
										owner = {
											mil_tech = 41
										}
										AND = {
											always = yes
										}
										NOT = {
											has_building = fort_18th
										}
										NOT = {
											has_province_modifier = fort_is_building
										}
									}
									AND = {
										has_building = fort_16th
										owner = {
											mil_tech = 35
										}
										AND = {
											NOT = {
												has_building = fort_18th
											}
										}
										NOT = {
											has_building = fort_17th
										}
										NOT = {
											has_province_modifier = fort_is_building
										}
									}
									AND = {
										has_building = fort_15th
										owner = {
											mil_tech = 26
										}
										AND = {
											NOT = {
												has_building = fort_17th
												has_building = fort_18th
											}
										}
										NOT = {
											has_building = fort_16th
										}
										NOT = {
											has_province_modifier = fort_is_building
										}
									}
									AND = {
										has_building = fort_14th
										owner = {
											mil_tech = 15
										}
										AND = {
											NOT = {
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
										}
										NOT = {
											has_building = fort_15th
										}
										NOT = {
											has_province_modifier = fort_is_building
										}
									}
									AND = {
										owner = {
											mil_tech = 3
										}
										AND = {
											NOT = {
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
										}
										NOT = {
											has_building = fort_14th
										}
										NOT = {
											has_province_modifier = fort_is_building
										}
									}
								}
							}
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildForts
					}
					clr_country_flag = aiHasActionBuildForts
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionBuildForts
						}
					}
					set_country_flag = aiHasActionBuildForts
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionWarchest
				}
				clr_country_flag = aiEvalActionWarchest
				set_variable = {
					which = tmpEval
					value = 3
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionWarchest
					}
					clr_country_flag = aiHasActionWarchest
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionWarchest
						}
					}
					set_country_flag = aiHasActionWarchest
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionPlanColonization
					}
					clr_country_flag = aiHasActionPlanColonization
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionPlanColonization
						}
					}
					set_country_flag = aiHasActionPlanColonization
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionDoColonization
					}
					clr_country_flag = aiHasActionDoColonization
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionDoColonization
						}
					}
					set_country_flag = aiHasActionDoColonization
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionGetCB
					}
					clr_country_flag = aiHasActionGetCB
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionGetCB
						}
					}
					set_country_flag = aiHasActionGetCB
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionDecWar
				}
				clr_country_flag = aiEvalActionDecWar
				if = {
					limit = {
						has_global_flag = AI_warchest_init
						is_at_war = no
						stability = -1
						is_year = 1359
						NOT = {
							corruption = 30
							war_exhaustion = 5
							num_of_revolts = 2
							num_of_loans = 2
							average_effective_unrest = 6
						}
						OR = {
							AND = {
								manpower = 2
								manpower_percentage = 0.8
							}
							AND = {
								manpower = 5
								manpower_percentage = 0.7
							}
							AND = {
								manpower = 10
								manpower_percentage = 0.6
							}
							AND = {
								manpower = 20
								manpower_percentage = 0.5
							}
							AND = {
								manpower = 30
								manpower_percentage = 0.4
							}
							AND = {
								manpower = 50
								manpower_percentage = 0.3
							}
						}
						variable_arithmetic_trigger = {
							export_to_variable = {
								which = tmpTreasury
								value = treasury
							}
							export_to_variable = {
								which = tmpInc
								value = monthly_income
							}
							change_variable = {
								which = tmpTreasury
								which = aiTreasuryGeneral
							}
							multiply_variable = {
								which = tmpInc
								value = 6
							}
							change_variable = {
								which = tmpInc
								value = 100
							}
							check_variable = {
								which = tmpTreasury
								which = tmpInc
							}
						}
					}
					if = {
						limit = {
							always = yes
						}
						export_to_variable = {
							which = AIMiscArmySize
							value = army_size
						}
					}
					else = {
						set_variable = {
							which = AIMiscArmySize
							value = 0
						}
					}
					export_to_variable = {
						which = AIMiscLFL
						value = land_forcelimit
					}
					export_to_variable = {
						which = AIMiscManpow
						value = manpower
					}
					set_variable = {
						which = AIMiscArmyEstate
						value = 0
					}
					if = {
						limit = {
							check_variable = {
								which = estate_tribals_loyalty
								value = 0.11
							}
						}
						set_variable = {
							which = tmpArmyTR
							which = estate_tribals_infantry_host
						}
						change_variable = {
							which = tmpArmyTR
							which = estate_tribals_cavalry_host
						}
						multiply_variable = {
							which = tmpArmyTR
							value = 1.25
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = tmpArmyTR
						}
						set_variable = {
							which = tmpArmyTR
							value = 0
						}
					}
					if = {
						limit = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.11
							}
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_greater_nobles_infantry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_greater_nobles_cavalry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_greater_nobles_artillery_total
						}
					}
					if = {
						limit = {
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.11
							}
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_lesser_nobles_infantry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_lesser_nobles_cavalry_total
						}
						change_variable = {
							which = AIMiscArmyEstate
							which = estate_lesser_nobles_artillery_total
						}
					}
					multiply_variable = {
						which = AIMiscArmyEstate
						value = 0.85
					}
					if = {
						limit = {
							always = no
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = AIMiscManpow
										which = AIMiscLFL
									}
								}
							}
							subtract_variable = {
								which = AIMiscLFL
								which = AIMiscManpow
							}
							multiply_variable = {
								which = AIMiscLFL
								value = 0.15
							}
							multiply_variable = {
								which = AIMiscManpow
								value = 0.3
							}
						}
						else = {
							subtract_variable = {
								which = AIMiscManpow
								which = AIMiscLFL
							}
							multiply_variable = {
								which = AIMiscManpow
								value = 0.15
							}
							multiply_variable = {
								which = AIMiscLFL
								value = 0.3
							}
						}
						change_variable = {
							which = AIMiscArmySize
							which = AIMiscLFL
						}
						change_variable = {
							which = AIMiscArmySize
							which = AIMiscManpow
						}
					}
					if = {
						limit = {
							always = yes
						}
						change_variable = {
							which = AIMiscArmySize
							which = AIMiscArmyEstate
						}
					}
					set_variable = {
						which = tmpCheck
						which = AIMiscArmySize
					}
					set_variable = {
						which = AIMiscArmySize
						value = 0
					}
					set_variable = {
						which = AIMiscLFL
						value = 0
					}
					set_variable = {
						which = AIMiscManpow
						value = 0
					}
					set_variable = {
						which = AIMiscArmyEstate
						value = 0
					}
					if = {
						limit = {
							check_variable = {
								which = tmpCheck
								value = 6
							}
						}
						set_variable = {
							which = tmpEval
							value = 3
						}
					}
					set_variable = {
						which = tmpCheck
						value = 0
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionDecWar
					}
					clr_country_flag = aiHasActionDecWar
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionDecWar
						}
					}
					set_country_flag = aiHasActionDecWar
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionBuildCity
				}
				clr_country_flag = aiEvalActionBuildCity
				set_variable = {
					which = tmpEval
					value = 3
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildCity
					}
					clr_country_flag = aiHasActionBuildCity
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionBuildCity
						}
					}
					set_country_flag = aiHasActionBuildCity
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionEstFavor
				}
				clr_country_flag = aiEvalActionEstFavor
				if = {
					limit = {
						OR = {
							NOT = {
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 0.65
								}
							}
							NOT = {
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.65
								}
							}
							NOT = {
								check_variable = {
									which = estate_burghers_loyalty
									value = 0.65
								}
							}
							NOT = {
								check_variable = {
									which = estate_tribals_loyalty
									value = 0.65
								}
							}
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionEstFavor
					}
					clr_country_flag = aiHasActionEstFavor
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionEstFavor
						}
					}
					set_country_flag = aiHasActionEstFavor
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionEstDemand
				}
				clr_country_flag = aiEvalActionEstDemand
				if = {
					limit = {
						OR = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.36
							}
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.36
							}
							check_variable = {
								which = estate_burghers_loyalty
								value = 0.36
							}
							AND = {
								has_country_flag = aiHasActionEstDemote
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.11
								}
								NOT = {
									check_variable = {
										which = estate_lesser_nobles_loyalty
										value = 0.41
									}
								}
							}
						}
						OR = {
							NOT = {
								legitimacy = 50
							}
							num_of_loans = 3
							average_effective_unrest = 5
							AND = {
								is_at_war = yes
								NOT = {
									is_in_war = {
										war_score = -15
									}
								}
							}
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionEstDemand
					}
					clr_country_flag = aiHasActionEstDemand
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionEstDemand
						}
					}
					set_country_flag = aiHasActionEstDemand
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionEstDemote
				}
				clr_country_flag = aiEvalActionEstDemote
				if = {
					limit = {
						num_of_cities = 10
						check_variable = {
							which = estate_greater_nobles_weight_share
							which = estate_lesser_nobles_weight_share
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionEstDemote
					}
					clr_country_flag = aiHasActionEstDemote
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionEstDemote
						}
					}
					set_country_flag = aiHasActionEstDemote
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionEstGrant
				}
				clr_country_flag = aiEvalActionEstGrant
				if = {
					limit = {
						OR = {
							NOT = {
								stability = -2
							}
							AND = {
								NOT = {
									stability = -1
								}
								average_effective_unrest = 8
							}
							NOT = {
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 0.11
								}
							}
							NOT = {
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.11
								}
							}
							NOT = {
								check_variable = {
									which = estate_burghers_loyalty
									value = 0.11
								}
							}
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionEstGrant
					}
					clr_country_flag = aiHasActionEstGrant
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionEstGrant
						}
					}
					set_country_flag = aiHasActionEstGrant
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionEstRevoke
				}
				clr_country_flag = aiEvalActionEstRevoke
				if = {
					limit = {
						stability = 1
						OR = {
							stability = 2
							check_variable = {
								which = stability_points
								value = 100
							}
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionEstRevoke
					}
					clr_country_flag = aiHasActionEstRevoke
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionEstRevoke
						}
					}
					set_country_flag = aiHasActionEstRevoke
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionSolveDis
					}
					clr_country_flag = aiHasActionSolveDis
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionSolveDis
						}
					}
					set_country_flag = aiHasActionSolveDis
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionSolveObs
					}
					clr_country_flag = aiHasActionSolveObs
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionSolveObs
						}
					}
					set_country_flag = aiHasActionSolveObs
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionImpStab
				}
				clr_country_flag = aiEvalActionImpStab
				set_variable = {
					which = tmpEval
					value = 3
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionImpStab
					}
					clr_country_flag = aiHasActionImpStab
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionImpStab
						}
					}
					set_country_flag = aiHasActionImpStab
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionMoveCapital
				}
				set_variable = {
					which = tmpEval
					value = 3
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionMoveCapital
					}
					clr_country_flag = aiHasActionMoveCapital
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionMoveCapital
						}
					}
					set_country_flag = aiHasActionMoveCapital
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionManageVassal
					}
					clr_country_flag = aiHasActionManageVassal
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionManageVassal
						}
					}
					set_country_flag = aiHasActionManageVassal
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionEmbraceInst
					}
					clr_country_flag = aiHasActionEmbraceInst
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionEmbraceInst
						}
					}
					set_country_flag = aiHasActionEmbraceInst
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionEduArt
				}
				clr_country_flag = aiEvalActionEduArt
				set_variable = {
					which = tmpEval
					value = 3
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionEduArt
					}
					clr_country_flag = aiHasActionEduArt
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionEduArt
						}
					}
					set_country_flag = aiHasActionEduArt
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionManageLoan
				}
				clr_country_flag = aiEvalActionManageLoan
				if = {
					limit = {
						num_of_loans = 2
						NOT = {
							is_at_war = yes
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionManageLoan
					}
					clr_country_flag = aiHasActionManageLoan
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionManageLoan
						}
					}
					set_country_flag = aiHasActionManageLoan
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionBuildBureau
				}
				clr_country_flag = aiEvalActionBuildBureau
				if = {
					limit = {
						total_development = 200
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = capital_num
									value = 1
								}
							}
						}
						set_variable = {
							which = tmpEval
							value = 3
						}
					}
					else = {
						export_to_variable = {
							which = tmpTotalDev
							value = total_development
						}
						set_variable = {
							which = tmpSubtract
							which = capital_num
						}
						multiply_variable = {
							which = tmpSubtract
							value = 300
						}
						set_variable = {
							which = tmpEval
							which = tmpTotalDev
						}
						subtract_variable = {
							which = tmpEval
							which = tmpSubtract
						}
						divide_variable = {
							which = tmpEval
							which = tmpTotalDev
						}
						multiply_variable = {
							which = tmpEval
							value = 6
						}
						set_variable = {
							which = tmpTotalDev
							value = 0
						}
						set_variable = {
							which = tmpSubtract
							value = 0
						}
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildBureau
					}
					clr_country_flag = aiHasActionBuildBureau
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionBuildBureau
						}
					}
					set_country_flag = aiHasActionBuildBureau
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionBuildRoad
				}
				clr_country_flag = aiEvalActionBuildRoad
				if = {
					limit = {
						any_owned_province = {
							NOT = {
								local_autonomy = 100
							}
							AND = {
								is_city = yes
								NOT = {
									has_province_modifier = road_is_building
								}
								OR = {
									AND = {
										owner = {
											dip_tech = 4
										}
										AND = {
											NOT = {
												has_building = paved_road_network
												has_building = highway_network
												has_building = road_and_rail_network
											}
										}
										NOT = {
											has_building = road_network
										}
										NOT = {
											has_province_modifier = road_is_building
										}
									}
									AND = {
										has_building = road_network
										owner = {
											dip_tech = 13
										}
										AND = {
											NOT = {
												has_building = highway_network
												has_building = road_and_rail_network
											}
										}
										NOT = {
											has_building = paved_road_network
										}
										NOT = {
											has_province_modifier = road_is_building
										}
									}
									AND = {
										has_building = paved_road_network
										owner = {
											dip_tech = 33
										}
										AND = {
											NOT = {
												has_building = road_and_rail_network
											}
										}
										NOT = {
											has_building = highway_network
										}
										NOT = {
											has_province_modifier = road_is_building
										}
									}
									AND = {
										has_building = highway_network
										owner = {
											dip_tech = 50
										}
										AND = {
											always = yes
										}
										NOT = {
											has_building = road_and_rail_network
										}
										NOT = {
											has_province_modifier = road_is_building
										}
									}
								}
							}
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildRoad
					}
					clr_country_flag = aiHasActionBuildRoad
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionBuildRoad
						}
					}
					set_country_flag = aiHasActionBuildRoad
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionBuildPort
				}
				clr_country_flag = aiEvalActionBuildPort
				if = {
					limit = {
						any_owned_province = {
							AND = {
								has_port = yes
								has_province_flag = infra_calc_done
								is_city = yes
								OR = {
									AND = {
										has_province_flag = infra_calc_done
										has_port = yes
										owner = {
											dip_tech = 1
										}
										AND = {
											NOT = {
												has_building = harbour_infrastructure_2
												has_building = harbour_infrastructure_3x
												has_building = harbour_infrastructure_4
												has_building = harbour_infrastructure_5
											}
										}
										NOT = {
											has_building = harbour_infrastructure_1
										}
									}
									AND = {
										has_building = harbour_infrastructure_1
										has_province_flag = infra_calc_done
										NOT = {
											has_province_modifier = lack_of_harbour
										}
										owner = {
											dip_tech = 4
										}
										AND = {
											NOT = {
												has_building = harbour_infrastructure_3x
												has_building = harbour_infrastructure_4
												has_building = harbour_infrastructure_5
											}
										}
										NOT = {
											has_building = harbour_infrastructure_2
										}
									}
									AND = {
										has_building = harbour_infrastructure_2
										has_province_flag = infra_calc_done
										AND = {
											OR = {
												has_building = town_hall
												has_building = urban_infrastructure_1
												has_building = urban_infrastructure_2
												has_building = urban_infrastructure_3
												has_building = urban_infrastructure_4
												has_building = urban_infrastructure_5
											}
										}
										NOT = {
											has_province_modifier = lack_of_harbour
										}
										NOT = {
											has_province_flag = has_delta_estuary
										}
										owner = {
											dip_tech = 6
										}
										AND = {
											NOT = {
												has_building = harbour_infrastructure_4
												has_building = harbour_infrastructure_5
											}
										}
										NOT = {
											has_building = harbour_infrastructure_3x
										}
									}
									AND = {
										has_building = harbour_infrastructure_3x
										has_province_flag = infra_calc_done
										AND = {
											OR = {
												has_building = urban_infrastructure_1
												has_building = urban_infrastructure_2
												has_building = urban_infrastructure_3
												has_building = urban_infrastructure_4
												has_building = urban_infrastructure_5
											}
										}
										NOT = {
											has_province_modifier = lack_of_harbour
										}
										NOT = {
											has_province_flag = has_delta_estuary
										}
										owner = {
											dip_tech = 22
										}
										AND = {
											NOT = {
												has_building = harbour_infrastructure_5
											}
										}
										NOT = {
											has_building = harbour_infrastructure_4
										}
									}
									AND = {
										has_building = harbour_infrastructure_4
										has_province_flag = infra_calc_done
										AND = {
											OR = {
												has_building = urban_infrastructure_2
												has_building = urban_infrastructure_3
												has_building = urban_infrastructure_4
												has_building = urban_infrastructure_5
											}
										}
										NOT = {
											has_building = military_harbour_4
										}
										has_province_flag = has_natural_harbour
										owner = {
											dip_tech = 40
										}
										AND = {
											NOT = {
												has_building = military_harbour_4
											}
										}
										NOT = {
											has_building = harbour_infrastructure_5
										}
									}
								}
							}
						}
					}
					export_to_variable = {
						which = tmpDevTotal
						value = total_development
					}
					set_variable = {
						which = tmpEval
						value = 0
					}
					every_owned_province = {
						limit = {
							has_port = yes
						}
						if = {
							limit = {
								NOT = {
									has_province_flag = tmpFlag
								}
							}
							set_province_flag = tmpFlag
							set_variable = {
								which = tmpEval
								which = devPointTotal
							}
						}
						else = {
							set_variable = {
								which = tmpEval
								value = 0
							}
						}
						every_neighbor_province = {
							limit = {
								owned_by = PREV
								NOT = {
									has_province_flag = tmpFlag
								}
							}
							set_province_flag = tmpFlag
							set_variable = {
								which = tmpEval
								which = devPointTotal
							}
							PREV = {
								change_variable = {
									which = tmpEval
									which = PREV
								}
							}
							set_variable = {
								which = tmpEval
								value = 0
							}
						}
						PREV = {
							change_variable = {
								which = tmpEval
								which = PREV
							}
						}
						set_variable = {
							which = tmpEval
							value = 0
						}
					}
					multiply_variable = {
						which = tmpEval
						value = 4
					}
					divide_variable = {
						which = tmpEval
						which = tmpDevTotal
					}
					subtract_variable = {
						which = tmpEval
						value = 1
					}
					multiply_variable = {
						which = tmpEval
						value = 3
					}
					every_owned_province = {
						clr_province_flag = tmpFlag
					}
					set_variable = {
						which = tmpDevTotal
						value = 0
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildPort
					}
					clr_country_flag = aiHasActionBuildPort
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionBuildPort
						}
					}
					set_country_flag = aiHasActionBuildPort
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionRebel
					}
					clr_country_flag = aiHasActionRebel
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionRebel
						}
					}
					set_country_flag = aiHasActionRebel
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					has_country_flag = aiEvalActionSaveTreasury
				}
				clr_country_flag = aiEvalActionSaveTreasury
				if = {
					limit = {
						OR = {
							has_country_flag = aiHasActionManageLoan
							has_country_flag = aiHasActionBuildForts
							has_country_flag = aiHasActionBuildShipyards
							has_country_flag = aiHasActionEduArt
							has_country_flag = aiHasActionBuildRoad
							has_country_flag = aiHasActionBuildPort
							has_country_flag = aiHasActionBuildBureau
							has_country_flag = aiHasActionBuildCity
							has_country_flag = aiHasActionWarchest
						}
					}
					set_variable = {
						which = tmpEval
						value = 3
					}
				}
				else = {
					set_variable = {
						which = tmpEval
						value = -3
					}
				}
			}
			else = {
				set_variable = {
					which = tmpEval
					value = -3
				}
			}
			random_list = {
				1 = {
					subtract_variable = {
						which = tmpEval
						value = 0.5
					}
				}
				3 = {
					subtract_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				9 = {}
				3 = {
					change_variable = {
						which = tmpEval
						value = 0.25
					}
				}
				1 = {
					change_variable = {
						which = tmpEval
						value = 0.5
					}
				}
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpEval
							value = -1.001
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionSaveTreasury
					}
					clr_country_flag = aiHasActionSaveTreasury
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = tmpEval
						value = 1.001
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionSaveTreasury
						}
					}
					set_country_flag = aiHasActionSaveTreasury
				}
			}
			set_variable = {
				which = tmpEval
				value = 0
			}
			if = {
				limit = {
					is_at_war = no
					OR = {
						has_country_flag = aiHasActionBuildForts
						has_country_flag = aiHasActionBuildShipyards
						has_country_flag = aiHasActionBuildPort
						has_country_flag = aiHasActionBuildRoad
						has_country_flag = aiHasActionBuildBureau
						has_country_flag = aiHasActionBuildCity
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildForts
					}
					every_owned_province = {
						limit = {
							has_province_flag = getFortCandSpread
						}
						clr_province_flag = getFortCandSpread
					}
					set_variable = {
						which = getFortCandItr
						value = 0
					}
					if = {
						limit = {
							num_of_cities = 200
						}
						set_variable = {
							which = getFortCandItr
							value = 5
						}
					}
					else_if = {
						limit = {
							num_of_cities = 80
						}
						set_variable = {
							which = getFortCandItr
							value = 4
						}
					}
					else_if = {
						limit = {
							num_of_cities = 30
						}
						set_variable = {
							which = getFortCandItr
							value = 3
						}
					}
					else_if = {
						limit = {
							num_of_cities = 10
						}
						set_variable = {
							which = getFortCandItr
							value = 2
						}
					}
					else = {
						set_variable = {
							which = getFortCandItr
							value = 1
						}
					}
					save_event_target_as = getFortCandTarg
					every_owned_province = {
						limit = {
							any_neighbor_province = {
								is_city = yes
								NOT = {
									owned_by = PREV
									owner = {
										is_subject_of = event_target:getFortCandTarg
									}
								}
							}
						}
						set_province_flag = getFortCandSpread
						set_province_flag = aiGetFortWeightCand
					}
					if = {
						limit = {
							check_variable = {
								which = getFortCandItr
								value = 1
							}
						}
						while = {
							limit = {
								check_variable = {
									which = getFortCandItr
									value = 1
								}
							}
							subtract_variable = {
								which = getFortCandItr
								value = 1
							}
							every_owned_province = {
								limit = {
									has_province_flag = getFortCandSpread
								}
								clr_province_flag = getFortCandSpread
								every_neighbor_province = {
									limit = {
										owned_by = PREV
										NOT = {
											has_province_flag = aiGetFortWeightCand
										}
									}
									set_province_flag = aiGetFortWeightCand
									set_province_flag = getFortCandSpreadCand
								}
							}
							every_owned_province = {
								limit = {
									has_province_flag = getFortCandSpreadCand
								}
								clr_province_flag = getFortCandSpreadCand
								set_province_flag = getFortCandSpread
							}
						}
						every_owned_province = {
							limit = {
								has_province_flag = getFortCandSpread
							}
							clr_province_flag = getFortCandSpread
						}
					}
					every_owned_province = {
						limit = {
							OR = {
								check_variable = {
									which = devPointTotal
									value = 30
								}
								check_variable = {
									which = devPointUrbanCur
									value = 8
								}
							}
						}
						set_province_flag = aiGetFortWeightCand
					}
					capital_scope = {
						set_province_flag = aiGetFortWeightCand
						every_neighbor_province = {
							limit = {
								has_province_flag = aiGetFortWeightCand
							}
							clr_province_flag = aiGetFortWeightCand
						}
					}
					every_owned_province = {
						limit = {
							OR = {
								has_province_modifier = fort_is_building
								has_building = fort_14th
								has_building = fort_15th
								has_building = fort_16th
								has_building = fort_17th
								has_building = fort_18th
							}
						}
						every_neighbor_province = {
							limit = {
								has_province_flag = aiGetFortWeightCand
								NOT = {
									has_building = fort_14th
									has_building = fort_15th
									has_building = fort_16th
									has_building = fort_17th
									has_building = fort_18th
								}
							}
							clr_province_flag = aiGetFortWeightCand
						}
					}
					every_owned_province = {
						limit = {
							has_province_flag = aiGetFortWeightCand
							NOT = {
								is_city = yes
								NOT = {
									has_province_modifier = fort_is_building
								}
								OR = {
									AND = {
										has_building = fort_17th
										owner = {
											mil_tech = 41
										}
										AND = {
											always = yes
										}
										NOT = {
											has_building = fort_18th
										}
										NOT = {
											has_province_modifier = fort_is_building
										}
									}
									AND = {
										has_building = fort_16th
										owner = {
											mil_tech = 35
										}
										AND = {
											NOT = {
												has_building = fort_18th
											}
										}
										NOT = {
											has_building = fort_17th
										}
										NOT = {
											has_province_modifier = fort_is_building
										}
									}
									AND = {
										has_building = fort_15th
										owner = {
											mil_tech = 26
										}
										AND = {
											NOT = {
												has_building = fort_17th
												has_building = fort_18th
											}
										}
										NOT = {
											has_building = fort_16th
										}
										NOT = {
											has_province_modifier = fort_is_building
										}
									}
									AND = {
										has_building = fort_14th
										owner = {
											mil_tech = 15
										}
										AND = {
											NOT = {
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
										}
										NOT = {
											has_building = fort_15th
										}
										NOT = {
											has_province_modifier = fort_is_building
										}
									}
									AND = {
										owner = {
											mil_tech = 3
										}
										AND = {
											NOT = {
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
										}
										NOT = {
											has_building = fort_14th
										}
										NOT = {
											has_province_modifier = fort_is_building
										}
									}
								}
							}
						}
						clr_province_flag = aiGetFortWeightCand
					}
					every_owned_province = {
						limit = {
							is_city = yes
						}
						set_variable = {
							which = getFortWeightBase
							which = devPointTotal
						}
						change_variable = {
							which = getFortWeightBase
							which = devPointUrbanCur
						}
						set_variable = {
							which = getFortWeightNeighb
							value = 0
						}
					}
					set_variable = {
						which = getFortWeightItr
						value = 5
					}
					while = {
						limit = {
							check_variable = {
								which = getFortWeightItr
								value = 1
							}
						}
						subtract_variable = {
							which = getFortWeightItr
							value = 1
						}
						every_owned_province = {
							limit = {
								is_city = yes
							}
							set_variable = {
								which = getFortWeightReceive
								value = 0
							}
							every_neighbor_province = {
								limit = {
									owned_by = PREV
									is_city = yes
								}
								set_variable = {
									which = getFortWeightReceive
									which = getFortWeightBase
								}
								change_variable = {
									which = getFortWeightReceive
									which = getFortWeightNeighb
								}
								multiply_variable = {
									which = getFortWeightReceive
									value = 0.3
								}
								PREV = {
									change_variable = {
										which = getFortWeightReceive
										which = PREV
									}
								}
								set_variable = {
									which = getFortWeightReceive
									value = 0
								}
							}
							set_variable = {
								which = getFortWeightSave
								which = getFortWeightReceive
							}
							set_variable = {
								which = getFortWeightReceive
								value = 0
							}
						}
						every_owned_province = {
							limit = {
								is_city = yes
							}
							set_variable = {
								which = getFortWeightNeighb
								which = getFortWeightSave
							}
							set_variable = {
								which = getFortWeightSave
								value = 0
							}
						}
					}
					every_owned_province = {
						if = {
							limit = {
								NOT = {
									has_province_flag = aiGetFortWeightCand
								}
							}
							set_variable = {
								which = aiWeightFort
								value = -10
							}
						}
						else = {
							clr_province_flag = aiGetFortWeightCand
							set_variable = {
								which = aiWeightFort
								which = getFortWeightBase
							}
							change_variable = {
								which = aiWeightFort
								which = getFortWeightNeighb
							}
							divide_variable = {
								which = aiWeightFort
								value = 200
							}
						}
						set_variable = {
							which = getFortWeightBase
							value = 0
						}
						set_variable = {
							which = getFortWeightNeighb
							value = 0
						}
					}
				}
				else = {
					every_owned_province = {
						set_variable = {
							which = aiWeightFort
							value = -10
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildShipyards
					}
					every_owned_province = {
						if = {
							limit = {
								AND = {
									is_city = yes
									has_province_flag = infra_calc_done
									has_province_flag = has_natural_harbour
									OR = {
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_building = military_harbour_3
											has_province_flag = infra_calc_done
											NOT = {
												has_building = harbour_infrastructure_5
											}
											has_province_flag = has_great_natural_harbour
											owner = {
												dip_tech = 40
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = military_harbour_4
											}
										}
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_building = military_harbour_2
											has_province_flag = infra_calc_done
											has_province_flag = has_natural_harbour
											owner = {
												dip_tech = 19
											}
											AND = {
												NOT = {
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = military_harbour_3
											}
										}
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_building = military_harbour_1
											has_province_flag = infra_calc_done
											has_province_flag = has_natural_harbour
											owner = {
												dip_tech = 6
											}
											AND = {
												NOT = {
													has_building = military_harbour_3
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = military_harbour_2
											}
										}
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_province_flag = infra_calc_done
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											owner = {
												dip_tech = 3
											}
											AND = {
												NOT = {
													has_building = military_harbour_2
													has_building = military_harbour_3
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = military_harbour_1
											}
										}
									}
								}
							}
							export_to_variable = {
								which = aiDoBuildShipyardsShipBuild
								value = modifier:ship_recruit_speed
							}
							export_to_variable = {
								which = aiDoBuildShipyardsShipRepair
								value = modifier:local_ship_repair
							}
							multiply_variable = {
								which = aiDoBuildShipyardsShipBuild
								value = -1.5
							}
							set_variable = {
								which = aiWeightShipyard
								value = 1
							}
							if = {
								limit = {
									has_province_flag = has_great_natural_harbour
								}
								change_variable = {
									which = aiWeightShipyard
									value = 2
								}
							}
							change_variable = {
								which = aiWeightShipyard
								which = aiDoBuildShipyardsShipBuild
							}
							change_variable = {
								which = aiWeightShipyard
								which = aiDoBuildShipyardsShipRepair
							}
							divide_variable = {
								which = aiWeightShipyard
								value = 4
							}
							set_variable = {
								which = aiDoBuildShipyardsShipBuild
								value = 0
							}
							set_variable = {
								which = aiDoBuildShipyardsShipRepair
								value = 0
							}
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildPort
					}
					every_owned_province = {
						limit = {
							OR = {
								is_capital = yes
								check_variable = {
									which = devPointUrbanCur
									value = 10
								}
							}
						}
						if = {
							limit = {
								has_port = yes
								NOT = {
									has_province_modifier = lack_of_harbour
								}
							}
							set_province_flag = tmpPortBuild
							sea_zone = {
								set_province_flag = tmpPortHas
								portgroup = {
									limit = {
										has_province_flag = sea_neighbor_of_@PREV
									}
									set_province_flag = tmpPortHas
								}
							}
						}
						if = {
							limit = {
								OR = {
									has_port = no
									has_province_modifier = lack_of_harbour
									is_capital = yes
								}
							}
							every_neighbor_province = {
								limit = {
									has_province_flag = large_port_present
									sea_zone = {
										NOT = {
											has_province_flag = tmpPortHas
										}
									}
								}
								set_province_flag = tmpPortBuild
								sea_zone = {
									set_province_flag = tmpPortHas
									portgroup = {
										limit = {
											has_province_flag = sea_neighbor_of_@PREV
										}
										set_province_flag = tmpPortHas
									}
								}
							}
							every_neighbor_province = {
								every_neighbor_province = {
									if = {
										limit = {
											has_province_flag = large_port_present
											sea_zone = {
												NOT = {
													has_province_flag = tmpPortHas
												}
											}
										}
										set_province_flag = tmpPortBuild
										sea_zone = {
											set_province_flag = tmpPortHas
											portgroup = {
												limit = {
													has_province_flag = sea_neighbor_of_@PREV
												}
												set_province_flag = tmpPortHas
											}
										}
									}
								}
							}
							every_neighbor_province = {
								limit = {
									has_province_flag = has_great_natural_harbour
									sea_zone = {
										NOT = {
											has_province_flag = tmpPortHas
										}
									}
								}
								set_province_flag = tmpPortBuild
								sea_zone = {
									set_province_flag = tmpPortHas
									portgroup = {
										limit = {
											has_province_flag = sea_neighbor_of_@PREV
										}
										set_province_flag = tmpPortHas
									}
								}
							}
							every_neighbor_province = {
								every_neighbor_province = {
									if = {
										limit = {
											has_province_flag = has_great_natural_harbour
											sea_zone = {
												NOT = {
													has_province_flag = tmpPortHas
												}
											}
										}
										set_province_flag = tmpPortBuild
										sea_zone = {
											set_province_flag = tmpPortHas
											portgroup = {
												limit = {
													has_province_flag = sea_neighbor_of_@PREV
												}
												set_province_flag = tmpPortHas
											}
										}
									}
								}
							}
							every_neighbor_province = {
								limit = {
									has_province_flag = has_natural_harbour
									sea_zone = {
										NOT = {
											has_province_flag = tmpPortHas
										}
									}
								}
								set_province_flag = tmpPortBuild
								sea_zone = {
									set_province_flag = tmpPortHas
									portgroup = {
										limit = {
											has_province_flag = sea_neighbor_of_@PREV
										}
										set_province_flag = tmpPortHas
									}
								}
							}
							every_neighbor_province = {
								every_neighbor_province = {
									if = {
										limit = {
											has_province_flag = has_natural_harbour
											sea_zone = {
												NOT = {
													has_province_flag = tmpPortHas
												}
											}
										}
										set_province_flag = tmpPortBuild
										sea_zone = {
											set_province_flag = tmpPortHas
											portgroup = {
												limit = {
													has_province_flag = sea_neighbor_of_@PREV
												}
												set_province_flag = tmpPortHas
											}
										}
									}
								}
							}
							set_variable = {
								which = tmpCE
								which = runner_final_time
							}
							save_event_target_as = tmpCETarg
							every_neighbor_province = {
								limit = {
									has_port = yes
									sea_zone = {
										NOT = {
											has_province_flag = tmpPortHas
										}
									}
								}
								set_variable = {
									which = tmpCE
									which = runner_final_time
								}
								subtract_variable = {
									which = tmpCE
									which = event_target:tmpCETarg
								}
								if = {
									limit = {
										NOT = {
											check_variable = {
												which = tmpCE
												value = 15
											}
										}
										check_variable = {
											which = tmpCE
											value = -15
										}
									}
									set_province_flag = tmpPortBuild
									sea_zone = {
										set_province_flag = tmpPortHas
										portgroup = {
											limit = {
												has_province_flag = sea_neighbor_of_@PREV
											}
											set_province_flag = tmpPortHas
										}
									}
								}
								set_variable = {
									which = tmpCE
									value = 0
								}
							}
							every_neighbor_province = {
								every_neighbor_province = {
									if = {
										limit = {
											has_port = yes
											sea_zone = {
												NOT = {
													has_province_flag = tmpPortHas
												}
											}
										}
										set_variable = {
											which = tmpCE
											which = runner_final_time
										}
										subtract_variable = {
											which = tmpCE
											which = event_target:tmpCETarg
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tmpCE
														value = 15
													}
												}
												check_variable = {
													which = tmpCE
													value = -15
												}
											}
											set_province_flag = tmpPortBuild
											sea_zone = {
												set_province_flag = tmpPortHas
												portgroup = {
													limit = {
														has_province_flag = sea_neighbor_of_@PREV
													}
													set_province_flag = tmpPortHas
												}
											}
										}
										set_variable = {
											which = tmpCE
											value = 0
										}
									}
								}
							}
							set_variable = {
								which = tmpCE
								value = 0
							}
						}
						portgroup = {
							clr_province_flag = tmpPortHas
						}
					}
					every_owned_province = {
						if = {
							limit = {
								OR = {
									has_province_flag = has_natural_harbour
									has_province_flag = tmpPortBuild
								}
							}
							if = {
								limit = {
									has_province_flag = tmpPortBuild
								}
								clr_province_flag = tmpPortBuild
								set_variable = {
									which = aiWeightPort
									value = 200
								}
							}
							else = {
								set_variable = {
									which = aiWeightPort
									value = 30
								}
							}
							if = {
								limit = {
									NOT = {
										has_port = yes
										has_province_flag = infra_calc_done
										is_city = yes
										OR = {
											AND = {
												has_province_flag = infra_calc_done
												has_port = yes
												owner = {
													dip_tech = 1
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_2
														has_building = harbour_infrastructure_3x
														has_building = harbour_infrastructure_4
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_1
												}
											}
											AND = {
												has_building = harbour_infrastructure_1
												has_province_flag = infra_calc_done
												NOT = {
													has_province_modifier = lack_of_harbour
												}
												owner = {
													dip_tech = 4
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_3x
														has_building = harbour_infrastructure_4
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_2
												}
											}
											AND = {
												has_building = harbour_infrastructure_2
												has_province_flag = infra_calc_done
												AND = {
													OR = {
														has_building = town_hall
														has_building = urban_infrastructure_1
														has_building = urban_infrastructure_2
														has_building = urban_infrastructure_3
														has_building = urban_infrastructure_4
														has_building = urban_infrastructure_5
													}
												}
												NOT = {
													has_province_modifier = lack_of_harbour
												}
												NOT = {
													has_province_flag = has_delta_estuary
												}
												owner = {
													dip_tech = 6
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_4
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_3x
												}
											}
											AND = {
												has_building = harbour_infrastructure_3x
												has_province_flag = infra_calc_done
												AND = {
													OR = {
														has_building = urban_infrastructure_1
														has_building = urban_infrastructure_2
														has_building = urban_infrastructure_3
														has_building = urban_infrastructure_4
														has_building = urban_infrastructure_5
													}
												}
												NOT = {
													has_province_modifier = lack_of_harbour
												}
												NOT = {
													has_province_flag = has_delta_estuary
												}
												owner = {
													dip_tech = 22
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_4
												}
											}
											AND = {
												has_building = harbour_infrastructure_4
												has_province_flag = infra_calc_done
												AND = {
													OR = {
														has_building = urban_infrastructure_2
														has_building = urban_infrastructure_3
														has_building = urban_infrastructure_4
														has_building = urban_infrastructure_5
													}
												}
												NOT = {
													has_building = military_harbour_4
												}
												has_province_flag = has_natural_harbour
												owner = {
													dip_tech = 40
												}
												AND = {
													NOT = {
														has_building = military_harbour_4
													}
												}
												NOT = {
													has_building = harbour_infrastructure_5
												}
											}
										}
									}
								}
								set_variable = {
									which = aiWeightPort
									value = 0
								}
							}
						}
						else = {
							set_variable = {
								which = aiWeightPort
								value = 0
							}
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildRoad
					}
					every_owned_province = {
						set_variable = {
							which = aiWeightRoad
							value = 0
						}
					}
					every_owned_province = {
						limit = {
							is_city = yes
							NOT = {
								local_autonomy = 100
							}
						}
						save_event_target_as = aiDoBuildRoadTarg
						set_variable = {
							which = aiWeightRoadSpread
							which = devPointTotal
						}
						multiply_variable = {
							which = aiWeightRoadSpread
							value = 0.8
						}
						while = {
							limit = {
								event_target:aiDoBuildRoadTarg = {
									NOT = {
										owner = {
											capital_scope = {
												province_id = event_target:aiDoBuildRoadTarg
											}
										}
										has_province_modifier = has_regional_capital
									}
									check_variable = {
										which = aiWeightRoadSpread
										value = 0.01
									}
								}
							}
							event_target:aiDoBuildRoadTarg = {
								set_variable = {
									which = getRunnerPrevRP
									which = runner_prev
								}
								save_event_target_as = getRunnerPrevTarg
								owner = {
									every_owned_province = {
										limit = {
											NOT = {
												province_id = event_target:getRunnerPrevTarg
											}
										}
										set_variable = {
											which = getRunnerPrevRP
											which = event_target:getRunnerPrevTarg
										}
										if = {
											limit = {
												is_variable_equal = {
													which = prov_id
													which = getRunnerPrevRP
												}
											}
											save_event_target_as = aiDoBuildRoadTarg
										}
										set_variable = {
											which = getRunnerPrevRP
											value = 0
										}
									}
								}
								set_variable = {
									which = getRunnerPrevRP
									value = 0
								}
								event_target:aiDoBuildRoadTarg = {
									set_variable = {
										which = aiWeightRoadSpread
										which = PREV
									}
									multiply_variable = {
										which = aiWeightRoadSpread
										value = 0.8
									}
									change_variable = {
										which = aiWeightRoad
										which = aiWeightRoadSpread
									}
									every_neighbor_province = {
										limit = {
											owned_by = PREV
										}
										set_variable = {
											which = aiWeightRoadSpread
											which = PREV
										}
										multiply_variable = {
											which = aiWeightRoadSpread
											value = 0.25
										}
										change_variable = {
											which = aiWeightRoad
											which = aiWeightRoadSpread
										}
										set_variable = {
											which = aiWeightRoadSpread
											value = 0
										}
									}
								}
								set_variable = {
									which = aiWeightRoadSpread
									value = 0
								}
							}
						}
						event_target:aiDoBuildRoadTarg = {
							set_variable = {
								which = aiWeightRoadSpread
								value = 0
							}
						}
					}
					every_owned_province = {
						change_variable = {
							which = aiWeightRoad
							which = devPointTotal
						}
						divide_variable = {
							which = aiWeightRoad
							value = 20
						}
						if = {
							limit = {
								local_autonomy = 100
							}
							set_variable = {
								which = aiWeightRoad
								value = 0
							}
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildBureau
					}
					every_owned_province = {
						limit = {
							is_city = yes
						}
						set_variable = {
							which = travel_time_reduced
							value = 0
						}
						trigger_switch = {
							on_trigger = has_building
							road_network = {
								trigger_switch = {
									on_trigger = has_province_flag
									favorable_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 0.25
										}
									}
									challenging_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 0.5
										}
									}
									rugged_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 1.5
										}
									}
								}
							}
							paved_road_network = {
								trigger_switch = {
									on_trigger = has_province_flag
									favorable_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 0.5
										}
									}
									challenging_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 1
										}
									}
									rugged_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 2
										}
									}
								}
							}
							highway_network = {
								trigger_switch = {
									on_trigger = has_province_flag
									favorable_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 0.75
										}
									}
									challenging_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 1.5
										}
									}
									rugged_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 3
										}
									}
								}
							}
							road_and_rail_network = {
								trigger_switch = {
									on_trigger = has_province_flag
									favorable_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 1.5
										}
									}
									challenging_terrain = {
										if = {
											limit = {
												OR = {
													AND = {
														OR = {
															has_terrain = grass_hills
															has_terrain = shrub_hills
															has_terrain = wood_hills
															has_terrain = forest_hills
															has_terrain = desert_hills
															has_terrain = jungle_hills
														}
													}
													has_terrain = tundra
												}
											}
											set_variable = {
												which = travel_time_reduced
												value = 3
											}
										}
										else = {
											set_variable = {
												which = travel_time_reduced
												value = 2.5
											}
										}
									}
									rugged_terrain = {
										set_variable = {
											which = travel_time_reduced
											value = 4.5
										}
									}
								}
							}
						}
						set_variable = {
							which = prov_rad
							which = travel_time_terrain_base
						}
						subtract_variable = {
							which = prov_rad
							which = travel_time_reduced
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = prov_rad
										value = 0.01
									}
								}
							}
							set_variable = {
								which = prov_rad
								value = 0.01
							}
						}
						multiply_variable = {
							which = prov_rad
							which = prov_radius
						}
						multiply_variable = {
							which = prov_rad
							value = 0.2
						}
						if = {
							limit = {
								OR = {
									AND = {
										AND = {
											OR = {
												owner = {
													is_nomad = yes
												}
												controller = {
													is_nomad = yes
												}
											}
										}
										ROOT = {
											is_nomad = yes
										}
									}
									AND = {
										OR = {
											owner = {
												culture_group = east_slavic
											}
											controller = {
												culture_group = east_slavic
											}
										}
										ROOT = {
											culture_group = east_slavic
										}
										OR = {
											superregion = greater_russia_superregion
											superregion = central_asia_superregion
											superregion = eastern_steppe_superregion
										}
									}
								}
								has_province_flag = nomad_speed_boost
								NOT = {
									has_building = road_and_rail_network
								}
								check_variable = {
									which = prov_rad
									value = 0.001
								}
							}
							divide_variable = {
								which = prov_rad
								value = 3
							}
						}
						set_variable = {
							which = prov_factor
							which = prov_rad
						}
						multiply_variable = {
							which = prov_factor
							value = 0.5
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = prov_rad
										value = 0.01
									}
								}
							}
							set_variable = {
								which = prov_rad
								value = 0.01
							}
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = prov_factor
										value = 0.01
									}
								}
							}
							set_variable = {
								which = prov_factor
								value = 0.01
							}
						}
						change_variable = {
							which = prov_factor
							value = 1
						}
						if = {
							limit = {
								always = yes
								has_province_flag = large_port_present
							}
							set_variable = {
								which = travel_time_sailing_modifier
								value = 0
							}
							trigger_switch = {
								on_trigger = has_building
								harbour_infrastructure_2 = {
									set_variable = {
										which = travel_time_sailing_modifier
										value = 1
									}
								}
								harbour_infrastructure_3x = {
									set_variable = {
										which = travel_time_sailing_modifier
										value = 0.8
									}
								}
								harbour_infrastructure_4 = {
									set_variable = {
										which = travel_time_sailing_modifier
										value = 0.65
									}
								}
								harbour_infrastructure_5 = {
									set_variable = {
										which = travel_time_sailing_modifier
										value = 0.5
									}
								}
							}
							trigger_switch = {
								on_trigger = has_province_flag
								has_small_natural_harbour = {
									subtract_variable = {
										which = travel_time_sailing_modifier
										value = 0.05
									}
								}
								has_great_natural_harbour = {
									subtract_variable = {
										which = travel_time_sailing_modifier
										value = 0.15
									}
								}
							}
						}
						set_variable = {
							which = getCapitalWeightBase
							which = devPointTotal
						}
						divide_variable = {
							which = getCapitalWeightBase
							value = 2
						}
						set_variable = {
							which = getCapitalWeightNeighb
							value = 0
						}
						set_variable = {
							which = travel_time_reduced
							value = 0
						}
						set_variable = {
							which = prov_rad
							value = 0
						}
					}
					set_variable = {
						which = getCapitalWeightItr
						value = 5
					}
					while = {
						limit = {
							check_variable = {
								which = getCapitalWeightItr
								value = 1
							}
						}
						subtract_variable = {
							which = getCapitalWeightItr
							value = 1
						}
						every_owned_province = {
							limit = {
								is_city = yes
							}
							set_variable = {
								which = getCapitalWeightReceive
								value = 0
							}
							set_variable = {
								which = getCapitalWeightDistance
								which = prov_factor
							}
							every_neighbor_province = {
								limit = {
									owned_by = PREV
									is_city = yes
								}
								set_variable = {
									which = getCapitalWeightReceive
									which = getCapitalWeightBase
								}
								change_variable = {
									which = getCapitalWeightReceive
									which = getCapitalWeightNeighb
								}
								set_variable = {
									which = getCapitalWeightDistance
									which = PREV
								}
								change_variable = {
									which = getCapitalWeightDistance
									which = prov_factor
								}
								divide_variable = {
									which = getCapitalWeightReceive
									which = getCapitalWeightDistance
								}
								PREV = {
									change_variable = {
										which = getCapitalWeightReceive
										which = PREV
									}
								}
								set_variable = {
									which = getCapitalWeightReceive
									value = 0
								}
								set_variable = {
									which = getCapitalWeightDistance
									value = 0
								}
							}
							set_variable = {
								which = getCapitalWeightDistance
								value = 0
							}
							if = {
								limit = {
									always = yes
									has_province_flag = large_port_present
								}
								set_variable = {
									which = itr
									value = 3
								}
								sea_zone = {
									set_variable = {
										which = itr
										which = PREV
									}
									set_province_flag = spread_sea_dist
									set_province_flag = has_sea_dist
									while = {
										limit = {
											check_variable = {
												which = itr
												value = 1
											}
										}
										subtract_variable = {
											which = itr
											value = 1
										}
										portgroup = {
											limit = {
												has_province_flag = spread_sea_dist
											}
											clr_province_flag = spread_sea_dist
											portgroup = {
												limit = {
													NOT = {
														has_province_flag = has_sea_dist
													}
													has_province_flag = sea_neighbor_of_@PREV
												}
												set_province_flag = has_sea_dist
												set_province_flag = set_spread
												set_variable = {
													which = sea_dist
													which = PREV
												}
												change_variable = {
													which = sea_dist
													value = 1
												}
											}
										}
										if = {
											limit = {
												check_variable = {
													which = itr
													value = 1
												}
											}
											portgroup = {
												limit = {
													has_province_flag = set_spread
												}
												clr_province_flag = set_spread
												set_province_flag = spread_sea_dist
											}
										}
										else = {
											portgroup = {
												limit = {
													has_province_flag = set_spread
												}
												clr_province_flag = set_spread
											}
										}
									}
								}
								set_variable = {
									which = itr
									value = 0
								}
								set_variable = {
									which = inform_sender
									which = travel_time_sailing_modifier
								}
								save_event_target_as = getCapitalWeightPort
								owner = {
									every_owned_province = {
										limit = {
											has_province_flag = large_port_present
											sea_zone = {
												has_province_flag = has_sea_dist
											}
											NOT = {
												province_id = event_target:getCapitalWeightPort
												any_neighbor_province = {
													province_id = event_target:getCapitalWeightPort
												}
											}
										}
										set_variable = {
											which = inform_sender
											which = event_target:getCapitalWeightPort
										}
										change_variable = {
											which = inform_sender
											which = travel_time_sailing_modifier
										}
										divide_variable = {
											which = inform_sender
											value = 2
										}
										sea_zone = {
											PREV = {
												set_variable = {
													which = sea_dist
													which = PREV
												}
											}
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = sea_dist
														value = 2
													}
												}
											}
											event_target:getCapitalWeightPort = {
												set_variable = {
													which = Xdiff
													which = x_coord
												}
												set_variable = {
													which = Ydiff
													which = y_coord
												}
											}
											set_variable = {
												which = Xdiff
												which = x_coord
											}
											set_variable = {
												which = Ydiff
												which = y_coord
											}
											subtract_variable = {
												which = Xdiff
												which = event_target:getCapitalWeightPort
											}
											subtract_variable = {
												which = Ydiff
												which = event_target:getCapitalWeightPort
											}
											if = {
												limit = {
													NOT = {
														check_variable = {
															which = Xdiff
															value = 0
														}
													}
												}
												multiply_variable = {
													which = Xdiff
													value = -1
												}
											}
											if = {
												limit = {
													NOT = {
														check_variable = {
															which = Ydiff
															value = 0
														}
													}
												}
												multiply_variable = {
													which = Ydiff
													value = -1
												}
											}
											event_target:getCapitalWeightPort = {
												set_variable = {
													which = Xdiff
													value = 0
												}
												set_variable = {
													which = Ydiff
													value = 0
												}
											}
											set_variable = {
												which = XYsum
												value = 0.001
											}
											change_variable = {
												which = XYsum
												which = Xdiff
											}
											change_variable = {
												which = XYsum
												which = Ydiff
											}
											set_variable = {
												which = XYmult
												which = Xdiff
											}
											multiply_variable = {
												which = XYmult
												which = Ydiff
											}
											multiply_variable = {
												which = XYmult
												value = 1.135
											}
											if = {
												limit = {
													is_variable_equal = {
														which = XYsum
														value = 0
													}
												}
												set_variable = {
													which = XYsum
													value = 0.001
												}
											}
											divide_variable = {
												which = XYmult
												which = XYsum
											}
											subtract_variable = {
												which = XYsum
												which = XYmult
											}
											set_variable = {
												which = distance
												which = XYsum
											}
											set_variable = {
												which = XYsum
												value = 0
											}
											set_variable = {
												which = XYmult
												value = 0
											}
											set_variable = {
												which = Xdiff
												value = 0
											}
											set_variable = {
												which = Ydiff
												value = 0
											}
											multiply_variable = {
												which = distance
												value = 0.125
											}
										}
										else = {
											multiply_variable = {
												which = distance
												which = sea_dist
											}
											multiply_variable = {
												which = distance
												value = 10
											}
										}
										change_variable = {
											which = distance
											value = 3
										}
										multiply_variable = {
											which = distance
											which = inform_sender
										}
										multiply_variable = {
											which = distance
											value = 3
										}
										set_variable = {
											which = getCapitalWeightReceive
											which = getCapitalWeightBase
										}
										change_variable = {
											which = getCapitalWeightReceive
											which = getCapitalWeightNeighb
										}
										divide_variable = {
											which = getCapitalWeightReceive
											which = distance
										}
										event_target:getCapitalWeightPort = {
											change_variable = {
												which = getCapitalWeightReceive
												which = PREV
											}
										}
										set_variable = {
											which = distance
											value = 0
										}
										set_variable = {
											which = getCapitalWeightReceive
											value = 0
										}
										set_variable = {
											which = sea_dist
											value = 0
										}
										set_variable = {
											which = inform_sender
											value = 0
										}
									}
								}
								portgroup = {
									limit = {
										has_province_flag = has_sea_dist
									}
									clr_province_flag = has_sea_dist
									set_variable = {
										which = sea_dist
										value = 0
									}
								}
							}
							set_variable = {
								which = getCapitalWeightSave
								which = getCapitalWeightReceive
							}
							set_variable = {
								which = getCapitalWeightReceive
								value = 0
							}
						}
						every_owned_province = {
							limit = {
								is_city = yes
							}
							set_variable = {
								which = getCapitalWeightNeighb
								which = getCapitalWeightSave
							}
							set_variable = {
								which = getCapitalWeightSave
								value = 0
							}
						}
					}
					every_owned_province = {
						limit = {
							is_city = yes
						}
						set_variable = {
							which = aiWeightBureau
							which = getCapitalWeightBase
						}
						change_variable = {
							which = aiWeightBureau
							which = getCapitalWeightNeighb
						}
						if = {
							limit = {
								is_capital = yes
							}
							multiply_variable = {
								which = aiWeightBureau
								value = 1.35
							}
							change_variable = {
								which = aiWeightBureau
								value = 5
							}
						}
						trigger_switch = {
							on_trigger = has_province_flag
							good_natural_place = {
								change_variable = {
									which = aiWeightBureau
									value = 1
								}
							}
							great_natural_place = {
								multiply_variable = {
									which = aiWeightBureau
									value = 1.2
								}
								change_variable = {
									which = aiWeightBureau
									value = 3
								}
							}
							awesome_natural_place = {
								multiply_variable = {
									which = aiWeightBureau
									value = 1.35
								}
								change_variable = {
									which = aiWeightBureau
									value = 5
								}
							}
						}
						trigger_switch = {
							on_trigger = has_building
							bureaucracy_1 = {
								multiply_variable = {
									which = aiWeightBureau
									value = 1.2
								}
								change_variable = {
									which = aiWeightBureau
									value = 3
								}
							}
							bureaucracy_2 = {
								multiply_variable = {
									which = aiWeightBureau
									value = 1.4
								}
								change_variable = {
									which = aiWeightBureau
									value = 6
								}
							}
							bureaucracy_3 = {
								multiply_variable = {
									which = aiWeightBureau
									value = 1.6
								}
								change_variable = {
									which = aiWeightBureau
									value = 10
								}
							}
							bureaucracy_4 = {
								multiply_variable = {
									which = aiWeightBureau
									value = 1.8
								}
								change_variable = {
									which = aiWeightBureau
									value = 15
								}
							}
							bureaucracy_5 = {
								multiply_variable = {
									which = aiWeightBureau
									value = 2
								}
								change_variable = {
									which = aiWeightBureau
									value = 20
								}
							}
						}
						divide_variable = {
							which = aiWeightBureau
							value = 15
						}
						set_variable = {
							which = prov_factor
							value = 0
						}
						set_variable = {
							which = travel_time_sailing_modifier
							value = 0
						}
						set_variable = {
							which = getCapitalWeightBase
							value = 0
						}
						set_variable = {
							which = getCapitalWeightNeighb
							value = 0
						}
					}
					every_owned_province = {
						if = {
							limit = {
								AND = {
									is_city = yes
									OR = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 10
											}
											has_building = bureaucracy_4
											owner = {
												adm_tech = 23
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = bureaucracy_5
											}
										}
										AND = {
											check_variable = {
												which = urban_pop
												value = 8
											}
											has_building = bureaucracy_3
											owner = {
												adm_tech = 14
											}
											AND = {
												NOT = {
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_4
											}
										}
										AND = {
											check_variable = {
												which = urban_pop
												value = 6
											}
											has_building = bureaucracy_2
											owner = {
												adm_tech = 14
											}
											AND = {
												NOT = {
													has_building = bureaucracy_4
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_3
											}
										}
										AND = {
											check_variable = {
												which = urban_pop
												value = 4
											}
											has_building = bureaucracy_1
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = bureaucracy_3
													has_building = bureaucracy_4
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_2
											}
										}
										AND = {
											check_variable = {
												which = urban_pop
												value = 2
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = bureaucracy_2
													has_building = bureaucracy_3
													has_building = bureaucracy_4
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_1
											}
										}
									}
								}
							}
							multiply_variable = {
								which = aiWeightBureau
								value = 5
							}
							if = {
								limit = {
									is_capital = no
								}
								multiply_variable = {
									which = aiWeightBureau
									which = runner_final_time
								}
								divide_variable = {
									which = aiWeightBureau
									value = 40
								}
							}
						}
						else = {
							set_variable = {
								which = aiWeightBureau
								value = -10
							}
						}
					}
				}
				else = {
					every_owned_province = {
						set_variable = {
							which = aiWeightBureau
							value = -10
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionBuildCity
					}
					every_owned_province = {
						limit = {
							is_city = yes
						}
						set_variable = {
							which = check
							value = 1
						}
						owner = {
							export_to_variable = {
								which = aiDoSpendingTreasury
								value = treasury
							}
							export_to_variable = {
								which = aiTreasuryVanillaLimit
								value = monthly_income
							}
							multiply_variable = {
								which = aiTreasuryVanillaLimit
								value = 3
							}
							change_variable = {
								which = aiTreasuryVanillaLimit
								value = 200
							}
							if = {
								limit = {
									has_country_flag = aiHasActionWarchest
								}
								multiply_variable = {
									which = aiTreasuryVanillaLimit
									value = 2
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = aiDoSpendingTreasury
											which = aiTreasuryVanillaLimit
										}
									}
								}
								set_variable = {
									which = aiDoSpendingTreasury
									value = 0
								}
							}
							else = {
								subtract_variable = {
									which = aiDoSpendingTreasury
									which = aiTreasuryVanillaLimit
								}
							}
							change_variable = {
								which = aiDoSpendingTreasury
								which = aiTreasuryGeneral
							}
							PREV = {
								set_variable = {
									which = aiDoSpendingTreasury
									which = PREV
								}
							}
							if = {
								limit = {
									NOT = {
										is_variable_equal = {
											which = check
											value = 1
										}
									}
								}
								set_variable = {
									which = aiDoSpendingTreasury
									value = 0
								}
							}
							set_variable = {
								which = aiTreasuryVanillaLimit
								value = 0
							}
						}
						set_variable = {
							which = check
							value = 0
						}
						if = {
							limit = {
								AND = {
									is_city = yes
									has_province_flag = infra_calc_done
									OR = {
										AND = {
											has_province_flag = mined_goods
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_2
													has_building = mines_3
													has_building = mines_4
													has_building = mines_5
												}
											}
											NOT = {
												has_building = mines_1
											}
										}
										AND = {
											has_building = mines_1
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_3
													has_building = mines_4
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 6
											}
											NOT = {
												has_building = mines_2
											}
										}
										AND = {
											has_building = mines_2
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_4
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 11
											}
											NOT = {
												has_building = mines_3
											}
										}
										AND = {
											has_building = mines_3
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 22
											}
											NOT = {
												has_building = mines_4
											}
										}
										AND = {
											has_building = mines_4
											has_province_flag = infra_calc_done
											AND = {
												always = yes
											}
											owner = {
												adm_tech = 37
											}
											NOT = {
												has_building = mines_5
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = town_hall
											}
										}
										AND = {
											has_building = town_hall
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 0.5
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_1
											}
										}
										AND = {
											has_building = urban_infrastructure_1
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 1.5
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_2
											}
										}
										AND = {
											has_building = urban_infrastructure_2
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 3
											}
											owner = {
												adm_tech = 7
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_3
											}
										}
										AND = {
											has_building = urban_infrastructure_3
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 5
											}
											owner = {
												adm_tech = 18
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_4
											}
										}
										AND = {
											has_building = urban_infrastructure_4
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 8
											}
											owner = {
												adm_tech = 27
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = urban_infrastructure_5
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											has_port = yes
											owner = {
												dip_tech = 1
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_1
											}
										}
										AND = {
											has_building = harbour_infrastructure_1
											has_province_flag = infra_calc_done
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_2
											}
										}
										AND = {
											has_building = harbour_infrastructure_2
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = town_hall
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											NOT = {
												has_province_flag = has_delta_estuary
											}
											owner = {
												dip_tech = 6
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_3x
											}
										}
										AND = {
											has_building = harbour_infrastructure_3x
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											NOT = {
												has_province_flag = has_delta_estuary
											}
											owner = {
												dip_tech = 22
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_4
											}
										}
										AND = {
											has_building = harbour_infrastructure_4
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = military_harbour_4
											}
											has_province_flag = has_natural_harbour
											owner = {
												dip_tech = 40
											}
											AND = {
												NOT = {
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = harbour_infrastructure_5
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = merchant_guild
													has_building = trade_depot
													has_building = customs_house
												}
											}
											NOT = {
												has_building = marketplace
											}
										}
										AND = {
											has_building = marketplace
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 1
											}
											owner = {
												dip_tech = 5
											}
											AND = {
												NOT = {
													has_building = trade_depot
													has_building = customs_house
												}
											}
											NOT = {
												has_building = merchant_guild
											}
										}
										AND = {
											has_building = merchant_guild
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 2
											}
											owner = {
												dip_tech = 13
											}
											AND = {
												NOT = {
													has_building = customs_house
												}
											}
											NOT = {
												has_building = trade_depot
											}
										}
										AND = {
											has_building = trade_depot
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 3
											}
											owner = {
												dip_tech = 22
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = customs_house
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 4
											}
											AND = {
												OR = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												has_idea_group = trade_ideas
											}
											owner = {
												dip_tech = 23
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = bank
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 8
											}
											has_building = bank
											AND = {
												OR = {
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												has_idea_group = trade_ideas
											}
											owner = {
												dip_tech = 42
											}
											AND = {
												owner = {
													has_country_modifier = india_trade_co
												}
											}
											NOT = {
												has_building = stock_exchange
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											NOT = {
												has_building = steam_powered_factory
											}
											check_variable = {
												which = urban_pop
												value = 1
											}
											owner = {
												adm_tech = 4
											}
											AND = {
												NOT = {
													has_building = corporation_guild
													has_building = urban_manufactory
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = workshop
											}
										}
										AND = {
											has_building = workshop
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 5
											}
											owner = {
												adm_tech = 5
											}
											AND = {
												NOT = {
													has_building = urban_manufactory
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = corporation_guild
											}
										}
										AND = {
											has_building = corporation_guild
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 9
											}
											owner = {
												adm_tech = 10
											}
											AND = {
												NOT = {
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = urban_manufactory
											}
										}
										AND = {
											has_building = urban_manufactory
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 9
											}
											owner = {
												adm_tech = 33
											}
											AND = {
												NOT = {
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = factory
											}
										}
										AND = {
											OR = {
												has_building = factory
												has_building = warehouse
												has_building = warehouse_district
											}
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 47
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = steam_powered_factory
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = warehouse_district
												}
											}
											NOT = {
												has_building = warehouse
											}
										}
										AND = {
											has_building = warehouse
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 4
											}
											owner = {
												dip_tech = 10
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = warehouse_district
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = medium_university
													has_building = big_university
												}
											}
											NOT = {
												has_building = small_university
											}
										}
										AND = {
											has_building = small_university
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											check_variable = {
												which = art_power
												value = 5
											}
											AND = {
												NOT = {
													has_building = big_university
												}
											}
											NOT = {
												has_building = medium_university
											}
										}
										AND = {
											has_building = medium_university
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											check_variable = {
												which = art_power
												value = 10
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = big_university
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												adm_tech = 5
											}
											AND = {
												NOT = {
													has_building = fine_arts_academy
													has_building = opera
												}
											}
											NOT = {
												has_building = art_corporation
											}
										}
										AND = {
											has_building = art_corporation
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 19
												OR = {
													has_idea = patron_of_art
													has_idea = local_traditions
												}
											}
											AND = {
												NOT = {
													has_building = opera
												}
											}
											NOT = {
												has_building = fine_arts_academy
											}
										}
										AND = {
											has_building = fine_arts_academy
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 29
												OR = {
													has_idea = patron_of_art
													has_idea = local_traditions
												}
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = opera
											}
										}
									}
								}
							}
							export_to_variable = {
								which = getBestBuildingCost
								value = modifier:local_build_cost
							}
							export_to_variable = {
								which = getBestBuildingCostOwner
								value = modifier:build_cost
								who = owner
							}
							change_variable = {
								which = getBestBuildingCost
								value = 1
							}
							change_variable = {
								which = getBestBuildingCost
								which = getBestBuildingCostOwner
							}
							set_variable = {
								which = getBestBuildingFood
								which = regional_food_factor
							}
							multiply_variable = {
								which = getBestBuildingFood
								value = 2
							}
							set_variable = {
								which = getBestBuildingWeight
								value = -1
							}
							set_variable = {
								which = getBestBuildingBuildInd
								value = 0
							}
							set_variable = {
								which = getBestBuildingBuildPrice
								value = 0
							}
							set_variable = {
								which = getBestBuildingBudget
								which = aiDoSpendingTreasury
							}
							if = {
								limit = {
									OR = {
										always = yes
										always = no
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = mined_goods
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_2
													has_building = mines_3
													has_building = mines_4
													has_building = mines_5
												}
											}
											NOT = {
												has_building = mines_1
											}
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0.6
									}
									subtract_variable = {
										which = assessBuildingWeight
										value = 0.1
									}
									set_variable = {
										which = tempIncomeMine
										which = mine_power
									}
									multiply_variable = {
										which = tempIncomeMine
										which = price_of_metal
									}
									multiply_variable = {
										which = tempIncomeMine
										value = 0.2
									}
									multiply_variable = {
										which = assessBuildingWeight
										which = tempIncomeMine
									}
									divide_variable = {
										which = assessBuildingWeight
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 100
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeMine
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 1
										}
										set_variable = {
											which = "building_cost"
											value = 100
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = mines_1
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_3
													has_building = mines_4
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 6
											}
											NOT = {
												has_building = mines_2
											}
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 1.2
									}
									subtract_variable = {
										which = assessBuildingWeight
										value = 0.6
									}
									set_variable = {
										which = tempIncomeMine
										which = mine_power
									}
									multiply_variable = {
										which = tempIncomeMine
										which = price_of_metal
									}
									multiply_variable = {
										which = tempIncomeMine
										value = 0.2
									}
									multiply_variable = {
										which = assessBuildingWeight
										which = tempIncomeMine
									}
									divide_variable = {
										which = assessBuildingWeight
										value = 0.6
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeMine
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 2
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = mines_2
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_4
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 11
											}
											NOT = {
												has_building = mines_3
											}
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 1.8
									}
									subtract_variable = {
										which = assessBuildingWeight
										value = 1.2
									}
									set_variable = {
										which = tempIncomeMine
										which = mine_power
									}
									multiply_variable = {
										which = tempIncomeMine
										which = price_of_metal
									}
									multiply_variable = {
										which = tempIncomeMine
										value = 0.2
									}
									multiply_variable = {
										which = assessBuildingWeight
										which = tempIncomeMine
									}
									divide_variable = {
										which = assessBuildingWeight
										value = 1.2
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 200
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeMine
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 3
										}
										set_variable = {
											which = "building_cost"
											value = 200
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = mines_3
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 22
											}
											NOT = {
												has_building = mines_4
											}
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 2.4
									}
									subtract_variable = {
										which = assessBuildingWeight
										value = 1.8
									}
									set_variable = {
										which = tempIncomeMine
										which = mine_power
									}
									multiply_variable = {
										which = tempIncomeMine
										which = price_of_metal
									}
									multiply_variable = {
										which = tempIncomeMine
										value = 0.2
									}
									multiply_variable = {
										which = assessBuildingWeight
										which = tempIncomeMine
									}
									divide_variable = {
										which = assessBuildingWeight
										value = 1.8
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeMine
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 4
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = mines_4
											has_province_flag = infra_calc_done
											AND = {
												always = yes
											}
											owner = {
												adm_tech = 37
											}
											NOT = {
												has_building = mines_5
											}
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 3
									}
									subtract_variable = {
										which = assessBuildingWeight
										value = 2.4
									}
									set_variable = {
										which = tempIncomeMine
										which = mine_power
									}
									multiply_variable = {
										which = tempIncomeMine
										which = price_of_metal
									}
									multiply_variable = {
										which = tempIncomeMine
										value = 0.2
									}
									multiply_variable = {
										which = assessBuildingWeight
										which = tempIncomeMine
									}
									divide_variable = {
										which = assessBuildingWeight
										value = 2.4
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 400
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeMine
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 5
										}
										set_variable = {
											which = "building_cost"
											value = 400
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
							}
							if = {
								limit = {
									always = yes
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = town_hall
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 6
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = town_hall
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 0.5
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_1
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 225
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 7
										}
										set_variable = {
											which = "building_cost"
											value = 225
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = urban_infrastructure_1
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 1.5
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_2
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 8
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = urban_infrastructure_2
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 3
											}
											owner = {
												adm_tech = 7
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_3
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 450
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 9
										}
										set_variable = {
											which = "building_cost"
											value = 450
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = urban_infrastructure_3
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 5
											}
											owner = {
												adm_tech = 18
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_4
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 10
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = urban_infrastructure_4
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 8
											}
											owner = {
												adm_tech = 27
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = urban_infrastructure_5
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 900
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 11
										}
										set_variable = {
											which = "building_cost"
											value = 900
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											has_port = yes
											owner = {
												dip_tech = 1
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_1
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.05
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 12
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = harbour_infrastructure_1
											has_province_flag = infra_calc_done
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_2
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.15
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.2
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 225
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 13
										}
										set_variable = {
											which = "building_cost"
											value = 225
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = harbour_infrastructure_2
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = town_hall
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											NOT = {
												has_province_flag = has_delta_estuary
											}
											owner = {
												dip_tech = 6
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_3x
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.05
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 14
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = harbour_infrastructure_3x
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											NOT = {
												has_province_flag = has_delta_estuary
											}
											owner = {
												dip_tech = 22
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_4
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.05
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 450
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 15
										}
										set_variable = {
											which = "building_cost"
											value = 450
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = harbour_infrastructure_4
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = military_harbour_4
											}
											has_province_flag = has_natural_harbour
											owner = {
												dip_tech = 40
											}
											AND = {
												NOT = {
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = harbour_infrastructure_5
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.2
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 16
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = merchant_guild
													has_building = trade_depot
													has_building = customs_house
												}
											}
											NOT = {
												has_building = marketplace
											}
										}
									}
									set_variable = {
										which = tempPrevTradePowerValue
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevTradePowerValue
										value = 0.2
									}
									change_variable = {
										which = tempPrevTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 4
											}
										}
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempNewTradePowerValue
											value = 1.2
										}
									}
									else = {
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.5
										}
									}
									change_variable = {
										which = tempNewTradePowerValue
										value = 0.25
									}
									change_variable = {
										which = tempNewTradePowerMult
										value = 0.15
									}
									set_variable = {
										which = tempChangeTradeVal
										which = tempNewTradePowerValue
									}
									set_variable = {
										which = tempChangeTradeMult
										which = tempNewTradePowerMult
									}
									subtract_variable = {
										which = tempChangeTradeVal
										which = tempPrevTradePowerValue
									}
									subtract_variable = {
										which = tempChangeTradeMult
										which = tempPrevTradePowerMult
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 17
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = marketplace
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 1
											}
											owner = {
												dip_tech = 5
											}
											AND = {
												NOT = {
													has_building = trade_depot
													has_building = customs_house
												}
											}
											NOT = {
												has_building = merchant_guild
											}
										}
									}
									set_variable = {
										which = tempPrevTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 4
											}
										}
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempPrevTradePowerValue
											value = 1.2
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.5
										}
									}
									change_variable = {
										which = tempPrevTradePowerValue
										value = 0.25
									}
									change_variable = {
										which = tempPrevTradePowerMult
										value = 0.15
									}
									set_variable = {
										which = tempNewTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 8
											}
										}
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempNewTradePowerValue
											value = 3.2
										}
									}
									else = {
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.6
										}
									}
									change_variable = {
										which = tempNewTradePowerValue
										value = 0.35
									}
									change_variable = {
										which = tempNewTradePowerMult
										value = 0.2
									}
									set_variable = {
										which = tempChangeTradeVal
										which = tempNewTradePowerValue
									}
									set_variable = {
										which = tempChangeTradeMult
										which = tempNewTradePowerMult
									}
									subtract_variable = {
										which = tempChangeTradeVal
										which = tempPrevTradePowerValue
									}
									subtract_variable = {
										which = tempChangeTradeMult
										which = tempPrevTradePowerMult
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.15
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 225
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 18
										}
										set_variable = {
											which = "building_cost"
											value = 225
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = merchant_guild
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 2
											}
											owner = {
												dip_tech = 13
											}
											AND = {
												NOT = {
													has_building = customs_house
												}
											}
											NOT = {
												has_building = trade_depot
											}
										}
									}
									set_variable = {
										which = tempPrevTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 8
											}
										}
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempPrevTradePowerValue
											value = 3.2
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.6
										}
									}
									change_variable = {
										which = tempPrevTradePowerValue
										value = 0.35
									}
									change_variable = {
										which = tempPrevTradePowerMult
										value = 0.2
									}
									set_variable = {
										which = tempNewTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 12
											}
										}
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempNewTradePowerValue
											value = 7.2
										}
									}
									else = {
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.8
										}
									}
									change_variable = {
										which = tempNewTradePowerValue
										value = 0.5
									}
									change_variable = {
										which = tempNewTradePowerMult
										value = 0.25
									}
									set_variable = {
										which = tempChangeTradeVal
										which = tempNewTradePowerValue
									}
									set_variable = {
										which = tempChangeTradeMult
										which = tempNewTradePowerMult
									}
									subtract_variable = {
										which = tempChangeTradeVal
										which = tempPrevTradePowerValue
									}
									subtract_variable = {
										which = tempChangeTradeMult
										which = tempPrevTradePowerMult
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.05
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 19
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = trade_depot
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 3
											}
											owner = {
												dip_tech = 22
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = customs_house
											}
										}
									}
									set_variable = {
										which = tempPrevTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 12
											}
										}
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempPrevTradePowerValue
											value = 7.2
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.8
										}
									}
									change_variable = {
										which = tempPrevTradePowerValue
										value = 0.5
									}
									change_variable = {
										which = tempPrevTradePowerMult
										value = 0.25
									}
									set_variable = {
										which = tempNewTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 16
											}
										}
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempNewTradePowerValue
											value = 12.8
										}
									}
									else = {
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 1
										}
									}
									change_variable = {
										which = tempNewTradePowerValue
										value = 0.75
									}
									change_variable = {
										which = tempNewTradePowerMult
										value = 0.3
									}
									set_variable = {
										which = tempChangeTradeVal
										which = tempNewTradePowerValue
									}
									set_variable = {
										which = tempChangeTradeMult
										which = tempNewTradePowerMult
									}
									subtract_variable = {
										which = tempChangeTradeVal
										which = tempPrevTradePowerValue
									}
									subtract_variable = {
										which = tempChangeTradeMult
										which = tempPrevTradePowerMult
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 450
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 20
										}
										set_variable = {
											which = "building_cost"
											value = 450
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 4
											}
											AND = {
												OR = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												has_idea_group = trade_ideas
											}
											owner = {
												dip_tech = 23
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = bank
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.2
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 500
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 21
										}
										set_variable = {
											which = "building_cost"
											value = 500
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 8
											}
											has_building = bank
											AND = {
												OR = {
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												has_idea_group = trade_ideas
											}
											owner = {
												dip_tech = 42
											}
											AND = {
												owner = {
													has_country_modifier = india_trade_co
												}
											}
											NOT = {
												has_building = stock_exchange
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 1000
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 22
										}
										set_variable = {
											which = "building_cost"
											value = 1000
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											NOT = {
												has_building = steam_powered_factory
											}
											check_variable = {
												which = urban_pop
												value = 1
											}
											owner = {
												adm_tech = 4
											}
											AND = {
												NOT = {
													has_building = corporation_guild
													has_building = urban_manufactory
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = workshop
											}
										}
									}
									set_variable = {
										which = tempPrevProdValue
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdValue
										value = 0.05
									}
									set_variable = {
										which = tempNewProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 4
											}
										}
										multiply_variable = {
											which = tempNewProdValue
											value = 0.05
										}
										change_variable = {
											which = tempNewProdValue
											value = 3.4
										}
									}
									else = {
										multiply_variable = {
											which = tempNewProdValue
											value = 0.9
										}
									}
									set_variable = {
										which = tempChangeProdValue
										which = tempNewProdValue
									}
									subtract_variable = {
										which = tempChangeProdValue
										which = tempPrevProdValue
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdValue
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdValue
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdValue
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeProdValue
									}
									set_variable = {
										which = tempNewMult
										which = nothing
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeProdValue
											value = 0
										}
										set_variable = {
											which = nothing
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.2
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 200
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdValue
										value = 0
									}
									set_variable = {
										which = tempNewProdValue
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 23
										}
										set_variable = {
											which = "building_cost"
											value = 200
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = workshop
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 5
											}
											owner = {
												adm_tech = 5
											}
											AND = {
												NOT = {
													has_building = urban_manufactory
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = corporation_guild
											}
										}
									}
									set_variable = {
										which = tempPrevProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 4
											}
										}
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.05
										}
										change_variable = {
											which = tempPrevProdValue
											value = 3.4
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.9
										}
									}
									set_variable = {
										which = tempNewProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 8
											}
										}
										multiply_variable = {
											which = tempNewProdValue
											value = 0.1
										}
										change_variable = {
											which = tempNewProdValue
											value = 6.8
										}
									}
									else = {
										multiply_variable = {
											which = tempNewProdValue
											value = 0.95
										}
									}
									set_variable = {
										which = tempChangeProdValue
										which = tempNewProdValue
									}
									subtract_variable = {
										which = tempChangeProdValue
										which = tempPrevProdValue
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdValue
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdValue
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdValue
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeProdValue
									}
									set_variable = {
										which = tempNewMult
										which = nothing
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeProdValue
											value = 0
										}
										set_variable = {
											which = nothing
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdValue
										value = 0
									}
									set_variable = {
										which = tempNewProdValue
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 24
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = corporation_guild
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 9
											}
											owner = {
												adm_tech = 10
											}
											AND = {
												NOT = {
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = urban_manufactory
											}
										}
									}
									set_variable = {
										which = tempPrevProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 8
											}
										}
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.1
										}
										change_variable = {
											which = tempPrevProdValue
											value = 6.8
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.95
										}
									}
									set_variable = {
										which = tempNewProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 16
											}
										}
										multiply_variable = {
											which = tempNewProdValue
											value = 0.2
										}
										change_variable = {
											which = tempNewProdValue
											value = 12.8
										}
									}
									else = {
										multiply_variable = {
											which = tempNewProdValue
											value = 1
										}
									}
									set_variable = {
										which = tempChangeProdValue
										which = tempNewProdValue
									}
									subtract_variable = {
										which = tempChangeProdValue
										which = tempPrevProdValue
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdValue
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdValue
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdValue
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeProdValue
									}
									set_variable = {
										which = tempNewMult
										which = nothing
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeProdValue
											value = 0
										}
										set_variable = {
											which = nothing
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.7
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 400
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdValue
										value = 0
									}
									set_variable = {
										which = tempNewProdValue
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 25
										}
										set_variable = {
											which = "building_cost"
											value = 400
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = urban_manufactory
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 9
											}
											owner = {
												adm_tech = 33
											}
											AND = {
												NOT = {
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = factory
											}
										}
									}
									set_variable = {
										which = tempPrevProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 16
											}
										}
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.2
										}
										change_variable = {
											which = tempPrevProdValue
											value = 12.8
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevProdValue
											value = 1
										}
									}
									set_variable = {
										which = tempNewProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 20
											}
										}
										multiply_variable = {
											which = tempNewProdValue
											value = 0.3
										}
										change_variable = {
											which = tempNewProdValue
											value = 19
										}
									}
									else = {
										multiply_variable = {
											which = tempNewProdValue
											value = 1.25
										}
									}
									set_variable = {
										which = tempChangeProdValue
										which = tempNewProdValue
									}
									subtract_variable = {
										which = tempChangeProdValue
										which = tempPrevProdValue
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdValue
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdValue
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdValue
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeProdValue
									}
									set_variable = {
										which = tempNewMult
										which = nothing
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeProdValue
											value = 0
										}
										set_variable = {
											which = nothing
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdValue
										value = 0
									}
									set_variable = {
										which = tempNewProdValue
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 26
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											OR = {
												has_building = factory
												has_building = warehouse
												has_building = warehouse_district
											}
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 47
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = steam_powered_factory
											}
										}
									}
									set_variable = {
										which = tempPrevProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 20
											}
										}
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.3
										}
										change_variable = {
											which = tempPrevProdValue
											value = 19
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevProdValue
											value = 1.25
										}
									}
									set_variable = {
										which = tempNewProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 20
											}
										}
										multiply_variable = {
											which = tempNewProdValue
											value = 0.5
										}
										change_variable = {
											which = tempNewProdValue
											value = 20
										}
									}
									else = {
										multiply_variable = {
											which = tempNewProdValue
											value = 1.5
										}
									}
									set_variable = {
										which = tempChangeProdValue
										which = tempNewProdValue
									}
									subtract_variable = {
										which = tempChangeProdValue
										which = tempPrevProdValue
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdValue
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdValue
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdValue
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeProdValue
									}
									set_variable = {
										which = tempNewMult
										which = nothing
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeProdValue
											value = 0
										}
										set_variable = {
											which = nothing
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 800
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdValue
										value = 0
									}
									set_variable = {
										which = tempNewProdValue
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 27
										}
										set_variable = {
											which = "building_cost"
											value = 800
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = warehouse_district
												}
											}
											NOT = {
												has_building = warehouse
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.15
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.075
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 28
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = warehouse
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 4
											}
											owner = {
												dip_tech = 10
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = warehouse_district
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.15
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.075
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 250
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 29
										}
										set_variable = {
											which = "building_cost"
											value = 250
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = medium_university
													has_building = big_university
												}
											}
											NOT = {
												has_building = small_university
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 200
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 30
										}
										set_variable = {
											which = "building_cost"
											value = 200
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = small_university
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											check_variable = {
												which = art_power
												value = 5
											}
											AND = {
												NOT = {
													has_building = big_university
												}
											}
											NOT = {
												has_building = medium_university
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 200
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 31
										}
										set_variable = {
											which = "building_cost"
											value = 200
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = medium_university
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											check_variable = {
												which = art_power
												value = 10
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = big_university
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.15
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 32
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												adm_tech = 5
											}
											AND = {
												NOT = {
													has_building = fine_arts_academy
													has_building = opera
												}
											}
											NOT = {
												has_building = art_corporation
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.2
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 250
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 33
										}
										set_variable = {
											which = "building_cost"
											value = 250
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = art_corporation
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 19
												OR = {
													has_idea = patron_of_art
													has_idea = local_traditions
												}
											}
											AND = {
												NOT = {
													has_building = opera
												}
											}
											NOT = {
												has_building = fine_arts_academy
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.2
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 450
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 34
										}
										set_variable = {
											which = "building_cost"
											value = 450
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = fine_arts_academy
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 29
												OR = {
													has_idea = patron_of_art
													has_idea = local_traditions
												}
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = opera
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.2
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 35
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
							}
							if = {
								limit = {
									always = no
								}
								set_variable = {
									which = getBestBuildingCost
									value = 1
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_2
													has_building = rural_infrastructure_3
													has_building = rural_infrastructure_4
													has_building = rural_infrastructure_5
													has_building = rural_infrastructure_6
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_1
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.55
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 1.5
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 15
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 38
										}
										set_variable = {
											which = "building_cost"
											value = 1.5
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 15
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_3
													has_building = rural_infrastructure_4
													has_building = rural_infrastructure_5
													has_building = rural_infrastructure_6
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_2
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 1.55
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 1.55
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.283
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 2.5
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 25
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 39
										}
										set_variable = {
											which = "building_cost"
											value = 2.5
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 25
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_4
													has_building = rural_infrastructure_5
													has_building = rural_infrastructure_6
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_3
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 1.833
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 1.833
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.267
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 4.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 40
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 40
										}
										set_variable = {
											which = "building_cost"
											value = 4.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 40
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_5
													has_building = rural_infrastructure_6
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_4
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 2.1
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 2.1
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.15
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 6.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 60
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 41
										}
										set_variable = {
											which = "building_cost"
											value = 6.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 60
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_6
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_5
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 2.25
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 2.25
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.133
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 8.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 80
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 42
										}
										set_variable = {
											which = "building_cost"
											value = 8.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 80
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_6
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 2.383
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 2.383
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.067
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 12.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 120
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 43
										}
										set_variable = {
											which = "building_cost"
											value = 12.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 120
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												always = yes
											}
											NOT = {
												has_building = rural_infrastructure_7
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 2.45
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 2.45
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.083
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 16.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 160
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 44
										}
										set_variable = {
											which = "building_cost"
											value = 16.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 160
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											always = yes
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0.2
									}
									set_variable = {
										which = State
										which = State
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 45
										}
										set_variable = {
											which = building_cost
											value = 0.1
										}
										multiply_variable = {
											which = building_cost
											which = farm_efficiency_ducats_invested
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											owner = {
												adm_tech = 5
											}
											NOT = {
												has_province_modifier = canal_is_building
											}
											AND = {
												NOT = {
													has_building = canal_level_2
													has_building = canal_level_3
												}
											}
											NOT = {
												has_building = canal_level_1
											}
										}
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0.05
									}
									set_variable = {
										which = nothing0
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = farm_efficiency
									}
									multiply_variable = {
										which = tempPrev
										which = nothing1
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeFarmVal
									}
									set_variable = {
										which = tempNewMult
										which = nothing0
									}
									change_variable = {
										which = tempNewValue
										which = farm_efficiency
									}
									change_variable = {
										which = tempNewMult
										which = nothing1
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseFarm
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseFarm
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseFarm
										value = 1
									}
									divide_variable = {
										which = tempIncreaseFarm
										value = 1.25
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = farm_efficiency
											value = 0
										}
										set_variable = {
											which = nothing1
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeFarmVal
											value = 0
										}
										set_variable = {
											which = nothing0
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeFarm
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeFarm
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeFarm
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseFarm
										which = tempIncomeFarm
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 3
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0.15
									}
									set_variable = {
										which = tempPrevInnateVal
										which = innate_rural_pop_base
									}
									change_variable = {
										which = tempPrevInnateVal
										value = 0
									}
									export_to_variable = {
										which = tempADM
										value = adm_tech
										who = owner
									}
									export_to_variable = {
										which = tempDIP
										value = dip_tech
										who = owner
									}
									set_variable = {
										which = tempPrevInnateMult
										which = tempADM
									}
									change_variable = {
										which = tempPrevInnateMult
										which = tempDIP
									}
									divide_variable = {
										which = tempPrevInnateMult
										value = 150
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 1
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = tempPrevInnateVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeInnateVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeInnateMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevInnateVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseInnate
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseInnate
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseInnate
										value = 1
									}
									divide_variable = {
										which = tempIncreaseInnate
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevInnateVal
											value = 0
										}
										set_variable = {
											which = tempPrevInnateMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeInnateVal
											value = 0
										}
										set_variable = {
											which = tempChangeInnateMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeRural
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeRural
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = wealth_rural_from_pop
									}
									multiply_variable = {
										which = tempIncreaseInnate
										which = tempIncomeRural
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseFarm
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseInnate
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									set_variable = {
										which = building_cost
										which = innate_rural_pop_base
									}
									multiply_variable = {
										which = building_cost
										value = 0.1
									}
									multiply_variable = {
										which = building_cost
										value = 100
									}
									change_variable = {
										which = building_cost
										value = 500
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 0
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										value = 0
									}
									set_variable = {
										which = tempPrevInnateMult
										value = 0
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 0
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										value = 0
									}
									set_variable = {
										which = tempIncreaseFarm
										value = 0
									}
									set_variable = {
										which = tempIncreaseInnate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 60
										}
										set_variable = {
											which = building_cost
											which = innate_rural_pop_base
										}
										multiply_variable = {
											which = building_cost
											value = 0.1
										}
										multiply_variable = {
											which = building_cost
											value = 100
										}
										change_variable = {
											which = building_cost
											value = 500
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = canal_level_1
											owner = {
												adm_tech = 16
											}
											NOT = {
												has_province_modifier = canal_is_building
											}
											AND = {
												NOT = {
													has_building = canal_level_3
												}
											}
											NOT = {
												has_building = canal_level_2
											}
										}
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0.1
									}
									set_variable = {
										which = nothing0
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = farm_efficiency
									}
									multiply_variable = {
										which = tempPrev
										which = nothing1
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeFarmVal
									}
									set_variable = {
										which = tempNewMult
										which = nothing0
									}
									change_variable = {
										which = tempNewValue
										which = farm_efficiency
									}
									change_variable = {
										which = tempNewMult
										which = nothing1
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseFarm
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseFarm
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseFarm
										value = 1
									}
									divide_variable = {
										which = tempIncreaseFarm
										value = 1.25
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = farm_efficiency
											value = 0
										}
										set_variable = {
											which = nothing1
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeFarmVal
											value = 0
										}
										set_variable = {
											which = nothing0
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeFarm
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeFarm
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeFarm
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseFarm
										which = tempIncomeFarm
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 3
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0.1
									}
									set_variable = {
										which = tempPrevInnateVal
										which = innate_rural_pop_base
									}
									change_variable = {
										which = tempPrevInnateVal
										value = 3
									}
									export_to_variable = {
										which = tempADM
										value = adm_tech
										who = owner
									}
									export_to_variable = {
										which = tempDIP
										value = dip_tech
										who = owner
									}
									set_variable = {
										which = tempPrevInnateMult
										which = tempADM
									}
									change_variable = {
										which = tempPrevInnateMult
										which = tempDIP
									}
									divide_variable = {
										which = tempPrevInnateMult
										value = 150
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 1
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 0.15
									}
									set_variable = {
										which = tempPrev
										which = tempPrevInnateVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeInnateVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeInnateMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevInnateVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseInnate
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseInnate
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseInnate
										value = 1
									}
									divide_variable = {
										which = tempIncreaseInnate
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevInnateVal
											value = 0
										}
										set_variable = {
											which = tempPrevInnateMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeInnateVal
											value = 0
										}
										set_variable = {
											which = tempChangeInnateMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeRural
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeRural
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = wealth_rural_from_pop
									}
									multiply_variable = {
										which = tempIncreaseInnate
										which = tempIncomeRural
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseFarm
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseInnate
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									set_variable = {
										which = building_cost
										which = innate_rural_pop_base
									}
									multiply_variable = {
										which = building_cost
										value = 0.1
									}
									multiply_variable = {
										which = building_cost
										value = 150
									}
									change_variable = {
										which = building_cost
										value = 500
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 0
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										value = 0
									}
									set_variable = {
										which = tempPrevInnateMult
										value = 0
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 0
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										value = 0
									}
									set_variable = {
										which = tempIncreaseFarm
										value = 0
									}
									set_variable = {
										which = tempIncreaseInnate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 61
										}
										set_variable = {
											which = building_cost
											which = innate_rural_pop_base
										}
										multiply_variable = {
											which = building_cost
											value = 0.1
										}
										multiply_variable = {
											which = building_cost
											value = 150
										}
										change_variable = {
											which = building_cost
											value = 500
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = canal_level_2
											owner = {
												adm_tech = 40
											}
											NOT = {
												has_province_modifier = canal_is_building
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = canal_level_3
											}
										}
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0.1
									}
									set_variable = {
										which = nothing0
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = farm_efficiency
									}
									multiply_variable = {
										which = tempPrev
										which = nothing1
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeFarmVal
									}
									set_variable = {
										which = tempNewMult
										which = nothing0
									}
									change_variable = {
										which = tempNewValue
										which = farm_efficiency
									}
									change_variable = {
										which = tempNewMult
										which = nothing1
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseFarm
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseFarm
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseFarm
										value = 1
									}
									divide_variable = {
										which = tempIncreaseFarm
										value = 1.25
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = farm_efficiency
											value = 0
										}
										set_variable = {
											which = nothing1
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeFarmVal
											value = 0
										}
										set_variable = {
											which = nothing0
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeFarm
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeFarm
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeFarm
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseFarm
										which = tempIncomeFarm
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 2
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0.1
									}
									set_variable = {
										which = tempPrevInnateVal
										which = innate_rural_pop_base
									}
									change_variable = {
										which = tempPrevInnateVal
										value = 6
									}
									export_to_variable = {
										which = tempADM
										value = adm_tech
										who = owner
									}
									export_to_variable = {
										which = tempDIP
										value = dip_tech
										who = owner
									}
									set_variable = {
										which = tempPrevInnateMult
										which = tempADM
									}
									change_variable = {
										which = tempPrevInnateMult
										which = tempDIP
									}
									divide_variable = {
										which = tempPrevInnateMult
										value = 150
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 1
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = tempPrevInnateVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeInnateVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeInnateMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevInnateVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseInnate
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseInnate
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseInnate
										value = 1
									}
									divide_variable = {
										which = tempIncreaseInnate
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevInnateVal
											value = 0
										}
										set_variable = {
											which = tempPrevInnateMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeInnateVal
											value = 0
										}
										set_variable = {
											which = tempChangeInnateMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeRural
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeRural
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = wealth_rural_from_pop
									}
									multiply_variable = {
										which = tempIncreaseInnate
										which = tempIncomeRural
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseFarm
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseInnate
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									set_variable = {
										which = building_cost
										which = innate_rural_pop_base
									}
									multiply_variable = {
										which = building_cost
										value = 0.1
									}
									multiply_variable = {
										which = building_cost
										value = 200
									}
									change_variable = {
										which = building_cost
										value = 500
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 0
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										value = 0
									}
									set_variable = {
										which = tempPrevInnateMult
										value = 0
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 0
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										value = 0
									}
									set_variable = {
										which = tempIncreaseFarm
										value = 0
									}
									set_variable = {
										which = tempIncreaseInnate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 62
										}
										set_variable = {
											which = building_cost
											which = innate_rural_pop_base
										}
										multiply_variable = {
											which = building_cost
											value = 0.1
										}
										multiply_variable = {
											which = building_cost
											value = 200
										}
										change_variable = {
											which = building_cost
											value = 500
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
							}
							if = {
								limit = {
									always = yes
								}
								set_variable = {
									which = getBestBuildingCost
									value = 1
								}
								if = {
									limit = {
										AND = {
											owner = {
												mil_tech = 3
											}
											AND = {
												NOT = {
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
											NOT = {
												has_building = fort_14th
											}
											NOT = {
												has_province_modifier = fort_is_building
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_building = fort_14th
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = fort_14th
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -10
										}
									}
									else = {
										set_variable = {
											which = tempChangeGravVal
											value = 0.1
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0.1
										}
										set_variable = {
											which = tempPrev
											which = urban_gravity_base
										}
										multiply_variable = {
											which = tempPrev
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNewValue
											which = tempChangeGravVal
										}
										set_variable = {
											which = tempNewMult
											which = tempChangeGravMult
										}
										change_variable = {
											which = tempNewValue
											which = urban_gravity_base
										}
										change_variable = {
											which = tempNewMult
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNew
											which = tempNewValue
										}
										multiply_variable = {
											which = tempNew
											which = tempNewMult
										}
										set_variable = {
											which = tempIncreaseGrav
											which = tempNew
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tempPrev
														value = 0.001
													}
												}
											}
											set_variable = {
												which = tempPrev
												value = 0.001
											}
										}
										divide_variable = {
											which = tempIncreaseGrav
											which = tempPrev
										}
										subtract_variable = {
											which = tempIncreaseGrav
											value = 1
										}
										divide_variable = {
											which = tempIncreaseGrav
											value = 2
										}
										if = {
											limit = {
												always = no
											}
											set_variable = {
												which = urban_gravity_base
												value = 0
											}
											set_variable = {
												which = urban_gravity_percentage
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											set_variable = {
												which = tempChangeGravVal
												value = 0
											}
											set_variable = {
												which = tempChangeGravMult
												value = 0
											}
										}
										set_variable = {
											which = tempPrev
											value = 0
										}
										set_variable = {
											which = tempNewValue
											value = 0
										}
										set_variable = {
											which = tempNewMult
											value = 0
										}
										set_variable = {
											which = tempNew
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											which = wealth_urban_from_pop
										}
										set_variable = {
											which = tmpUrbanTradeState
											which = wealth_urban_from_trade
										}
										multiply_variable = {
											which = tmpUrbanTradeState
											value = 4
										}
										if = {
											limit = {
												check_variable = {
													which = urban_production_power
													value = 0.004
												}
											}
											set_variable = {
												which = statProdUrban
												value = 0
											}
											change_variable = {
												which = statProdUrban
												which = urban_production_power
											}
											if = {
												limit = {
													has_province_flag = urban_goods_rank_3
												}
												multiply_variable = {
													which = statProdUrban
													value = 3.6
												}
											}
											else_if = {
												limit = {
													has_province_flag = urban_goods_rank_2
												}
												multiply_variable = {
													which = statProdUrban
													value = 3
												}
											}
											else = {
												multiply_variable = {
													which = statProdUrban
													value = 2.4
												}
											}
											multiply_variable = {
												which = statProdUrban
												value = 1.2
											}
											multiply_variable = {
												which = statProdUrban
												value = 0.1
											}
										}
										else = {
											set_variable = {
												which = statProdUrban
												value = 0
											}
										}
										set_variable = {
											which = tmpUrbanProdState
											which = statProdUrban
										}
										multiply_variable = {
											which = tmpUrbanProdState
											value = 3
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanTradeState
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanProdState
										}
										set_variable = {
											which = tmpUrbanTradeState
											value = 0
										}
										set_variable = {
											which = tmpUrbanProdState
											value = 0
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = getBestBuildingFood
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = tempIncomeUrban
										}
										set_variable = {
											which = assessBuildingWeight
											which = tempIncreaseGrav
										}
										change_variable = {
											which = assessBuildingWeight
											which = aiWeightFort
										}
										set_variable = {
											which = "building_cost"
											value = 80
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											value = 0
										}
										set_variable = {
											which = tempIncreaseGrav
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 46
										}
										set_variable = {
											which = "building_cost"
											value = 80
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = fort_14th
											owner = {
												mil_tech = 15
											}
											AND = {
												NOT = {
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
											NOT = {
												has_building = fort_15th
											}
											NOT = {
												has_province_modifier = fort_is_building
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_building = fort_14th
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = fort_14th
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -1
										}
									}
									else = {
										set_variable = {
											which = tempChangeGravVal
											value = 0.1
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0.05
										}
										set_variable = {
											which = tempPrev
											which = urban_gravity_base
										}
										multiply_variable = {
											which = tempPrev
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNewValue
											which = tempChangeGravVal
										}
										set_variable = {
											which = tempNewMult
											which = tempChangeGravMult
										}
										change_variable = {
											which = tempNewValue
											which = urban_gravity_base
										}
										change_variable = {
											which = tempNewMult
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNew
											which = tempNewValue
										}
										multiply_variable = {
											which = tempNew
											which = tempNewMult
										}
										set_variable = {
											which = tempIncreaseGrav
											which = tempNew
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tempPrev
														value = 0.001
													}
												}
											}
											set_variable = {
												which = tempPrev
												value = 0.001
											}
										}
										divide_variable = {
											which = tempIncreaseGrav
											which = tempPrev
										}
										subtract_variable = {
											which = tempIncreaseGrav
											value = 1
										}
										divide_variable = {
											which = tempIncreaseGrav
											value = 2
										}
										if = {
											limit = {
												always = no
											}
											set_variable = {
												which = urban_gravity_base
												value = 0
											}
											set_variable = {
												which = urban_gravity_percentage
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											set_variable = {
												which = tempChangeGravVal
												value = 0
											}
											set_variable = {
												which = tempChangeGravMult
												value = 0
											}
										}
										set_variable = {
											which = tempPrev
											value = 0
										}
										set_variable = {
											which = tempNewValue
											value = 0
										}
										set_variable = {
											which = tempNewMult
											value = 0
										}
										set_variable = {
											which = tempNew
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											which = wealth_urban_from_pop
										}
										set_variable = {
											which = tmpUrbanTradeState
											which = wealth_urban_from_trade
										}
										multiply_variable = {
											which = tmpUrbanTradeState
											value = 4
										}
										if = {
											limit = {
												check_variable = {
													which = urban_production_power
													value = 0.004
												}
											}
											set_variable = {
												which = statProdUrban
												value = 0
											}
											change_variable = {
												which = statProdUrban
												which = urban_production_power
											}
											if = {
												limit = {
													has_province_flag = urban_goods_rank_3
												}
												multiply_variable = {
													which = statProdUrban
													value = 3.6
												}
											}
											else_if = {
												limit = {
													has_province_flag = urban_goods_rank_2
												}
												multiply_variable = {
													which = statProdUrban
													value = 3
												}
											}
											else = {
												multiply_variable = {
													which = statProdUrban
													value = 2.4
												}
											}
											multiply_variable = {
												which = statProdUrban
												value = 1.2
											}
											multiply_variable = {
												which = statProdUrban
												value = 0.1
											}
										}
										else = {
											set_variable = {
												which = statProdUrban
												value = 0
											}
										}
										set_variable = {
											which = tmpUrbanProdState
											which = statProdUrban
										}
										multiply_variable = {
											which = tmpUrbanProdState
											value = 3
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanTradeState
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanProdState
										}
										set_variable = {
											which = tmpUrbanTradeState
											value = 0
										}
										set_variable = {
											which = tmpUrbanProdState
											value = 0
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = getBestBuildingFood
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = tempIncomeUrban
										}
										set_variable = {
											which = assessBuildingWeight
											which = tempIncreaseGrav
										}
										change_variable = {
											which = assessBuildingWeight
											which = aiWeightFort
										}
										set_variable = {
											which = "building_cost"
											value = 120
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											value = 0
										}
										set_variable = {
											which = tempIncreaseGrav
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 47
										}
										set_variable = {
											which = "building_cost"
											value = 120
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = fort_15th
											owner = {
												mil_tech = 26
											}
											AND = {
												NOT = {
													has_building = fort_17th
													has_building = fort_18th
												}
											}
											NOT = {
												has_building = fort_16th
											}
											NOT = {
												has_province_modifier = fort_is_building
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_building = fort_14th
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = fort_14th
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -1
										}
									}
									else = {
										set_variable = {
											which = tempChangeGravVal
											value = 0.1
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0.05
										}
										set_variable = {
											which = tempPrev
											which = urban_gravity_base
										}
										multiply_variable = {
											which = tempPrev
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNewValue
											which = tempChangeGravVal
										}
										set_variable = {
											which = tempNewMult
											which = tempChangeGravMult
										}
										change_variable = {
											which = tempNewValue
											which = urban_gravity_base
										}
										change_variable = {
											which = tempNewMult
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNew
											which = tempNewValue
										}
										multiply_variable = {
											which = tempNew
											which = tempNewMult
										}
										set_variable = {
											which = tempIncreaseGrav
											which = tempNew
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tempPrev
														value = 0.001
													}
												}
											}
											set_variable = {
												which = tempPrev
												value = 0.001
											}
										}
										divide_variable = {
											which = tempIncreaseGrav
											which = tempPrev
										}
										subtract_variable = {
											which = tempIncreaseGrav
											value = 1
										}
										divide_variable = {
											which = tempIncreaseGrav
											value = 2
										}
										if = {
											limit = {
												always = no
											}
											set_variable = {
												which = urban_gravity_base
												value = 0
											}
											set_variable = {
												which = urban_gravity_percentage
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											set_variable = {
												which = tempChangeGravVal
												value = 0
											}
											set_variable = {
												which = tempChangeGravMult
												value = 0
											}
										}
										set_variable = {
											which = tempPrev
											value = 0
										}
										set_variable = {
											which = tempNewValue
											value = 0
										}
										set_variable = {
											which = tempNewMult
											value = 0
										}
										set_variable = {
											which = tempNew
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											which = wealth_urban_from_pop
										}
										set_variable = {
											which = tmpUrbanTradeState
											which = wealth_urban_from_trade
										}
										multiply_variable = {
											which = tmpUrbanTradeState
											value = 4
										}
										if = {
											limit = {
												check_variable = {
													which = urban_production_power
													value = 0.004
												}
											}
											set_variable = {
												which = statProdUrban
												value = 0
											}
											change_variable = {
												which = statProdUrban
												which = urban_production_power
											}
											if = {
												limit = {
													has_province_flag = urban_goods_rank_3
												}
												multiply_variable = {
													which = statProdUrban
													value = 3.6
												}
											}
											else_if = {
												limit = {
													has_province_flag = urban_goods_rank_2
												}
												multiply_variable = {
													which = statProdUrban
													value = 3
												}
											}
											else = {
												multiply_variable = {
													which = statProdUrban
													value = 2.4
												}
											}
											multiply_variable = {
												which = statProdUrban
												value = 1.2
											}
											multiply_variable = {
												which = statProdUrban
												value = 0.1
											}
										}
										else = {
											set_variable = {
												which = statProdUrban
												value = 0
											}
										}
										set_variable = {
											which = tmpUrbanProdState
											which = statProdUrban
										}
										multiply_variable = {
											which = tmpUrbanProdState
											value = 3
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanTradeState
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanProdState
										}
										set_variable = {
											which = tmpUrbanTradeState
											value = 0
										}
										set_variable = {
											which = tmpUrbanProdState
											value = 0
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = getBestBuildingFood
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = tempIncomeUrban
										}
										set_variable = {
											which = assessBuildingWeight
											which = tempIncreaseGrav
										}
										change_variable = {
											which = assessBuildingWeight
											which = aiWeightFort
										}
										set_variable = {
											which = "building_cost"
											value = 180
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											value = 0
										}
										set_variable = {
											which = tempIncreaseGrav
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 48
										}
										set_variable = {
											which = "building_cost"
											value = 180
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = fort_16th
											owner = {
												mil_tech = 35
											}
											AND = {
												NOT = {
													has_building = fort_18th
												}
											}
											NOT = {
												has_building = fort_17th
											}
											NOT = {
												has_province_modifier = fort_is_building
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_building = fort_14th
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = fort_14th
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -1
										}
									}
									else = {
										set_variable = {
											which = tempChangeGravVal
											value = 0.1
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0.05
										}
										set_variable = {
											which = tempPrev
											which = urban_gravity_base
										}
										multiply_variable = {
											which = tempPrev
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNewValue
											which = tempChangeGravVal
										}
										set_variable = {
											which = tempNewMult
											which = tempChangeGravMult
										}
										change_variable = {
											which = tempNewValue
											which = urban_gravity_base
										}
										change_variable = {
											which = tempNewMult
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNew
											which = tempNewValue
										}
										multiply_variable = {
											which = tempNew
											which = tempNewMult
										}
										set_variable = {
											which = tempIncreaseGrav
											which = tempNew
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tempPrev
														value = 0.001
													}
												}
											}
											set_variable = {
												which = tempPrev
												value = 0.001
											}
										}
										divide_variable = {
											which = tempIncreaseGrav
											which = tempPrev
										}
										subtract_variable = {
											which = tempIncreaseGrav
											value = 1
										}
										divide_variable = {
											which = tempIncreaseGrav
											value = 2
										}
										if = {
											limit = {
												always = no
											}
											set_variable = {
												which = urban_gravity_base
												value = 0
											}
											set_variable = {
												which = urban_gravity_percentage
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											set_variable = {
												which = tempChangeGravVal
												value = 0
											}
											set_variable = {
												which = tempChangeGravMult
												value = 0
											}
										}
										set_variable = {
											which = tempPrev
											value = 0
										}
										set_variable = {
											which = tempNewValue
											value = 0
										}
										set_variable = {
											which = tempNewMult
											value = 0
										}
										set_variable = {
											which = tempNew
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											which = wealth_urban_from_pop
										}
										set_variable = {
											which = tmpUrbanTradeState
											which = wealth_urban_from_trade
										}
										multiply_variable = {
											which = tmpUrbanTradeState
											value = 4
										}
										if = {
											limit = {
												check_variable = {
													which = urban_production_power
													value = 0.004
												}
											}
											set_variable = {
												which = statProdUrban
												value = 0
											}
											change_variable = {
												which = statProdUrban
												which = urban_production_power
											}
											if = {
												limit = {
													has_province_flag = urban_goods_rank_3
												}
												multiply_variable = {
													which = statProdUrban
													value = 3.6
												}
											}
											else_if = {
												limit = {
													has_province_flag = urban_goods_rank_2
												}
												multiply_variable = {
													which = statProdUrban
													value = 3
												}
											}
											else = {
												multiply_variable = {
													which = statProdUrban
													value = 2.4
												}
											}
											multiply_variable = {
												which = statProdUrban
												value = 1.2
											}
											multiply_variable = {
												which = statProdUrban
												value = 0.1
											}
										}
										else = {
											set_variable = {
												which = statProdUrban
												value = 0
											}
										}
										set_variable = {
											which = tmpUrbanProdState
											which = statProdUrban
										}
										multiply_variable = {
											which = tmpUrbanProdState
											value = 3
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanTradeState
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanProdState
										}
										set_variable = {
											which = tmpUrbanTradeState
											value = 0
										}
										set_variable = {
											which = tmpUrbanProdState
											value = 0
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = getBestBuildingFood
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = tempIncomeUrban
										}
										set_variable = {
											which = assessBuildingWeight
											which = tempIncreaseGrav
										}
										change_variable = {
											which = assessBuildingWeight
											which = aiWeightFort
										}
										set_variable = {
											which = "building_cost"
											value = 260
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											value = 0
										}
										set_variable = {
											which = tempIncreaseGrav
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 49
										}
										set_variable = {
											which = "building_cost"
											value = 260
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = fort_17th
											owner = {
												mil_tech = 41
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = fort_18th
											}
											NOT = {
												has_province_modifier = fort_is_building
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_building = fort_14th
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = fort_14th
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -1
										}
									}
									else = {
										set_variable = {
											which = tempChangeGravVal
											value = 0.1
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0.05
										}
										set_variable = {
											which = tempPrev
											which = urban_gravity_base
										}
										multiply_variable = {
											which = tempPrev
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNewValue
											which = tempChangeGravVal
										}
										set_variable = {
											which = tempNewMult
											which = tempChangeGravMult
										}
										change_variable = {
											which = tempNewValue
											which = urban_gravity_base
										}
										change_variable = {
											which = tempNewMult
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNew
											which = tempNewValue
										}
										multiply_variable = {
											which = tempNew
											which = tempNewMult
										}
										set_variable = {
											which = tempIncreaseGrav
											which = tempNew
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tempPrev
														value = 0.001
													}
												}
											}
											set_variable = {
												which = tempPrev
												value = 0.001
											}
										}
										divide_variable = {
											which = tempIncreaseGrav
											which = tempPrev
										}
										subtract_variable = {
											which = tempIncreaseGrav
											value = 1
										}
										divide_variable = {
											which = tempIncreaseGrav
											value = 2
										}
										if = {
											limit = {
												always = no
											}
											set_variable = {
												which = urban_gravity_base
												value = 0
											}
											set_variable = {
												which = urban_gravity_percentage
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											set_variable = {
												which = tempChangeGravVal
												value = 0
											}
											set_variable = {
												which = tempChangeGravMult
												value = 0
											}
										}
										set_variable = {
											which = tempPrev
											value = 0
										}
										set_variable = {
											which = tempNewValue
											value = 0
										}
										set_variable = {
											which = tempNewMult
											value = 0
										}
										set_variable = {
											which = tempNew
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											which = wealth_urban_from_pop
										}
										set_variable = {
											which = tmpUrbanTradeState
											which = wealth_urban_from_trade
										}
										multiply_variable = {
											which = tmpUrbanTradeState
											value = 4
										}
										if = {
											limit = {
												check_variable = {
													which = urban_production_power
													value = 0.004
												}
											}
											set_variable = {
												which = statProdUrban
												value = 0
											}
											change_variable = {
												which = statProdUrban
												which = urban_production_power
											}
											if = {
												limit = {
													has_province_flag = urban_goods_rank_3
												}
												multiply_variable = {
													which = statProdUrban
													value = 3.6
												}
											}
											else_if = {
												limit = {
													has_province_flag = urban_goods_rank_2
												}
												multiply_variable = {
													which = statProdUrban
													value = 3
												}
											}
											else = {
												multiply_variable = {
													which = statProdUrban
													value = 2.4
												}
											}
											multiply_variable = {
												which = statProdUrban
												value = 1.2
											}
											multiply_variable = {
												which = statProdUrban
												value = 0.1
											}
										}
										else = {
											set_variable = {
												which = statProdUrban
												value = 0
											}
										}
										set_variable = {
											which = tmpUrbanProdState
											which = statProdUrban
										}
										multiply_variable = {
											which = tmpUrbanProdState
											value = 3
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanTradeState
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanProdState
										}
										set_variable = {
											which = tmpUrbanTradeState
											value = 0
										}
										set_variable = {
											which = tmpUrbanProdState
											value = 0
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = getBestBuildingFood
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = tempIncomeUrban
										}
										set_variable = {
											which = assessBuildingWeight
											which = tempIncreaseGrav
										}
										change_variable = {
											which = assessBuildingWeight
											which = aiWeightFort
										}
										set_variable = {
											which = "building_cost"
											value = 360
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											value = 0
										}
										set_variable = {
											which = tempIncreaseGrav
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 50
										}
										set_variable = {
											which = "building_cost"
											value = 360
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = paved_road_network
													has_building = highway_network
													has_building = road_and_rail_network
												}
											}
											NOT = {
												has_building = road_network
											}
											NOT = {
												has_province_modifier = road_is_building
											}
										}
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.05
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.2
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightRoad
									}
									set_variable = {
										which = "building_cost"
										value = 80
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									change_variable = {
										which = road_price_multiplier
										which = urban_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 2
									}
									change_variable = {
										which = road_price_multiplier
										which = rural_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 0.01
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										which = prov_radius
									}
									divide_variable = {
										which = road_province_size_multiplier
										value = 2.5
									}
									set_variable = {
										which = road_price_total_mult
										value = 1
									}
									change_variable = {
										which = road_price_total_mult
										which = road_price_multiplier
									}
									change_variable = {
										which = road_price_total_mult
										which = road_terrain_cost
									}
									change_variable = {
										which = road_price_total_mult
										which = road_province_size_multiplier
									}
									multiply_variable = {
										which = building_cost
										which = road_price_total_mult
									}
									multiply_variable = {
										which = building_cost
										value = 0.001
									}
									multiply_variable = {
										which = building_cost
										value = 1000
									}
									set_variable = {
										which = road_price_total_mult
										value = 0
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 51
										}
										set_variable = {
											which = "building_cost"
											value = 80
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										change_variable = {
											which = road_price_multiplier
											which = urban_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 2
										}
										change_variable = {
											which = road_price_multiplier
											which = rural_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 0.01
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											which = prov_radius
										}
										divide_variable = {
											which = road_province_size_multiplier
											value = 2.5
										}
										set_variable = {
											which = road_price_total_mult
											value = 1
										}
										change_variable = {
											which = road_price_total_mult
											which = road_price_multiplier
										}
										change_variable = {
											which = road_price_total_mult
											which = road_terrain_cost
										}
										change_variable = {
											which = road_price_total_mult
											which = road_province_size_multiplier
										}
										multiply_variable = {
											which = building_cost
											which = road_price_total_mult
										}
										multiply_variable = {
											which = building_cost
											value = 0.001
										}
										multiply_variable = {
											which = building_cost
											value = 1000
										}
										set_variable = {
											which = road_price_total_mult
											value = 0
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = road_network
											owner = {
												dip_tech = 13
											}
											AND = {
												NOT = {
													has_building = highway_network
													has_building = road_and_rail_network
												}
											}
											NOT = {
												has_building = paved_road_network
											}
											NOT = {
												has_province_modifier = road_is_building
											}
										}
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.05
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightRoad
									}
									set_variable = {
										which = "building_cost"
										value = 120
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									change_variable = {
										which = road_price_multiplier
										which = urban_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 2
									}
									change_variable = {
										which = road_price_multiplier
										which = rural_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 0.01
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										which = prov_radius
									}
									divide_variable = {
										which = road_province_size_multiplier
										value = 2.5
									}
									set_variable = {
										which = road_price_total_mult
										value = 1
									}
									change_variable = {
										which = road_price_total_mult
										which = road_price_multiplier
									}
									change_variable = {
										which = road_price_total_mult
										which = road_terrain_cost
									}
									change_variable = {
										which = road_price_total_mult
										which = road_province_size_multiplier
									}
									multiply_variable = {
										which = building_cost
										which = road_price_total_mult
									}
									multiply_variable = {
										which = building_cost
										value = 0.001
									}
									multiply_variable = {
										which = building_cost
										value = 1000
									}
									set_variable = {
										which = road_price_total_mult
										value = 0
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 52
										}
										set_variable = {
											which = "building_cost"
											value = 120
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										change_variable = {
											which = road_price_multiplier
											which = urban_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 2
										}
										change_variable = {
											which = road_price_multiplier
											which = rural_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 0.01
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											which = prov_radius
										}
										divide_variable = {
											which = road_province_size_multiplier
											value = 2.5
										}
										set_variable = {
											which = road_price_total_mult
											value = 1
										}
										change_variable = {
											which = road_price_total_mult
											which = road_price_multiplier
										}
										change_variable = {
											which = road_price_total_mult
											which = road_terrain_cost
										}
										change_variable = {
											which = road_price_total_mult
											which = road_province_size_multiplier
										}
										multiply_variable = {
											which = building_cost
											which = road_price_total_mult
										}
										multiply_variable = {
											which = building_cost
											value = 0.001
										}
										multiply_variable = {
											which = building_cost
											value = 1000
										}
										set_variable = {
											which = road_price_total_mult
											value = 0
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = paved_road_network
											owner = {
												dip_tech = 33
											}
											AND = {
												NOT = {
													has_building = road_and_rail_network
												}
											}
											NOT = {
												has_building = highway_network
											}
											NOT = {
												has_province_modifier = road_is_building
											}
										}
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.05
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.15
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightRoad
									}
									set_variable = {
										which = "building_cost"
										value = 180
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									change_variable = {
										which = road_price_multiplier
										which = urban_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 2
									}
									change_variable = {
										which = road_price_multiplier
										which = rural_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 0.01
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										which = prov_radius
									}
									divide_variable = {
										which = road_province_size_multiplier
										value = 2.5
									}
									set_variable = {
										which = road_price_total_mult
										value = 1
									}
									change_variable = {
										which = road_price_total_mult
										which = road_price_multiplier
									}
									change_variable = {
										which = road_price_total_mult
										which = road_terrain_cost
									}
									change_variable = {
										which = road_price_total_mult
										which = road_province_size_multiplier
									}
									multiply_variable = {
										which = building_cost
										which = road_price_total_mult
									}
									multiply_variable = {
										which = building_cost
										value = 0.001
									}
									multiply_variable = {
										which = building_cost
										value = 1000
									}
									set_variable = {
										which = road_price_total_mult
										value = 0
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 53
										}
										set_variable = {
											which = "building_cost"
											value = 180
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										change_variable = {
											which = road_price_multiplier
											which = urban_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 2
										}
										change_variable = {
											which = road_price_multiplier
											which = rural_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 0.01
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											which = prov_radius
										}
										divide_variable = {
											which = road_province_size_multiplier
											value = 2.5
										}
										set_variable = {
											which = road_price_total_mult
											value = 1
										}
										change_variable = {
											which = road_price_total_mult
											which = road_price_multiplier
										}
										change_variable = {
											which = road_price_total_mult
											which = road_terrain_cost
										}
										change_variable = {
											which = road_price_total_mult
											which = road_province_size_multiplier
										}
										multiply_variable = {
											which = building_cost
											which = road_price_total_mult
										}
										multiply_variable = {
											which = building_cost
											value = 0.001
										}
										multiply_variable = {
											which = building_cost
											value = 1000
										}
										set_variable = {
											which = road_price_total_mult
											value = 0
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = highway_network
											owner = {
												dip_tech = 50
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = road_and_rail_network
											}
											NOT = {
												has_province_modifier = road_is_building
											}
										}
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.25
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.15
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightRoad
									}
									set_variable = {
										which = "building_cost"
										value = 250
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									change_variable = {
										which = road_price_multiplier
										which = urban_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 2
									}
									change_variable = {
										which = road_price_multiplier
										which = rural_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 0.01
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										which = prov_radius
									}
									divide_variable = {
										which = road_province_size_multiplier
										value = 2.5
									}
									set_variable = {
										which = road_price_total_mult
										value = 1
									}
									change_variable = {
										which = road_price_total_mult
										which = road_price_multiplier
									}
									change_variable = {
										which = road_price_total_mult
										which = road_terrain_cost
									}
									change_variable = {
										which = road_price_total_mult
										which = road_province_size_multiplier
									}
									multiply_variable = {
										which = building_cost
										which = road_price_total_mult
									}
									multiply_variable = {
										which = building_cost
										value = 0.001
									}
									multiply_variable = {
										which = building_cost
										value = 1000
									}
									set_variable = {
										which = road_price_total_mult
										value = 0
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 54
										}
										set_variable = {
											which = "building_cost"
											value = 250
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										change_variable = {
											which = road_price_multiplier
											which = urban_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 2
										}
										change_variable = {
											which = road_price_multiplier
											which = rural_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 0.01
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											which = prov_radius
										}
										divide_variable = {
											which = road_province_size_multiplier
											value = 2.5
										}
										set_variable = {
											which = road_price_total_mult
											value = 1
										}
										change_variable = {
											which = road_price_total_mult
											which = road_price_multiplier
										}
										change_variable = {
											which = road_price_total_mult
											which = road_terrain_cost
										}
										change_variable = {
											which = road_price_total_mult
											which = road_province_size_multiplier
										}
										multiply_variable = {
											which = building_cost
											which = road_price_total_mult
										}
										multiply_variable = {
											which = building_cost
											value = 0.001
										}
										multiply_variable = {
											which = building_cost
											value = 1000
										}
										set_variable = {
											which = road_price_total_mult
											value = 0
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 2
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = bureaucracy_2
													has_building = bureaucracy_3
													has_building = bureaucracy_4
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_1
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = -0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightBureau
									}
									set_variable = {
										which = "building_cost"
										value = 1500
									}
									set_variable = {
										which = capital_num
										which = owner
									}
									multiply_variable = {
										which = capital_num
										value = 500
									}
									change_variable = {
										which = building_cost
										which = capital_num
									}
									set_variable = {
										which = capital_num
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 55
										}
										set_variable = {
											which = "building_cost"
											value = 1500
										}
										set_variable = {
											which = capital_num
											which = owner
										}
										multiply_variable = {
											which = capital_num
											value = 500
										}
										change_variable = {
											which = building_cost
											which = capital_num
										}
										set_variable = {
											which = capital_num
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 4
											}
											has_building = bureaucracy_1
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = bureaucracy_3
													has_building = bureaucracy_4
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_2
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = -0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightBureau
									}
									set_variable = {
										which = "building_cost"
										value = 2500
									}
									set_variable = {
										which = capital_num
										which = owner
									}
									multiply_variable = {
										which = capital_num
										value = 500
									}
									change_variable = {
										which = building_cost
										which = capital_num
									}
									set_variable = {
										which = capital_num
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 56
										}
										set_variable = {
											which = "building_cost"
											value = 2500
										}
										set_variable = {
											which = capital_num
											which = owner
										}
										multiply_variable = {
											which = capital_num
											value = 500
										}
										change_variable = {
											which = building_cost
											which = capital_num
										}
										set_variable = {
											which = capital_num
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 6
											}
											has_building = bureaucracy_2
											owner = {
												adm_tech = 14
											}
											AND = {
												NOT = {
													has_building = bureaucracy_4
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_3
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = -0.05
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.15
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightBureau
									}
									set_variable = {
										which = "building_cost"
										value = 4000
									}
									set_variable = {
										which = capital_num
										which = owner
									}
									multiply_variable = {
										which = capital_num
										value = 500
									}
									change_variable = {
										which = building_cost
										which = capital_num
									}
									set_variable = {
										which = capital_num
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 57
										}
										set_variable = {
											which = "building_cost"
											value = 4000
										}
										set_variable = {
											which = capital_num
											which = owner
										}
										multiply_variable = {
											which = capital_num
											value = 500
										}
										change_variable = {
											which = building_cost
											which = capital_num
										}
										set_variable = {
											which = capital_num
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 8
											}
											has_building = bureaucracy_3
											owner = {
												adm_tech = 14
											}
											AND = {
												NOT = {
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_4
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = -0.05
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightBureau
									}
									set_variable = {
										which = "building_cost"
										value = 7000
									}
									set_variable = {
										which = capital_num
										which = owner
									}
									multiply_variable = {
										which = capital_num
										value = 500
									}
									change_variable = {
										which = building_cost
										which = capital_num
									}
									set_variable = {
										which = capital_num
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 58
										}
										set_variable = {
											which = "building_cost"
											value = 7000
										}
										set_variable = {
											which = capital_num
											which = owner
										}
										multiply_variable = {
											which = capital_num
											value = 500
										}
										change_variable = {
											which = building_cost
											which = capital_num
										}
										set_variable = {
											which = capital_num
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 10
											}
											has_building = bureaucracy_4
											owner = {
												adm_tech = 23
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = bureaucracy_5
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = -0.05
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightBureau
									}
									set_variable = {
										which = "building_cost"
										value = 15000
									}
									set_variable = {
										which = capital_num
										which = owner
									}
									multiply_variable = {
										which = capital_num
										value = 500
									}
									change_variable = {
										which = building_cost
										which = capital_num
									}
									set_variable = {
										which = capital_num
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 59
										}
										set_variable = {
											which = "building_cost"
											value = 15000
										}
										set_variable = {
											which = capital_num
											which = owner
										}
										multiply_variable = {
											which = capital_num
											value = 500
										}
										change_variable = {
											which = building_cost
											which = capital_num
										}
										set_variable = {
											which = capital_num
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								export_to_variable = {
									which = getBestBuildingCost
									value = modifier:local_build_cost
								}
								export_to_variable = {
									which = getBestBuildingCostOwner
									value = modifier:build_cost
									who = owner
								}
								change_variable = {
									which = getBestBuildingCost
									value = 1
								}
								change_variable = {
									which = getBestBuildingCost
									which = getBestBuildingCostOwner
								}
								if = {
									limit = {
										AND = {
											AND = {
												has_province_flag = infra_calc_done
												has_port = yes
												owner = {
													dip_tech = 1
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_2
														has_building = harbour_infrastructure_3x
														has_building = harbour_infrastructure_4
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_1
												}
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_province_flag = has_great_natural_harbour
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = harbour_infrastructure_2
													has_province_flag = large_port_present
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -1
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.05
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightPort
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 63
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												has_building = harbour_infrastructure_1
												has_province_flag = infra_calc_done
												NOT = {
													has_province_modifier = lack_of_harbour
												}
												owner = {
													dip_tech = 4
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_3x
														has_building = harbour_infrastructure_4
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_2
												}
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_province_flag = has_great_natural_harbour
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = harbour_infrastructure_2
													has_province_flag = large_port_present
												}
											}
										}
										set_variable = {
											which = aiWeightPort
											value = 0
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.15
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.2
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightPort
									}
									set_variable = {
										which = "building_cost"
										value = 225
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 64
										}
										set_variable = {
											which = "building_cost"
											value = 225
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												has_building = harbour_infrastructure_2
												has_province_flag = infra_calc_done
												AND = {
													OR = {
														has_building = town_hall
														has_building = urban_infrastructure_1
														has_building = urban_infrastructure_2
														has_building = urban_infrastructure_3
														has_building = urban_infrastructure_4
														has_building = urban_infrastructure_5
													}
												}
												NOT = {
													has_province_modifier = lack_of_harbour
												}
												NOT = {
													has_province_flag = has_delta_estuary
												}
												owner = {
													dip_tech = 6
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_4
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_3x
												}
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.05
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightPort
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 65
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												has_building = harbour_infrastructure_3x
												has_province_flag = infra_calc_done
												AND = {
													OR = {
														has_building = urban_infrastructure_1
														has_building = urban_infrastructure_2
														has_building = urban_infrastructure_3
														has_building = urban_infrastructure_4
														has_building = urban_infrastructure_5
													}
												}
												NOT = {
													has_province_modifier = lack_of_harbour
												}
												NOT = {
													has_province_flag = has_delta_estuary
												}
												owner = {
													dip_tech = 22
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_4
												}
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.05
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightPort
									}
									set_variable = {
										which = "building_cost"
										value = 450
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 66
										}
										set_variable = {
											which = "building_cost"
											value = 450
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												has_building = harbour_infrastructure_4
												has_province_flag = infra_calc_done
												AND = {
													OR = {
														has_building = urban_infrastructure_2
														has_building = urban_infrastructure_3
														has_building = urban_infrastructure_4
														has_building = urban_infrastructure_5
													}
												}
												NOT = {
													has_building = military_harbour_4
												}
												has_province_flag = has_natural_harbour
												owner = {
													dip_tech = 40
												}
												AND = {
													NOT = {
														has_building = military_harbour_4
													}
												}
												NOT = {
													has_building = harbour_infrastructure_5
												}
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.2
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightPort
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 67
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_province_flag = infra_calc_done
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											owner = {
												dip_tech = 3
											}
											AND = {
												NOT = {
													has_building = military_harbour_2
													has_building = military_harbour_3
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = military_harbour_1
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.025
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightShipyard
									}
									set_variable = {
										which = "building_cost"
										value = 250
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 68
										}
										set_variable = {
											which = "building_cost"
											value = 250
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_building = military_harbour_1
											has_province_flag = infra_calc_done
											has_province_flag = has_natural_harbour
											owner = {
												dip_tech = 6
											}
											AND = {
												NOT = {
													has_building = military_harbour_3
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = military_harbour_2
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.025
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightShipyard
									}
									set_variable = {
										which = "building_cost"
										value = 250
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 69
										}
										set_variable = {
											which = "building_cost"
											value = 250
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_building = military_harbour_2
											has_province_flag = infra_calc_done
											has_province_flag = has_natural_harbour
											owner = {
												dip_tech = 19
											}
											AND = {
												NOT = {
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = military_harbour_3
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.025
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightShipyard
									}
									set_variable = {
										which = "building_cost"
										value = 500
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 70
										}
										set_variable = {
											which = "building_cost"
											value = 500
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_building = military_harbour_3
											has_province_flag = infra_calc_done
											NOT = {
												has_building = harbour_infrastructure_5
											}
											has_province_flag = has_great_natural_harbour
											owner = {
												dip_tech = 40
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = military_harbour_4
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.025
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightShipyard
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 71
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
							}
							set_variable = {
								which = aiDoSpendingInd
								which = getBestBuildingBuildInd
							}
							set_variable = {
								which = aiDoSpendingPrice
								which = getBestBuildingBuildPrice
							}
							set_variable = {
								which = aiDoSpendingWeight
								which = getBestBuildingWeight
							}
							set_variable = {
								which = getBestBuildingWeight
								value = 0
							}
							set_variable = {
								which = getBestBuildingBuildInd
								value = 0
							}
							set_variable = {
								which = getBestBuildingBuildPrice
								value = 0
							}
							set_variable = {
								which = getBestBuildingFood
								value = 0
							}
							set_variable = {
								which = getBestBuildingCost
								value = 0
							}
							set_variable = {
								which = getBestBuildingCostOwner
								value = 0
							}
							set_variable = {
								which = getBestBuildingBudget
								value = 0
							}
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = aiDoSpendingInd
										value = 38
									}
								}
							}
							export_to_variable = {
								which = aiDoSpendingLA
								value = local_autonomy
							}
							multiply_variable = {
								which = aiDoSpendingLA
								value = 0.006
							}
							subtract_variable = {
								which = aiDoSpendingLA
								value = 1
							}
							multiply_variable = {
								which = aiDoSpendingLA
								value = -1
							}
							multiply_variable = {
								which = aiDoSpendingWeight
								which = aiDoSpendingLA
							}
							set_variable = {
								which = aiDoSpendingLA
								value = 0
							}
						}
					}
				}
				else = {
					every_owned_province = {
						limit = {
							is_city = yes
						}
						set_variable = {
							which = check
							value = 1
						}
						owner = {
							export_to_variable = {
								which = aiDoSpendingTreasury
								value = treasury
							}
							export_to_variable = {
								which = aiTreasuryVanillaLimit
								value = monthly_income
							}
							multiply_variable = {
								which = aiTreasuryVanillaLimit
								value = 3
							}
							change_variable = {
								which = aiTreasuryVanillaLimit
								value = 200
							}
							if = {
								limit = {
									has_country_flag = aiHasActionWarchest
								}
								multiply_variable = {
									which = aiTreasuryVanillaLimit
									value = 2
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = aiDoSpendingTreasury
											which = aiTreasuryVanillaLimit
										}
									}
								}
								set_variable = {
									which = aiDoSpendingTreasury
									value = 0
								}
							}
							else = {
								subtract_variable = {
									which = aiDoSpendingTreasury
									which = aiTreasuryVanillaLimit
								}
							}
							change_variable = {
								which = aiDoSpendingTreasury
								which = aiTreasuryGeneral
							}
							PREV = {
								set_variable = {
									which = aiDoSpendingTreasury
									which = PREV
								}
							}
							if = {
								limit = {
									NOT = {
										is_variable_equal = {
											which = check
											value = 1
										}
									}
								}
								set_variable = {
									which = aiDoSpendingTreasury
									value = 0
								}
							}
							set_variable = {
								which = aiTreasuryVanillaLimit
								value = 0
							}
						}
						set_variable = {
							which = check
							value = 0
						}
						if = {
							limit = {
								AND = {
									is_city = yes
									has_province_flag = infra_calc_done
									OR = {
										AND = {
											has_province_flag = mined_goods
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_2
													has_building = mines_3
													has_building = mines_4
													has_building = mines_5
												}
											}
											NOT = {
												has_building = mines_1
											}
										}
										AND = {
											has_building = mines_1
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_3
													has_building = mines_4
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 6
											}
											NOT = {
												has_building = mines_2
											}
										}
										AND = {
											has_building = mines_2
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_4
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 11
											}
											NOT = {
												has_building = mines_3
											}
										}
										AND = {
											has_building = mines_3
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 22
											}
											NOT = {
												has_building = mines_4
											}
										}
										AND = {
											has_building = mines_4
											has_province_flag = infra_calc_done
											AND = {
												always = yes
											}
											owner = {
												adm_tech = 37
											}
											NOT = {
												has_building = mines_5
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = town_hall
											}
										}
										AND = {
											has_building = town_hall
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 0.5
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_1
											}
										}
										AND = {
											has_building = urban_infrastructure_1
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 1.5
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_2
											}
										}
										AND = {
											has_building = urban_infrastructure_2
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 3
											}
											owner = {
												adm_tech = 7
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_3
											}
										}
										AND = {
											has_building = urban_infrastructure_3
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 5
											}
											owner = {
												adm_tech = 18
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_4
											}
										}
										AND = {
											has_building = urban_infrastructure_4
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 8
											}
											owner = {
												adm_tech = 27
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = urban_infrastructure_5
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											has_port = yes
											owner = {
												dip_tech = 1
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_1
											}
										}
										AND = {
											has_building = harbour_infrastructure_1
											has_province_flag = infra_calc_done
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_2
											}
										}
										AND = {
											has_building = harbour_infrastructure_2
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = town_hall
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											NOT = {
												has_province_flag = has_delta_estuary
											}
											owner = {
												dip_tech = 6
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_3x
											}
										}
										AND = {
											has_building = harbour_infrastructure_3x
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											NOT = {
												has_province_flag = has_delta_estuary
											}
											owner = {
												dip_tech = 22
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_4
											}
										}
										AND = {
											has_building = harbour_infrastructure_4
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = military_harbour_4
											}
											has_province_flag = has_natural_harbour
											owner = {
												dip_tech = 40
											}
											AND = {
												NOT = {
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = harbour_infrastructure_5
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = merchant_guild
													has_building = trade_depot
													has_building = customs_house
												}
											}
											NOT = {
												has_building = marketplace
											}
										}
										AND = {
											has_building = marketplace
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 1
											}
											owner = {
												dip_tech = 5
											}
											AND = {
												NOT = {
													has_building = trade_depot
													has_building = customs_house
												}
											}
											NOT = {
												has_building = merchant_guild
											}
										}
										AND = {
											has_building = merchant_guild
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 2
											}
											owner = {
												dip_tech = 13
											}
											AND = {
												NOT = {
													has_building = customs_house
												}
											}
											NOT = {
												has_building = trade_depot
											}
										}
										AND = {
											has_building = trade_depot
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 3
											}
											owner = {
												dip_tech = 22
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = customs_house
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 4
											}
											AND = {
												OR = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												has_idea_group = trade_ideas
											}
											owner = {
												dip_tech = 23
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = bank
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 8
											}
											has_building = bank
											AND = {
												OR = {
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												has_idea_group = trade_ideas
											}
											owner = {
												dip_tech = 42
											}
											AND = {
												owner = {
													has_country_modifier = india_trade_co
												}
											}
											NOT = {
												has_building = stock_exchange
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											NOT = {
												has_building = steam_powered_factory
											}
											check_variable = {
												which = urban_pop
												value = 1
											}
											owner = {
												adm_tech = 4
											}
											AND = {
												NOT = {
													has_building = corporation_guild
													has_building = urban_manufactory
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = workshop
											}
										}
										AND = {
											has_building = workshop
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 5
											}
											owner = {
												adm_tech = 5
											}
											AND = {
												NOT = {
													has_building = urban_manufactory
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = corporation_guild
											}
										}
										AND = {
											has_building = corporation_guild
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 9
											}
											owner = {
												adm_tech = 10
											}
											AND = {
												NOT = {
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = urban_manufactory
											}
										}
										AND = {
											has_building = urban_manufactory
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 9
											}
											owner = {
												adm_tech = 33
											}
											AND = {
												NOT = {
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = factory
											}
										}
										AND = {
											OR = {
												has_building = factory
												has_building = warehouse
												has_building = warehouse_district
											}
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 47
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = steam_powered_factory
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = warehouse_district
												}
											}
											NOT = {
												has_building = warehouse
											}
										}
										AND = {
											has_building = warehouse
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 4
											}
											owner = {
												dip_tech = 10
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = warehouse_district
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = medium_university
													has_building = big_university
												}
											}
											NOT = {
												has_building = small_university
											}
										}
										AND = {
											has_building = small_university
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											check_variable = {
												which = art_power
												value = 5
											}
											AND = {
												NOT = {
													has_building = big_university
												}
											}
											NOT = {
												has_building = medium_university
											}
										}
										AND = {
											has_building = medium_university
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											check_variable = {
												which = art_power
												value = 10
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = big_university
											}
										}
										AND = {
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												adm_tech = 5
											}
											AND = {
												NOT = {
													has_building = fine_arts_academy
													has_building = opera
												}
											}
											NOT = {
												has_building = art_corporation
											}
										}
										AND = {
											has_building = art_corporation
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 19
												OR = {
													has_idea = patron_of_art
													has_idea = local_traditions
												}
											}
											AND = {
												NOT = {
													has_building = opera
												}
											}
											NOT = {
												has_building = fine_arts_academy
											}
										}
										AND = {
											has_building = fine_arts_academy
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 29
												OR = {
													has_idea = patron_of_art
													has_idea = local_traditions
												}
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = opera
											}
										}
									}
								}
							}
							export_to_variable = {
								which = getBestBuildingCost
								value = modifier:local_build_cost
							}
							export_to_variable = {
								which = getBestBuildingCostOwner
								value = modifier:build_cost
								who = owner
							}
							change_variable = {
								which = getBestBuildingCost
								value = 1
							}
							change_variable = {
								which = getBestBuildingCost
								which = getBestBuildingCostOwner
							}
							set_variable = {
								which = getBestBuildingFood
								which = regional_food_factor
							}
							multiply_variable = {
								which = getBestBuildingFood
								value = 2
							}
							set_variable = {
								which = getBestBuildingWeight
								value = -1
							}
							set_variable = {
								which = getBestBuildingBuildInd
								value = 0
							}
							set_variable = {
								which = getBestBuildingBuildPrice
								value = 0
							}
							set_variable = {
								which = getBestBuildingBudget
								which = aiDoSpendingTreasury
							}
							if = {
								limit = {
									OR = {
										always = no
										always = no
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = mined_goods
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_2
													has_building = mines_3
													has_building = mines_4
													has_building = mines_5
												}
											}
											NOT = {
												has_building = mines_1
											}
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0.6
									}
									subtract_variable = {
										which = assessBuildingWeight
										value = 0.1
									}
									set_variable = {
										which = tempIncomeMine
										which = mine_power
									}
									multiply_variable = {
										which = tempIncomeMine
										which = price_of_metal
									}
									multiply_variable = {
										which = tempIncomeMine
										value = 0.2
									}
									multiply_variable = {
										which = assessBuildingWeight
										which = tempIncomeMine
									}
									divide_variable = {
										which = assessBuildingWeight
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 100
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeMine
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 1
										}
										set_variable = {
											which = "building_cost"
											value = 100
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = mines_1
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_3
													has_building = mines_4
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 6
											}
											NOT = {
												has_building = mines_2
											}
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 1.2
									}
									subtract_variable = {
										which = assessBuildingWeight
										value = 0.6
									}
									set_variable = {
										which = tempIncomeMine
										which = mine_power
									}
									multiply_variable = {
										which = tempIncomeMine
										which = price_of_metal
									}
									multiply_variable = {
										which = tempIncomeMine
										value = 0.2
									}
									multiply_variable = {
										which = assessBuildingWeight
										which = tempIncomeMine
									}
									divide_variable = {
										which = assessBuildingWeight
										value = 0.6
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeMine
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 2
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = mines_2
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_4
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 11
											}
											NOT = {
												has_building = mines_3
											}
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 1.8
									}
									subtract_variable = {
										which = assessBuildingWeight
										value = 1.2
									}
									set_variable = {
										which = tempIncomeMine
										which = mine_power
									}
									multiply_variable = {
										which = tempIncomeMine
										which = price_of_metal
									}
									multiply_variable = {
										which = tempIncomeMine
										value = 0.2
									}
									multiply_variable = {
										which = assessBuildingWeight
										which = tempIncomeMine
									}
									divide_variable = {
										which = assessBuildingWeight
										value = 1.2
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 200
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeMine
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 3
										}
										set_variable = {
											which = "building_cost"
											value = 200
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = mines_3
											has_province_flag = infra_calc_done
											AND = {
												NOT = {
													has_building = mines_5
												}
											}
											owner = {
												adm_tech = 22
											}
											NOT = {
												has_building = mines_4
											}
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 2.4
									}
									subtract_variable = {
										which = assessBuildingWeight
										value = 1.8
									}
									set_variable = {
										which = tempIncomeMine
										which = mine_power
									}
									multiply_variable = {
										which = tempIncomeMine
										which = price_of_metal
									}
									multiply_variable = {
										which = tempIncomeMine
										value = 0.2
									}
									multiply_variable = {
										which = assessBuildingWeight
										which = tempIncomeMine
									}
									divide_variable = {
										which = assessBuildingWeight
										value = 1.8
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeMine
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 4
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = mines_4
											has_province_flag = infra_calc_done
											AND = {
												always = yes
											}
											owner = {
												adm_tech = 37
											}
											NOT = {
												has_building = mines_5
											}
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 3
									}
									subtract_variable = {
										which = assessBuildingWeight
										value = 2.4
									}
									set_variable = {
										which = tempIncomeMine
										which = mine_power
									}
									multiply_variable = {
										which = tempIncomeMine
										which = price_of_metal
									}
									multiply_variable = {
										which = tempIncomeMine
										value = 0.2
									}
									multiply_variable = {
										which = assessBuildingWeight
										which = tempIncomeMine
									}
									divide_variable = {
										which = assessBuildingWeight
										value = 2.4
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 400
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeMine
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 5
										}
										set_variable = {
											which = "building_cost"
											value = 400
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
							}
							if = {
								limit = {
									always = no
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = town_hall
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 6
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = town_hall
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 0.5
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_1
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 225
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 7
										}
										set_variable = {
											which = "building_cost"
											value = 225
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = urban_infrastructure_1
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 1.5
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_2
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 8
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = urban_infrastructure_2
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 3
											}
											owner = {
												adm_tech = 7
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_3
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 450
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 9
										}
										set_variable = {
											which = "building_cost"
											value = 450
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = urban_infrastructure_3
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 5
											}
											owner = {
												adm_tech = 18
											}
											AND = {
												NOT = {
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = urban_infrastructure_4
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 10
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = urban_infrastructure_4
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 8
											}
											owner = {
												adm_tech = 27
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = urban_infrastructure_5
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 900
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 11
										}
										set_variable = {
											which = "building_cost"
											value = 900
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											has_port = yes
											owner = {
												dip_tech = 1
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_1
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.05
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 12
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = harbour_infrastructure_1
											has_province_flag = infra_calc_done
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_2
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.15
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.2
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 225
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 13
										}
										set_variable = {
											which = "building_cost"
											value = 225
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = harbour_infrastructure_2
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = town_hall
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											NOT = {
												has_province_flag = has_delta_estuary
											}
											owner = {
												dip_tech = 6
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_3x
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.05
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 14
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = harbour_infrastructure_3x
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											NOT = {
												has_province_flag = has_delta_estuary
											}
											owner = {
												dip_tech = 22
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = harbour_infrastructure_4
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.05
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 450
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 15
										}
										set_variable = {
											which = "building_cost"
											value = 450
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = harbour_infrastructure_4
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											NOT = {
												has_building = military_harbour_4
											}
											has_province_flag = has_natural_harbour
											owner = {
												dip_tech = 40
											}
											AND = {
												NOT = {
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = harbour_infrastructure_5
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.2
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 16
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = merchant_guild
													has_building = trade_depot
													has_building = customs_house
												}
											}
											NOT = {
												has_building = marketplace
											}
										}
									}
									set_variable = {
										which = tempPrevTradePowerValue
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevTradePowerValue
										value = 0.2
									}
									change_variable = {
										which = tempPrevTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 4
											}
										}
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempNewTradePowerValue
											value = 1.2
										}
									}
									else = {
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.5
										}
									}
									change_variable = {
										which = tempNewTradePowerValue
										value = 0.25
									}
									change_variable = {
										which = tempNewTradePowerMult
										value = 0.15
									}
									set_variable = {
										which = tempChangeTradeVal
										which = tempNewTradePowerValue
									}
									set_variable = {
										which = tempChangeTradeMult
										which = tempNewTradePowerMult
									}
									subtract_variable = {
										which = tempChangeTradeVal
										which = tempPrevTradePowerValue
									}
									subtract_variable = {
										which = tempChangeTradeMult
										which = tempPrevTradePowerMult
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 17
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = marketplace
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 1
											}
											owner = {
												dip_tech = 5
											}
											AND = {
												NOT = {
													has_building = trade_depot
													has_building = customs_house
												}
											}
											NOT = {
												has_building = merchant_guild
											}
										}
									}
									set_variable = {
										which = tempPrevTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 4
											}
										}
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempPrevTradePowerValue
											value = 1.2
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.5
										}
									}
									change_variable = {
										which = tempPrevTradePowerValue
										value = 0.25
									}
									change_variable = {
										which = tempPrevTradePowerMult
										value = 0.15
									}
									set_variable = {
										which = tempNewTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 8
											}
										}
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempNewTradePowerValue
											value = 3.2
										}
									}
									else = {
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.6
										}
									}
									change_variable = {
										which = tempNewTradePowerValue
										value = 0.35
									}
									change_variable = {
										which = tempNewTradePowerMult
										value = 0.2
									}
									set_variable = {
										which = tempChangeTradeVal
										which = tempNewTradePowerValue
									}
									set_variable = {
										which = tempChangeTradeMult
										which = tempNewTradePowerMult
									}
									subtract_variable = {
										which = tempChangeTradeVal
										which = tempPrevTradePowerValue
									}
									subtract_variable = {
										which = tempChangeTradeMult
										which = tempPrevTradePowerMult
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.15
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 225
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 18
										}
										set_variable = {
											which = "building_cost"
											value = 225
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = merchant_guild
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 2
											}
											owner = {
												dip_tech = 13
											}
											AND = {
												NOT = {
													has_building = customs_house
												}
											}
											NOT = {
												has_building = trade_depot
											}
										}
									}
									set_variable = {
										which = tempPrevTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 8
											}
										}
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempPrevTradePowerValue
											value = 3.2
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.6
										}
									}
									change_variable = {
										which = tempPrevTradePowerValue
										value = 0.35
									}
									change_variable = {
										which = tempPrevTradePowerMult
										value = 0.2
									}
									set_variable = {
										which = tempNewTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 12
											}
										}
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempNewTradePowerValue
											value = 7.2
										}
									}
									else = {
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.8
										}
									}
									change_variable = {
										which = tempNewTradePowerValue
										value = 0.5
									}
									change_variable = {
										which = tempNewTradePowerMult
										value = 0.25
									}
									set_variable = {
										which = tempChangeTradeVal
										which = tempNewTradePowerValue
									}
									set_variable = {
										which = tempChangeTradeMult
										which = tempNewTradePowerMult
									}
									subtract_variable = {
										which = tempChangeTradeVal
										which = tempPrevTradePowerValue
									}
									subtract_variable = {
										which = tempChangeTradeMult
										which = tempPrevTradePowerMult
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.05
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 19
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = trade_depot
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 3
											}
											owner = {
												dip_tech = 22
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = customs_house
											}
										}
									}
									set_variable = {
										which = tempPrevTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 12
											}
										}
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempPrevTradePowerValue
											value = 7.2
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevTradePowerValue
											value = 0.8
										}
									}
									change_variable = {
										which = tempPrevTradePowerValue
										value = 0.5
									}
									change_variable = {
										which = tempPrevTradePowerMult
										value = 0.25
									}
									set_variable = {
										which = tempNewTradePowerValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 16
											}
										}
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 0.2
										}
										change_variable = {
											which = tempNewTradePowerValue
											value = 12.8
										}
									}
									else = {
										multiply_variable = {
											which = tempNewTradePowerValue
											value = 1
										}
									}
									change_variable = {
										which = tempNewTradePowerValue
										value = 0.75
									}
									change_variable = {
										which = tempNewTradePowerMult
										value = 0.3
									}
									set_variable = {
										which = tempChangeTradeVal
										which = tempNewTradePowerValue
									}
									set_variable = {
										which = tempChangeTradeMult
										which = tempNewTradePowerMult
									}
									subtract_variable = {
										which = tempChangeTradeVal
										which = tempPrevTradePowerValue
									}
									subtract_variable = {
										which = tempChangeTradeMult
										which = tempPrevTradePowerMult
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 450
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempPrevTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerValue
										value = 0
									}
									set_variable = {
										which = tempNewTradePowerMult
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 20
										}
										set_variable = {
											which = "building_cost"
											value = 450
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 4
											}
											AND = {
												OR = {
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												has_idea_group = trade_ideas
											}
											owner = {
												dip_tech = 23
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = bank
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.2
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 500
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 21
										}
										set_variable = {
											which = "building_cost"
											value = 500
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 8
											}
											has_building = bank
											AND = {
												OR = {
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												has_idea_group = trade_ideas
											}
											owner = {
												dip_tech = 42
											}
											AND = {
												owner = {
													has_country_modifier = india_trade_co
												}
											}
											NOT = {
												has_building = stock_exchange
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 1000
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 22
										}
										set_variable = {
											which = "building_cost"
											value = 1000
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											NOT = {
												has_building = steam_powered_factory
											}
											check_variable = {
												which = urban_pop
												value = 1
											}
											owner = {
												adm_tech = 4
											}
											AND = {
												NOT = {
													has_building = corporation_guild
													has_building = urban_manufactory
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = workshop
											}
										}
									}
									set_variable = {
										which = tempPrevProdValue
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdValue
										value = 0.05
									}
									set_variable = {
										which = tempNewProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 4
											}
										}
										multiply_variable = {
											which = tempNewProdValue
											value = 0.05
										}
										change_variable = {
											which = tempNewProdValue
											value = 3.4
										}
									}
									else = {
										multiply_variable = {
											which = tempNewProdValue
											value = 0.9
										}
									}
									set_variable = {
										which = tempChangeProdValue
										which = tempNewProdValue
									}
									subtract_variable = {
										which = tempChangeProdValue
										which = tempPrevProdValue
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdValue
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdValue
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdValue
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeProdValue
									}
									set_variable = {
										which = tempNewMult
										which = nothing
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeProdValue
											value = 0
										}
										set_variable = {
											which = nothing
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.2
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 200
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdValue
										value = 0
									}
									set_variable = {
										which = tempNewProdValue
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 23
										}
										set_variable = {
											which = "building_cost"
											value = 200
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = workshop
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 5
											}
											owner = {
												adm_tech = 5
											}
											AND = {
												NOT = {
													has_building = urban_manufactory
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = corporation_guild
											}
										}
									}
									set_variable = {
										which = tempPrevProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 4
											}
										}
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.05
										}
										change_variable = {
											which = tempPrevProdValue
											value = 3.4
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.9
										}
									}
									set_variable = {
										which = tempNewProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 8
											}
										}
										multiply_variable = {
											which = tempNewProdValue
											value = 0.1
										}
										change_variable = {
											which = tempNewProdValue
											value = 6.8
										}
									}
									else = {
										multiply_variable = {
											which = tempNewProdValue
											value = 0.95
										}
									}
									set_variable = {
										which = tempChangeProdValue
										which = tempNewProdValue
									}
									subtract_variable = {
										which = tempChangeProdValue
										which = tempPrevProdValue
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdValue
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdValue
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdValue
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeProdValue
									}
									set_variable = {
										which = tempNewMult
										which = nothing
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeProdValue
											value = 0
										}
										set_variable = {
											which = nothing
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdValue
										value = 0
									}
									set_variable = {
										which = tempNewProdValue
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 24
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = corporation_guild
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 9
											}
											owner = {
												adm_tech = 10
											}
											AND = {
												NOT = {
													has_building = factory
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = urban_manufactory
											}
										}
									}
									set_variable = {
										which = tempPrevProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 8
											}
										}
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.1
										}
										change_variable = {
											which = tempPrevProdValue
											value = 6.8
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.95
										}
									}
									set_variable = {
										which = tempNewProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 16
											}
										}
										multiply_variable = {
											which = tempNewProdValue
											value = 0.2
										}
										change_variable = {
											which = tempNewProdValue
											value = 12.8
										}
									}
									else = {
										multiply_variable = {
											which = tempNewProdValue
											value = 1
										}
									}
									set_variable = {
										which = tempChangeProdValue
										which = tempNewProdValue
									}
									subtract_variable = {
										which = tempChangeProdValue
										which = tempPrevProdValue
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdValue
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdValue
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdValue
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeProdValue
									}
									set_variable = {
										which = tempNewMult
										which = nothing
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeProdValue
											value = 0
										}
										set_variable = {
											which = nothing
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.7
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 400
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdValue
										value = 0
									}
									set_variable = {
										which = tempNewProdValue
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 25
										}
										set_variable = {
											which = "building_cost"
											value = 400
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = urban_manufactory
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 9
											}
											owner = {
												adm_tech = 33
											}
											AND = {
												NOT = {
													has_building = steam_powered_factory
												}
											}
											NOT = {
												has_building = factory
											}
										}
									}
									set_variable = {
										which = tempPrevProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 16
											}
										}
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.2
										}
										change_variable = {
											which = tempPrevProdValue
											value = 12.8
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevProdValue
											value = 1
										}
									}
									set_variable = {
										which = tempNewProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 20
											}
										}
										multiply_variable = {
											which = tempNewProdValue
											value = 0.3
										}
										change_variable = {
											which = tempNewProdValue
											value = 19
										}
									}
									else = {
										multiply_variable = {
											which = tempNewProdValue
											value = 1.25
										}
									}
									set_variable = {
										which = tempChangeProdValue
										which = tempNewProdValue
									}
									subtract_variable = {
										which = tempChangeProdValue
										which = tempPrevProdValue
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdValue
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdValue
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdValue
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeProdValue
									}
									set_variable = {
										which = tempNewMult
										which = nothing
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeProdValue
											value = 0
										}
										set_variable = {
											which = nothing
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdValue
										value = 0
									}
									set_variable = {
										which = tempNewProdValue
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 26
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											OR = {
												has_building = factory
												has_building = warehouse
												has_building = warehouse_district
											}
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 47
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = steam_powered_factory
											}
										}
									}
									set_variable = {
										which = tempPrevProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 20
											}
										}
										multiply_variable = {
											which = tempPrevProdValue
											value = 0.3
										}
										change_variable = {
											which = tempPrevProdValue
											value = 19
										}
									}
									else = {
										multiply_variable = {
											which = tempPrevProdValue
											value = 1.25
										}
									}
									set_variable = {
										which = tempNewProdValue
										which = urban_pop
									}
									if = {
										limit = {
											check_variable = {
												which = urban_pop
												value = 20
											}
										}
										multiply_variable = {
											which = tempNewProdValue
											value = 0.5
										}
										change_variable = {
											which = tempNewProdValue
											value = 20
										}
									}
									else = {
										multiply_variable = {
											which = tempNewProdValue
											value = 1.5
										}
									}
									set_variable = {
										which = tempChangeProdValue
										which = tempNewProdValue
									}
									subtract_variable = {
										which = tempChangeProdValue
										which = tempPrevProdValue
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdValue
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdValue
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdValue
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeProdValue
									}
									set_variable = {
										which = tempNewMult
										which = nothing
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeProdValue
											value = 0
										}
										set_variable = {
											which = nothing
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									set_variable = {
										which = "building_cost"
										value = 800
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdValue
										value = 0
									}
									set_variable = {
										which = tempNewProdValue
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 27
										}
										set_variable = {
											which = "building_cost"
											value = 800
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = warehouse_district
												}
											}
											NOT = {
												has_building = warehouse
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.15
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.075
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 28
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = warehouse
											has_province_flag = infra_calc_done
											check_variable = {
												which = urban_pop
												value = 4
											}
											owner = {
												dip_tech = 10
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = warehouse_district
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.15
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.075
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 250
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 29
										}
										set_variable = {
											which = "building_cost"
											value = 250
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = medium_university
													has_building = big_university
												}
											}
											NOT = {
												has_building = small_university
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 200
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 30
										}
										set_variable = {
											which = "building_cost"
											value = 200
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = small_university
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											check_variable = {
												which = art_power
												value = 5
											}
											AND = {
												NOT = {
													has_building = big_university
												}
											}
											NOT = {
												has_building = medium_university
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 200
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 31
										}
										set_variable = {
											which = "building_cost"
											value = 200
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = medium_university
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 1
											}
											check_variable = {
												which = art_power
												value = 10
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = big_university
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.15
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 32
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_province_flag = infra_calc_done
											AND = {
												OR = {
													has_building = urban_infrastructure_1
													has_building = urban_infrastructure_2
													has_building = urban_infrastructure_3
													has_building = urban_infrastructure_4
													has_building = urban_infrastructure_5
												}
											}
											owner = {
												adm_tech = 5
											}
											AND = {
												NOT = {
													has_building = fine_arts_academy
													has_building = opera
												}
											}
											NOT = {
												has_building = art_corporation
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.2
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 250
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 33
										}
										set_variable = {
											which = "building_cost"
											value = 250
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = art_corporation
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 19
												OR = {
													has_idea = patron_of_art
													has_idea = local_traditions
												}
											}
											AND = {
												NOT = {
													has_building = opera
												}
											}
											NOT = {
												has_building = fine_arts_academy
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.2
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 450
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 34
										}
										set_variable = {
											which = "building_cost"
											value = 450
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = fine_arts_academy
											has_province_flag = infra_calc_done
											owner = {
												adm_tech = 29
												OR = {
													has_idea = patron_of_art
													has_idea = local_traditions
												}
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = opera
											}
										}
									}
									set_variable = {
										which = misc
										value = 0
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.2
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = misc
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tmpUpper
										which = devPointUpperCur
									}
									divide_variable = {
										which = tmpUpper
										value = 20
									}
									change_variable = {
										which = assessBuildingWeight
										which = tmpUpper
									}
									set_variable = {
										which = tmpUpper
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 35
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
							}
							if = {
								limit = {
									always = no
								}
								set_variable = {
									which = getBestBuildingCost
									value = 1
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_2
													has_building = rural_infrastructure_3
													has_building = rural_infrastructure_4
													has_building = rural_infrastructure_5
													has_building = rural_infrastructure_6
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_1
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.55
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 1.5
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 15
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 38
										}
										set_variable = {
											which = "building_cost"
											value = 1.5
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 15
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_3
													has_building = rural_infrastructure_4
													has_building = rural_infrastructure_5
													has_building = rural_infrastructure_6
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_2
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 1.55
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 1.55
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.283
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 2.5
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 25
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 39
										}
										set_variable = {
											which = "building_cost"
											value = 2.5
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 25
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_4
													has_building = rural_infrastructure_5
													has_building = rural_infrastructure_6
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_3
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 1.833
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 1.833
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.267
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 4.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 40
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 40
										}
										set_variable = {
											which = "building_cost"
											value = 4.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 40
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_5
													has_building = rural_infrastructure_6
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_4
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 2.1
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 2.1
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.15
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 6.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 60
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 41
										}
										set_variable = {
											which = "building_cost"
											value = 6.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 60
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_6
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_5
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 2.25
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 2.25
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.133
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 8.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 80
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 42
										}
										set_variable = {
											which = "building_cost"
											value = 8.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 80
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												NOT = {
													has_building = rural_infrastructure_7
												}
											}
											NOT = {
												has_building = rural_infrastructure_6
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 2.383
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 2.383
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.067
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 12.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 120
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 43
										}
										set_variable = {
											which = "building_cost"
											value = 12.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 120
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												always = yes
											}
											NOT = {
												has_building = rural_infrastructure_7
											}
										}
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									set_variable = {
										which = exam_close
										which = food_price_local
									}
									if = {
										limit = {
											check_variable = {
												which = surplus_food_save
												value = 0
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_region
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = surplus_food_save
													value = 0
												}
											}
										}
										multiply_variable = {
											which = exam_close
											which = food_price_bonus_local
										}
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0.15
									}
									if = {
										limit = {
											OR = {
												trade_goods = wheat
												trade_goods = millet
												trade_goods = rice
												trade_goods = maize
												trade_goods = fish
												trade_goods = potatoes
												trade_goods = livestock
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 1
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cheese
												trade_goods = olive
												trade_goods = palm_date
												trade_goods = wine
												trade_goods = tea
												trade_goods = clove
												trade_goods = pepper
												trade_goods = coffee
												trade_goods = cotton
												trade_goods = sugar
												trade_goods = tobacco
												trade_goods = opium
												trade_goods = cacao
												trade_goods = hemp
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.5
										}
									}
									else_if = {
										limit = {
											OR = {
												trade_goods = cinnamon
												trade_goods = carmine
												trade_goods = nutmeg
												trade_goods = indigo
												trade_goods = incense
											}
										}
										set_variable = {
											which = export_food_transfer_value
											value = 0.25
										}
									}
									set_variable = {
										which = exam_far
										which = food_price_cont
									}
									subtract_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									multiply_variable = {
										which = exam_far
										which = export_food_transfer_value
									}
									change_variable = {
										which = exam_far
										value = 1
									}
									multiply_variable = {
										which = exam_far
										value = 0.45
									}
									multiply_variable = {
										which = exam_far
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = exam_far
										which = price_of_rural_good
									}
									set_variable = {
										which = export_food_transfer_value
										value = 0
									}
									set_variable = {
										which = food_price_bonus_local
										value = 0
									}
									set_variable = {
										which = food_price_bonus_region
										value = 0
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									divide_variable = {
										which = exam_far
										value = 2.45
									}
									multiply_variable = {
										which = exam_far
										value = $new$
									}
									if = {
										limit = {
											check_variable = {
												which = exam_far
												which = exam_close
											}
										}
										set_variable = {
											which = assessBuildingWeight
											which = rural_production_power
										}
										set_variable = {
											which = food_price_bonus_local
											value = 1.3
										}
										set_variable = {
											which = food_price_bonus_region
											value = 1.15
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 1
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = food_price_bonus_cont
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.8
										}
										set_variable = {
											which = food_price_bonus_cont
											value = 0
										}
										divide_variable = {
											which = assessBuildingWeight
											value = 2.45
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 0.083
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = exam_far
										}
										divide_variable = {
											which = assessBuildingWeight
											which = exam_close
										}
										set_variable = {
											which = "building_cost"
											value = 16.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 160
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									else = {
										set_variable = {
											which = assessBuildingWeight
											value = 0
										}
									}
									set_variable = {
										which = exam_far
										value = 0
									}
									set_variable = {
										which = exam_close
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 44
										}
										set_variable = {
											which = "building_cost"
											value = 16.0
										}
										multiply_variable = {
											which = "building_cost"
											which = "innate_rural_pop_base"
										}
										change_variable = {
											which = "building_cost"
											value = 160
										}
										set_variable = {
											which = "price_of_rural_good_mod"
											which = "price_of_rural_good"
										}
										change_variable = {
											which = "price_of_rural_good_mod"
											value = 1
										}
										divide_variable = {
											which = "price_of_rural_good_mod"
											value = 2
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = "building_cost"
											which = "price_of_rural_good_mod"
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											always = yes
										}
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0.2
									}
									set_variable = {
										which = State
										which = State
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 45
										}
										set_variable = {
											which = building_cost
											value = 0.1
										}
										multiply_variable = {
											which = building_cost
											which = farm_efficiency_ducats_invested
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											owner = {
												adm_tech = 5
											}
											NOT = {
												has_province_modifier = canal_is_building
											}
											AND = {
												NOT = {
													has_building = canal_level_2
													has_building = canal_level_3
												}
											}
											NOT = {
												has_building = canal_level_1
											}
										}
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0.05
									}
									set_variable = {
										which = nothing0
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = farm_efficiency
									}
									multiply_variable = {
										which = tempPrev
										which = nothing1
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeFarmVal
									}
									set_variable = {
										which = tempNewMult
										which = nothing0
									}
									change_variable = {
										which = tempNewValue
										which = farm_efficiency
									}
									change_variable = {
										which = tempNewMult
										which = nothing1
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseFarm
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseFarm
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseFarm
										value = 1
									}
									divide_variable = {
										which = tempIncreaseFarm
										value = 1.25
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = farm_efficiency
											value = 0
										}
										set_variable = {
											which = nothing1
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeFarmVal
											value = 0
										}
										set_variable = {
											which = nothing0
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeFarm
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeFarm
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeFarm
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseFarm
										which = tempIncomeFarm
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 3
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0.15
									}
									set_variable = {
										which = tempPrevInnateVal
										which = innate_rural_pop_base
									}
									change_variable = {
										which = tempPrevInnateVal
										value = 0
									}
									export_to_variable = {
										which = tempADM
										value = adm_tech
										who = owner
									}
									export_to_variable = {
										which = tempDIP
										value = dip_tech
										who = owner
									}
									set_variable = {
										which = tempPrevInnateMult
										which = tempADM
									}
									change_variable = {
										which = tempPrevInnateMult
										which = tempDIP
									}
									divide_variable = {
										which = tempPrevInnateMult
										value = 150
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 1
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = tempPrevInnateVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeInnateVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeInnateMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevInnateVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseInnate
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseInnate
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseInnate
										value = 1
									}
									divide_variable = {
										which = tempIncreaseInnate
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevInnateVal
											value = 0
										}
										set_variable = {
											which = tempPrevInnateMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeInnateVal
											value = 0
										}
										set_variable = {
											which = tempChangeInnateMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeRural
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeRural
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = wealth_rural_from_pop
									}
									multiply_variable = {
										which = tempIncreaseInnate
										which = tempIncomeRural
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseFarm
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseInnate
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									set_variable = {
										which = building_cost
										which = innate_rural_pop_base
									}
									multiply_variable = {
										which = building_cost
										value = 0.1
									}
									multiply_variable = {
										which = building_cost
										value = 100
									}
									change_variable = {
										which = building_cost
										value = 500
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 0
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										value = 0
									}
									set_variable = {
										which = tempPrevInnateMult
										value = 0
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 0
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										value = 0
									}
									set_variable = {
										which = tempIncreaseFarm
										value = 0
									}
									set_variable = {
										which = tempIncreaseInnate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 60
										}
										set_variable = {
											which = building_cost
											which = innate_rural_pop_base
										}
										multiply_variable = {
											which = building_cost
											value = 0.1
										}
										multiply_variable = {
											which = building_cost
											value = 100
										}
										change_variable = {
											which = building_cost
											value = 500
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = canal_level_1
											owner = {
												adm_tech = 16
											}
											NOT = {
												has_province_modifier = canal_is_building
											}
											AND = {
												NOT = {
													has_building = canal_level_3
												}
											}
											NOT = {
												has_building = canal_level_2
											}
										}
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0.1
									}
									set_variable = {
										which = nothing0
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = farm_efficiency
									}
									multiply_variable = {
										which = tempPrev
										which = nothing1
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeFarmVal
									}
									set_variable = {
										which = tempNewMult
										which = nothing0
									}
									change_variable = {
										which = tempNewValue
										which = farm_efficiency
									}
									change_variable = {
										which = tempNewMult
										which = nothing1
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseFarm
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseFarm
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseFarm
										value = 1
									}
									divide_variable = {
										which = tempIncreaseFarm
										value = 1.25
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = farm_efficiency
											value = 0
										}
										set_variable = {
											which = nothing1
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeFarmVal
											value = 0
										}
										set_variable = {
											which = nothing0
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeFarm
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeFarm
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeFarm
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseFarm
										which = tempIncomeFarm
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 3
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0.1
									}
									set_variable = {
										which = tempPrevInnateVal
										which = innate_rural_pop_base
									}
									change_variable = {
										which = tempPrevInnateVal
										value = 3
									}
									export_to_variable = {
										which = tempADM
										value = adm_tech
										who = owner
									}
									export_to_variable = {
										which = tempDIP
										value = dip_tech
										who = owner
									}
									set_variable = {
										which = tempPrevInnateMult
										which = tempADM
									}
									change_variable = {
										which = tempPrevInnateMult
										which = tempDIP
									}
									divide_variable = {
										which = tempPrevInnateMult
										value = 150
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 1
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 0.15
									}
									set_variable = {
										which = tempPrev
										which = tempPrevInnateVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeInnateVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeInnateMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevInnateVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseInnate
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseInnate
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseInnate
										value = 1
									}
									divide_variable = {
										which = tempIncreaseInnate
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevInnateVal
											value = 0
										}
										set_variable = {
											which = tempPrevInnateMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeInnateVal
											value = 0
										}
										set_variable = {
											which = tempChangeInnateMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeRural
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeRural
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = wealth_rural_from_pop
									}
									multiply_variable = {
										which = tempIncreaseInnate
										which = tempIncomeRural
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseFarm
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseInnate
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									set_variable = {
										which = building_cost
										which = innate_rural_pop_base
									}
									multiply_variable = {
										which = building_cost
										value = 0.1
									}
									multiply_variable = {
										which = building_cost
										value = 150
									}
									change_variable = {
										which = building_cost
										value = 500
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 0
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										value = 0
									}
									set_variable = {
										which = tempPrevInnateMult
										value = 0
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 0
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										value = 0
									}
									set_variable = {
										which = tempIncreaseFarm
										value = 0
									}
									set_variable = {
										which = tempIncreaseInnate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 61
										}
										set_variable = {
											which = building_cost
											which = innate_rural_pop_base
										}
										multiply_variable = {
											which = building_cost
											value = 0.1
										}
										multiply_variable = {
											which = building_cost
											value = 150
										}
										change_variable = {
											which = building_cost
											value = 500
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = canal_level_2
											owner = {
												adm_tech = 40
											}
											NOT = {
												has_province_modifier = canal_is_building
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = canal_level_3
											}
										}
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0.1
									}
									set_variable = {
										which = nothing0
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = farm_efficiency
									}
									multiply_variable = {
										which = tempPrev
										which = nothing1
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeFarmVal
									}
									set_variable = {
										which = tempNewMult
										which = nothing0
									}
									change_variable = {
										which = tempNewValue
										which = farm_efficiency
									}
									change_variable = {
										which = tempNewMult
										which = nothing1
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseFarm
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseFarm
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseFarm
										value = 1
									}
									divide_variable = {
										which = tempIncreaseFarm
										value = 1.25
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = farm_efficiency
											value = 0
										}
										set_variable = {
											which = nothing1
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeFarmVal
											value = 0
										}
										set_variable = {
											which = nothing0
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeFarm
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeFarm
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeFarm
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseFarm
										which = tempIncomeFarm
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 2
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0.1
									}
									set_variable = {
										which = tempPrevInnateVal
										which = innate_rural_pop_base
									}
									change_variable = {
										which = tempPrevInnateVal
										value = 6
									}
									export_to_variable = {
										which = tempADM
										value = adm_tech
										who = owner
									}
									export_to_variable = {
										which = tempDIP
										value = dip_tech
										who = owner
									}
									set_variable = {
										which = tempPrevInnateMult
										which = tempADM
									}
									change_variable = {
										which = tempPrevInnateMult
										which = tempDIP
									}
									divide_variable = {
										which = tempPrevInnateMult
										value = 150
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 1
									}
									change_variable = {
										which = tempPrevInnateMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = tempPrevInnateVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeInnateVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeInnateMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevInnateVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevInnateMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseInnate
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseInnate
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseInnate
										value = 1
									}
									divide_variable = {
										which = tempIncreaseInnate
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevInnateVal
											value = 0
										}
										set_variable = {
											which = tempPrevInnateMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeInnateVal
											value = 0
										}
										set_variable = {
											which = tempChangeInnateMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										which = food_sale_local
									}
									change_variable = {
										which = tempIncomeRural
										which = food_sale_region
									}
									multiply_variable = {
										which = tempIncomeRural
										value = 0.8
									}
									set_variable = {
										which = tmpRuralProd
										which = rural_production_power
									}
									set_variable = {
										which = food_price_bonus_local
										value = 1.3
									}
									set_variable = {
										which = food_price_bonus_region
										value = 1.15
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 1
									}
									multiply_variable = {
										which = tmpRuralProd
										which = food_price_bonus_cont
									}
									multiply_variable = {
										which = tmpRuralProd
										value = 0.8
									}
									set_variable = {
										which = food_price_bonus_cont
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = tmpRuralProd
									}
									set_variable = {
										which = tmpRuralProd
										value = 0
									}
									change_variable = {
										which = tempIncomeRural
										which = wealth_rural_from_pop
									}
									multiply_variable = {
										which = tempIncreaseInnate
										which = tempIncomeRural
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseFarm
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseInnate
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									divide_variable = {
										which = assessBuildingWeight
										which = getBestBuildingFood
									}
									set_variable = {
										which = building_cost
										which = innate_rural_pop_base
									}
									multiply_variable = {
										which = building_cost
										value = 0.1
									}
									multiply_variable = {
										which = building_cost
										value = 200
									}
									change_variable = {
										which = building_cost
										value = 500
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = nothing1
										value = 0
									}
									set_variable = {
										which = tempChangeFarmVal
										value = 0
									}
									set_variable = {
										which = tempIncomeFarm
										value = 0
									}
									set_variable = {
										which = tempPrevInnateMult
										value = 0
									}
									set_variable = {
										which = tempChangeInnateVal
										value = 0
									}
									set_variable = {
										which = tempChangeInnateMult
										value = 0
									}
									set_variable = {
										which = tempIncomeRural
										value = 0
									}
									set_variable = {
										which = tempIncreaseFarm
										value = 0
									}
									set_variable = {
										which = tempIncreaseInnate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 62
										}
										set_variable = {
											which = building_cost
											which = innate_rural_pop_base
										}
										multiply_variable = {
											which = building_cost
											value = 0.1
										}
										multiply_variable = {
											which = building_cost
											value = 200
										}
										change_variable = {
											which = building_cost
											value = 500
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
							}
							if = {
								limit = {
									always = yes
								}
								set_variable = {
									which = getBestBuildingCost
									value = 1
								}
								if = {
									limit = {
										AND = {
											owner = {
												mil_tech = 3
											}
											AND = {
												NOT = {
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
											NOT = {
												has_building = fort_14th
											}
											NOT = {
												has_province_modifier = fort_is_building
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_building = fort_14th
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = fort_14th
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -10
										}
									}
									else = {
										set_variable = {
											which = tempChangeGravVal
											value = 0.1
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0.1
										}
										set_variable = {
											which = tempPrev
											which = urban_gravity_base
										}
										multiply_variable = {
											which = tempPrev
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNewValue
											which = tempChangeGravVal
										}
										set_variable = {
											which = tempNewMult
											which = tempChangeGravMult
										}
										change_variable = {
											which = tempNewValue
											which = urban_gravity_base
										}
										change_variable = {
											which = tempNewMult
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNew
											which = tempNewValue
										}
										multiply_variable = {
											which = tempNew
											which = tempNewMult
										}
										set_variable = {
											which = tempIncreaseGrav
											which = tempNew
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tempPrev
														value = 0.001
													}
												}
											}
											set_variable = {
												which = tempPrev
												value = 0.001
											}
										}
										divide_variable = {
											which = tempIncreaseGrav
											which = tempPrev
										}
										subtract_variable = {
											which = tempIncreaseGrav
											value = 1
										}
										divide_variable = {
											which = tempIncreaseGrav
											value = 2
										}
										if = {
											limit = {
												always = no
											}
											set_variable = {
												which = urban_gravity_base
												value = 0
											}
											set_variable = {
												which = urban_gravity_percentage
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											set_variable = {
												which = tempChangeGravVal
												value = 0
											}
											set_variable = {
												which = tempChangeGravMult
												value = 0
											}
										}
										set_variable = {
											which = tempPrev
											value = 0
										}
										set_variable = {
											which = tempNewValue
											value = 0
										}
										set_variable = {
											which = tempNewMult
											value = 0
										}
										set_variable = {
											which = tempNew
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											which = wealth_urban_from_pop
										}
										set_variable = {
											which = tmpUrbanTradeState
											which = wealth_urban_from_trade
										}
										multiply_variable = {
											which = tmpUrbanTradeState
											value = 4
										}
										if = {
											limit = {
												check_variable = {
													which = urban_production_power
													value = 0.004
												}
											}
											set_variable = {
												which = statProdUrban
												value = 0
											}
											change_variable = {
												which = statProdUrban
												which = urban_production_power
											}
											if = {
												limit = {
													has_province_flag = urban_goods_rank_3
												}
												multiply_variable = {
													which = statProdUrban
													value = 3.6
												}
											}
											else_if = {
												limit = {
													has_province_flag = urban_goods_rank_2
												}
												multiply_variable = {
													which = statProdUrban
													value = 3
												}
											}
											else = {
												multiply_variable = {
													which = statProdUrban
													value = 2.4
												}
											}
											multiply_variable = {
												which = statProdUrban
												value = 1.2
											}
											multiply_variable = {
												which = statProdUrban
												value = 0.1
											}
										}
										else = {
											set_variable = {
												which = statProdUrban
												value = 0
											}
										}
										set_variable = {
											which = tmpUrbanProdState
											which = statProdUrban
										}
										multiply_variable = {
											which = tmpUrbanProdState
											value = 3
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanTradeState
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanProdState
										}
										set_variable = {
											which = tmpUrbanTradeState
											value = 0
										}
										set_variable = {
											which = tmpUrbanProdState
											value = 0
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = getBestBuildingFood
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = tempIncomeUrban
										}
										set_variable = {
											which = assessBuildingWeight
											which = tempIncreaseGrav
										}
										change_variable = {
											which = assessBuildingWeight
											which = aiWeightFort
										}
										set_variable = {
											which = "building_cost"
											value = 80
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											value = 0
										}
										set_variable = {
											which = tempIncreaseGrav
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 46
										}
										set_variable = {
											which = "building_cost"
											value = 80
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = fort_14th
											owner = {
												mil_tech = 15
											}
											AND = {
												NOT = {
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
											NOT = {
												has_building = fort_15th
											}
											NOT = {
												has_province_modifier = fort_is_building
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_building = fort_14th
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = fort_14th
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -1
										}
									}
									else = {
										set_variable = {
											which = tempChangeGravVal
											value = 0.1
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0.05
										}
										set_variable = {
											which = tempPrev
											which = urban_gravity_base
										}
										multiply_variable = {
											which = tempPrev
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNewValue
											which = tempChangeGravVal
										}
										set_variable = {
											which = tempNewMult
											which = tempChangeGravMult
										}
										change_variable = {
											which = tempNewValue
											which = urban_gravity_base
										}
										change_variable = {
											which = tempNewMult
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNew
											which = tempNewValue
										}
										multiply_variable = {
											which = tempNew
											which = tempNewMult
										}
										set_variable = {
											which = tempIncreaseGrav
											which = tempNew
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tempPrev
														value = 0.001
													}
												}
											}
											set_variable = {
												which = tempPrev
												value = 0.001
											}
										}
										divide_variable = {
											which = tempIncreaseGrav
											which = tempPrev
										}
										subtract_variable = {
											which = tempIncreaseGrav
											value = 1
										}
										divide_variable = {
											which = tempIncreaseGrav
											value = 2
										}
										if = {
											limit = {
												always = no
											}
											set_variable = {
												which = urban_gravity_base
												value = 0
											}
											set_variable = {
												which = urban_gravity_percentage
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											set_variable = {
												which = tempChangeGravVal
												value = 0
											}
											set_variable = {
												which = tempChangeGravMult
												value = 0
											}
										}
										set_variable = {
											which = tempPrev
											value = 0
										}
										set_variable = {
											which = tempNewValue
											value = 0
										}
										set_variable = {
											which = tempNewMult
											value = 0
										}
										set_variable = {
											which = tempNew
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											which = wealth_urban_from_pop
										}
										set_variable = {
											which = tmpUrbanTradeState
											which = wealth_urban_from_trade
										}
										multiply_variable = {
											which = tmpUrbanTradeState
											value = 4
										}
										if = {
											limit = {
												check_variable = {
													which = urban_production_power
													value = 0.004
												}
											}
											set_variable = {
												which = statProdUrban
												value = 0
											}
											change_variable = {
												which = statProdUrban
												which = urban_production_power
											}
											if = {
												limit = {
													has_province_flag = urban_goods_rank_3
												}
												multiply_variable = {
													which = statProdUrban
													value = 3.6
												}
											}
											else_if = {
												limit = {
													has_province_flag = urban_goods_rank_2
												}
												multiply_variable = {
													which = statProdUrban
													value = 3
												}
											}
											else = {
												multiply_variable = {
													which = statProdUrban
													value = 2.4
												}
											}
											multiply_variable = {
												which = statProdUrban
												value = 1.2
											}
											multiply_variable = {
												which = statProdUrban
												value = 0.1
											}
										}
										else = {
											set_variable = {
												which = statProdUrban
												value = 0
											}
										}
										set_variable = {
											which = tmpUrbanProdState
											which = statProdUrban
										}
										multiply_variable = {
											which = tmpUrbanProdState
											value = 3
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanTradeState
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanProdState
										}
										set_variable = {
											which = tmpUrbanTradeState
											value = 0
										}
										set_variable = {
											which = tmpUrbanProdState
											value = 0
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = getBestBuildingFood
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = tempIncomeUrban
										}
										set_variable = {
											which = assessBuildingWeight
											which = tempIncreaseGrav
										}
										change_variable = {
											which = assessBuildingWeight
											which = aiWeightFort
										}
										set_variable = {
											which = "building_cost"
											value = 120
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											value = 0
										}
										set_variable = {
											which = tempIncreaseGrav
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 47
										}
										set_variable = {
											which = "building_cost"
											value = 120
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = fort_15th
											owner = {
												mil_tech = 26
											}
											AND = {
												NOT = {
													has_building = fort_17th
													has_building = fort_18th
												}
											}
											NOT = {
												has_building = fort_16th
											}
											NOT = {
												has_province_modifier = fort_is_building
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_building = fort_14th
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = fort_14th
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -1
										}
									}
									else = {
										set_variable = {
											which = tempChangeGravVal
											value = 0.1
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0.05
										}
										set_variable = {
											which = tempPrev
											which = urban_gravity_base
										}
										multiply_variable = {
											which = tempPrev
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNewValue
											which = tempChangeGravVal
										}
										set_variable = {
											which = tempNewMult
											which = tempChangeGravMult
										}
										change_variable = {
											which = tempNewValue
											which = urban_gravity_base
										}
										change_variable = {
											which = tempNewMult
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNew
											which = tempNewValue
										}
										multiply_variable = {
											which = tempNew
											which = tempNewMult
										}
										set_variable = {
											which = tempIncreaseGrav
											which = tempNew
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tempPrev
														value = 0.001
													}
												}
											}
											set_variable = {
												which = tempPrev
												value = 0.001
											}
										}
										divide_variable = {
											which = tempIncreaseGrav
											which = tempPrev
										}
										subtract_variable = {
											which = tempIncreaseGrav
											value = 1
										}
										divide_variable = {
											which = tempIncreaseGrav
											value = 2
										}
										if = {
											limit = {
												always = no
											}
											set_variable = {
												which = urban_gravity_base
												value = 0
											}
											set_variable = {
												which = urban_gravity_percentage
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											set_variable = {
												which = tempChangeGravVal
												value = 0
											}
											set_variable = {
												which = tempChangeGravMult
												value = 0
											}
										}
										set_variable = {
											which = tempPrev
											value = 0
										}
										set_variable = {
											which = tempNewValue
											value = 0
										}
										set_variable = {
											which = tempNewMult
											value = 0
										}
										set_variable = {
											which = tempNew
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											which = wealth_urban_from_pop
										}
										set_variable = {
											which = tmpUrbanTradeState
											which = wealth_urban_from_trade
										}
										multiply_variable = {
											which = tmpUrbanTradeState
											value = 4
										}
										if = {
											limit = {
												check_variable = {
													which = urban_production_power
													value = 0.004
												}
											}
											set_variable = {
												which = statProdUrban
												value = 0
											}
											change_variable = {
												which = statProdUrban
												which = urban_production_power
											}
											if = {
												limit = {
													has_province_flag = urban_goods_rank_3
												}
												multiply_variable = {
													which = statProdUrban
													value = 3.6
												}
											}
											else_if = {
												limit = {
													has_province_flag = urban_goods_rank_2
												}
												multiply_variable = {
													which = statProdUrban
													value = 3
												}
											}
											else = {
												multiply_variable = {
													which = statProdUrban
													value = 2.4
												}
											}
											multiply_variable = {
												which = statProdUrban
												value = 1.2
											}
											multiply_variable = {
												which = statProdUrban
												value = 0.1
											}
										}
										else = {
											set_variable = {
												which = statProdUrban
												value = 0
											}
										}
										set_variable = {
											which = tmpUrbanProdState
											which = statProdUrban
										}
										multiply_variable = {
											which = tmpUrbanProdState
											value = 3
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanTradeState
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanProdState
										}
										set_variable = {
											which = tmpUrbanTradeState
											value = 0
										}
										set_variable = {
											which = tmpUrbanProdState
											value = 0
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = getBestBuildingFood
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = tempIncomeUrban
										}
										set_variable = {
											which = assessBuildingWeight
											which = tempIncreaseGrav
										}
										change_variable = {
											which = assessBuildingWeight
											which = aiWeightFort
										}
										set_variable = {
											which = "building_cost"
											value = 180
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											value = 0
										}
										set_variable = {
											which = tempIncreaseGrav
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 48
										}
										set_variable = {
											which = "building_cost"
											value = 180
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = fort_16th
											owner = {
												mil_tech = 35
											}
											AND = {
												NOT = {
													has_building = fort_18th
												}
											}
											NOT = {
												has_building = fort_17th
											}
											NOT = {
												has_province_modifier = fort_is_building
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_building = fort_14th
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = fort_14th
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -1
										}
									}
									else = {
										set_variable = {
											which = tempChangeGravVal
											value = 0.1
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0.05
										}
										set_variable = {
											which = tempPrev
											which = urban_gravity_base
										}
										multiply_variable = {
											which = tempPrev
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNewValue
											which = tempChangeGravVal
										}
										set_variable = {
											which = tempNewMult
											which = tempChangeGravMult
										}
										change_variable = {
											which = tempNewValue
											which = urban_gravity_base
										}
										change_variable = {
											which = tempNewMult
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNew
											which = tempNewValue
										}
										multiply_variable = {
											which = tempNew
											which = tempNewMult
										}
										set_variable = {
											which = tempIncreaseGrav
											which = tempNew
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tempPrev
														value = 0.001
													}
												}
											}
											set_variable = {
												which = tempPrev
												value = 0.001
											}
										}
										divide_variable = {
											which = tempIncreaseGrav
											which = tempPrev
										}
										subtract_variable = {
											which = tempIncreaseGrav
											value = 1
										}
										divide_variable = {
											which = tempIncreaseGrav
											value = 2
										}
										if = {
											limit = {
												always = no
											}
											set_variable = {
												which = urban_gravity_base
												value = 0
											}
											set_variable = {
												which = urban_gravity_percentage
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											set_variable = {
												which = tempChangeGravVal
												value = 0
											}
											set_variable = {
												which = tempChangeGravMult
												value = 0
											}
										}
										set_variable = {
											which = tempPrev
											value = 0
										}
										set_variable = {
											which = tempNewValue
											value = 0
										}
										set_variable = {
											which = tempNewMult
											value = 0
										}
										set_variable = {
											which = tempNew
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											which = wealth_urban_from_pop
										}
										set_variable = {
											which = tmpUrbanTradeState
											which = wealth_urban_from_trade
										}
										multiply_variable = {
											which = tmpUrbanTradeState
											value = 4
										}
										if = {
											limit = {
												check_variable = {
													which = urban_production_power
													value = 0.004
												}
											}
											set_variable = {
												which = statProdUrban
												value = 0
											}
											change_variable = {
												which = statProdUrban
												which = urban_production_power
											}
											if = {
												limit = {
													has_province_flag = urban_goods_rank_3
												}
												multiply_variable = {
													which = statProdUrban
													value = 3.6
												}
											}
											else_if = {
												limit = {
													has_province_flag = urban_goods_rank_2
												}
												multiply_variable = {
													which = statProdUrban
													value = 3
												}
											}
											else = {
												multiply_variable = {
													which = statProdUrban
													value = 2.4
												}
											}
											multiply_variable = {
												which = statProdUrban
												value = 1.2
											}
											multiply_variable = {
												which = statProdUrban
												value = 0.1
											}
										}
										else = {
											set_variable = {
												which = statProdUrban
												value = 0
											}
										}
										set_variable = {
											which = tmpUrbanProdState
											which = statProdUrban
										}
										multiply_variable = {
											which = tmpUrbanProdState
											value = 3
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanTradeState
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanProdState
										}
										set_variable = {
											which = tmpUrbanTradeState
											value = 0
										}
										set_variable = {
											which = tmpUrbanProdState
											value = 0
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = getBestBuildingFood
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = tempIncomeUrban
										}
										set_variable = {
											which = assessBuildingWeight
											which = tempIncreaseGrav
										}
										change_variable = {
											which = assessBuildingWeight
											which = aiWeightFort
										}
										set_variable = {
											which = "building_cost"
											value = 260
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											value = 0
										}
										set_variable = {
											which = tempIncreaseGrav
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 49
										}
										set_variable = {
											which = "building_cost"
											value = 260
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = fort_17th
											owner = {
												mil_tech = 41
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = fort_18th
											}
											NOT = {
												has_province_modifier = fort_is_building
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_building = fort_14th
												has_building = fort_15th
												has_building = fort_16th
												has_building = fort_17th
												has_building = fort_18th
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = fort_14th
													has_building = fort_15th
													has_building = fort_16th
													has_building = fort_17th
													has_building = fort_18th
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -1
										}
									}
									else = {
										set_variable = {
											which = tempChangeGravVal
											value = 0.1
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0.05
										}
										set_variable = {
											which = tempPrev
											which = urban_gravity_base
										}
										multiply_variable = {
											which = tempPrev
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNewValue
											which = tempChangeGravVal
										}
										set_variable = {
											which = tempNewMult
											which = tempChangeGravMult
										}
										change_variable = {
											which = tempNewValue
											which = urban_gravity_base
										}
										change_variable = {
											which = tempNewMult
											which = urban_gravity_percentage
										}
										set_variable = {
											which = tempNew
											which = tempNewValue
										}
										multiply_variable = {
											which = tempNew
											which = tempNewMult
										}
										set_variable = {
											which = tempIncreaseGrav
											which = tempNew
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = tempPrev
														value = 0.001
													}
												}
											}
											set_variable = {
												which = tempPrev
												value = 0.001
											}
										}
										divide_variable = {
											which = tempIncreaseGrav
											which = tempPrev
										}
										subtract_variable = {
											which = tempIncreaseGrav
											value = 1
										}
										divide_variable = {
											which = tempIncreaseGrav
											value = 2
										}
										if = {
											limit = {
												always = no
											}
											set_variable = {
												which = urban_gravity_base
												value = 0
											}
											set_variable = {
												which = urban_gravity_percentage
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											set_variable = {
												which = tempChangeGravVal
												value = 0
											}
											set_variable = {
												which = tempChangeGravMult
												value = 0
											}
										}
										set_variable = {
											which = tempPrev
											value = 0
										}
										set_variable = {
											which = tempNewValue
											value = 0
										}
										set_variable = {
											which = tempNewMult
											value = 0
										}
										set_variable = {
											which = tempNew
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											which = wealth_urban_from_pop
										}
										set_variable = {
											which = tmpUrbanTradeState
											which = wealth_urban_from_trade
										}
										multiply_variable = {
											which = tmpUrbanTradeState
											value = 4
										}
										if = {
											limit = {
												check_variable = {
													which = urban_production_power
													value = 0.004
												}
											}
											set_variable = {
												which = statProdUrban
												value = 0
											}
											change_variable = {
												which = statProdUrban
												which = urban_production_power
											}
											if = {
												limit = {
													has_province_flag = urban_goods_rank_3
												}
												multiply_variable = {
													which = statProdUrban
													value = 3.6
												}
											}
											else_if = {
												limit = {
													has_province_flag = urban_goods_rank_2
												}
												multiply_variable = {
													which = statProdUrban
													value = 3
												}
											}
											else = {
												multiply_variable = {
													which = statProdUrban
													value = 2.4
												}
											}
											multiply_variable = {
												which = statProdUrban
												value = 1.2
											}
											multiply_variable = {
												which = statProdUrban
												value = 0.1
											}
										}
										else = {
											set_variable = {
												which = statProdUrban
												value = 0
											}
										}
										set_variable = {
											which = tmpUrbanProdState
											which = statProdUrban
										}
										multiply_variable = {
											which = tmpUrbanProdState
											value = 3
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanTradeState
										}
										change_variable = {
											which = tempIncomeUrban
											which = tmpUrbanProdState
										}
										set_variable = {
											which = tmpUrbanTradeState
											value = 0
										}
										set_variable = {
											which = tmpUrbanProdState
											value = 0
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = getBestBuildingFood
										}
										multiply_variable = {
											which = tempIncreaseGrav
											which = tempIncomeUrban
										}
										set_variable = {
											which = assessBuildingWeight
											which = tempIncreaseGrav
										}
										change_variable = {
											which = assessBuildingWeight
											which = aiWeightFort
										}
										set_variable = {
											which = "building_cost"
											value = 360
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = assessBuildingWeight
											value = 1000
										}
										divide_variable = {
											which = assessBuildingWeight
											which = building_cost
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getBestBuildingBudget
														which = building_cost
													}
												}
											}
											set_variable = {
												which = multiplier
												which = getBestBuildingBudget
											}
											divide_variable = {
												which = multiplier
												which = building_cost
											}
											multiply_variable = {
												which = multiplier
												value = 0.6
											}
											change_variable = {
												which = multiplier
												value = 0.4
											}
											multiply_variable = {
												which = assessBuildingWeight
												which = multiplier
											}
											set_variable = {
												which = multiplier
												value = 0
											}
										}
										set_variable = {
											which = building_cost
											value = 0
										}
										set_variable = {
											which = tempIncomeUrban
											value = 0
										}
										set_variable = {
											which = tempIncreaseGrav
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 50
										}
										set_variable = {
											which = "building_cost"
											value = 360
										}
										set_variable = {
											which = tmpMult
											which = road_terrain_cost
										}
										change_variable = {
											which = tmpMult
											value = 1
										}
										multiply_variable = {
											which = building_cost
											which = tmpMult
										}
										set_variable = {
											which = tmpMult
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											owner = {
												dip_tech = 4
											}
											AND = {
												NOT = {
													has_building = paved_road_network
													has_building = highway_network
													has_building = road_and_rail_network
												}
											}
											NOT = {
												has_building = road_network
											}
											NOT = {
												has_province_modifier = road_is_building
											}
										}
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.05
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.2
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightRoad
									}
									set_variable = {
										which = "building_cost"
										value = 80
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									change_variable = {
										which = road_price_multiplier
										which = urban_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 2
									}
									change_variable = {
										which = road_price_multiplier
										which = rural_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 0.01
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										which = prov_radius
									}
									divide_variable = {
										which = road_province_size_multiplier
										value = 2.5
									}
									set_variable = {
										which = road_price_total_mult
										value = 1
									}
									change_variable = {
										which = road_price_total_mult
										which = road_price_multiplier
									}
									change_variable = {
										which = road_price_total_mult
										which = road_terrain_cost
									}
									change_variable = {
										which = road_price_total_mult
										which = road_province_size_multiplier
									}
									multiply_variable = {
										which = building_cost
										which = road_price_total_mult
									}
									multiply_variable = {
										which = building_cost
										value = 0.001
									}
									multiply_variable = {
										which = building_cost
										value = 1000
									}
									set_variable = {
										which = road_price_total_mult
										value = 0
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 51
										}
										set_variable = {
											which = "building_cost"
											value = 80
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										change_variable = {
											which = road_price_multiplier
											which = urban_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 2
										}
										change_variable = {
											which = road_price_multiplier
											which = rural_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 0.01
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											which = prov_radius
										}
										divide_variable = {
											which = road_province_size_multiplier
											value = 2.5
										}
										set_variable = {
											which = road_price_total_mult
											value = 1
										}
										change_variable = {
											which = road_price_total_mult
											which = road_price_multiplier
										}
										change_variable = {
											which = road_price_total_mult
											which = road_terrain_cost
										}
										change_variable = {
											which = road_price_total_mult
											which = road_province_size_multiplier
										}
										multiply_variable = {
											which = building_cost
											which = road_price_total_mult
										}
										multiply_variable = {
											which = building_cost
											value = 0.001
										}
										multiply_variable = {
											which = building_cost
											value = 1000
										}
										set_variable = {
											which = road_price_total_mult
											value = 0
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = road_network
											owner = {
												dip_tech = 13
											}
											AND = {
												NOT = {
													has_building = highway_network
													has_building = road_and_rail_network
												}
											}
											NOT = {
												has_building = paved_road_network
											}
											NOT = {
												has_province_modifier = road_is_building
											}
										}
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.05
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightRoad
									}
									set_variable = {
										which = "building_cost"
										value = 120
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									change_variable = {
										which = road_price_multiplier
										which = urban_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 2
									}
									change_variable = {
										which = road_price_multiplier
										which = rural_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 0.01
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										which = prov_radius
									}
									divide_variable = {
										which = road_province_size_multiplier
										value = 2.5
									}
									set_variable = {
										which = road_price_total_mult
										value = 1
									}
									change_variable = {
										which = road_price_total_mult
										which = road_price_multiplier
									}
									change_variable = {
										which = road_price_total_mult
										which = road_terrain_cost
									}
									change_variable = {
										which = road_price_total_mult
										which = road_province_size_multiplier
									}
									multiply_variable = {
										which = building_cost
										which = road_price_total_mult
									}
									multiply_variable = {
										which = building_cost
										value = 0.001
									}
									multiply_variable = {
										which = building_cost
										value = 1000
									}
									set_variable = {
										which = road_price_total_mult
										value = 0
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 52
										}
										set_variable = {
											which = "building_cost"
											value = 120
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										change_variable = {
											which = road_price_multiplier
											which = urban_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 2
										}
										change_variable = {
											which = road_price_multiplier
											which = rural_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 0.01
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											which = prov_radius
										}
										divide_variable = {
											which = road_province_size_multiplier
											value = 2.5
										}
										set_variable = {
											which = road_price_total_mult
											value = 1
										}
										change_variable = {
											which = road_price_total_mult
											which = road_price_multiplier
										}
										change_variable = {
											which = road_price_total_mult
											which = road_terrain_cost
										}
										change_variable = {
											which = road_price_total_mult
											which = road_province_size_multiplier
										}
										multiply_variable = {
											which = building_cost
											which = road_price_total_mult
										}
										multiply_variable = {
											which = building_cost
											value = 0.001
										}
										multiply_variable = {
											which = building_cost
											value = 1000
										}
										set_variable = {
											which = road_price_total_mult
											value = 0
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = paved_road_network
											owner = {
												dip_tech = 33
											}
											AND = {
												NOT = {
													has_building = road_and_rail_network
												}
											}
											NOT = {
												has_building = highway_network
											}
											NOT = {
												has_province_modifier = road_is_building
											}
										}
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.05
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.15
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightRoad
									}
									set_variable = {
										which = "building_cost"
										value = 180
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									change_variable = {
										which = road_price_multiplier
										which = urban_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 2
									}
									change_variable = {
										which = road_price_multiplier
										which = rural_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 0.01
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										which = prov_radius
									}
									divide_variable = {
										which = road_province_size_multiplier
										value = 2.5
									}
									set_variable = {
										which = road_price_total_mult
										value = 1
									}
									change_variable = {
										which = road_price_total_mult
										which = road_price_multiplier
									}
									change_variable = {
										which = road_price_total_mult
										which = road_terrain_cost
									}
									change_variable = {
										which = road_price_total_mult
										which = road_province_size_multiplier
									}
									multiply_variable = {
										which = building_cost
										which = road_price_total_mult
									}
									multiply_variable = {
										which = building_cost
										value = 0.001
									}
									multiply_variable = {
										which = building_cost
										value = 1000
									}
									set_variable = {
										which = road_price_total_mult
										value = 0
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 53
										}
										set_variable = {
											which = "building_cost"
											value = 180
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										change_variable = {
											which = road_price_multiplier
											which = urban_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 2
										}
										change_variable = {
											which = road_price_multiplier
											which = rural_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 0.01
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											which = prov_radius
										}
										divide_variable = {
											which = road_province_size_multiplier
											value = 2.5
										}
										set_variable = {
											which = road_price_total_mult
											value = 1
										}
										change_variable = {
											which = road_price_total_mult
											which = road_price_multiplier
										}
										change_variable = {
											which = road_price_total_mult
											which = road_terrain_cost
										}
										change_variable = {
											which = road_price_total_mult
											which = road_province_size_multiplier
										}
										multiply_variable = {
											which = building_cost
											which = road_price_total_mult
										}
										multiply_variable = {
											which = building_cost
											value = 0.001
										}
										multiply_variable = {
											which = building_cost
											value = 1000
										}
										set_variable = {
											which = road_price_total_mult
											value = 0
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											has_building = highway_network
											owner = {
												dip_tech = 50
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = road_and_rail_network
											}
											NOT = {
												has_province_modifier = road_is_building
											}
										}
									}
									set_variable = {
										which = tempChangeProdMult
										value = 0.25
									}
									set_variable = {
										which = nothing
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										which = urban_pop
									}
									multiply_variable = {
										which = tempPrevProdVal
										value = 0.05
									}
									trigger_switch = {
										on_trigger = has_building
										workshop = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 4
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.05
												}
												change_variable = {
													which = tempPrevProdVal
													value = 3.4
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.9
												}
											}
										}
										corporation_guild = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 8
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.1
												}
												change_variable = {
													which = tempPrevProdVal
													value = 6.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.95
												}
											}
										}
										urban_manufactory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 16
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.2
												}
												change_variable = {
													which = tempPrevProdVal
													value = 12.8
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1
												}
											}
										}
										factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.3
												}
												change_variable = {
													which = tempPrevProdVal
													value = 19
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.25
												}
											}
										}
										steam_powered_factory = {
											set_variable = {
												which = tempPrevProdVal
												which = urban_pop
											}
											if = {
												limit = {
													check_variable = {
														which = urban_pop
														value = 20
													}
												}
												multiply_variable = {
													which = tempPrevProdVal
													value = 0.5
												}
												change_variable = {
													which = tempPrevProdVal
													value = 20
												}
											}
											else = {
												multiply_variable = {
													which = tempPrevProdVal
													value = 1.5
												}
											}
										}
									}
									set_variable = {
										which = tempPrevProdMult
										which = urban_production_power
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrevProdVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrevProdVal
											value = 0.001
										}
									}
									divide_variable = {
										which = tempPrevProdMult
										which = tempPrevProdVal
									}
									set_variable = {
										which = tempPrev
										which = urban_production_power
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNewValue
										which = nothing
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeProdMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_production_power
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevProdMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseProd
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseProd
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseProd
										value = 1
									}
									divide_variable = {
										which = tempIncreaseProd
										value = 1
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_production_power
											value = 0
										}
										set_variable = {
											which = tempPrevProdMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = nothing
											value = 0
										}
										set_variable = {
											which = tempChangeProdMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tempIncomeProd
										which = statProdUrban
									}
									multiply_variable = {
										which = tempIncomeProd
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseProd
										which = tempIncomeProd
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.15
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.15
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseProd
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightRoad
									}
									set_variable = {
										which = "building_cost"
										value = 250
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									change_variable = {
										which = road_price_multiplier
										which = urban_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 2
									}
									change_variable = {
										which = road_price_multiplier
										which = rural_pop
									}
									multiply_variable = {
										which = road_price_multiplier
										value = 0.01
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										which = prov_radius
									}
									divide_variable = {
										which = road_province_size_multiplier
										value = 2.5
									}
									set_variable = {
										which = road_price_total_mult
										value = 1
									}
									change_variable = {
										which = road_price_total_mult
										which = road_price_multiplier
									}
									change_variable = {
										which = road_price_total_mult
										which = road_terrain_cost
									}
									change_variable = {
										which = road_price_total_mult
										which = road_province_size_multiplier
									}
									multiply_variable = {
										which = building_cost
										which = road_price_total_mult
									}
									multiply_variable = {
										which = building_cost
										value = 0.001
									}
									multiply_variable = {
										which = building_cost
										value = 1000
									}
									set_variable = {
										which = road_price_total_mult
										value = 0
									}
									set_variable = {
										which = road_price_multiplier
										value = 0
									}
									set_variable = {
										which = road_province_size_multiplier
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempPrevProdVal
										value = 0
									}
									set_variable = {
										which = tempPrevProdMult
										value = 0
									}
									set_variable = {
										which = tempIncreaseProd
										value = 0
									}
									set_variable = {
										which = tempIncomeProd
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 54
										}
										set_variable = {
											which = "building_cost"
											value = 250
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										change_variable = {
											which = road_price_multiplier
											which = urban_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 2
										}
										change_variable = {
											which = road_price_multiplier
											which = rural_pop
										}
										multiply_variable = {
											which = road_price_multiplier
											value = 0.01
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											which = prov_radius
										}
										divide_variable = {
											which = road_province_size_multiplier
											value = 2.5
										}
										set_variable = {
											which = road_price_total_mult
											value = 1
										}
										change_variable = {
											which = road_price_total_mult
											which = road_price_multiplier
										}
										change_variable = {
											which = road_price_total_mult
											which = road_terrain_cost
										}
										change_variable = {
											which = road_price_total_mult
											which = road_province_size_multiplier
										}
										multiply_variable = {
											which = building_cost
											which = road_price_total_mult
										}
										multiply_variable = {
											which = building_cost
											value = 0.001
										}
										multiply_variable = {
											which = building_cost
											value = 1000
										}
										set_variable = {
											which = road_price_total_mult
											value = 0
										}
										set_variable = {
											which = road_price_multiplier
											value = 0
										}
										set_variable = {
											which = road_province_size_multiplier
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 2
											}
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = bureaucracy_2
													has_building = bureaucracy_3
													has_building = bureaucracy_4
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_1
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = -0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightBureau
									}
									set_variable = {
										which = "building_cost"
										value = 1500
									}
									set_variable = {
										which = capital_num
										which = owner
									}
									multiply_variable = {
										which = capital_num
										value = 500
									}
									change_variable = {
										which = building_cost
										which = capital_num
									}
									set_variable = {
										which = capital_num
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 55
										}
										set_variable = {
											which = "building_cost"
											value = 1500
										}
										set_variable = {
											which = capital_num
											which = owner
										}
										multiply_variable = {
											which = capital_num
											value = 500
										}
										change_variable = {
											which = building_cost
											which = capital_num
										}
										set_variable = {
											which = capital_num
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 4
											}
											has_building = bureaucracy_1
											owner = {
												adm_tech = 1
											}
											AND = {
												NOT = {
													has_building = bureaucracy_3
													has_building = bureaucracy_4
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_2
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = -0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightBureau
									}
									set_variable = {
										which = "building_cost"
										value = 2500
									}
									set_variable = {
										which = capital_num
										which = owner
									}
									multiply_variable = {
										which = capital_num
										value = 500
									}
									change_variable = {
										which = building_cost
										which = capital_num
									}
									set_variable = {
										which = capital_num
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 56
										}
										set_variable = {
											which = "building_cost"
											value = 2500
										}
										set_variable = {
											which = capital_num
											which = owner
										}
										multiply_variable = {
											which = capital_num
											value = 500
										}
										change_variable = {
											which = building_cost
											which = capital_num
										}
										set_variable = {
											which = capital_num
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 6
											}
											has_building = bureaucracy_2
											owner = {
												adm_tech = 14
											}
											AND = {
												NOT = {
													has_building = bureaucracy_4
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_3
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = -0.05
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.15
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightBureau
									}
									set_variable = {
										which = "building_cost"
										value = 4000
									}
									set_variable = {
										which = capital_num
										which = owner
									}
									multiply_variable = {
										which = capital_num
										value = 500
									}
									change_variable = {
										which = building_cost
										which = capital_num
									}
									set_variable = {
										which = capital_num
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 57
										}
										set_variable = {
											which = "building_cost"
											value = 4000
										}
										set_variable = {
											which = capital_num
											which = owner
										}
										multiply_variable = {
											which = capital_num
											value = 500
										}
										change_variable = {
											which = building_cost
											which = capital_num
										}
										set_variable = {
											which = capital_num
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 8
											}
											has_building = bureaucracy_3
											owner = {
												adm_tech = 14
											}
											AND = {
												NOT = {
													has_building = bureaucracy_5
												}
											}
											NOT = {
												has_building = bureaucracy_4
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = -0.05
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightBureau
									}
									set_variable = {
										which = "building_cost"
										value = 7000
									}
									set_variable = {
										which = capital_num
										which = owner
									}
									multiply_variable = {
										which = capital_num
										value = 500
									}
									change_variable = {
										which = building_cost
										which = capital_num
									}
									set_variable = {
										which = capital_num
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 58
										}
										set_variable = {
											which = "building_cost"
											value = 7000
										}
										set_variable = {
											which = capital_num
											which = owner
										}
										multiply_variable = {
											which = capital_num
											value = 500
										}
										change_variable = {
											which = building_cost
											which = capital_num
										}
										set_variable = {
											which = capital_num
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											check_variable = {
												which = urban_pop
												value = 10
											}
											has_building = bureaucracy_4
											owner = {
												adm_tech = 23
											}
											AND = {
												always = yes
											}
											NOT = {
												has_building = bureaucracy_5
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = -0.05
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.25
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightBureau
									}
									set_variable = {
										which = "building_cost"
										value = 15000
									}
									set_variable = {
										which = capital_num
										which = owner
									}
									multiply_variable = {
										which = capital_num
										value = 500
									}
									change_variable = {
										which = building_cost
										which = capital_num
									}
									set_variable = {
										which = capital_num
										value = 0
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 59
										}
										set_variable = {
											which = "building_cost"
											value = 15000
										}
										set_variable = {
											which = capital_num
											which = owner
										}
										multiply_variable = {
											which = capital_num
											value = 500
										}
										change_variable = {
											which = building_cost
											which = capital_num
										}
										set_variable = {
											which = capital_num
											value = 0
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								export_to_variable = {
									which = getBestBuildingCost
									value = modifier:local_build_cost
								}
								export_to_variable = {
									which = getBestBuildingCostOwner
									value = modifier:build_cost
									who = owner
								}
								change_variable = {
									which = getBestBuildingCost
									value = 1
								}
								change_variable = {
									which = getBestBuildingCost
									which = getBestBuildingCostOwner
								}
								if = {
									limit = {
										AND = {
											AND = {
												has_province_flag = infra_calc_done
												has_port = yes
												owner = {
													dip_tech = 1
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_2
														has_building = harbour_infrastructure_3x
														has_building = harbour_infrastructure_4
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_1
												}
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_province_flag = has_great_natural_harbour
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = harbour_infrastructure_2
													has_province_flag = large_port_present
												}
											}
										}
										set_variable = {
											which = assessBuildingWeight
											value = -1
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.05
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightPort
									}
									set_variable = {
										which = "building_cost"
										value = 150
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 63
										}
										set_variable = {
											which = "building_cost"
											value = 150
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												has_building = harbour_infrastructure_1
												has_province_flag = infra_calc_done
												NOT = {
													has_province_modifier = lack_of_harbour
												}
												owner = {
													dip_tech = 4
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_3x
														has_building = harbour_infrastructure_4
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_2
												}
											}
										}
									}
									if = {
										limit = {
											NOT = {
												has_province_flag = has_great_natural_harbour
											}
											any_neighbor_province = {
												owned_by = PREV
												OR = {
													has_building = harbour_infrastructure_2
													has_province_flag = large_port_present
												}
											}
										}
										set_variable = {
											which = aiWeightPort
											value = 0
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.15
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.1
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.2
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightPort
									}
									set_variable = {
										which = "building_cost"
										value = 225
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 64
										}
										set_variable = {
											which = "building_cost"
											value = 225
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												has_building = harbour_infrastructure_2
												has_province_flag = infra_calc_done
												AND = {
													OR = {
														has_building = town_hall
														has_building = urban_infrastructure_1
														has_building = urban_infrastructure_2
														has_building = urban_infrastructure_3
														has_building = urban_infrastructure_4
														has_building = urban_infrastructure_5
													}
												}
												NOT = {
													has_province_modifier = lack_of_harbour
												}
												NOT = {
													has_province_flag = has_delta_estuary
												}
												owner = {
													dip_tech = 6
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_4
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_3x
												}
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.05
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightPort
									}
									set_variable = {
										which = "building_cost"
										value = 300
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 65
										}
										set_variable = {
											which = "building_cost"
											value = 300
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												has_building = harbour_infrastructure_3x
												has_province_flag = infra_calc_done
												AND = {
													OR = {
														has_building = urban_infrastructure_1
														has_building = urban_infrastructure_2
														has_building = urban_infrastructure_3
														has_building = urban_infrastructure_4
														has_building = urban_infrastructure_5
													}
												}
												NOT = {
													has_province_modifier = lack_of_harbour
												}
												NOT = {
													has_province_flag = has_delta_estuary
												}
												owner = {
													dip_tech = 22
												}
												AND = {
													NOT = {
														has_building = harbour_infrastructure_5
													}
												}
												NOT = {
													has_building = harbour_infrastructure_4
												}
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.05
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.05
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightPort
									}
									set_variable = {
										which = "building_cost"
										value = 450
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 66
										}
										set_variable = {
											which = "building_cost"
											value = 450
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												has_building = harbour_infrastructure_4
												has_province_flag = infra_calc_done
												AND = {
													OR = {
														has_building = urban_infrastructure_2
														has_building = urban_infrastructure_3
														has_building = urban_infrastructure_4
														has_building = urban_infrastructure_5
													}
												}
												NOT = {
													has_building = military_harbour_4
												}
												has_province_flag = has_natural_harbour
												owner = {
													dip_tech = 40
												}
												AND = {
													NOT = {
														has_building = military_harbour_4
													}
												}
												NOT = {
													has_building = harbour_infrastructure_5
												}
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.1
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.2
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0.1
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightPort
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 67
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_province_flag = infra_calc_done
											NOT = {
												has_province_modifier = lack_of_harbour
											}
											owner = {
												dip_tech = 3
											}
											AND = {
												NOT = {
													has_building = military_harbour_2
													has_building = military_harbour_3
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = military_harbour_1
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.025
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightShipyard
									}
									set_variable = {
										which = "building_cost"
										value = 250
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 68
										}
										set_variable = {
											which = "building_cost"
											value = 250
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_building = military_harbour_1
											has_province_flag = infra_calc_done
											has_province_flag = has_natural_harbour
											owner = {
												dip_tech = 6
											}
											AND = {
												NOT = {
													has_building = military_harbour_3
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = military_harbour_2
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.025
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.25
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightShipyard
									}
									set_variable = {
										which = "building_cost"
										value = 250
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 69
										}
										set_variable = {
											which = "building_cost"
											value = 250
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_building = military_harbour_2
											has_province_flag = infra_calc_done
											has_province_flag = has_natural_harbour
											owner = {
												dip_tech = 19
											}
											AND = {
												NOT = {
													has_building = military_harbour_4
												}
											}
											NOT = {
												has_building = military_harbour_3
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.025
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightShipyard
									}
									set_variable = {
										which = "building_cost"
										value = 500
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 70
										}
										set_variable = {
											which = "building_cost"
											value = 500
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
								if = {
									limit = {
										AND = {
											AND = {
												OR = {
													has_building = harbour_infrastructure_1
													has_building = harbour_infrastructure_2
													has_building = harbour_infrastructure_3x
													has_building = harbour_infrastructure_4
													has_building = harbour_infrastructure_5
												}
											}
											has_building = military_harbour_3
											has_province_flag = infra_calc_done
											NOT = {
												has_building = harbour_infrastructure_5
											}
											has_province_flag = has_great_natural_harbour
											owner = {
												dip_tech = 40
											}
											AND = {
												NOT = {
													has_building = harbour_infrastructure_5
												}
											}
											NOT = {
												has_building = military_harbour_4
											}
										}
									}
									set_variable = {
										which = tempChangeTradeVal
										value = 0
									}
									set_variable = {
										which = tempChangeTradeMult
										value = 0.025
									}
									export_to_variable = {
										which = tempPrevTradeVal
										value = modifier:province_trade_power_value
									}
									export_to_variable = {
										which = tempPrevTradeMult
										value = modifier:province_trade_power_modifier
									}
									change_variable = {
										which = tempPrevTradeMult
										value = 1
									}
									set_variable = {
										which = tempPrev
										which = tempPrevTradeVal
									}
									multiply_variable = {
										which = tempPrev
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeTradeVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeTradeMult
									}
									change_variable = {
										which = tempNewValue
										which = tempPrevTradeVal
									}
									change_variable = {
										which = tempNewMult
										which = tempPrevTradeMult
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseTrade
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseTrade
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseTrade
										value = 1
									}
									divide_variable = {
										which = tempIncreaseTrade
										value = 1.5
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempPrevTradeVal
											value = 0
										}
										set_variable = {
											which = tempPrevTradeMult
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeTradeVal
											value = 0
										}
										set_variable = {
											which = tempChangeTradeMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tempIncomeTrade
										value = 4
									}
									multiply_variable = {
										which = tempIncreaseTrade
										which = tempIncomeTrade
									}
									set_variable = {
										which = tempChangeGravVal
										value = 0.5
									}
									set_variable = {
										which = tempChangeGravMult
										value = 0
									}
									set_variable = {
										which = tempPrev
										which = urban_gravity_base
									}
									multiply_variable = {
										which = tempPrev
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNewValue
										which = tempChangeGravVal
									}
									set_variable = {
										which = tempNewMult
										which = tempChangeGravMult
									}
									change_variable = {
										which = tempNewValue
										which = urban_gravity_base
									}
									change_variable = {
										which = tempNewMult
										which = urban_gravity_percentage
									}
									set_variable = {
										which = tempNew
										which = tempNewValue
									}
									multiply_variable = {
										which = tempNew
										which = tempNewMult
									}
									set_variable = {
										which = tempIncreaseGrav
										which = tempNew
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = tempPrev
													value = 0.001
												}
											}
										}
										set_variable = {
											which = tempPrev
											value = 0.001
										}
									}
									divide_variable = {
										which = tempIncreaseGrav
										which = tempPrev
									}
									subtract_variable = {
										which = tempIncreaseGrav
										value = 1
									}
									divide_variable = {
										which = tempIncreaseGrav
										value = 2
									}
									if = {
										limit = {
											always = no
										}
										set_variable = {
											which = urban_gravity_base
											value = 0
										}
										set_variable = {
											which = urban_gravity_percentage
											value = 0
										}
									}
									if = {
										limit = {
											always = yes
										}
										set_variable = {
											which = tempChangeGravVal
											value = 0
										}
										set_variable = {
											which = tempChangeGravMult
											value = 0
										}
									}
									set_variable = {
										which = tempPrev
										value = 0
									}
									set_variable = {
										which = tempNewValue
										value = 0
									}
									set_variable = {
										which = tempNewMult
										value = 0
									}
									set_variable = {
										which = tempNew
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										which = wealth_urban_from_pop
									}
									set_variable = {
										which = tmpUrbanTradeState
										which = wealth_urban_from_trade
									}
									multiply_variable = {
										which = tmpUrbanTradeState
										value = 4
									}
									if = {
										limit = {
											check_variable = {
												which = urban_production_power
												value = 0.004
											}
										}
										set_variable = {
											which = statProdUrban
											value = 0
										}
										change_variable = {
											which = statProdUrban
											which = urban_production_power
										}
										if = {
											limit = {
												has_province_flag = urban_goods_rank_3
											}
											multiply_variable = {
												which = statProdUrban
												value = 3.6
											}
										}
										else_if = {
											limit = {
												has_province_flag = urban_goods_rank_2
											}
											multiply_variable = {
												which = statProdUrban
												value = 3
											}
										}
										else = {
											multiply_variable = {
												which = statProdUrban
												value = 2.4
											}
										}
										multiply_variable = {
											which = statProdUrban
											value = 1.2
										}
										multiply_variable = {
											which = statProdUrban
											value = 0.1
										}
									}
									else = {
										set_variable = {
											which = statProdUrban
											value = 0
										}
									}
									set_variable = {
										which = tmpUrbanProdState
										which = statProdUrban
									}
									multiply_variable = {
										which = tmpUrbanProdState
										value = 3
									}
									set_variable = {
										which = statProdUrban
										value = 0
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanTradeState
									}
									change_variable = {
										which = tempIncomeUrban
										which = tmpUrbanProdState
									}
									set_variable = {
										which = tmpUrbanTradeState
										value = 0
									}
									set_variable = {
										which = tmpUrbanProdState
										value = 0
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = getBestBuildingFood
									}
									multiply_variable = {
										which = tempIncreaseGrav
										which = tempIncomeUrban
									}
									set_variable = {
										which = assessBuildingWeight
										which = tempIncreaseTrade
									}
									change_variable = {
										which = assessBuildingWeight
										which = tempIncreaseGrav
									}
									change_variable = {
										which = assessBuildingWeight
										which = aiWeightShipyard
									}
									set_variable = {
										which = "building_cost"
										value = 600
									}
									multiply_variable = {
										which = assessBuildingWeight
										value = 1000
									}
									divide_variable = {
										which = assessBuildingWeight
										which = building_cost
									}
									multiply_variable = {
										which = building_cost
										which = getBestBuildingCost
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getBestBuildingBudget
													which = building_cost
												}
											}
										}
										set_variable = {
											which = multiplier
											which = getBestBuildingBudget
										}
										divide_variable = {
											which = multiplier
											which = building_cost
										}
										multiply_variable = {
											which = multiplier
											value = 0.6
										}
										change_variable = {
											which = multiplier
											value = 0.4
										}
										multiply_variable = {
											which = assessBuildingWeight
											which = multiplier
										}
										set_variable = {
											which = multiplier
											value = 0
										}
									}
									set_variable = {
										which = building_cost
										value = 0
									}
									set_variable = {
										which = tempIncreaseTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeTrade
										value = 0
									}
									set_variable = {
										which = tempIncomeUrban
										value = 0
									}
									set_variable = {
										which = tempIncreaseGrav
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = assessBuildingWeight
												which = getBestBuildingWeight
											}
										}
										set_variable = {
											which = getBestBuildingWeight
											which = assessBuildingWeight
										}
										set_variable = {
											which = getBestBuildingBuildInd
											value = 71
										}
										set_variable = {
											which = "building_cost"
											value = 600
										}
										multiply_variable = {
											which = building_cost
											which = getBestBuildingCost
										}
										set_variable = {
											which = getBestBuildingBuildPrice
											which = building_cost
										}
										set_variable = {
											which = building_cost
											value = 0
										}
									}
									set_variable = {
										which = assessBuildingPrice
										value = 0
									}
									set_variable = {
										which = assessBuildingWeight
										value = 0
									}
								}
							}
							set_variable = {
								which = aiDoSpendingInd
								which = getBestBuildingBuildInd
							}
							set_variable = {
								which = aiDoSpendingPrice
								which = getBestBuildingBuildPrice
							}
							set_variable = {
								which = aiDoSpendingWeight
								which = getBestBuildingWeight
							}
							set_variable = {
								which = getBestBuildingWeight
								value = 0
							}
							set_variable = {
								which = getBestBuildingBuildInd
								value = 0
							}
							set_variable = {
								which = getBestBuildingBuildPrice
								value = 0
							}
							set_variable = {
								which = getBestBuildingFood
								value = 0
							}
							set_variable = {
								which = getBestBuildingCost
								value = 0
							}
							set_variable = {
								which = getBestBuildingCostOwner
								value = 0
							}
							set_variable = {
								which = getBestBuildingBudget
								value = 0
							}
						}
					}
				}
				set_country_flag = aiDoSpendingItr
				while = {
					limit = {
						has_country_flag = aiDoSpendingItr
					}
					clr_country_flag = aiDoSpendingItr
					set_variable = {
						which = aiDoSpendingWeight
						value = -2147483
					}
					save_event_target_as = aiDoSpendingBest
					every_owned_province = {
						if = {
							limit = {
								is_city = yes
							}
							if = {
								limit = {
									check_variable = {
										which = aiDoSpendingWeight
										which = event_target:aiDoSpendingBest
									}
								}
								if = {
									limit = {
										always = no
									}
									event_target:aiDoSpendingBest = {
										set_variable = {
											which = aiDoSpendingWeight
											value = 0
										}
									}
								}
								save_event_target_as = aiDoSpendingBest
							}
							else_if = {
								limit = {
									always = no
								}
								set_variable = {
									which = aiDoSpendingWeight
									value = 0
								}
							}
						}
						else_if = {
							limit = {
								always = no
							}
							set_variable = {
								which = aiDoSpendingWeight
								value = 0
							}
						}
					}
					if = {
						limit = {
							always = no
						}
						event_target:aiDoSpendingBest = {
							set_variable = {
								which = aiDoSpendingWeight
								value = 0
							}
						}
					}
					set_variable = {
						which = aiDoSpendingWeight
						value = -1
					}
					event_target:aiDoSpendingBest = {
						set_variable = {
							which = check
							value = 1
						}
						owner = {
							export_to_variable = {
								which = aiDoSpendingTreasury
								value = treasury
							}
							export_to_variable = {
								which = aiTreasuryVanillaLimit
								value = monthly_income
							}
							multiply_variable = {
								which = aiTreasuryVanillaLimit
								value = 3
							}
							change_variable = {
								which = aiTreasuryVanillaLimit
								value = 200
							}
							if = {
								limit = {
									has_country_flag = aiHasActionWarchest
								}
								multiply_variable = {
									which = aiTreasuryVanillaLimit
									value = 2
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = aiDoSpendingTreasury
											which = aiTreasuryVanillaLimit
										}
									}
								}
								set_variable = {
									which = aiDoSpendingTreasury
									value = 0
								}
							}
							else = {
								subtract_variable = {
									which = aiDoSpendingTreasury
									which = aiTreasuryVanillaLimit
								}
							}
							change_variable = {
								which = aiDoSpendingTreasury
								which = aiTreasuryGeneral
							}
							PREV = {
								set_variable = {
									which = aiDoSpendingTreasury
									which = PREV
								}
							}
							if = {
								limit = {
									NOT = {
										is_variable_equal = {
											which = check
											value = 1
										}
									}
								}
								set_variable = {
									which = aiDoSpendingTreasury
									value = 0
								}
							}
							set_variable = {
								which = aiTreasuryVanillaLimit
								value = 0
							}
						}
						set_variable = {
							which = check
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = aiDoSpendingInd
									value = 1
								}
								check_variable = {
									which = aiDoSpendingTreasury
									which = aiDoSpendingPrice
								}
							}
							set_variable = {
								which = tempSpend
								which = aiDoSpendingPrice
							}
							owner = {
								set_variable = {
									which = tempSpend
									which = PREV
								}
								if = {
									limit = {
										check_variable = {
											which = tempSpend
											which = aiTreasuryGeneral
										}
									}
									export_to_variable = {
										which = aiTreasuryVanilla
										value = treasury
									}
									subtract_variable = {
										which = tempSpend
										which = aiTreasuryGeneral
									}
									if = {
										limit = {
											check_variable = {
												which = aiTreasuryVanilla
												which = tempSpend
											}
										}
										subtract_variable = {
											which = aiTreasuryVanilla
											which = tempSpend
										}
										export_to_variable = {
											which = tempTreasuryChange
											value = treasury
										}
										subtract_variable = {
											which = tempTreasuryChange
											which = aiTreasuryVanilla
										}
										if = {
											limit = {
												check_variable = {
													which = tempTreasuryChange
													value = 0
												}
											}
											set_variable = {
												which = ducat_cost
												which = tempTreasuryChange
											}
											while = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 65536
													}
												}
												add_treasury = -65536
												subtract_variable = {
													which = ducat_cost
													value = 65536
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 32768
													}
												}
												add_treasury = -32768
												subtract_variable = {
													which = ducat_cost
													value = 32768
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 16384
													}
												}
												add_treasury = -16384
												subtract_variable = {
													which = ducat_cost
													value = 16384
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 8192
													}
												}
												add_treasury = -8192
												subtract_variable = {
													which = ducat_cost
													value = 8192
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 4096
													}
												}
												add_treasury = -4096
												subtract_variable = {
													which = ducat_cost
													value = 4096
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 2048
													}
												}
												add_treasury = -2048
												subtract_variable = {
													which = ducat_cost
													value = 2048
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 1024
													}
												}
												add_treasury = -1024
												subtract_variable = {
													which = ducat_cost
													value = 1024
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 512
													}
												}
												add_treasury = -512
												subtract_variable = {
													which = ducat_cost
													value = 512
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 256
													}
												}
												add_treasury = -256
												subtract_variable = {
													which = ducat_cost
													value = 256
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 128
													}
												}
												add_treasury = -128
												subtract_variable = {
													which = ducat_cost
													value = 128
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 64
													}
												}
												add_treasury = -64
												subtract_variable = {
													which = ducat_cost
													value = 64
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 32
													}
												}
												add_treasury = -32
												subtract_variable = {
													which = ducat_cost
													value = 32
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 16
													}
												}
												add_treasury = -16
												subtract_variable = {
													which = ducat_cost
													value = 16
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 8
													}
												}
												add_treasury = -8
												subtract_variable = {
													which = ducat_cost
													value = 8
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 4
													}
												}
												add_treasury = -4
												subtract_variable = {
													which = ducat_cost
													value = 4
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 2
													}
												}
												add_treasury = -2
												subtract_variable = {
													which = ducat_cost
													value = 2
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 1
													}
												}
												add_treasury = -1
												subtract_variable = {
													which = ducat_cost
													value = 1
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 0.5
													}
												}
												add_treasury = -0.5
												subtract_variable = {
													which = ducat_cost
													value = 0.5
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 0.25
													}
												}
												add_treasury = -0.25
												subtract_variable = {
													which = ducat_cost
													value = 0.25
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_cost
														value = 0.125
													}
												}
												add_treasury = -0.125
												subtract_variable = {
													which = ducat_cost
													value = 0.125
												}
											}
											set_variable = {
												which = ducat_cost
												value = 0
											}
										}
										else = {
											set_variable = {
												which = ducat_gain
												which = tempTreasuryChange
											}
											multiply_variable = {
												which = ducat_gain
												value = -1
											}
											while = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 65536
													}
												}
												add_treasury = 65536
												subtract_variable = {
													which = ducat_gain
													value = 65536
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 32768
													}
												}
												add_treasury = 32768
												subtract_variable = {
													which = ducat_gain
													value = 32768
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 16384
													}
												}
												add_treasury = 16384
												subtract_variable = {
													which = ducat_gain
													value = 16384
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 8192
													}
												}
												add_treasury = 8192
												subtract_variable = {
													which = ducat_gain
													value = 8192
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 4096
													}
												}
												add_treasury = 4096
												subtract_variable = {
													which = ducat_gain
													value = 4096
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 2048
													}
												}
												add_treasury = 2048
												subtract_variable = {
													which = ducat_gain
													value = 2048
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 1024
													}
												}
												add_treasury = 1024
												subtract_variable = {
													which = ducat_gain
													value = 1024
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 512
													}
												}
												add_treasury = 512
												subtract_variable = {
													which = ducat_gain
													value = 512
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 256
													}
												}
												add_treasury = 256
												subtract_variable = {
													which = ducat_gain
													value = 256
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 128
													}
												}
												add_treasury = 128
												subtract_variable = {
													which = ducat_gain
													value = 128
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 64
													}
												}
												add_treasury = 64
												subtract_variable = {
													which = ducat_gain
													value = 64
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 32
													}
												}
												add_treasury = 32
												subtract_variable = {
													which = ducat_gain
													value = 32
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 16
													}
												}
												add_treasury = 16
												subtract_variable = {
													which = ducat_gain
													value = 16
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 8
													}
												}
												add_treasury = 8
												subtract_variable = {
													which = ducat_gain
													value = 8
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 4
													}
												}
												add_treasury = 4
												subtract_variable = {
													which = ducat_gain
													value = 4
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 2
													}
												}
												add_treasury = 2
												subtract_variable = {
													which = ducat_gain
													value = 2
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 1
													}
												}
												add_treasury = 1
												subtract_variable = {
													which = ducat_gain
													value = 1
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 0.5
													}
												}
												add_treasury = 0.5
												subtract_variable = {
													which = ducat_gain
													value = 0.5
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 0.25
													}
												}
												add_treasury = 0.25
												subtract_variable = {
													which = ducat_gain
													value = 0.25
												}
											}
											if = {
												limit = {
													check_variable = {
														which = ducat_gain
														value = 0.125
													}
												}
												add_treasury = 0.125
												subtract_variable = {
													which = ducat_gain
													value = 0.125
												}
											}
											set_variable = {
												which = ducat_gain
												value = 0
											}
										}
										set_variable = {
											which = tempTreasuryChange
											value = 0
										}
									}
									else = {
										change_variable = {
											which = aiErrorDoTreasuryaiDoSpendingPrice
											value = 1
										}
									}
									set_variable = {
										which = aiTreasuryGeneral
										value = 0
									}
									set_variable = {
										which = aiTreasuryVanilla
										value = 0
									}
								}
								else = {
									subtract_variable = {
										which = aiTreasuryGeneral
										which = tempSpend
									}
								}
								set_variable = {
									which = tempSpend
									value = 0
								}
							}
							set_variable = {
								which = tempSpend
								value = 0
							}
							if = {
								limit = {
									NOT = {
										is_variable_equal = {
											which = aiDoSpendingInd
											value = 0
										}
									}
								}
								if = {
									limit = {
										owner = {
											ai = no
										}
									}
									add_province_modifier = {
										name = something_built
										duration = 1
									}
								}
								if = {
									limit = {
										check_variable = {
											which = aiDoSpendingInd
											value = 68
										}
									}
									if = {
										limit = {
											has_global_flag = aiTesting
										}
										add_permanent_province_modifier = {
											name = ai_built_shipyard
											duration = -1
										}
									}
									else = {
										add_province_modifier = {
											name = ai_built_shipyard
											duration = 1825
										}
									}
								}
								else_if = {
									limit = {
										check_variable = {
											which = aiDoSpendingInd
											value = 63
										}
									}
									if = {
										limit = {
											has_global_flag = aiTesting
										}
										add_permanent_province_modifier = {
											name = built_harbour
											duration = -1
										}
									}
									else = {
										add_province_modifier = {
											name = built_harbour
											duration = 1825
										}
									}
								}
								else_if = {
									limit = {
										check_variable = {
											which = aiDoSpendingInd
											value = 60
										}
									}
									if = {
										limit = {
											has_global_flag = aiTesting
										}
										add_permanent_province_modifier = {
											name = built_canal
											duration = -1
										}
									}
									else = {
										add_province_modifier = {
											name = built_canal
											duration = 1825
										}
									}
								}
								else_if = {
									limit = {
										check_variable = {
											which = aiDoSpendingInd
											value = 55
										}
									}
									if = {
										limit = {
											has_global_flag = aiTesting
										}
										add_permanent_province_modifier = {
											name = ai_built_bureau
											duration = -1
										}
									}
									else = {
										add_province_modifier = {
											name = ai_built_bureau
											duration = 1825
										}
									}
								}
								else_if = {
									limit = {
										check_variable = {
											which = aiDoSpendingInd
											value = 51
										}
									}
									if = {
										limit = {
											has_global_flag = aiTesting
										}
										add_permanent_province_modifier = {
											name = road_built_recently
											duration = -1
										}
									}
									else = {
										add_province_modifier = {
											name = road_built_recently
											duration = 1825
										}
									}
								}
								else_if = {
									limit = {
										check_variable = {
											which = aiDoSpendingInd
											value = 46
										}
									}
									if = {
										limit = {
											has_global_flag = aiTesting
										}
										add_permanent_province_modifier = {
											name = built_fort
											duration = -1
										}
									}
									else = {
										add_province_modifier = {
											name = built_fort
											duration = 1825
										}
									}
								}
								if = {
									limit = {
										check_variable = {
											which = aiDoSpendingInd
											value = 36
										}
									}
									if = {
										limit = {
											check_variable = {
												which = aiDoSpendingInd
												value = 54
											}
										}
										if = {
											limit = {
												check_variable = {
													which = aiDoSpendingInd
													value = 63
												}
											}
											if = {
												limit = {
													check_variable = {
														which = aiDoSpendingInd
														value = 67
													}
												}
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 69
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 70
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = aiDoSpendingInd
																	value = 71
																}
															}
															add_building = military_harbour_4
														}
														else = {
															add_building = military_harbour_3
														}
													}
													else = {
														add_building = military_harbour_2
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 68
															}
														}
														add_building = military_harbour_1
													}
													else = {
														add_building = harbour_infrastructure_5
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 65
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 66
															}
														}
														add_building = harbour_infrastructure_4
													}
													else = {
														add_building = harbour_infrastructure_3x
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 64
															}
														}
														add_building = harbour_infrastructure_2
													}
													else = {
														add_building = harbour_infrastructure_1
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = aiDoSpendingInd
														value = 58
													}
												}
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 60
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 61
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = aiDoSpendingInd
																	value = 62
																}
															}
															province_event = {
																id = POP_dev_button_interactions.408
															}
														}
														else = {
															province_event = {
																id = POP_dev_button_interactions.408
															}
														}
													}
													else = {
														province_event = {
															id = POP_dev_button_interactions.408
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 59
															}
														}
														add_building = bureaucracy_5
														remove_building = bureaucracy_4
													}
													else = {
														add_building = bureaucracy_4
														remove_building = bureaucracy_3
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 56
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 57
															}
														}
														add_building = bureaucracy_3
														remove_building = bureaucracy_2
													}
													else = {
														add_building = bureaucracy_2
														remove_building = bureaucracy_1
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 55
															}
														}
														add_building = bureaucracy_1
													}
													else = {
														province_event = {
															id = POP_dev_button_interactions.006
														}
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												check_variable = {
													which = aiDoSpendingInd
													value = 45
												}
											}
											if = {
												limit = {
													check_variable = {
														which = aiDoSpendingInd
														value = 49
													}
												}
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 51
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 52
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = aiDoSpendingInd
																	value = 53
																}
															}
															province_event = {
																id = POP_dev_button_interactions.006
															}
														}
														else = {
															province_event = {
																id = POP_dev_button_interactions.006
															}
														}
													}
													else = {
														province_event = {
															id = POP_dev_button_interactions.006
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 50
															}
														}
														province_event = {
															id = POP_dev_button_interactions.106
														}
													}
													else = {
														province_event = {
															id = POP_dev_button_interactions.106
														}
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 47
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 48
															}
														}
														province_event = {
															id = POP_dev_button_interactions.106
														}
													}
													else = {
														province_event = {
															id = POP_dev_button_interactions.106
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 46
															}
														}
														province_event = {
															id = POP_dev_button_interactions.106
														}
													}
													else = {
														multiply_variable = {
															which = farm_efficiency_ducats_invested
															value = 1.1
														}
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = aiDoSpendingInd
														value = 40
													}
												}
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 42
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 43
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = aiDoSpendingInd
																	value = 44
																}
															}
															add_building = rural_infrastructure_7
														}
														else = {
															add_building = rural_infrastructure_6
														}
													}
													else = {
														add_building = rural_infrastructure_5
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 41
															}
														}
														add_building = rural_infrastructure_4
													}
													else = {
														add_building = rural_infrastructure_3
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 38
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 39
															}
														}
														add_building = rural_infrastructure_2
													}
													else = {
														add_building = rural_infrastructure_1
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 37
															}
														}
														add_building = great_temple
													}
													else = {
														add_building = temple
													}
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											check_variable = {
												which = aiDoSpendingInd
												value = 18
											}
										}
										if = {
											limit = {
												check_variable = {
													which = aiDoSpendingInd
													value = 27
												}
											}
											if = {
												limit = {
													check_variable = {
														which = aiDoSpendingInd
														value = 31
													}
												}
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 33
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 34
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = aiDoSpendingInd
																	value = 35
																}
															}
															add_building = opera
														}
														else = {
															add_building = fine_arts_academy
														}
													}
													else = {
														add_building = art_corporation
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 32
															}
														}
														add_building = big_university
													}
													else = {
														add_building = medium_university
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 29
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 30
															}
														}
														add_building = small_university
													}
													else = {
														add_building = warehouse_district
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 28
															}
														}
														add_building = warehouse
													}
													else = {
														add_building = steam_powered_factory
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = aiDoSpendingInd
														value = 22
													}
												}
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 24
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 25
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = aiDoSpendingInd
																	value = 26
																}
															}
															add_building = factory
														}
														else = {
															add_building = urban_manufactory
														}
													}
													else = {
														add_building = corporation_guild
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 23
															}
														}
														add_building = workshop
													}
													else = {
														add_building = stock_exchange
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 20
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 21
															}
														}
														add_building = bank
													}
													else = {
														add_building = customs_house
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 19
															}
														}
														add_building = trade_depot
													}
													else = {
														add_building = merchant_guild
													}
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												check_variable = {
													which = aiDoSpendingInd
													value = 9
												}
											}
											if = {
												limit = {
													check_variable = {
														which = aiDoSpendingInd
														value = 13
													}
												}
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 15
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 16
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = aiDoSpendingInd
																	value = 17
																}
															}
															add_building = marketplace
														}
														else = {
															add_building = harbour_infrastructure_5
														}
													}
													else = {
														add_building = harbour_infrastructure_4
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 14
															}
														}
														add_building = harbour_infrastructure_3x
													}
													else = {
														add_building = harbour_infrastructure_2
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 11
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 12
															}
														}
														add_building = harbour_infrastructure_1
													}
													else = {
														add_building = urban_infrastructure_5
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 10
															}
														}
														add_building = urban_infrastructure_4
													}
													else = {
														add_building = urban_infrastructure_3
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = aiDoSpendingInd
														value = 5
													}
												}
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 7
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 8
															}
														}
														add_building = urban_infrastructure_2
													}
													else = {
														add_building = urban_infrastructure_1
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 6
															}
														}
														add_building = town_hall
													}
													else = {
														add_building = mines_5
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = aiDoSpendingInd
															value = 3
														}
													}
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 4
															}
														}
														add_building = mines_4
													}
													else = {
														add_building = mines_3
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = aiDoSpendingInd
																value = 2
															}
														}
														add_building = mines_2
													}
													else = {
														add_building = mines_1
													}
												}
											}
										}
									}
								}
								if = {
									limit = {
										owner = {
											ai = no
											has_country_flag = build_info_events
										}
									}
									if = {
										limit = {
											is_variable_equal = {
												which = aiDoSpendingInd
												which = estateBuildInd
											}
										}
										set_variable = {
											which = prov_built
											which = estateBuildInd
										}
										set_variable = {
											which = prov_built_cost
											which = estateBuildPrice
										}
										set_variable = {
											which = prov_built_event
											value = 2
										}
										province_event = {
											id = MT_general_fixes.102
										}
									}
									else_if = {
										limit = {
											is_variable_equal = {
												which = aiDoSpendingInd
												which = provAIBuildInd
											}
										}
										set_variable = {
											which = prov_built
											which = provAIBuildInd
										}
										set_variable = {
											which = prov_built_cost
											which = provAIBuildPrice
										}
										set_variable = {
											which = prov_built_event
											value = 1
										}
										province_event = {
											id = MT_general_fixes.101
										}
									}
									else_if = {
										limit = {
											is_variable_equal = {
												which = aiDoSpendingInd
												which = aiDoSpendingInd
											}
										}
										set_variable = {
											which = prov_built
											which = aiDoSpendingInd
										}
										set_variable = {
											which = prov_built_cost
											which = aiDoSpendingPrice
										}
										set_variable = {
											which = prov_built_event
											value = 4
										}
										province_event = {
											id = MT_general_fixes.104
										}
									}
								}
							}
							PREV = {
								set_country_flag = aiDoSpendingItr
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = aiDoSpendingInd
											value = 38
										}
									}
								}
								remove_province_modifier = ai_built_city
								if = {
									limit = {
										has_global_flag = aiTesting
									}
									add_permanent_province_modifier = {
										name = ai_built_city
										duration = -1
									}
								}
								else = {
									add_province_modifier = {
										name = ai_built_city
										duration = 1825
									}
								}
								set_variable = {
									which = aiTestBuildCitySpent
									which = aiDoSpendingPrice
								}
								owner = {
									change_variable = {
										which = aiTestBuildCitySpent
										which = PREV
									}
								}
								set_variable = {
									which = aiTestBuildCitySpent
									value = 0
								}
							}
							else_if = {
								limit = {
									NOT = {
										check_variable = {
											which = aiDoSpendingInd
											value = 51
										}
									}
								}
								set_variable = {
									which = aiTestBuildFortsSpent
									which = aiDoSpendingPrice
								}
								owner = {
									change_variable = {
										which = aiTestBuildFortsSpent
										which = PREV
									}
								}
								set_variable = {
									which = aiTestBuildFortsSpent
									value = 0
								}
							}
							else_if = {
								limit = {
									NOT = {
										check_variable = {
											which = aiDoSpendingInd
											value = 55
										}
									}
								}
								set_variable = {
									which = aiTestBuildRoadSpent
									which = aiDoSpendingPrice
								}
								owner = {
									change_variable = {
										which = aiTestBuildRoadSpent
										which = PREV
									}
								}
								set_variable = {
									which = aiTestBuildRoadSpent
									value = 0
								}
							}
							else_if = {
								limit = {
									NOT = {
										check_variable = {
											which = aiDoSpendingInd
											value = 60
										}
									}
								}
								set_variable = {
									which = aiTestBuildBureauSpent
									which = aiDoSpendingPrice
								}
								owner = {
									change_variable = {
										which = aiTestBuildBureauSpent
										which = PREV
									}
								}
								set_variable = {
									which = aiTestBuildBureauSpent
									value = 0
								}
							}
							else_if = {
								limit = {
									NOT = {
										check_variable = {
											which = aiDoSpendingInd
											value = 63
										}
									}
								}
								set_variable = {
									which = aiTestBuildCanalSpent
									which = aiDoSpendingPrice
								}
								owner = {
									change_variable = {
										which = aiTestBuildCanalSpent
										which = PREV
									}
								}
								set_variable = {
									which = aiTestBuildCanalSpent
									value = 0
								}
							}
							else_if = {
								limit = {
									NOT = {
										check_variable = {
											which = aiDoSpendingInd
											value = 68
										}
									}
								}
								set_variable = {
									which = aiTestBuildPortSpent
									which = aiDoSpendingPrice
								}
								owner = {
									change_variable = {
										which = aiTestBuildPortSpent
										which = PREV
									}
								}
								set_variable = {
									which = aiTestBuildPortSpent
									value = 0
								}
							}
							else = {
								set_variable = {
									which = aiTestBuildShipyardSpent
									which = aiDoSpendingPrice
								}
								owner = {
									change_variable = {
										which = aiTestBuildShipyardSpent
										which = PREV
									}
								}
								set_variable = {
									which = aiTestBuildShipyardSpent
									value = 0
								}
							}
						}
						set_variable = {
							which = aiDoSpendingTreasury
							value = 0
						}
					}
				}
				every_owned_province = {
					set_variable = {
						which = aiDoSpendingWeight
						value = 0
					}
					set_variable = {
						which = aiDoSpendingInd
						value = 0
					}
					set_variable = {
						which = aiDoSpendingSpent
						value = 0
					}
					set_variable = {
						which = aiWeightFort
						value = 0
					}
					set_variable = {
						which = aiWeightPort
						value = 0
					}
					set_variable = {
						which = aiWeightShipyard
						value = 0
					}
					set_variable = {
						which = aiWeightRoad
						value = 0
					}
					set_variable = {
						which = aiWeightBureau
						value = 0
					}
				}
			}
			if = {
				limit = {
					has_country_flag = aiHasActionMoveCapital
				}
				every_owned_province = {
					limit = {
						is_city = yes
					}
					set_variable = {
						which = travel_time_reduced
						value = 0
					}
					trigger_switch = {
						on_trigger = has_building
						road_network = {
							trigger_switch = {
								on_trigger = has_province_flag
								favorable_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 0.25
									}
								}
								challenging_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 0.5
									}
								}
								rugged_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 1.5
									}
								}
							}
						}
						paved_road_network = {
							trigger_switch = {
								on_trigger = has_province_flag
								favorable_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 0.5
									}
								}
								challenging_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 1
									}
								}
								rugged_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 2
									}
								}
							}
						}
						highway_network = {
							trigger_switch = {
								on_trigger = has_province_flag
								favorable_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 0.75
									}
								}
								challenging_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 1.5
									}
								}
								rugged_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 3
									}
								}
							}
						}
						road_and_rail_network = {
							trigger_switch = {
								on_trigger = has_province_flag
								favorable_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 1.5
									}
								}
								challenging_terrain = {
									if = {
										limit = {
											OR = {
												AND = {
													OR = {
														has_terrain = grass_hills
														has_terrain = shrub_hills
														has_terrain = wood_hills
														has_terrain = forest_hills
														has_terrain = desert_hills
														has_terrain = jungle_hills
													}
												}
												has_terrain = tundra
											}
										}
										set_variable = {
											which = travel_time_reduced
											value = 3
										}
									}
									else = {
										set_variable = {
											which = travel_time_reduced
											value = 2.5
										}
									}
								}
								rugged_terrain = {
									set_variable = {
										which = travel_time_reduced
										value = 4.5
									}
								}
							}
						}
					}
					set_variable = {
						which = prov_rad
						which = travel_time_terrain_base
					}
					subtract_variable = {
						which = prov_rad
						which = travel_time_reduced
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = prov_rad
									value = 0.01
								}
							}
						}
						set_variable = {
							which = prov_rad
							value = 0.01
						}
					}
					multiply_variable = {
						which = prov_rad
						which = prov_radius
					}
					multiply_variable = {
						which = prov_rad
						value = 0.2
					}
					if = {
						limit = {
							OR = {
								AND = {
									AND = {
										OR = {
											owner = {
												is_nomad = yes
											}
											controller = {
												is_nomad = yes
											}
										}
									}
									ROOT = {
										is_nomad = yes
									}
								}
								AND = {
									OR = {
										owner = {
											culture_group = east_slavic
										}
										controller = {
											culture_group = east_slavic
										}
									}
									ROOT = {
										culture_group = east_slavic
									}
									OR = {
										superregion = greater_russia_superregion
										superregion = central_asia_superregion
										superregion = eastern_steppe_superregion
									}
								}
							}
							has_province_flag = nomad_speed_boost
							NOT = {
								has_building = road_and_rail_network
							}
							check_variable = {
								which = prov_rad
								value = 0.001
							}
						}
						divide_variable = {
							which = prov_rad
							value = 3
						}
					}
					set_variable = {
						which = prov_factor
						which = prov_rad
					}
					multiply_variable = {
						which = prov_factor
						value = 0.5
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = prov_rad
									value = 0.01
								}
							}
						}
						set_variable = {
							which = prov_rad
							value = 0.01
						}
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = prov_factor
									value = 0.01
								}
							}
						}
						set_variable = {
							which = prov_factor
							value = 0.01
						}
					}
					change_variable = {
						which = prov_factor
						value = 1
					}
					if = {
						limit = {
							always = yes
							has_province_flag = large_port_present
						}
						set_variable = {
							which = travel_time_sailing_modifier
							value = 0
						}
						trigger_switch = {
							on_trigger = has_building
							harbour_infrastructure_2 = {
								set_variable = {
									which = travel_time_sailing_modifier
									value = 1
								}
							}
							harbour_infrastructure_3x = {
								set_variable = {
									which = travel_time_sailing_modifier
									value = 0.8
								}
							}
							harbour_infrastructure_4 = {
								set_variable = {
									which = travel_time_sailing_modifier
									value = 0.65
								}
							}
							harbour_infrastructure_5 = {
								set_variable = {
									which = travel_time_sailing_modifier
									value = 0.5
								}
							}
						}
						trigger_switch = {
							on_trigger = has_province_flag
							has_small_natural_harbour = {
								subtract_variable = {
									which = travel_time_sailing_modifier
									value = 0.05
								}
							}
							has_great_natural_harbour = {
								subtract_variable = {
									which = travel_time_sailing_modifier
									value = 0.15
								}
							}
						}
					}
					set_variable = {
						which = getCapitalWeightBase
						which = devPointTotal
					}
					divide_variable = {
						which = getCapitalWeightBase
						value = 2
					}
					set_variable = {
						which = getCapitalWeightNeighb
						value = 0
					}
					set_variable = {
						which = travel_time_reduced
						value = 0
					}
					set_variable = {
						which = prov_rad
						value = 0
					}
				}
				set_variable = {
					which = getCapitalWeightItr
					value = 5
				}
				while = {
					limit = {
						check_variable = {
							which = getCapitalWeightItr
							value = 1
						}
					}
					subtract_variable = {
						which = getCapitalWeightItr
						value = 1
					}
					every_owned_province = {
						limit = {
							is_city = yes
						}
						set_variable = {
							which = getCapitalWeightReceive
							value = 0
						}
						set_variable = {
							which = getCapitalWeightDistance
							which = prov_factor
						}
						every_neighbor_province = {
							limit = {
								owned_by = PREV
								is_city = yes
							}
							set_variable = {
								which = getCapitalWeightReceive
								which = getCapitalWeightBase
							}
							change_variable = {
								which = getCapitalWeightReceive
								which = getCapitalWeightNeighb
							}
							set_variable = {
								which = getCapitalWeightDistance
								which = PREV
							}
							change_variable = {
								which = getCapitalWeightDistance
								which = prov_factor
							}
							divide_variable = {
								which = getCapitalWeightReceive
								which = getCapitalWeightDistance
							}
							PREV = {
								change_variable = {
									which = getCapitalWeightReceive
									which = PREV
								}
							}
							set_variable = {
								which = getCapitalWeightReceive
								value = 0
							}
							set_variable = {
								which = getCapitalWeightDistance
								value = 0
							}
						}
						set_variable = {
							which = getCapitalWeightDistance
							value = 0
						}
						if = {
							limit = {
								always = yes
								has_province_flag = large_port_present
							}
							set_variable = {
								which = itr
								value = 3
							}
							sea_zone = {
								set_variable = {
									which = itr
									which = PREV
								}
								set_province_flag = spread_sea_dist
								set_province_flag = has_sea_dist
								while = {
									limit = {
										check_variable = {
											which = itr
											value = 1
										}
									}
									subtract_variable = {
										which = itr
										value = 1
									}
									portgroup = {
										limit = {
											has_province_flag = spread_sea_dist
										}
										clr_province_flag = spread_sea_dist
										portgroup = {
											limit = {
												NOT = {
													has_province_flag = has_sea_dist
												}
												has_province_flag = sea_neighbor_of_@PREV
											}
											set_province_flag = has_sea_dist
											set_province_flag = set_spread
											set_variable = {
												which = sea_dist
												which = PREV
											}
											change_variable = {
												which = sea_dist
												value = 1
											}
										}
									}
									if = {
										limit = {
											check_variable = {
												which = itr
												value = 1
											}
										}
										portgroup = {
											limit = {
												has_province_flag = set_spread
											}
											clr_province_flag = set_spread
											set_province_flag = spread_sea_dist
										}
									}
									else = {
										portgroup = {
											limit = {
												has_province_flag = set_spread
											}
											clr_province_flag = set_spread
										}
									}
								}
							}
							set_variable = {
								which = itr
								value = 0
							}
							set_variable = {
								which = inform_sender
								which = travel_time_sailing_modifier
							}
							save_event_target_as = getCapitalWeightPort
							owner = {
								every_owned_province = {
									limit = {
										has_province_flag = large_port_present
										sea_zone = {
											has_province_flag = has_sea_dist
										}
										NOT = {
											province_id = event_target:getCapitalWeightPort
											any_neighbor_province = {
												province_id = event_target:getCapitalWeightPort
											}
										}
									}
									set_variable = {
										which = inform_sender
										which = event_target:getCapitalWeightPort
									}
									change_variable = {
										which = inform_sender
										which = travel_time_sailing_modifier
									}
									divide_variable = {
										which = inform_sender
										value = 2
									}
									sea_zone = {
										PREV = {
											set_variable = {
												which = sea_dist
												which = PREV
											}
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = sea_dist
													value = 2
												}
											}
										}
										event_target:getCapitalWeightPort = {
											set_variable = {
												which = Xdiff
												which = x_coord
											}
											set_variable = {
												which = Ydiff
												which = y_coord
											}
										}
										set_variable = {
											which = Xdiff
											which = x_coord
										}
										set_variable = {
											which = Ydiff
											which = y_coord
										}
										subtract_variable = {
											which = Xdiff
											which = event_target:getCapitalWeightPort
										}
										subtract_variable = {
											which = Ydiff
											which = event_target:getCapitalWeightPort
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = Xdiff
														value = 0
													}
												}
											}
											multiply_variable = {
												which = Xdiff
												value = -1
											}
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = Ydiff
														value = 0
													}
												}
											}
											multiply_variable = {
												which = Ydiff
												value = -1
											}
										}
										event_target:getCapitalWeightPort = {
											set_variable = {
												which = Xdiff
												value = 0
											}
											set_variable = {
												which = Ydiff
												value = 0
											}
										}
										set_variable = {
											which = XYsum
											value = 0.001
										}
										change_variable = {
											which = XYsum
											which = Xdiff
										}
										change_variable = {
											which = XYsum
											which = Ydiff
										}
										set_variable = {
											which = XYmult
											which = Xdiff
										}
										multiply_variable = {
											which = XYmult
											which = Ydiff
										}
										multiply_variable = {
											which = XYmult
											value = 1.135
										}
										if = {
											limit = {
												is_variable_equal = {
													which = XYsum
													value = 0
												}
											}
											set_variable = {
												which = XYsum
												value = 0.001
											}
										}
										divide_variable = {
											which = XYmult
											which = XYsum
										}
										subtract_variable = {
											which = XYsum
											which = XYmult
										}
										set_variable = {
											which = distance
											which = XYsum
										}
										set_variable = {
											which = XYsum
											value = 0
										}
										set_variable = {
											which = XYmult
											value = 0
										}
										set_variable = {
											which = Xdiff
											value = 0
										}
										set_variable = {
											which = Ydiff
											value = 0
										}
										multiply_variable = {
											which = distance
											value = 0.125
										}
									}
									else = {
										multiply_variable = {
											which = distance
											which = sea_dist
										}
										multiply_variable = {
											which = distance
											value = 10
										}
									}
									change_variable = {
										which = distance
										value = 3
									}
									multiply_variable = {
										which = distance
										which = inform_sender
									}
									multiply_variable = {
										which = distance
										value = 3
									}
									set_variable = {
										which = getCapitalWeightReceive
										which = getCapitalWeightBase
									}
									change_variable = {
										which = getCapitalWeightReceive
										which = getCapitalWeightNeighb
									}
									divide_variable = {
										which = getCapitalWeightReceive
										which = distance
									}
									event_target:getCapitalWeightPort = {
										change_variable = {
											which = getCapitalWeightReceive
											which = PREV
										}
									}
									set_variable = {
										which = distance
										value = 0
									}
									set_variable = {
										which = getCapitalWeightReceive
										value = 0
									}
									set_variable = {
										which = sea_dist
										value = 0
									}
									set_variable = {
										which = inform_sender
										value = 0
									}
								}
							}
							portgroup = {
								limit = {
									has_province_flag = has_sea_dist
								}
								clr_province_flag = has_sea_dist
								set_variable = {
									which = sea_dist
									value = 0
								}
							}
						}
						set_variable = {
							which = getCapitalWeightSave
							which = getCapitalWeightReceive
						}
						set_variable = {
							which = getCapitalWeightReceive
							value = 0
						}
					}
					every_owned_province = {
						limit = {
							is_city = yes
						}
						set_variable = {
							which = getCapitalWeightNeighb
							which = getCapitalWeightSave
						}
						set_variable = {
							which = getCapitalWeightSave
							value = 0
						}
					}
				}
				every_owned_province = {
					limit = {
						is_city = yes
					}
					set_variable = {
						which = aiDoMoveCapitalWeight
						which = getCapitalWeightBase
					}
					change_variable = {
						which = aiDoMoveCapitalWeight
						which = getCapitalWeightNeighb
					}
					if = {
						limit = {
							is_capital = yes
						}
						multiply_variable = {
							which = aiDoMoveCapitalWeight
							value = 1.35
						}
						change_variable = {
							which = aiDoMoveCapitalWeight
							value = 5
						}
					}
					trigger_switch = {
						on_trigger = has_province_flag
						good_natural_place = {
							change_variable = {
								which = aiDoMoveCapitalWeight
								value = 1
							}
						}
						great_natural_place = {
							multiply_variable = {
								which = aiDoMoveCapitalWeight
								value = 1.2
							}
							change_variable = {
								which = aiDoMoveCapitalWeight
								value = 3
							}
						}
						awesome_natural_place = {
							multiply_variable = {
								which = aiDoMoveCapitalWeight
								value = 1.35
							}
							change_variable = {
								which = aiDoMoveCapitalWeight
								value = 5
							}
						}
					}
					trigger_switch = {
						on_trigger = has_building
						bureaucracy_1 = {
							multiply_variable = {
								which = aiDoMoveCapitalWeight
								value = 1.2
							}
							change_variable = {
								which = aiDoMoveCapitalWeight
								value = 3
							}
						}
						bureaucracy_2 = {
							multiply_variable = {
								which = aiDoMoveCapitalWeight
								value = 1.4
							}
							change_variable = {
								which = aiDoMoveCapitalWeight
								value = 6
							}
						}
						bureaucracy_3 = {
							multiply_variable = {
								which = aiDoMoveCapitalWeight
								value = 1.6
							}
							change_variable = {
								which = aiDoMoveCapitalWeight
								value = 10
							}
						}
						bureaucracy_4 = {
							multiply_variable = {
								which = aiDoMoveCapitalWeight
								value = 1.8
							}
							change_variable = {
								which = aiDoMoveCapitalWeight
								value = 15
							}
						}
						bureaucracy_5 = {
							multiply_variable = {
								which = aiDoMoveCapitalWeight
								value = 2
							}
							change_variable = {
								which = aiDoMoveCapitalWeight
								value = 20
							}
						}
					}
					divide_variable = {
						which = aiDoMoveCapitalWeight
						value = 15
					}
					set_variable = {
						which = prov_factor
						value = 0
					}
					set_variable = {
						which = travel_time_sailing_modifier
						value = 0
					}
					set_variable = {
						which = getCapitalWeightBase
						value = 0
					}
					set_variable = {
						which = getCapitalWeightNeighb
						value = 0
					}
				}
				set_variable = {
					which = aiDoMoveCapitalWeight
					value = -2147483
				}
				save_event_target_as = aiDoMoveCapitalBest
				every_owned_province = {
					if = {
						limit = {
							is_state = yes
						}
						if = {
							limit = {
								check_variable = {
									which = aiDoMoveCapitalWeight
									which = event_target:aiDoMoveCapitalBest
								}
							}
							if = {
								limit = {
									always = yes
								}
								event_target:aiDoMoveCapitalBest = {
									set_variable = {
										which = aiDoMoveCapitalWeight
										value = 0
									}
								}
							}
							save_event_target_as = aiDoMoveCapitalBest
						}
						else_if = {
							limit = {
								always = yes
							}
							set_variable = {
								which = aiDoMoveCapitalWeight
								value = 0
							}
						}
					}
					else_if = {
						limit = {
							always = yes
						}
						set_variable = {
							which = aiDoMoveCapitalWeight
							value = 0
						}
					}
				}
				if = {
					limit = {
						always = yes
					}
					event_target:aiDoMoveCapitalBest = {
						set_variable = {
							which = aiDoMoveCapitalWeight
							value = 0
						}
					}
				}
				event_target:aiDoMoveCapitalBest = {
					if = {
						limit = {
							is_capital = no
						}
						set_province_flag = aiDoMoveCapitalMoved@owner
						if = {
							limit = {
								NOT = {
									has_building = bureaucracy_1
									has_building = bureaucracy_2
									has_building = bureaucracy_3
									has_building = bureaucracy_4
									has_building = bureaucracy_5
								}
							}
							owner = {
								capital_scope = {
									trigger_switch = {
										on_trigger = has_building
										bureaucracy_1 = {
											remove_building = bureaucracy_1
											event_target:aiDoMoveCapitalBest = {
												add_building = bureaucracy_1
											}
										}
										bureaucracy_2 = {
											remove_building = bureaucracy_2
											event_target:aiDoMoveCapitalBest = {
												add_building = bureaucracy_2
											}
										}
										bureaucracy_3 = {
											remove_building = bureaucracy_3
											event_target:aiDoMoveCapitalBest = {
												add_building = bureaucracy_3
											}
										}
										bureaucracy_4 = {
											remove_building = bureaucracy_4
											event_target:aiDoMoveCapitalBest = {
												add_building = bureaucracy_4
											}
										}
										bureaucracy_5 = {
											remove_building = bureaucracy_5
											event_target:aiDoMoveCapitalBest = {
												add_building = bureaucracy_5
											}
										}
									}
								}
							}
						}
						owner = {
							hidden_effect = {
								capital_scope = {
									if = {
										limit = {
											has_province_modifier = misc_expenses_5242.88
										}
										remove_province_modifier = misc_expenses_5242.88
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_2621.44
										}
										remove_province_modifier = misc_expenses_2621.44
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_1310.72
										}
										remove_province_modifier = misc_expenses_1310.72
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_655.36
										}
										remove_province_modifier = misc_expenses_655.36
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_327.68
										}
										remove_province_modifier = misc_expenses_327.68
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_163.84
										}
										remove_province_modifier = misc_expenses_163.84
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_81.92
										}
										remove_province_modifier = misc_expenses_81.92
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_40.96
										}
										remove_province_modifier = misc_expenses_40.96
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_20.48
										}
										remove_province_modifier = misc_expenses_20.48
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_10.24
										}
										remove_province_modifier = misc_expenses_10.24
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_5.12
										}
										remove_province_modifier = misc_expenses_5.12
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_2.56
										}
										remove_province_modifier = misc_expenses_2.56
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_1.28
										}
										remove_province_modifier = misc_expenses_1.28
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_0.64
										}
										remove_province_modifier = misc_expenses_0.64
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_0.32
										}
										remove_province_modifier = misc_expenses_0.32
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_0.16
										}
										remove_province_modifier = misc_expenses_0.16
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_0.08
										}
										remove_province_modifier = misc_expenses_0.08
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_0.04
										}
										remove_province_modifier = misc_expenses_0.04
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_0.02
										}
										remove_province_modifier = misc_expenses_0.02
									}
									if = {
										limit = {
											has_province_modifier = misc_expenses_0.01
										}
										remove_province_modifier = misc_expenses_0.01
									}
									set_variable = {
										which = misc_expenses_cache
										value = 0
									}
								}
							}
							if = {
								limit = {
									is_part_of_hre = yes
									ROOT = {
										is_part_of_hre = no
									}
								}
								set_in_empire = no
								swap_non_generic_missions = yes
								emperor = {
									add_opinion = {
										who = ROOT
										modifier = hre_province_left
									}
								}
								add_imperial_influence = -1
							}
							set_capital = PREV
							hidden_effect = {
								country_event = {
									id = miscexpenses.002
								}
							}
						}
					}
				}
			}
			if = {
				limit = {
					has_country_flag = aiHasActionImpStab
				}
				if = {
					limit = {
						NOT = {
							has_country_modifier = stability_policy_cooltime
						}
					}
					set_variable = {
						which = aiHasActionImpStabNum
						value = 1
					}
					if = {
						limit = {
							has_country_flag = aiHasActionEstRevoke
						}
						set_variable = {
							which = aiHasActionImpStabNum
							value = 2
						}
					}
					else_if = {
						limit = {
							stability = 3
						}
						set_variable = {
							which = aiHasActionImpStabNum
							value = 0
						}
					}
					else_if = {
						limit = {
							stability = -1
							NOT = {
								stability = 0
							}
						}
						set_variable = {
							which = aiHasActionImpStabNum
							value = 2
						}
					}
					else = {
						set_country_flag = aiHasActionImpStabCris
						set_variable = {
							which = aiHasActionImpStabNum
							value = 3
						}
					}
					if = {
						limit = {
							check_variable = {
								which = aiHasActionImpStabNum
								value = 1
							}
						}
						change_variable = {
							which = aiTestDoImpStab
							which = aiHasActionImpStabNum
						}
						add_country_modifier = {
							name = stability_policy_cooltime
							duration = 1825
						}
						remove_country_modifier = stability_policy_1
						remove_country_modifier = stability_policy_2
						remove_country_modifier = stability_policy_3
						if = {
							limit = {
								check_variable = {
									which = aiHasActionImpStabNum
									value = 3
								}
							}
							add_country_modifier = {
								name = stability_policy_3
								duration = -1
							}
						}
						else_if = {
							limit = {
								check_variable = {
									which = aiHasActionImpStabNum
									value = 2
								}
							}
							add_country_modifier = {
								name = stability_policy_2
								duration = -1
							}
						}
						else = {
							add_country_modifier = {
								name = stability_policy_1
								duration = -1
							}
						}
						export_to_variable = {
							which = aiHasActionImpStabADM
							value = ADM
						}
						export_to_variable = {
							which = aiHasActionImpStabDIP
							value = DIP
						}
						export_to_variable = {
							which = aiHasActionImpStabMIL
							value = MIL
						}
						while = {
							limit = {
								check_variable = {
									which = aiHasActionImpStabNum
									value = 1
								}
							}
							subtract_variable = {
								which = aiHasActionImpStabNum
								value = 1
							}
							if = {
								limit = {
									check_variable = {
										which = aiHasActionImpStabADM
										which = aiHasActionImpStabDIP
									}
								}
								if = {
									limit = {
										check_variable = {
											which = aiHasActionImpStabADM
											which = aiHasActionImpStabMIL
										}
									}
									add_adm_power = -60
									subtract_variable = {
										which = aiHasActionImpStabADM
										value = 1
									}
								}
								else = {
									add_mil_power = -60
									subtract_variable = {
										which = aiHasActionImpStabMIL
										value = 1
									}
								}
							}
							else = {
								if = {
									limit = {
										check_variable = {
											which = aiHasActionImpStabDIP
											which = aiHasActionImpStabMIL
										}
									}
									add_dip_power = -60
									subtract_variable = {
										which = aiHasActionImpStabDIP
										value = 1
									}
								}
								else = {
									add_mil_power = -60
									subtract_variable = {
										which = aiHasActionImpStabMIL
										value = 1
									}
								}
							}
						}
						set_variable = {
							which = aiHasActionImpStabADM
							value = 0
						}
						set_variable = {
							which = aiHasActionImpStabDIP
							value = 0
						}
						set_variable = {
							which = aiHasActionImpStabMIL
							value = 0
						}
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionImpStabCris
					}
					clr_country_flag = aiHasActionImpStabCris
					if = {
						limit = {
							absolutism = 10
							NOT = {
								stability = 1
							}
							OR = {
								ADM = 3
								advisor = statesman
							}
							is_at_war = no
							NOT = {
								has_country_modifier = stability_cooldown_decent
							}
						}
						add_absolutism = -10
						custom_tooltip = stability_points_gained_50
						hidden_effect = {
							change_variable = {
								which = stability_points
								value = 50
							}
							country_event = {
								id = POP_Stability.002
							}
						}
						add_country_modifier = {
							name = "appeased_with_decentralization"
							duration = 1825
						}
						add_country_modifier = {
							name = "stability_cooldown_decent"
							duration = 1825
						}
						add_adm_power = -100
					}
				}
			}
			if = {
				limit = {
					has_country_flag = aiHasActionEstRevoke
				}
				if = {
					limit = {
						stability = 1
						check_variable = {
							which = estate_lesser_nobles_weight_share
							value = 0.05
						}
						check_variable = {
							which = privilege_corruption_LN
							value = 0.001
						}
						NOT = {
							check_variable = {
								which = LN_privileges_time_left
								value = 1
							}
						}
					}
					country_event = {
						id = POP_AI.103
						days = 2
					}
				}
				if = {
					limit = {
						NOT = {
							AND = {
								has_country_flag = aiHasActionEstDemote
								OR = {
									stability = 2
									AND = {
										stability = 1
										NOT = {
											average_effective_unrest = 5
										}
									}
								}
								is_at_war = no
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 0.31
								}
								NOT = {
									check_variable = {
										which = promote_demote_nobles_time_left
										value = 12
									}
								}
							}
						}
						stability = 1
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.05
						}
						check_variable = {
							which = privilege_corruption_GN
							value = 0.001
						}
						NOT = {
							check_variable = {
								which = GN_privileges_time_left
								value = 1
							}
						}
					}
					country_event = {
						id = POP_AI.104
						days = 62
					}
				}
				if = {
					limit = {
						stability = 1
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.05
						}
						check_variable = {
							which = privilege_corruption_BG
							value = 0.001
						}
						NOT = {
							check_variable = {
								which = BG_privileges_time_left
								value = 1
							}
						}
					}
					country_event = {
						id = POP_AI.105
						days = 122
					}
				}
			}
			if = {
				limit = {
					has_country_flag = aiHasActionEstGrant
				}
				if = {
					limit = {
						OR = {
							NOT = {
								stability = -2
							}
							AND = {
								NOT = {
									stability = -1
								}
								average_effective_unrest = 8
							}
							NOT = {
								check_variable = {
									which = estate_burghers_loyalty
									value = 0.11
								}
							}
						}
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.05
						}
						NOT = {
							check_variable = {
								which = BG_privileges_time_left
								value = 1
							}
						}
					}
					country_event = {
						id = POP_AI.106
						days = 2
					}
				}
				if = {
					limit = {
						OR = {
							NOT = {
								stability = -2
							}
							AND = {
								NOT = {
									stability = -1
								}
								average_effective_unrest = 8
							}
							NOT = {
								has_country_flag = aiHasActionEstDemote
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.11
								}
							}
						}
						check_variable = {
							which = estate_lesser_nobles_weight_share
							value = 0.05
						}
						NOT = {
							check_variable = {
								which = LN_privileges_time_left
								value = 1
							}
						}
					}
					country_event = {
						id = POP_AI.107
						days = 4
					}
				}
				if = {
					limit = {
						OR = {
							NOT = {
								stability = -2
							}
							AND = {
								NOT = {
									stability = -1
								}
								average_effective_unrest = 8
							}
							NOT = {
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 0.11
								}
							}
						}
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.05
						}
						NOT = {
							check_variable = {
								which = GN_privileges_time_left
								value = 1
							}
						}
					}
					country_event = {
						id = POP_AI.108
						days = 6
					}
				}
			}
			if = {
				limit = {
					has_country_flag = aiHasActionEstDemote
				}
				if = {
					limit = {
						OR = {
							stability = 2
							AND = {
								stability = 1
								NOT = {
									average_effective_unrest = 5
								}
							}
						}
						is_at_war = no
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 0.31
						}
						OR = {
							NOT = {
								has_country_flag = aiHasAgendaInvasion
								has_country_flag = aiHasAgendaDefense
							}
							AND = {
								NOT = {
									has_country_flag = aiHasAgendaInvasion
								}
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 0.4
								}
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.56
								}
							}
							AND = {
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 0.6
								}
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.7
								}
							}
						}
						NOT = {
							check_variable = {
								which = promote_demote_nobles_time_left
								value = 1
							}
						}
					}
					change_variable = {
						which = aiTestDoEstDemote
						value = 1
					}
					country_event = {
						id = POP_Estates_Interactions.008
					}
				}
			}
			if = {
				limit = {
					has_country_flag = aiHasActionEstFavor
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.05
						}
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 0.11
						}
						NOT = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.65
							}
							check_variable = {
								which = GN_favor_time_left
								value = 1
							}
						}
						OR = {
							NOT = {
								corruption = 10
							}
							variable_arithmetic_trigger = {
								export_to_variable = {
									which = tmpPrestige
									value = prestige
								}
								divide_variable = {
									which = tmpPrestige
									value = 60
								}
								check_variable = {
									which = tmpPrestige
									which = estate_greater_nobles_weight_share
								}
							}
						}
					}
					change_variable = {
						which = aiTestDoEstFavorGN
						value = 1
					}
					country_event = {
						id = POP_Estates_Interactions.003
					}
				}
				if = {
					limit = {
						NOT = {
							has_country_flag = aiHasActionEstDemote
						}
						check_variable = {
							which = estate_lesser_nobles_weight_share
							value = 0.05
						}
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0.11
						}
						NOT = {
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.65
							}
							check_variable = {
								which = LN_favor_time_left
								value = 1
							}
						}
						OR = {
							NOT = {
								corruption = 10
							}
							variable_arithmetic_trigger = {
								export_to_variable = {
									which = tmpPrestige
									value = prestige
								}
								divide_variable = {
									which = tmpPrestige
									value = 60
								}
								check_variable = {
									which = tmpPrestige
									which = estate_lesser_nobles_weight_share
								}
							}
						}
					}
					change_variable = {
						which = aiTestDoEstFavorLN
						value = 1
					}
					country_event = {
						id = POP_Estates_Interactions.103
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.05
						}
						check_variable = {
							which = estate_burghers_loyalty
							value = 0.11
						}
						NOT = {
							check_variable = {
								which = estate_burghers_loyalty
								value = 0.65
							}
							check_variable = {
								which = BG_favor_time_left
								value = 1
							}
						}
					}
					change_variable = {
						which = aiTestDoEstFavorBG
						value = 1
					}
					country_event = {
						id = POP_Estates_Interactions.203
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_tribals_weight_share
							value = 0.05
						}
						NOT = {
							check_variable = {
								which = estate_tribals_loyalty
								value = 0.65
							}
							check_variable = {
								which = TR_favor_time_left
								value = 1
							}
						}
					}
					change_variable = {
						which = aiTestDoEstFavorTR
						value = 1
					}
					country_event = {
						id = POP_Estates_Interactions.402
					}
				}
			}
			if = {
				limit = {
					has_country_flag = aiHasActionEstDemand
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.05
						}
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 0.36
						}
						NOT = {
							check_variable = {
								which = GN_demand_support_time_left
								value = 1
							}
						}
					}
					change_variable = {
						which = aiTestDoEstDemandGN
						value = 1
					}
					country_event = {
						id = POP_Estates_Interactions.005
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_weight_share
							value = 0.05
						}
						OR = {
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.36
							}
							AND = {
								has_country_flag = aiHasActionEstDemote
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.11
								}
								NOT = {
									check_variable = {
										which = estate_lesser_nobles_loyalty
										value = 0.41
									}
								}
							}
						}
						NOT = {
							check_variable = {
								which = LN_demand_support_time_left
								value = 1
							}
						}
					}
					change_variable = {
						which = aiTestDoEstDemandLN
						value = 1
					}
					country_event = {
						id = POP_Estates_Interactions.105
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.05
						}
						check_variable = {
							which = estate_burghers_loyalty
							value = 0.36
						}
						NOT = {
							check_variable = {
								which = BG_demand_support_time_left
								value = 1
							}
						}
					}
					change_variable = {
						which = aiTestDoEstDemandBG
						value = 1
					}
					country_event = {
						id = POP_Estates_Interactions.205
					}
				}
			}
			if = {
				limit = {
					has_country_flag = aiHasActionDecWar
				}
				save_event_target_as = aiDoDecWarRoot
				save_event_target_as = getPlanInvTarg
				every_owned_province = {
					limit = {
						NOT = {
							has_province_modifier = martial_law
						}
					}
					every_neighbor_province = {
						limit = {
							NOT = {
								owned_by = event_target:getPlanInvTarg
								owner = {
									OR = {
										is_subject_of = event_target:getPlanInvTarg
										overlord = {
											is_subject_of = event_target:getPlanInvTarg
										}
									}
								}
							}
						}
						set_province_flag = getPlanInvCheck
						owner = {
							set_country_flag = getPlanInvCheck
						}
					}
				}
				every_subject_country = {
					limit = {
						AND = {
							is_subject = yes
							NOT = {
								is_subject_of_type = tributary_state
							}
							NOT = {
								is_subject_of_type = close_tributary_state
							}
						}
					}
					every_owned_province = {
						limit = {
							NOT = {
								has_province_modifier = martial_law
							}
						}
						every_neighbor_province = {
							limit = {
								NOT = {
									owned_by = event_target:getPlanInvTarg
									owner = {
										OR = {
											is_subject_of = event_target:getPlanInvTarg
											overlord = {
												is_subject_of = event_target:getPlanInvTarg
											}
										}
									}
								}
							}
							set_province_flag = getPlanInvCheck
							owner = {
								set_country_flag = getPlanInvCheck
							}
						}
					}
				}
				save_event_target_as = aiDoDecWarTarg
				if = {
					limit = {
						always = yes
					}
					export_to_variable = {
						which = AIMiscArmySize
						value = army_size
					}
				}
				else = {
					set_variable = {
						which = AIMiscArmySize
						value = 0
					}
				}
				export_to_variable = {
					which = AIMiscLFL
					value = land_forcelimit
				}
				export_to_variable = {
					which = AIMiscManpow
					value = manpower
				}
				set_variable = {
					which = AIMiscArmyEstate
					value = 0
				}
				if = {
					limit = {
						check_variable = {
							which = estate_tribals_loyalty
							value = 0.11
						}
					}
					set_variable = {
						which = tmpArmyTR
						which = estate_tribals_infantry_host
					}
					change_variable = {
						which = tmpArmyTR
						which = estate_tribals_cavalry_host
					}
					multiply_variable = {
						which = tmpArmyTR
						value = 1.25
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = tmpArmyTR
					}
					set_variable = {
						which = tmpArmyTR
						value = 0
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 0.11
						}
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_infantry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_cavalry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_artillery_total
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0.11
						}
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_infantry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_cavalry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_artillery_total
					}
				}
				multiply_variable = {
					which = AIMiscArmyEstate
					value = 0.85
				}
				if = {
					limit = {
						always = no
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = AIMiscManpow
									which = AIMiscLFL
								}
							}
						}
						subtract_variable = {
							which = AIMiscLFL
							which = AIMiscManpow
						}
						multiply_variable = {
							which = AIMiscLFL
							value = 0.15
						}
						multiply_variable = {
							which = AIMiscManpow
							value = 0.3
						}
					}
					else = {
						subtract_variable = {
							which = AIMiscManpow
							which = AIMiscLFL
						}
						multiply_variable = {
							which = AIMiscManpow
							value = 0.15
						}
						multiply_variable = {
							which = AIMiscLFL
							value = 0.3
						}
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscLFL
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscManpow
					}
				}
				if = {
					limit = {
						always = yes
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscArmyEstate
					}
				}
				set_variable = {
					which = armySizeCheck
					which = AIMiscArmySize
				}
				set_variable = {
					which = AIMiscArmySize
					value = 0
				}
				set_variable = {
					which = AIMiscLFL
					value = 0
				}
				set_variable = {
					which = AIMiscManpow
					value = 0
				}
				set_variable = {
					which = AIMiscArmyEstate
					value = 0
				}
				subtract_variable = {
					which = armySizeCheck
					value = 1
				}
				divide_variable = {
					which = armySizeCheck
					value = 2.5
				}
				set_variable = {
					which = getPlanInvVal
					value = 0.001
				}
				if = {
					limit = {
						is_subject = yes
					}
					trigger_switch = {
						on_trigger = is_subject_of_type
						vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						colony = {
							capital_scope = {
								save_event_target_as = getPlanInvTarg_cap
							}
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
										primitives = yes
										any_owned_province = {
											colonial_region = event_target:getPlanInvTarg_cap
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						daimyo_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									OR = {
										overlord_of = PREV
										AND = {
											is_subject = yes
											NOT = {
												is_subject_of_type = daimyo_vassal
											}
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						centralised_daimyo_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						warlord = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									OR = {
										overlord_of = PREV
										overlord = {
											overlord_of = event_target:getPlanInvTarg
										}
										NOT = {
											is_subject_of_type = warlord
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						personal_union = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						permanent_union = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						appanage_subject = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
										AND = {
											overlord = {
												overlord_of = event_target:getPlanInvTarg
											}
											is_subject_of_type = appanage_subject
											is_subject_of_type = autonomous_vassal
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						autonomous_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
										AND = {
											overlord = {
												overlord_of = event_target:getPlanInvTarg
											}
											is_subject_of_type = appanage_subject
											is_subject_of_type = autonomous_vassal
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						decentralized_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						rebellious_decentralized_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
										is_subject = no
										AND = {
											overlord = {
												overlord_of = event_target:getPlanInvTarg
											}
											is_subject_of_type = decentralized_vassal
											is_subject_of_type = rebellious_decentralized_vassal
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						subjugated_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
										AND = {
											overlord = {
												overlord_of = event_target:getPlanInvTarg
											}
											is_subject_of_type = decentralized_vassal
											is_subject_of_type = rebellious_decentralized_vassal
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						rebellious_subjugated_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									overlord = {
										overlord_of = event_target:getPlanInvTarg
									}
									NOT = {
										is_subject_of_type = decentralized_vassal
										is_subject_of_type = rebellious_decentralized_vassal
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						tributary_state = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									OR = {
										overlord_of = PREV
										AND = {
											overlord = {
												overlord_of = event_target:getPlanInvTarg
											}
											NOT = {
												is_subject_of_type = tributary_state
											}
										}
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						close_tributary_state = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						march = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						overseas_fief = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						roman_territories = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						client_vassal = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						client_march = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
						protectorate = {
							every_country = {
								limit = {
									has_country_flag = getPlanInvCheck
									NOT = {
										overlord_of = PREV
									}
								}
								clr_country_flag = getPlanInvCheck
								every_owned_province = {
									clr_province_flag = getPlanInvCheck
								}
							}
						}
					}
				}
				every_country = {
					limit = {
						has_country_flag = getPlanInvCheck
					}
					clr_country_flag = getPlanInvCheck
					if = {
						limit = {
							NOT = {
								AND = {
									event_target:getPlanInvTarg = {
										is_subject = yes
									}
									OR = {
										AND = {
											is_subject = no
										}
									}
								}
								overlord = {
									is_subject_of = event_target:getPlanInvTarg
								}
								AND = {
									is_part_of_hre = yes
									event_target:getPlanInvTarg = {
										is_part_of_hre = yes
									}
									OR = {
										event_target:getPlanInvTarg = {
											is_emperor = yes
										}
										hre_reform_level = 6
									}
								}
								AND = {
									event_target:getPlanInvTarg = {
										religion = catholic
									}
									OR = {
										tag = PAP
										overlord = {
											OR = {
												tag = PAP
												tag = PA2
											}
										}
									}
								}
								AND = {
									has_global_flag = hundred_years_war
									OR = {
										AND = {
											event_target:getPlanInvTarg = {
												tag = FRA
											}
											NOT = {
												tag = ENG
												is_subject_of = ENG
											}
										}
										AND = {
											event_target:getPlanInvTarg = {
												tag = ENG
											}
											NOT = {
												tag = FRA
												is_subject_of = FRA
												tag = SCO
												is_subject_of = SCO
												tag = TLI
												is_subject_of = TLI
											}
										}
									}
								}
							}
						}
						save_event_target_as = getPlanInvTargDef
						PREV = {
							set_country_flag = aiInitDiploRelated
							if = {
								limit = {
									always = yes
								}
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:getPlanInvTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
							if = {
								limit = {
									always = no
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
										}
										if = {
											limit = {
												is_subject = yes
											}
											overlord = {
												if = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
															}
														}
													}
												}
											}
										}
										else = {
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
													}
												}
											}
										}
									}
								}
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							every_country = {
								limit = {
									has_country_flag = aiInitDiploRelated
								}
								clr_country_flag = aiInitDiploRelated
								if = {
									limit = {
										always = yes
									}
									if = {
										limit = {
											always = yes
										}
										export_to_variable = {
											which = AIMiscArmySize
											value = army_size
										}
									}
									else = {
										set_variable = {
											which = AIMiscArmySize
											value = 0
										}
									}
									export_to_variable = {
										which = AIMiscLFL
										value = land_forcelimit
									}
									export_to_variable = {
										which = AIMiscManpow
										value = manpower
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = estate_tribals_loyalty
												value = 0.11
											}
										}
										set_variable = {
											which = tmpArmyTR
											which = estate_tribals_infantry_host
										}
										change_variable = {
											which = tmpArmyTR
											which = estate_tribals_cavalry_host
										}
										multiply_variable = {
											which = tmpArmyTR
											value = 1.25
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = tmpArmyTR
										}
										set_variable = {
											which = tmpArmyTR
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_greater_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_artillery_total
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_lesser_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_artillery_total
										}
									}
									multiply_variable = {
										which = AIMiscArmyEstate
										value = 0.85
									}
									if = {
										limit = {
											always = yes
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = AIMiscManpow
														which = AIMiscLFL
													}
												}
											}
											subtract_variable = {
												which = AIMiscLFL
												which = AIMiscManpow
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.3
											}
										}
										else = {
											subtract_variable = {
												which = AIMiscManpow
												which = AIMiscLFL
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.3
											}
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscLFL
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscManpow
										}
									}
									if = {
										limit = {
											always = yes
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscArmyEstate
										}
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										which = AIMiscArmySize
									}
									set_variable = {
										which = AIMiscArmySize
										value = 0
									}
									set_variable = {
										which = AIMiscLFL
										value = 0
									}
									set_variable = {
										which = AIMiscManpow
										value = 0
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									export_to_variable = {
										which = AIMiscMilTech
										value = mil_tech
									}
									export_to_variable = {
										which = AIMiscLandMorale
										value = modifier:land_morale
									}
									export_to_variable = {
										which = AIMiscDisc
										value = modifier:discipline
									}
									multiply_variable = {
										which = AIMiscMilTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscLandMorale
										value = 2
									}
									multiply_variable = {
										which = AIMiscDisc
										value = 5
									}
									change_variable = {
										which = AIMiscMilTech
										value = 1
									}
									change_variable = {
										which = AIMiscLandMorale
										value = 1
									}
									change_variable = {
										which = AIMiscDisc
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscMilTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscLandMorale
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscDisc
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploArmyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscMilTech
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
									}
									set_variable = {
										which = AIMiscMilTech
										value = 0
									}
									set_variable = {
										which = AIMiscLandMorale
										value = 0
									}
									set_variable = {
										which = AIMiscDisc
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploArmyQual
										value = 0
									}
								}
								if = {
									limit = {
										always = yes
									}
									export_to_variable = {
										which = tmpAIInitDiploNavy
										value = navy_size
									}
									export_to_variable = {
										which = AIMiscDipTech
										value = dip_tech
									}
									export_to_variable = {
										which = AIMiscNavMorale
										value = modifier:naval_morale
									}
									multiply_variable = {
										which = AIMiscDipTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscNavMorale
										value = 1.5
									}
									change_variable = {
										which = AIMiscDipTech
										value = 1
									}
									change_variable = {
										which = AIMiscNavMorale
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscDipTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscNavMorale
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploNavyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscDipTech
										}
										change_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscNavMorale
										}
									}
									set_variable = {
										which = AIMiscDipTech
										value = 0
									}
									set_variable = {
										which = AIMiscNavMorale
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavyQual
										value = 0
									}
								}
								multiply_variable = {
									which = tmpAIInitDiploArmy
									which = tmpAIInitDiploArmyQual
								}
								multiply_variable = {
									which = tmpAIInitDiploNavy
									which = tmpAIInitDiploNavyQual
								}
								PREV = {
									set_variable = {
										which = tmpAIInitDiploArmy
										which = PREV
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										which = PREV
									}
									change_variable = {
										which = aiInitDiploArmy
										which = tmpAIInitDiploArmy
									}
									change_variable = {
										which = aiInitDiploNavy
										which = tmpAIInitDiploNavy
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
								}
								set_variable = {
									which = tmpAIInitDiploArmy
									value = 0
								}
								set_variable = {
									which = tmpAIInitDiploNavy
									value = 0
								}
							}
							divide_variable = {
								which = aiInitDiploNavy
								value = 2
							}
							set_variable = {
								which = getPlanInvPowerAtt
								which = aiInitDiploArmy
							}
							change_variable = {
								which = getPlanInvPowerAtt
								which = aiInitDiploNavy
							}
							divide_variable = {
								which = getPlanInvPowerAtt
								value = 50
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
							if = {
								limit = {
									coalition_target = event_target:getPlanInvTargDef
								}
								event_target:getPlanInvTargDef = {
									every_country = {
										limit = {
											coalition_target = PREV
											NOT = {
												tag = event_target:getPlanInvTarg
												war_with = event_target:getPlanInvTargDef
											}
										}
										set_country_flag = aiInitDiploRelated
										if = {
											limit = {
												always = yes
											}
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
													}
												}
											}
										}
										if = {
											limit = {
												always = no
											}
											overlord = {
												if = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
													}
													if = {
														limit = {
															is_subject = yes
														}
														overlord = {
															if = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																}
																set_country_flag = aiInitDiploRelated
																every_subject_country = {
																	limit = {
																		NOT = {
																			tag = event_target:getPlanInvTarg
																		}
																		AND = {
																			NOT = {
																				liberty_desire = 50
																				is_subject_of_type = tributary_state
																				is_subject_of_type = rebellious_decentralized_vassal
																				is_subject_of_type = rebellious_subjugated_vassal
																			}
																		}
																	}
																	set_country_flag = aiInitDiploRelated
																	every_subject_country = {
																		limit = {
																			NOT = {
																				tag = event_target:getPlanInvTarg
																			}
																			AND = {
																				NOT = {
																					liberty_desire = 50
																					is_subject_of_type = tributary_state
																					is_subject_of_type = rebellious_decentralized_vassal
																					is_subject_of_type = rebellious_subjugated_vassal
																				}
																			}
																		}
																		set_country_flag = aiInitDiploRelated
																		every_subject_country = {
																			limit = {
																				NOT = {
																					tag = event_target:getPlanInvTarg
																				}
																				AND = {
																					NOT = {
																						liberty_desire = 50
																						is_subject_of_type = tributary_state
																						is_subject_of_type = rebellious_decentralized_vassal
																						is_subject_of_type = rebellious_subjugated_vassal
																					}
																				}
																			}
																			set_country_flag = aiInitDiploRelated
																		}
																	}
																}
															}
														}
													}
													else = {
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
																every_subject_country = {
																	limit = {
																		NOT = {
																			tag = event_target:getPlanInvTarg
																		}
																		AND = {
																			NOT = {
																				liberty_desire = 50
																				is_subject_of_type = tributary_state
																				is_subject_of_type = rebellious_decentralized_vassal
																				is_subject_of_type = rebellious_subjugated_vassal
																			}
																		}
																	}
																	set_country_flag = aiInitDiploRelated
																}
															}
														}
													}
												}
											}
										}
										set_variable = {
											which = aiInitDiploArmy
											value = 0
										}
										set_variable = {
											which = aiInitDiploNavy
											value = 0
										}
										every_country = {
											limit = {
												has_country_flag = aiInitDiploRelated
											}
											clr_country_flag = aiInitDiploRelated
											if = {
												limit = {
													always = yes
												}
												if = {
													limit = {
														always = yes
													}
													export_to_variable = {
														which = AIMiscArmySize
														value = army_size
													}
												}
												else = {
													set_variable = {
														which = AIMiscArmySize
														value = 0
													}
												}
												export_to_variable = {
													which = AIMiscLFL
													value = land_forcelimit
												}
												export_to_variable = {
													which = AIMiscManpow
													value = manpower
												}
												set_variable = {
													which = AIMiscArmyEstate
													value = 0
												}
												if = {
													limit = {
														check_variable = {
															which = estate_tribals_loyalty
															value = 0.11
														}
													}
													set_variable = {
														which = tmpArmyTR
														which = estate_tribals_infantry_host
													}
													change_variable = {
														which = tmpArmyTR
														which = estate_tribals_cavalry_host
													}
													multiply_variable = {
														which = tmpArmyTR
														value = 1.25
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = tmpArmyTR
													}
													set_variable = {
														which = tmpArmyTR
														value = 0
													}
												}
												if = {
													limit = {
														check_variable = {
															which = estate_greater_nobles_loyalty
															value = 0.11
														}
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_greater_nobles_infantry_total
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_greater_nobles_cavalry_total
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_greater_nobles_artillery_total
													}
												}
												if = {
													limit = {
														check_variable = {
															which = estate_lesser_nobles_loyalty
															value = 0.11
														}
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_lesser_nobles_infantry_total
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_lesser_nobles_cavalry_total
													}
													change_variable = {
														which = AIMiscArmyEstate
														which = estate_lesser_nobles_artillery_total
													}
												}
												multiply_variable = {
													which = AIMiscArmyEstate
													value = 0.85
												}
												if = {
													limit = {
														always = yes
													}
													if = {
														limit = {
															NOT = {
																check_variable = {
																	which = AIMiscManpow
																	which = AIMiscLFL
																}
															}
														}
														subtract_variable = {
															which = AIMiscLFL
															which = AIMiscManpow
														}
														multiply_variable = {
															which = AIMiscLFL
															value = 0.15
														}
														multiply_variable = {
															which = AIMiscManpow
															value = 0.3
														}
													}
													else = {
														subtract_variable = {
															which = AIMiscManpow
															which = AIMiscLFL
														}
														multiply_variable = {
															which = AIMiscManpow
															value = 0.15
														}
														multiply_variable = {
															which = AIMiscLFL
															value = 0.3
														}
													}
													change_variable = {
														which = AIMiscArmySize
														which = AIMiscLFL
													}
													change_variable = {
														which = AIMiscArmySize
														which = AIMiscManpow
													}
												}
												if = {
													limit = {
														always = yes
													}
													change_variable = {
														which = AIMiscArmySize
														which = AIMiscArmyEstate
													}
												}
												set_variable = {
													which = tmpAIInitDiploArmy
													which = AIMiscArmySize
												}
												set_variable = {
													which = AIMiscArmySize
													value = 0
												}
												set_variable = {
													which = AIMiscLFL
													value = 0
												}
												set_variable = {
													which = AIMiscManpow
													value = 0
												}
												set_variable = {
													which = AIMiscArmyEstate
													value = 0
												}
												export_to_variable = {
													which = AIMiscMilTech
													value = mil_tech
												}
												export_to_variable = {
													which = AIMiscLandMorale
													value = modifier:land_morale
												}
												export_to_variable = {
													which = AIMiscDisc
													value = modifier:discipline
												}
												multiply_variable = {
													which = AIMiscMilTech
													value = 0.1
												}
												multiply_variable = {
													which = AIMiscLandMorale
													value = 2
												}
												multiply_variable = {
													which = AIMiscDisc
													value = 5
												}
												change_variable = {
													which = AIMiscMilTech
													value = 1
												}
												change_variable = {
													which = AIMiscLandMorale
													value = 1
												}
												change_variable = {
													which = AIMiscDisc
													value = 1
												}
												if = {
													limit = {
														OR = {
															NOT = {
																check_variable = {
																	which = AIMiscMilTech
																	value = 0.001
																}
															}
															NOT = {
																check_variable = {
																	which = AIMiscLandMorale
																	value = 0.001
																}
															}
															NOT = {
																check_variable = {
																	which = AIMiscDisc
																	value = 0.001
																}
															}
														}
													}
													set_variable = {
														which = tmpAIInitDiploArmyQual
														value = 0
													}
												}
												else = {
													set_variable = {
														which = tmpAIInitDiploArmyQual
														which = AIMiscMilTech
													}
													multiply_variable = {
														which = tmpAIInitDiploArmyQual
														which = AIMiscLandMorale
													}
													multiply_variable = {
														which = tmpAIInitDiploArmyQual
														which = AIMiscLandMorale
													}
												}
												set_variable = {
													which = AIMiscMilTech
													value = 0
												}
												set_variable = {
													which = AIMiscLandMorale
													value = 0
												}
												set_variable = {
													which = AIMiscDisc
													value = 0
												}
											}
											else = {
												set_variable = {
													which = tmpAIInitDiploArmy
													value = 0
												}
												set_variable = {
													which = tmpAIInitDiploArmyQual
													value = 0
												}
											}
											if = {
												limit = {
													always = yes
												}
												export_to_variable = {
													which = tmpAIInitDiploNavy
													value = navy_size
												}
												export_to_variable = {
													which = AIMiscDipTech
													value = dip_tech
												}
												export_to_variable = {
													which = AIMiscNavMorale
													value = modifier:naval_morale
												}
												multiply_variable = {
													which = AIMiscDipTech
													value = 0.1
												}
												multiply_variable = {
													which = AIMiscNavMorale
													value = 1.5
												}
												change_variable = {
													which = AIMiscDipTech
													value = 1
												}
												change_variable = {
													which = AIMiscNavMorale
													value = 1
												}
												if = {
													limit = {
														OR = {
															NOT = {
																check_variable = {
																	which = AIMiscDipTech
																	value = 0.001
																}
															}
															NOT = {
																check_variable = {
																	which = AIMiscNavMorale
																	value = 0.001
																}
															}
														}
													}
													set_variable = {
														which = tmpAIInitDiploNavyQual
														value = 0
													}
												}
												else = {
													set_variable = {
														which = tmpAIInitDiploNavyQual
														which = AIMiscDipTech
													}
													change_variable = {
														which = tmpAIInitDiploNavyQual
														which = AIMiscNavMorale
													}
												}
												set_variable = {
													which = AIMiscDipTech
													value = 0
												}
												set_variable = {
													which = AIMiscNavMorale
													value = 0
												}
											}
											else = {
												set_variable = {
													which = tmpAIInitDiploNavy
													value = 0
												}
												set_variable = {
													which = tmpAIInitDiploNavyQual
													value = 0
												}
											}
											multiply_variable = {
												which = tmpAIInitDiploArmy
												which = tmpAIInitDiploArmyQual
											}
											multiply_variable = {
												which = tmpAIInitDiploNavy
												which = tmpAIInitDiploNavyQual
											}
											PREV = {
												set_variable = {
													which = tmpAIInitDiploArmy
													which = PREV
												}
												set_variable = {
													which = tmpAIInitDiploNavy
													which = PREV
												}
												change_variable = {
													which = aiInitDiploArmy
													which = tmpAIInitDiploArmy
												}
												change_variable = {
													which = aiInitDiploNavy
													which = tmpAIInitDiploNavy
												}
												set_variable = {
													which = tmpAIInitDiploArmy
													value = 0
												}
												set_variable = {
													which = tmpAIInitDiploNavy
													value = 0
												}
											}
											set_variable = {
												which = tmpAIInitDiploArmy
												value = 0
											}
											set_variable = {
												which = tmpAIInitDiploNavy
												value = 0
											}
										}
										divide_variable = {
											which = aiInitDiploNavy
											value = 2
										}
										set_variable = {
											which = getPlanInvPowerAtt
											which = aiInitDiploArmy
										}
										change_variable = {
											which = getPlanInvPowerAtt
											which = aiInitDiploNavy
										}
										divide_variable = {
											which = getPlanInvPowerAtt
											value = 50
										}
										set_variable = {
											which = aiInitDiploArmy
											value = 0
										}
										set_variable = {
											which = tmpAIInitDiploArmyQual
											value = 0
										}
										set_variable = {
											which = aiInitDiploNavy
											value = 0
										}
										set_variable = {
											which = tmpAIInitDiploNavyQual
											value = 0
										}
										event_target:getPlanInvTarg = {
											change_variable = {
												which = getPlanInvPowerAtt
												which = PREV
											}
										}
										set_variable = {
											which = getPlanInvPowerAtt
											value = 0
										}
									}
								}
							}
							if = {
								limit = {
									event_target:getPlanInvTargDef = {
										is_at_war = yes
									}
								}
								every_country = {
									limit = {
										war_with = event_target:getPlanInvTargDef
									}
									set_country_flag = aiInitDiploRelated
									if = {
										limit = {
											always = yes
										}
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
												}
											}
										}
									}
									if = {
										limit = {
											always = no
										}
										overlord = {
											if = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
												}
												if = {
													limit = {
														is_subject = yes
													}
													overlord = {
														if = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
																every_subject_country = {
																	limit = {
																		NOT = {
																			tag = event_target:getPlanInvTarg
																		}
																		AND = {
																			NOT = {
																				liberty_desire = 50
																				is_subject_of_type = tributary_state
																				is_subject_of_type = rebellious_decentralized_vassal
																				is_subject_of_type = rebellious_subjugated_vassal
																			}
																		}
																	}
																	set_country_flag = aiInitDiploRelated
																	every_subject_country = {
																		limit = {
																			NOT = {
																				tag = event_target:getPlanInvTarg
																			}
																			AND = {
																				NOT = {
																					liberty_desire = 50
																					is_subject_of_type = tributary_state
																					is_subject_of_type = rebellious_decentralized_vassal
																					is_subject_of_type = rebellious_subjugated_vassal
																				}
																			}
																		}
																		set_country_flag = aiInitDiploRelated
																	}
																}
															}
														}
													}
												}
												else = {
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
															}
														}
													}
												}
											}
										}
									}
									set_variable = {
										which = aiInitDiploArmy
										value = 0
									}
									set_variable = {
										which = aiInitDiploNavy
										value = 0
									}
									every_country = {
										limit = {
											has_country_flag = aiInitDiploRelated
										}
										clr_country_flag = aiInitDiploRelated
										if = {
											limit = {
												always = yes
											}
											if = {
												limit = {
													always = yes
												}
												export_to_variable = {
													which = AIMiscArmySize
													value = army_size
												}
											}
											else = {
												set_variable = {
													which = AIMiscArmySize
													value = 0
												}
											}
											export_to_variable = {
												which = AIMiscLFL
												value = land_forcelimit
											}
											export_to_variable = {
												which = AIMiscManpow
												value = manpower
											}
											set_variable = {
												which = AIMiscArmyEstate
												value = 0
											}
											if = {
												limit = {
													check_variable = {
														which = estate_tribals_loyalty
														value = 0.11
													}
												}
												set_variable = {
													which = tmpArmyTR
													which = estate_tribals_infantry_host
												}
												change_variable = {
													which = tmpArmyTR
													which = estate_tribals_cavalry_host
												}
												multiply_variable = {
													which = tmpArmyTR
													value = 1.25
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = tmpArmyTR
												}
												set_variable = {
													which = tmpArmyTR
													value = 0
												}
											}
											if = {
												limit = {
													check_variable = {
														which = estate_greater_nobles_loyalty
														value = 0.11
													}
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_greater_nobles_infantry_total
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_greater_nobles_cavalry_total
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_greater_nobles_artillery_total
												}
											}
											if = {
												limit = {
													check_variable = {
														which = estate_lesser_nobles_loyalty
														value = 0.11
													}
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_lesser_nobles_infantry_total
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_lesser_nobles_cavalry_total
												}
												change_variable = {
													which = AIMiscArmyEstate
													which = estate_lesser_nobles_artillery_total
												}
											}
											multiply_variable = {
												which = AIMiscArmyEstate
												value = 0.85
											}
											if = {
												limit = {
													always = yes
												}
												if = {
													limit = {
														NOT = {
															check_variable = {
																which = AIMiscManpow
																which = AIMiscLFL
															}
														}
													}
													subtract_variable = {
														which = AIMiscLFL
														which = AIMiscManpow
													}
													multiply_variable = {
														which = AIMiscLFL
														value = 0.15
													}
													multiply_variable = {
														which = AIMiscManpow
														value = 0.3
													}
												}
												else = {
													subtract_variable = {
														which = AIMiscManpow
														which = AIMiscLFL
													}
													multiply_variable = {
														which = AIMiscManpow
														value = 0.15
													}
													multiply_variable = {
														which = AIMiscLFL
														value = 0.3
													}
												}
												change_variable = {
													which = AIMiscArmySize
													which = AIMiscLFL
												}
												change_variable = {
													which = AIMiscArmySize
													which = AIMiscManpow
												}
											}
											if = {
												limit = {
													always = yes
												}
												change_variable = {
													which = AIMiscArmySize
													which = AIMiscArmyEstate
												}
											}
											set_variable = {
												which = tmpAIInitDiploArmy
												which = AIMiscArmySize
											}
											set_variable = {
												which = AIMiscArmySize
												value = 0
											}
											set_variable = {
												which = AIMiscLFL
												value = 0
											}
											set_variable = {
												which = AIMiscManpow
												value = 0
											}
											set_variable = {
												which = AIMiscArmyEstate
												value = 0
											}
											export_to_variable = {
												which = AIMiscMilTech
												value = mil_tech
											}
											export_to_variable = {
												which = AIMiscLandMorale
												value = modifier:land_morale
											}
											export_to_variable = {
												which = AIMiscDisc
												value = modifier:discipline
											}
											multiply_variable = {
												which = AIMiscMilTech
												value = 0.1
											}
											multiply_variable = {
												which = AIMiscLandMorale
												value = 2
											}
											multiply_variable = {
												which = AIMiscDisc
												value = 5
											}
											change_variable = {
												which = AIMiscMilTech
												value = 1
											}
											change_variable = {
												which = AIMiscLandMorale
												value = 1
											}
											change_variable = {
												which = AIMiscDisc
												value = 1
											}
											if = {
												limit = {
													OR = {
														NOT = {
															check_variable = {
																which = AIMiscMilTech
																value = 0.001
															}
														}
														NOT = {
															check_variable = {
																which = AIMiscLandMorale
																value = 0.001
															}
														}
														NOT = {
															check_variable = {
																which = AIMiscDisc
																value = 0.001
															}
														}
													}
												}
												set_variable = {
													which = tmpAIInitDiploArmyQual
													value = 0
												}
											}
											else = {
												set_variable = {
													which = tmpAIInitDiploArmyQual
													which = AIMiscMilTech
												}
												multiply_variable = {
													which = tmpAIInitDiploArmyQual
													which = AIMiscLandMorale
												}
												multiply_variable = {
													which = tmpAIInitDiploArmyQual
													which = AIMiscLandMorale
												}
											}
											set_variable = {
												which = AIMiscMilTech
												value = 0
											}
											set_variable = {
												which = AIMiscLandMorale
												value = 0
											}
											set_variable = {
												which = AIMiscDisc
												value = 0
											}
										}
										else = {
											set_variable = {
												which = tmpAIInitDiploArmy
												value = 0
											}
											set_variable = {
												which = tmpAIInitDiploArmyQual
												value = 0
											}
										}
										if = {
											limit = {
												always = yes
											}
											export_to_variable = {
												which = tmpAIInitDiploNavy
												value = navy_size
											}
											export_to_variable = {
												which = AIMiscDipTech
												value = dip_tech
											}
											export_to_variable = {
												which = AIMiscNavMorale
												value = modifier:naval_morale
											}
											multiply_variable = {
												which = AIMiscDipTech
												value = 0.1
											}
											multiply_variable = {
												which = AIMiscNavMorale
												value = 1.5
											}
											change_variable = {
												which = AIMiscDipTech
												value = 1
											}
											change_variable = {
												which = AIMiscNavMorale
												value = 1
											}
											if = {
												limit = {
													OR = {
														NOT = {
															check_variable = {
																which = AIMiscDipTech
																value = 0.001
															}
														}
														NOT = {
															check_variable = {
																which = AIMiscNavMorale
																value = 0.001
															}
														}
													}
												}
												set_variable = {
													which = tmpAIInitDiploNavyQual
													value = 0
												}
											}
											else = {
												set_variable = {
													which = tmpAIInitDiploNavyQual
													which = AIMiscDipTech
												}
												change_variable = {
													which = tmpAIInitDiploNavyQual
													which = AIMiscNavMorale
												}
											}
											set_variable = {
												which = AIMiscDipTech
												value = 0
											}
											set_variable = {
												which = AIMiscNavMorale
												value = 0
											}
										}
										else = {
											set_variable = {
												which = tmpAIInitDiploNavy
												value = 0
											}
											set_variable = {
												which = tmpAIInitDiploNavyQual
												value = 0
											}
										}
										multiply_variable = {
											which = tmpAIInitDiploArmy
											which = tmpAIInitDiploArmyQual
										}
										multiply_variable = {
											which = tmpAIInitDiploNavy
											which = tmpAIInitDiploNavyQual
										}
										PREV = {
											set_variable = {
												which = tmpAIInitDiploArmy
												which = PREV
											}
											set_variable = {
												which = tmpAIInitDiploNavy
												which = PREV
											}
											change_variable = {
												which = aiInitDiploArmy
												which = tmpAIInitDiploArmy
											}
											change_variable = {
												which = aiInitDiploNavy
												which = tmpAIInitDiploNavy
											}
											set_variable = {
												which = tmpAIInitDiploArmy
												value = 0
											}
											set_variable = {
												which = tmpAIInitDiploNavy
												value = 0
											}
										}
										set_variable = {
											which = tmpAIInitDiploArmy
											value = 0
										}
										set_variable = {
											which = tmpAIInitDiploNavy
											value = 0
										}
									}
									divide_variable = {
										which = aiInitDiploNavy
										value = 2
									}
									set_variable = {
										which = getPlanInvPowerAtt
										which = aiInitDiploArmy
									}
									change_variable = {
										which = getPlanInvPowerAtt
										which = aiInitDiploNavy
									}
									divide_variable = {
										which = getPlanInvPowerAtt
										value = 50
									}
									set_variable = {
										which = aiInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploArmyQual
										value = 0
									}
									set_variable = {
										which = aiInitDiploNavy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavyQual
										value = 0
									}
									multiply_variable = {
										which = getPlanInvPowerAtt
										value = 0.25
									}
									event_target:getPlanInvTarg = {
										change_variable = {
											which = getPlanInvPowerAtt
											which = PREV
										}
									}
									set_variable = {
										which = getPlanInvPowerAtt
										value = 0
									}
								}
							}
							PREV = {
								set_variable = {
									which = getPlanInvPowerAtt
									which = PREV
								}
							}
							set_variable = {
								which = getPlanInvPowerAtt
								value = 0
							}
						}
						overlord = {
							if = {
								limit = {
									is_subject = yes
								}
								overlord = {
									save_event_target_as = tmpOverlordDef
								}
							}
							else = {
								save_event_target_as = tmpOverlordDef
							}
						}
						event_target:getPlanInvTarg = {
							overlord = {
								if = {
									limit = {
										is_subject = yes
									}
									overlord = {
										save_event_target_as = tmpOverlordAtt
									}
								}
								else = {
									save_event_target_as = tmpOverlordAtt
								}
							}
						}
						if = {
							limit = {
								is_subject = yes
								event_target:getPlanInvTarg = {
									is_subject = yes
								}
								event_target:tmpOverlordAtt = {
									tag = event_target:tmpOverlordDef
								}
							}
							set_country_flag = aiInitDiploRelated
							if = {
								limit = {
									always = yes
								}
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:getPlanInvTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
							if = {
								limit = {
									always = no
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
										}
										if = {
											limit = {
												is_subject = yes
											}
											overlord = {
												if = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
															}
														}
													}
												}
											}
										}
										else = {
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
													}
												}
											}
										}
									}
								}
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							every_country = {
								limit = {
									has_country_flag = aiInitDiploRelated
								}
								clr_country_flag = aiInitDiploRelated
								if = {
									limit = {
										always = yes
									}
									if = {
										limit = {
											always = yes
										}
										export_to_variable = {
											which = AIMiscArmySize
											value = army_size
										}
									}
									else = {
										set_variable = {
											which = AIMiscArmySize
											value = 0
										}
									}
									export_to_variable = {
										which = AIMiscLFL
										value = land_forcelimit
									}
									export_to_variable = {
										which = AIMiscManpow
										value = manpower
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = estate_tribals_loyalty
												value = 0.11
											}
										}
										set_variable = {
											which = tmpArmyTR
											which = estate_tribals_infantry_host
										}
										change_variable = {
											which = tmpArmyTR
											which = estate_tribals_cavalry_host
										}
										multiply_variable = {
											which = tmpArmyTR
											value = 1.25
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = tmpArmyTR
										}
										set_variable = {
											which = tmpArmyTR
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_greater_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_artillery_total
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_lesser_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_artillery_total
										}
									}
									multiply_variable = {
										which = AIMiscArmyEstate
										value = 0.85
									}
									if = {
										limit = {
											always = yes
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = AIMiscManpow
														which = AIMiscLFL
													}
												}
											}
											subtract_variable = {
												which = AIMiscLFL
												which = AIMiscManpow
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.3
											}
										}
										else = {
											subtract_variable = {
												which = AIMiscManpow
												which = AIMiscLFL
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.3
											}
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscLFL
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscManpow
										}
									}
									if = {
										limit = {
											always = yes
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscArmyEstate
										}
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										which = AIMiscArmySize
									}
									set_variable = {
										which = AIMiscArmySize
										value = 0
									}
									set_variable = {
										which = AIMiscLFL
										value = 0
									}
									set_variable = {
										which = AIMiscManpow
										value = 0
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									export_to_variable = {
										which = AIMiscMilTech
										value = mil_tech
									}
									export_to_variable = {
										which = AIMiscLandMorale
										value = modifier:land_morale
									}
									export_to_variable = {
										which = AIMiscDisc
										value = modifier:discipline
									}
									multiply_variable = {
										which = AIMiscMilTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscLandMorale
										value = 2
									}
									multiply_variable = {
										which = AIMiscDisc
										value = 5
									}
									change_variable = {
										which = AIMiscMilTech
										value = 1
									}
									change_variable = {
										which = AIMiscLandMorale
										value = 1
									}
									change_variable = {
										which = AIMiscDisc
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscMilTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscLandMorale
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscDisc
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploArmyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscMilTech
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
									}
									set_variable = {
										which = AIMiscMilTech
										value = 0
									}
									set_variable = {
										which = AIMiscLandMorale
										value = 0
									}
									set_variable = {
										which = AIMiscDisc
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploArmyQual
										value = 0
									}
								}
								if = {
									limit = {
										always = yes
									}
									export_to_variable = {
										which = tmpAIInitDiploNavy
										value = navy_size
									}
									export_to_variable = {
										which = AIMiscDipTech
										value = dip_tech
									}
									export_to_variable = {
										which = AIMiscNavMorale
										value = modifier:naval_morale
									}
									multiply_variable = {
										which = AIMiscDipTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscNavMorale
										value = 1.5
									}
									change_variable = {
										which = AIMiscDipTech
										value = 1
									}
									change_variable = {
										which = AIMiscNavMorale
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscDipTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscNavMorale
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploNavyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscDipTech
										}
										change_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscNavMorale
										}
									}
									set_variable = {
										which = AIMiscDipTech
										value = 0
									}
									set_variable = {
										which = AIMiscNavMorale
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavyQual
										value = 0
									}
								}
								multiply_variable = {
									which = tmpAIInitDiploArmy
									which = tmpAIInitDiploArmyQual
								}
								multiply_variable = {
									which = tmpAIInitDiploNavy
									which = tmpAIInitDiploNavyQual
								}
								PREV = {
									set_variable = {
										which = tmpAIInitDiploArmy
										which = PREV
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										which = PREV
									}
									change_variable = {
										which = aiInitDiploArmy
										which = tmpAIInitDiploArmy
									}
									change_variable = {
										which = aiInitDiploNavy
										which = tmpAIInitDiploNavy
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
								}
								set_variable = {
									which = tmpAIInitDiploArmy
									value = 0
								}
								set_variable = {
									which = tmpAIInitDiploNavy
									value = 0
								}
							}
							divide_variable = {
								which = aiInitDiploNavy
								value = 2
							}
							set_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploArmy
							}
							change_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploNavy
							}
							divide_variable = {
								which = getPlanInvPowerDef
								value = 50
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
						}
						else = {
							set_country_flag = aiInitDiploRelated
							if = {
								limit = {
									always = yes
								}
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:getPlanInvTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
							if = {
								limit = {
									always = yes
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
										}
										if = {
											limit = {
												is_subject = yes
											}
											overlord = {
												if = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
															}
														}
													}
												}
											}
										}
										else = {
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
													}
												}
											}
										}
									}
								}
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							every_country = {
								limit = {
									has_country_flag = aiInitDiploRelated
								}
								clr_country_flag = aiInitDiploRelated
								if = {
									limit = {
										always = yes
									}
									if = {
										limit = {
											always = yes
										}
										export_to_variable = {
											which = AIMiscArmySize
											value = army_size
										}
									}
									else = {
										set_variable = {
											which = AIMiscArmySize
											value = 0
										}
									}
									export_to_variable = {
										which = AIMiscLFL
										value = land_forcelimit
									}
									export_to_variable = {
										which = AIMiscManpow
										value = manpower
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = estate_tribals_loyalty
												value = 0.11
											}
										}
										set_variable = {
											which = tmpArmyTR
											which = estate_tribals_infantry_host
										}
										change_variable = {
											which = tmpArmyTR
											which = estate_tribals_cavalry_host
										}
										multiply_variable = {
											which = tmpArmyTR
											value = 1.25
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = tmpArmyTR
										}
										set_variable = {
											which = tmpArmyTR
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_greater_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_artillery_total
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_lesser_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_artillery_total
										}
									}
									multiply_variable = {
										which = AIMiscArmyEstate
										value = 0.85
									}
									if = {
										limit = {
											always = yes
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = AIMiscManpow
														which = AIMiscLFL
													}
												}
											}
											subtract_variable = {
												which = AIMiscLFL
												which = AIMiscManpow
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.3
											}
										}
										else = {
											subtract_variable = {
												which = AIMiscManpow
												which = AIMiscLFL
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.3
											}
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscLFL
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscManpow
										}
									}
									if = {
										limit = {
											always = yes
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscArmyEstate
										}
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										which = AIMiscArmySize
									}
									set_variable = {
										which = AIMiscArmySize
										value = 0
									}
									set_variable = {
										which = AIMiscLFL
										value = 0
									}
									set_variable = {
										which = AIMiscManpow
										value = 0
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									export_to_variable = {
										which = AIMiscMilTech
										value = mil_tech
									}
									export_to_variable = {
										which = AIMiscLandMorale
										value = modifier:land_morale
									}
									export_to_variable = {
										which = AIMiscDisc
										value = modifier:discipline
									}
									multiply_variable = {
										which = AIMiscMilTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscLandMorale
										value = 2
									}
									multiply_variable = {
										which = AIMiscDisc
										value = 5
									}
									change_variable = {
										which = AIMiscMilTech
										value = 1
									}
									change_variable = {
										which = AIMiscLandMorale
										value = 1
									}
									change_variable = {
										which = AIMiscDisc
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscMilTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscLandMorale
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscDisc
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploArmyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscMilTech
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
									}
									set_variable = {
										which = AIMiscMilTech
										value = 0
									}
									set_variable = {
										which = AIMiscLandMorale
										value = 0
									}
									set_variable = {
										which = AIMiscDisc
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploArmyQual
										value = 0
									}
								}
								if = {
									limit = {
										always = yes
									}
									export_to_variable = {
										which = tmpAIInitDiploNavy
										value = navy_size
									}
									export_to_variable = {
										which = AIMiscDipTech
										value = dip_tech
									}
									export_to_variable = {
										which = AIMiscNavMorale
										value = modifier:naval_morale
									}
									multiply_variable = {
										which = AIMiscDipTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscNavMorale
										value = 1.5
									}
									change_variable = {
										which = AIMiscDipTech
										value = 1
									}
									change_variable = {
										which = AIMiscNavMorale
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscDipTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscNavMorale
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploNavyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscDipTech
										}
										change_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscNavMorale
										}
									}
									set_variable = {
										which = AIMiscDipTech
										value = 0
									}
									set_variable = {
										which = AIMiscNavMorale
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavyQual
										value = 0
									}
								}
								multiply_variable = {
									which = tmpAIInitDiploArmy
									which = tmpAIInitDiploArmyQual
								}
								multiply_variable = {
									which = tmpAIInitDiploNavy
									which = tmpAIInitDiploNavyQual
								}
								PREV = {
									set_variable = {
										which = tmpAIInitDiploArmy
										which = PREV
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										which = PREV
									}
									change_variable = {
										which = aiInitDiploArmy
										which = tmpAIInitDiploArmy
									}
									change_variable = {
										which = aiInitDiploNavy
										which = tmpAIInitDiploNavy
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
								}
								set_variable = {
									which = tmpAIInitDiploArmy
									value = 0
								}
								set_variable = {
									which = tmpAIInitDiploNavy
									value = 0
								}
							}
							divide_variable = {
								which = aiInitDiploNavy
								value = 2
							}
							set_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploArmy
							}
							change_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploNavy
							}
							divide_variable = {
								which = getPlanInvPowerDef
								value = 50
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
							overlord = {
								every_ally = {
									limit = {
										NOT = {
											is_subject = yes
											NOT = {
												is_subject_of_type = tributary_state
											}
											NOT = {
												is_subject_of_type = close_tributary_state
											}
										}
										NOT = {
											tag = event_target:getPlanInvTarg
										}
									}
									set_country_flag = getPowerDefAlly
								}
								if = {
									limit = {
										is_part_of_hre = yes
										is_emperor = no
										OR = {
											is_subject = no
											overlord = {
												is_emperor = no
												OR = {
													is_subject = no
													overlord = {
														is_emperor = no
													}
												}
											}
										}
										OR = {
											AND = {
												OR = {
													has_reform = free_city
													has_reform = imperial_city
													has_reform = trading_city_legacy
												}
											}
											event_target:getPlanInvTarg = {
												is_part_of_hre = no
											}
										}
									}
									emperor = {
										if = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
											}
											set_country_flag = getPowerDefAlly
											every_ally = {
												limit = {
													NOT = {
														is_subject = yes
														NOT = {
															is_subject_of_type = tributary_state
														}
														NOT = {
															is_subject_of_type = close_tributary_state
														}
													}
												}
												set_country_flag = getPowerDefAlly
											}
										}
									}
								}
								every_country = {
									limit = {
										has_guaranteed = PREV
										NOT = {
											tag = event_target:getPlanInvTarg
										}
									}
									set_country_flag = getPowerDefAlly
								}
								if = {
									limit = {
										coalition_target = event_target:getPlanInvTarg
									}
									every_country = {
										limit = {
											coalition_target = event_target:getPlanInvTarg
											NOT = {
												tag = PREV
												overlord_of = PREV
											}
										}
										set_country_flag = getPowerDefAlly
									}
								}
								if = {
									limit = {
										is_in_trade_league = yes
									}
									every_country = {
										limit = {
											is_in_trade_league_with = PREV
											NOT = {
												tag = event_target:getPlanInvTarg
											}
										}
										set_country_flag = getPowerDefAlly
									}
								}
							}
						}
						every_ally = {
							limit = {
								NOT = {
									is_subject = yes
									NOT = {
										is_subject_of_type = tributary_state
									}
									NOT = {
										is_subject_of_type = close_tributary_state
									}
								}
								NOT = {
									tag = event_target:getPlanInvTarg
								}
							}
							set_country_flag = getPowerDefAlly
						}
						if = {
							limit = {
								is_part_of_hre = yes
								is_emperor = no
								OR = {
									is_subject = no
									overlord = {
										is_emperor = no
										OR = {
											is_subject = no
											overlord = {
												is_emperor = no
											}
										}
									}
								}
								OR = {
									AND = {
										OR = {
											has_reform = free_city
											has_reform = imperial_city
											has_reform = trading_city_legacy
										}
									}
									event_target:getPlanInvTarg = {
										is_part_of_hre = no
									}
								}
							}
							emperor = {
								if = {
									limit = {
										NOT = {
											tag = event_target:getPlanInvTarg
										}
									}
									set_country_flag = getPowerDefAlly
									every_ally = {
										limit = {
											NOT = {
												is_subject = yes
												NOT = {
													is_subject_of_type = tributary_state
												}
												NOT = {
													is_subject_of_type = close_tributary_state
												}
											}
										}
										set_country_flag = getPowerDefAlly
									}
								}
							}
						}
						every_country = {
							limit = {
								has_guaranteed = PREV
								NOT = {
									tag = event_target:getPlanInvTarg
								}
							}
							set_country_flag = getPowerDefAlly
						}
						if = {
							limit = {
								coalition_target = event_target:getPlanInvTarg
							}
							every_country = {
								limit = {
									coalition_target = event_target:getPlanInvTarg
									NOT = {
										tag = PREV
										overlord_of = PREV
									}
								}
								set_country_flag = getPowerDefAlly
							}
						}
						if = {
							limit = {
								is_in_trade_league = yes
							}
							every_country = {
								limit = {
									is_in_trade_league_with = PREV
									NOT = {
										tag = event_target:getPlanInvTarg
									}
								}
								set_country_flag = getPowerDefAlly
							}
						}
						every_country = {
							limit = {
								has_country_flag = getPowerDefAlly
							}
							clr_country_flag = getPowerDefAlly
							set_country_flag = aiInitDiploRelated
							if = {
								limit = {
									always = yes
								}
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:getPlanInvTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:getPlanInvTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
							if = {
								limit = {
									always = no
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:getPlanInvTarg
											}
										}
										if = {
											limit = {
												is_subject = yes
											}
											overlord = {
												if = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
														every_subject_country = {
															limit = {
																NOT = {
																	tag = event_target:getPlanInvTarg
																}
																AND = {
																	NOT = {
																		liberty_desire = 50
																		is_subject_of_type = tributary_state
																		is_subject_of_type = rebellious_decentralized_vassal
																		is_subject_of_type = rebellious_subjugated_vassal
																	}
																}
															}
															set_country_flag = aiInitDiploRelated
															every_subject_country = {
																limit = {
																	NOT = {
																		tag = event_target:getPlanInvTarg
																	}
																	AND = {
																		NOT = {
																			liberty_desire = 50
																			is_subject_of_type = tributary_state
																			is_subject_of_type = rebellious_decentralized_vassal
																			is_subject_of_type = rebellious_subjugated_vassal
																		}
																	}
																}
																set_country_flag = aiInitDiploRelated
															}
														}
													}
												}
											}
										}
										else = {
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:getPlanInvTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:getPlanInvTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
													every_subject_country = {
														limit = {
															NOT = {
																tag = event_target:getPlanInvTarg
															}
															AND = {
																NOT = {
																	liberty_desire = 50
																	is_subject_of_type = tributary_state
																	is_subject_of_type = rebellious_decentralized_vassal
																	is_subject_of_type = rebellious_subjugated_vassal
																}
															}
														}
														set_country_flag = aiInitDiploRelated
													}
												}
											}
										}
									}
								}
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							every_country = {
								limit = {
									has_country_flag = aiInitDiploRelated
								}
								clr_country_flag = aiInitDiploRelated
								if = {
									limit = {
										always = yes
									}
									if = {
										limit = {
											always = yes
										}
										export_to_variable = {
											which = AIMiscArmySize
											value = army_size
										}
									}
									else = {
										set_variable = {
											which = AIMiscArmySize
											value = 0
										}
									}
									export_to_variable = {
										which = AIMiscLFL
										value = land_forcelimit
									}
									export_to_variable = {
										which = AIMiscManpow
										value = manpower
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									if = {
										limit = {
											check_variable = {
												which = estate_tribals_loyalty
												value = 0.11
											}
										}
										set_variable = {
											which = tmpArmyTR
											which = estate_tribals_infantry_host
										}
										change_variable = {
											which = tmpArmyTR
											which = estate_tribals_cavalry_host
										}
										multiply_variable = {
											which = tmpArmyTR
											value = 1.25
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = tmpArmyTR
										}
										set_variable = {
											which = tmpArmyTR
											value = 0
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_greater_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_greater_nobles_artillery_total
										}
									}
									if = {
										limit = {
											check_variable = {
												which = estate_lesser_nobles_loyalty
												value = 0.11
											}
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_infantry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_cavalry_total
										}
										change_variable = {
											which = AIMiscArmyEstate
											which = estate_lesser_nobles_artillery_total
										}
									}
									multiply_variable = {
										which = AIMiscArmyEstate
										value = 0.85
									}
									if = {
										limit = {
											always = yes
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = AIMiscManpow
														which = AIMiscLFL
													}
												}
											}
											subtract_variable = {
												which = AIMiscLFL
												which = AIMiscManpow
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.3
											}
										}
										else = {
											subtract_variable = {
												which = AIMiscManpow
												which = AIMiscLFL
											}
											multiply_variable = {
												which = AIMiscManpow
												value = 0.15
											}
											multiply_variable = {
												which = AIMiscLFL
												value = 0.3
											}
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscLFL
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscManpow
										}
									}
									if = {
										limit = {
											always = yes
										}
										change_variable = {
											which = AIMiscArmySize
											which = AIMiscArmyEstate
										}
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										which = AIMiscArmySize
									}
									set_variable = {
										which = AIMiscArmySize
										value = 0
									}
									set_variable = {
										which = AIMiscLFL
										value = 0
									}
									set_variable = {
										which = AIMiscManpow
										value = 0
									}
									set_variable = {
										which = AIMiscArmyEstate
										value = 0
									}
									export_to_variable = {
										which = AIMiscMilTech
										value = mil_tech
									}
									export_to_variable = {
										which = AIMiscLandMorale
										value = modifier:land_morale
									}
									export_to_variable = {
										which = AIMiscDisc
										value = modifier:discipline
									}
									multiply_variable = {
										which = AIMiscMilTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscLandMorale
										value = 2
									}
									multiply_variable = {
										which = AIMiscDisc
										value = 5
									}
									change_variable = {
										which = AIMiscMilTech
										value = 1
									}
									change_variable = {
										which = AIMiscLandMorale
										value = 1
									}
									change_variable = {
										which = AIMiscDisc
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscMilTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscLandMorale
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscDisc
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploArmyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscMilTech
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
										multiply_variable = {
											which = tmpAIInitDiploArmyQual
											which = AIMiscLandMorale
										}
									}
									set_variable = {
										which = AIMiscMilTech
										value = 0
									}
									set_variable = {
										which = AIMiscLandMorale
										value = 0
									}
									set_variable = {
										which = AIMiscDisc
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploArmyQual
										value = 0
									}
								}
								if = {
									limit = {
										always = yes
									}
									export_to_variable = {
										which = tmpAIInitDiploNavy
										value = navy_size
									}
									export_to_variable = {
										which = AIMiscDipTech
										value = dip_tech
									}
									export_to_variable = {
										which = AIMiscNavMorale
										value = modifier:naval_morale
									}
									multiply_variable = {
										which = AIMiscDipTech
										value = 0.1
									}
									multiply_variable = {
										which = AIMiscNavMorale
										value = 1.5
									}
									change_variable = {
										which = AIMiscDipTech
										value = 1
									}
									change_variable = {
										which = AIMiscNavMorale
										value = 1
									}
									if = {
										limit = {
											OR = {
												NOT = {
													check_variable = {
														which = AIMiscDipTech
														value = 0.001
													}
												}
												NOT = {
													check_variable = {
														which = AIMiscNavMorale
														value = 0.001
													}
												}
											}
										}
										set_variable = {
											which = tmpAIInitDiploNavyQual
											value = 0
										}
									}
									else = {
										set_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscDipTech
										}
										change_variable = {
											which = tmpAIInitDiploNavyQual
											which = AIMiscNavMorale
										}
									}
									set_variable = {
										which = AIMiscDipTech
										value = 0
									}
									set_variable = {
										which = AIMiscNavMorale
										value = 0
									}
								}
								else = {
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavyQual
										value = 0
									}
								}
								multiply_variable = {
									which = tmpAIInitDiploArmy
									which = tmpAIInitDiploArmyQual
								}
								multiply_variable = {
									which = tmpAIInitDiploNavy
									which = tmpAIInitDiploNavyQual
								}
								PREV = {
									set_variable = {
										which = tmpAIInitDiploArmy
										which = PREV
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										which = PREV
									}
									change_variable = {
										which = aiInitDiploArmy
										which = tmpAIInitDiploArmy
									}
									change_variable = {
										which = aiInitDiploNavy
										which = tmpAIInitDiploNavy
									}
									set_variable = {
										which = tmpAIInitDiploArmy
										value = 0
									}
									set_variable = {
										which = tmpAIInitDiploNavy
										value = 0
									}
								}
								set_variable = {
									which = tmpAIInitDiploArmy
									value = 0
								}
								set_variable = {
									which = tmpAIInitDiploNavy
									value = 0
								}
							}
							divide_variable = {
								which = aiInitDiploNavy
								value = 2
							}
							set_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploArmy
							}
							change_variable = {
								which = getPlanInvPowerDef
								which = aiInitDiploNavy
							}
							divide_variable = {
								which = getPlanInvPowerDef
								value = 50
							}
							set_variable = {
								which = aiInitDiploArmy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
							set_variable = {
								which = aiInitDiploNavy
								value = 0
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
							PREV = {
								change_variable = {
									which = getPlanInvPowerDef
									which = PREV
								}
							}
							set_variable = {
								which = getPlanInvPowerDef
								value = 0
							}
						}
						multiply_variable = {
							which = getPlanInvPowerDef
							value = 1.25
						}
						if = {
							limit = {
								check_variable = {
									which = getPlanInvPowerAtt
									which = getPlanInvPowerDef
								}
							}
							set_variable = {
								which = tmpAtt
								which = getPlanInvPowerAtt
							}
							set_variable = {
								which = tmpDef
								which = getPlanInvPowerDef
							}
							multiply_variable = {
								which = tmpAtt
								which = tmpAtt
							}
							multiply_variable = {
								which = tmpDef
								which = tmpDef
							}
							subtract_variable = {
								which = tmpAtt
								which = tmpDef
							}
							set_variable = {
								which = inp_m_exp
								which = tmpAtt
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp_m_exp
											value = 0
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
								change_variable = {
									which = err.math.exp.undef
									value = 1
								}
							}
							else_if = {
								limit = {
									is_variable_equal = {
										which = inp_m_exp
										value = 0
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								set_variable = {
									which = exp_m_exp
									value = 0.5
								}
								set_variable = {
									which = int_m_exp
									which = exp_m_exp
								}
								multiply_variable = {
									which = int_m_exp
									value = 0.001
								}
								multiply_variable = {
									which = int_m_exp
									value = 1000
								}
								set_variable = {
									which = dec_m_exp
									which = exp_m_exp
								}
								subtract_variable = {
									which = dec_m_exp
									which = int_m_exp
								}
								set_variable = {
									which = inp
									which = inp_m_exp
								}
								if = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 0.001
											}
										}
									}
									set_variable = {
										which = ln_val
										value = 0
									}
									change_variable = {
										which = err.math.ln.undef
										value = 1
									}
								}
								else = {
									set_variable = {
										which = ln_val
										value = 0
									}
									set_variable = {
										which = scale
										value = 10000
									}
									set_variable = {
										which = k
										value = 0
									}
									set_variable = {
										which = k_div
										which = scale
									}
									while = {
										limit = {
											check_variable = {
												which = inp
												value = 2.001
											}
										}
										multiply_variable = {
											which = inp
											value = 0.5
										}
										change_variable = {
											which = ln_val
											value = 6931.472
										}
									}
									while = {
										limit = {
											NOT = {
												check_variable = {
													which = inp
													value = 1
												}
											}
										}
										multiply_variable = {
											which = inp
											value = 2
										}
										subtract_variable = {
											which = ln_val
											value = 6931.472
										}
									}
									multiply_variable = {
										which = inp
										which = scale
									}
									while = {
										limit = {
											NOT = {
												check_variable = {
													which = k
													value = 10
												}
											}
										}
										change_variable = {
											which = k
											value = 1
										}
										multiply_variable = {
											which = k_div
											value = 0.5
										}
										set_variable = {
											which = t_m_ln
											which = scale
										}
										change_variable = {
											which = t_m_ln
											which = k_div
										}
										if = {
											limit = {
												check_variable = {
													which = inp
													which = t_m_ln
												}
											}
											divide_variable = {
												which = inp
												which = t_m_ln
											}
											multiply_variable = {
												which = inp
												which = scale
											}
											set_variable = {
												which = lt_ind
												which = k
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 6
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 8
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 9
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 10
																}
															}
															set_variable = {
																which = lt_val
																value = 9.761
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 19.512
															}
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 38.986
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 7
															}
														}
														set_variable = {
															which = lt_val
															value = 77.821
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 155.042
														}
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 3
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 4
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 5
																}
															}
															set_variable = {
																which = lt_val
																value = 307.717
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 606.246
															}
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 1177.83
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 2
															}
														}
														set_variable = {
															which = lt_val
															value = 2231.436
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 4054.651
														}
													}
												}
											}
											set_variable = {
												which = lt_ind
												value = 0
											}
											change_variable = {
												which = ln_val
												which = lt_val
											}
										}
										set_variable = {
											which = t_m_ln
											value = 0
										}
									}
									divide_variable = {
										which = ln_val
										value = 10000
									}
									set_variable = {
										which = scale
										value = 0
									}
									set_variable = {
										which = k
										value = 0
									}
									set_variable = {
										which = k_div
										value = 0
									}
									set_variable = {
										which = lt_val
										value = 0
									}
								}
								set_variable = {
									which = inp
									value = 0
								}
								multiply_variable = {
									which = dec_m_exp
									which = ln_val
								}
								set_variable = {
									which = math.e.expnt
									which = dec_m_exp
								}
								set_variable = {
									which = math.e.return
									value = 1
								}
								if = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = -6.999
											}
										}
									}
									set_variable = {
										which = exp_val
										value = 0
									}
								}
								else = {
									while = {
										limit = {
											check_variable = {
												which = math.e.expnt
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.expnt
											value = 1
										}
										multiply_variable = {
											which = math.e.return
											value = 2.718
										}
									}
									while = {
										limit = {
											NOT = {
												check_variable = {
													which = math.e.expnt
													value = 0
												}
											}
										}
										change_variable = {
											which = math.e.expnt
											value = 1
										}
										divide_variable = {
											which = math.e.return
											value = 2.718
										}
									}
									set_variable = {
										which = math.e.sm
										value = 1
									}
									if = {
										limit = {
											NOT = {
												is_variable_equal = {
													which = math.e.expnt
													value = 0
												}
											}
										}
										set_variable = {
											which = math.e.sq
											which = math.e.expnt
										}
										multiply_variable = {
											which = math.e.sq
											which = math.e.expnt
										}
										set_variable = {
											which = math.e.fct
											value = 2
										}
										set_variable = {
											which = math.e.fctl
											value = 2
										}
										set_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										set_variable = {
											which = math.e.a2
											which = math.e.expnt
										}
										set_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
										set_variable = {
											which = math.e.prec
											value = 3
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										while = {
											limit = {
												check_variable = {
													which = math.e.prec
													value = 1
												}
											}
											subtract_variable = {
												which = math.e.prec
												value = 1
											}
											change_variable = {
												which = math.e.fctl
												value = 1
											}
											multiply_variable = {
												which = math.e.fct
												which = math.e.fctl
											}
											change_variable = {
												which = math.e.fctl
												value = 1
											}
											multiply_variable = {
												which = math.e.fct
												which = math.e.fctl
											}
											multiply_variable = {
												which = math.e.a1
												which = math.e.sq
											}
											multiply_variable = {
												which = math.e.a2
												which = math.e.sq
											}
											change_variable = {
												which = math.e.a3
												value = 2
											}
											set_variable = {
												which = math.e.tmp
												which = math.e.a2
											}
											multiply_variable = {
												which = math.e.tmp
												which = math.e.a3
											}
											change_variable = {
												which = math.e.tmp
												which = math.e.a1
											}
											divide_variable = {
												which = math.e.tmp
												which = math.e.fct
											}
											change_variable = {
												which = math.e.sm
												which = math.e.tmp
											}
										}
									}
									multiply_variable = {
										which = math.e.return
										which = math.e.sm
									}
									set_variable = {
										which = exp_val
										which = math.e.return
									}
									set_variable = {
										which = math.e.sm
										value = 0
									}
									set_variable = {
										which = math.e.tmp
										value = 0
									}
									set_variable = {
										which = math.e.a1
										value = 0
									}
									set_variable = {
										which = math.e.a2
										value = 0
									}
									set_variable = {
										which = math.e.a3
										value = 0
									}
									set_variable = {
										which = math.e.fctl
										value = 0
									}
									set_variable = {
										which = math.e.fct
										value = 0
									}
									set_variable = {
										which = math.e.prec
										value = 0
									}
									set_variable = {
										which = math.e.sq
										value = 0
									}
								}
								set_variable = {
									which = math.e.expnt
									value = 0
								}
								set_variable = {
									which = math.e.return
									value = 0
								}
								while = {
									limit = {
										check_variable = {
											which = int_m_exp
											value = 1
										}
									}
									subtract_variable = {
										which = int_m_exp
										value = 1
									}
									multiply_variable = {
										which = exp_val
										which = inp_m_exp
									}
								}
								set_variable = {
									which = exp_m_exp
									value = 0
								}
								set_variable = {
									which = int_m_exp
									value = 0
								}
								set_variable = {
									which = dec_m_exp
									value = 0
								}
								set_variable = {
									which = ln_val
									value = 0
								}
							}
							set_variable = {
								which = inp_m_exp
								value = 0
							}
							set_variable = {
								which = getPlanInvPowerLanch
								which = getPlanInvPowerAtt
							}
							subtract_variable = {
								which = getPlanInvPowerLanch
								which = exp_val
							}
							divide_variable = {
								which = getPlanInvPowerLanch
								which = getPlanInvPowerAtt
							}
							if = {
								limit = {
									always = yes
								}
								set_variable = {
									which = getPlanInvPowerAtt
									value = 0
								}
								set_variable = {
									which = getPlanInvPowerDef
									value = 0
								}
							}
							set_variable = {
								which = tmpAtt
								value = 0
							}
							set_variable = {
								which = tmpDef
								value = 0
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = getPlanInvPowerLanch
								value = 3
							}
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = getPlanInvPowerLanch
										value = 1
									}
								}
							}
							every_owned_province = {
								limit = {
									has_province_flag = getPlanInvCheck
								}
								set_variable = {
									which = armySizeCheck
									which = event_target:getPlanInvTarg
								}
								export_to_variable = {
									which = getPlanInvFortLevel
									value = trigger_value:fort_level
								}
								subtract_variable = {
									which = getPlanInvFortLevel
									value = 1
								}
								if = {
									limit = {
										check_variable = {
											which = armySizeCheck
											which = getPlanInvFortLevel
										}
									}
									set_variable = {
										which = getPlanInvPowerLanch
										which = owner
									}
									subtract_variable = {
										which = getPlanInvPowerLanch
										value = 1
									}
									multiply_variable = {
										which = getPlanInvPowerLanch
										which = getPlanInvPowerLanch
									}
									set_variable = {
										which = getPlanInvCE
										value = 300
									}
									every_neighbor_province = {
										limit = {
											NOT = {
												has_province_modifier = martial_law
											}
											OR = {
												owned_by = event_target:getPlanInvTarg
												owner = {
													OR = {
														is_subject_of = event_target:getPlanInvTarg
														overlord = {
															is_subject_of = event_target:getPlanInvTarg
														}
													}
												}
											}
										}
										if = {
											limit = {
												owner = {
													OR = {
														is_subject_of = event_target:getPlanInvTarg
														overlord = {
															is_subject_of = event_target:getPlanInvTarg
														}
													}
												}
											}
											set_variable = {
												which = getPlanInvCE
												which = runner_final_time_overlord
											}
										}
										else = {
											set_variable = {
												which = getPlanInvCE
												which = runner_final_time
											}
										}
										if = {
											limit = {
												NOT = {
													check_variable = {
														which = getPlanInvCE
														which = PREV
													}
												}
											}
											PREV = {
												set_variable = {
													which = getPlanInvCE
													which = PREV
												}
											}
										}
										set_variable = {
											which = getPlanInvCE
											value = 0
										}
									}
									if = {
										limit = {
											event_target:getPlanInvTarg = {
												government = nomad
											}
										}
										subtract_variable = {
											which = getPlanInvCE
											value = 120
										}
										multiply_variable = {
											which = getPlanInvCE
											value = -0.1
										}
									}
									else = {
										subtract_variable = {
											which = getPlanInvCE
											value = 60
										}
										multiply_variable = {
											which = getPlanInvCE
											value = -0.2
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getPlanInvCE
													value = 0
												}
											}
										}
										set_variable = {
											which = getPlanInvCE
											value = 0
										}
									}
									set_variable = {
										which = getPlanInvVal
										value = 1
									}
									if = {
										limit = {
											event_target:getPlanInvTarg = {
												OR = {
													accepted_culture = PREV
													primary_culture = PREV
													culture_group = PREV
												}
											}
										}
										if = {
											limit = {
												NOT = {
													event_target:getPlanInvTarg = {
														total_development = 50
													}
												}
											}
											change_variable = {
												which = getPlanInvVal
												value = 4
											}
										}
										else_if = {
											limit = {
												event_target:getPlanInvTarg = {
													total_development = 1000
												}
											}
											change_variable = {
												which = getPlanInvVal
												value = 1
											}
										}
										else = {
											change_variable = {
												which = getPlanInvVal
												value = 2
											}
										}
									}
									if = {
										limit = {
											event_target:getPlanInvTarg = {
												religion = PREV
											}
										}
										change_variable = {
											which = getPlanInvVal
											value = 0.5
										}
									}
									if = {
										limit = {
											event_target:getPlanInvTarg = {
												religion_group = PREV
												NOT = {
													AND = {
														PREV = {
															religion = catholic
														}
														religion = orthodox
													}
												}
											}
										}
										change_variable = {
											which = getPlanInvVal
											value = 0.5
										}
									}
									if = {
										limit = {
											is_core = event_target:getPlanInvTarg
										}
										change_variable = {
											which = getPlanInvVal
											value = 100
										}
									}
									if = {
										limit = {
											is_claim = event_target:getPlanInvTarg
										}
										change_variable = {
											which = getPlanInvVal
											value = 0.5
										}
									}
									if = {
										limit = {
											has_province_flag = tribals_control_province
											NOT = {
												event_target:getPlanInvTarg = {
													OR = {
														government = tribal
														government = nomad
													}
												}
											}
										}
										multiply_variable = {
											which = getPlanInvVal
											value = 0.5
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = getPlanInvVal
													value = 0.001
												}
											}
										}
										set_variable = {
											which = getPlanInvVal
											value = 0.001
										}
									}
									multiply_variable = {
										which = getPlanInvVal
										which = aiProvValue
									}
									multiply_variable = {
										which = getPlanInvVal
										which = getPlanInvCE
									}
									multiply_variable = {
										which = getPlanInvVal
										which = getPlanInvPowerLanch
									}
									if = {
										limit = {
											owner = {
												OR = {
													event_target:getPlanInvTarg = {
														is_subject_of = PREV
													}
													alliance_with = event_target:getPlanInvTarg
													marriage_with = event_target:getPlanInvTarg
													truce_with = event_target:getPlanInvTarg
													any_ally = {
														alliance_with = event_target:getPlanInvTarg
													}
													any_country = {
														has_guaranteed = PREV
														OR = {
															tag = event_target:getPlanInvTarg
															alliance_with = event_target:getPlanInvTarg
														}
													}
													overlord = {
														OR = {
															alliance_with = event_target:getPlanInvTarg
															marriage_with = event_target:getPlanInvTarg
															any_ally = {
																alliance_with = event_target:getPlanInvTarg
															}
															any_country = {
																has_guaranteed = PREV
																OR = {
																	tag = event_target:getPlanInvTarg
																	alliance_with = event_target:getPlanInvTarg
																}
															}
														}
													}
												}
											}
										}
										multiply_variable = {
											which = getPlanInvVal
											value = 0.5
										}
									}
									if = {
										limit = {
											check_variable = {
												which = getPlanInvVal
												which = event_target:aiDoDecWarTarg
											}
										}
										event_target:aiDoDecWarTarg = {
											set_variable = {
												which = getPlanInvVal
												value = 0
											}
										}
										save_event_target_as = aiDoDecWarTarg
									}
									else = {
										set_variable = {
											which = getPlanInvVal
											value = 0
										}
									}
									set_variable = {
										which = getPlanInvCE
										value = 0
									}
									set_variable = {
										which = getPlanInvPowerLanch
										value = 0
									}
								}
								set_variable = {
									which = armySizeCheck
									value = 0
								}
								set_variable = {
									which = getPlanInvFortLevel
									value = 0
								}
							}
						}
						set_variable = {
							which = getPlanInvPowerAtt
							value = 0
						}
						set_variable = {
							which = getPlanInvPowerDef
							value = 0
						}
						set_variable = {
							which = getPlanInvPowerLanch
							value = 0
						}
					}
					every_owned_province = {
						clr_province_flag = getPlanInvCheck
					}
				}
				event_target:aiDoDecWarTarg = {
					set_variable = {
						which = none
						value = 102842.336
					}
					if = {
						limit = {
							NOT = {
								is_variable_equal = {
									which = none
									value = 102842.336
								}
							}
						}
						set_variable = {
							which = none
							which = getPlanInvVal
						}
					}
					set_variable = {
						which = none
						value = 0
					}
					set_variable = {
						which = getPlanInvVal
						value = 0
					}
				}
				set_variable = {
					which = getPlanInvVal
					value = 0
				}
				set_variable = {
					which = armySizeCheck
					value = 0
				}
				set_variable = {
					which = tmpCheck
					value = 1
				}
				if = {
					limit = {
						event_target:aiDoDecWarTarg = {
							NOT = {
								is_variable_equal = {
									which = tmpCheck
									value = 1
								}
							}
						}
					}
					event_target:aiDoDecWarTarg = {
						owner = {
							save_event_target_as = aiDoDecWarTo
						}
					}
					if = {
						limit = {
							event_target:aiDoDecWarTo = {
								OR = {
									alliance_with = event_target:aiDoDecWarRoot
									marriage_with = event_target:aiDoDecWarRoot
									any_ally = {
										alliance_with = event_target:aiDoDecWarRoot
									}
									any_country = {
										has_guaranteed = PREV
										OR = {
											tag = event_target:aiDoDecWarRoot
											alliance_with = event_target:aiDoDecWarRoot
										}
									}
									overlord = {
										OR = {
											alliance_with = event_target:aiDoDecWarRoot
											marriage_with = event_target:aiDoDecWarRoot
											any_ally = {
												alliance_with = event_target:aiDoDecWarRoot
											}
											any_country = {
												has_guaranteed = PREV
												OR = {
													tag = event_target:aiDoDecWarRoot
													alliance_with = event_target:aiDoDecWarRoot
												}
											}
										}
									}
								}
							}
						}
						add_opinion = {
							who = event_target:aiDoDecWarTo
							modifier = opinion_invasion
						}
						overlord = {
							add_opinion = {
								who = PREV
								modifier = opinion_invasion
							}
						}
					}
					else_if = {
						limit = {
							NOT = {
								truce_with = event_target:aiDoDecWarTo
							}
						}
						change_variable = {
							which = aiTestDoDecWarFrom
							value = 1
						}
						event_target:aiDoDecWarTo = {
							change_variable = {
								which = aiTestDoDecWarTo
								value = 1
							}
						}
						if = {
							limit = {
								OR = {
									AND = {
										dip_tech = 35
										OR = {
											AND = {
												OR = {
													AND = {
														has_reform = divine_right
														has_reform = delegated_rulers
														has_reform = appointed_elite
													}
													has_reform = prussian_monarchy_legacy
												}
											}
											AND = {
												OR = {
													AND = {
														has_reform = peasants_republic
														has_reform = assembly_reform
														has_reform = vote_free
													}
													has_reform = revolutionary_republic
												}
											}
											AND = {
												OR = {
													AND = {
														has_reform = divine_right
														has_reform = bureaucracy
														has_reform = military_elite
													}
													has_reform = enlightened_despotism
												}
											}
											AND = {
												OR = {
													AND = {
														NOT = {
															has_reform = free_city
														}
														NOT = {
															has_reform = city_state
														}
														NOT = {
															has_reform = trade_republic
														}
														NOT = {
															has_reform = colonial_government
														}
														has_reform = dictator_reform
													}
													has_reform = republican_dictatorship
												}
											}
											absolutism = 70
										}
									}
									AND = {
										dip_tech = 35
										culture_group_claim = event_target:aiDoDecWarTo
									}
									invasion_nation = yes
								}
								OR = {
									is_subject = no
									NOT = {
										overlord = {
											overlord_of = event_target:aiDoDecWarTo
										}
									}
								}
								NOT = {
									is_tribal = yes
								}
								NOT = {
									is_nomad = yes
								}
								NOT = {
									has_country_flag = heir_to_rome
								}
							}
							declare_war_with_cb = {
								who = event_target:aiDoDecWarTo
								casus_belli = cb_sense_weakness_0.5
							}
						}
						else_if = {
							limit = {
								OR = {
									AND = {
										check_variable = {
											which = piety
											value = 0.4
										}
										NOT = {
											religion_group = event_target:aiDoDecWarTo
										}
									}
									is_tribal = yes
									is_nomad = yes
								}
							}
							declare_war_with_cb = {
								who = event_target:aiDoDecWarTo
								casus_belli = cb_sense_weakness_0.75
							}
						}
						else = {
							declare_war_with_cb = {
								who = event_target:aiDoDecWarTo
								casus_belli = cb_sense_weakness_1
							}
						}
						set_country_flag = aiDoDecWarFrom
						event_target:aiDoDecWarTo = {
							set_country_flag = aiDoDecWarTo@PREV
						}
						export_to_variable = {
							which = aiDoDecWarFromTreasury
							value = treasury
						}
						if = {
							limit = {
								num_of_loans = 32
							}
							if = {
								limit = {
									num_of_loans = 48
								}
								if = {
									limit = {
										num_of_loans = 56
									}
									if = {
										limit = {
											num_of_loans = 60
										}
										if = {
											limit = {
												num_of_loans = 62
											}
											if = {
												limit = {
													num_of_loans = 63
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 63
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 62
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 61
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 61
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 60
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												num_of_loans = 58
											}
											if = {
												limit = {
													num_of_loans = 59
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 59
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 58
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 57
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 57
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 56
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 52
										}
										if = {
											limit = {
												num_of_loans = 54
											}
											if = {
												limit = {
													num_of_loans = 55
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 55
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 54
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 53
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 53
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 52
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												num_of_loans = 50
											}
											if = {
												limit = {
													num_of_loans = 51
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 51
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 50
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 49
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 49
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 48
												}
											}
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										num_of_loans = 40
									}
									if = {
										limit = {
											num_of_loans = 44
										}
										if = {
											limit = {
												num_of_loans = 46
											}
											if = {
												limit = {
													num_of_loans = 47
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 47
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 46
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 45
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 45
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 44
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												num_of_loans = 42
											}
											if = {
												limit = {
													num_of_loans = 43
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 43
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 42
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 41
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 41
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 40
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 36
										}
										if = {
											limit = {
												num_of_loans = 38
											}
											if = {
												limit = {
													num_of_loans = 39
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 39
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 38
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 37
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 37
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 36
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												num_of_loans = 34
											}
											if = {
												limit = {
													num_of_loans = 35
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 35
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 34
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 33
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 33
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 32
												}
											}
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									num_of_loans = 16
								}
								if = {
									limit = {
										num_of_loans = 24
									}
									if = {
										limit = {
											num_of_loans = 28
										}
										if = {
											limit = {
												num_of_loans = 30
											}
											if = {
												limit = {
													num_of_loans = 31
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 31
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 30
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 29
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 29
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 28
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												num_of_loans = 26
											}
											if = {
												limit = {
													num_of_loans = 27
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 27
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 26
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 25
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 25
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 24
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 20
										}
										if = {
											limit = {
												num_of_loans = 22
											}
											if = {
												limit = {
													num_of_loans = 23
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 23
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 22
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 21
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 21
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 20
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												num_of_loans = 18
											}
											if = {
												limit = {
													num_of_loans = 19
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 19
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 18
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 17
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 17
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 16
												}
											}
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										num_of_loans = 8
									}
									if = {
										limit = {
											num_of_loans = 12
										}
										if = {
											limit = {
												num_of_loans = 14
											}
											if = {
												limit = {
													num_of_loans = 15
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 15
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 14
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 13
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 13
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 12
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												num_of_loans = 10
											}
											if = {
												limit = {
													num_of_loans = 11
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 11
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 10
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 9
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 9
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 8
												}
											}
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 4
										}
										if = {
											limit = {
												num_of_loans = 6
											}
											if = {
												limit = {
													num_of_loans = 7
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 7
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 6
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 5
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 5
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 4
												}
											}
										}
									}
									else = {
										if = {
											limit = {
												num_of_loans = 2
											}
											if = {
												limit = {
													num_of_loans = 3
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 3
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 2
												}
											}
										}
										else = {
											if = {
												limit = {
													num_of_loans = 1
												}
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 1
												}
											}
											else = {
												set_variable = {
													which = aiDoDecWarFromLoan
													value = 0
												}
											}
										}
									}
								}
							}
						}
						export_to_variable = {
							which = aiDoDecWarFromDev
							value = total_development
						}
						multiply_variable = {
							which = aiDoDecWarFromLoan
							which = aiDoDecWarFromDev
						}
						multiply_variable = {
							which = aiDoDecWarFromLoan
							value = 0.35
						}
						subtract_variable = {
							which = aiDoDecWarFromTreasury
							which = aiDoDecWarFromLoan
						}
						change_variable = {
							which = aiDoDecWarFromTreasury
							which = aiTreasuryGeneral
						}
						set_variable = {
							which = aiDoDecWarFromYear
							which = year_ticker
						}
						set_variable = {
							which = aiDoDecWarFromSurplus
							which = country_actual_income
						}
						set_variable = {
							which = aiDoDecWarFromLoan
							value = 0
						}
					}
				}
				set_variable = {
					which = tmpCheck
					value = 0
				}
			}
			set_variable = {
				which = aiInitPower
				value = 0
			}
			set_variable = {
				which = aiInitFortPerDev
				value = 0
			}
			every_country = {
				limit = {
					has_country_flag = aiInitInRange@PREV
				}
				clr_country_flag = aiInitInRange@PREV
				set_variable = {
					which = aiInitPower
					value = 0
				}
				set_variable = {
					which = aiInitThreat
					value = 0
				}
			}
		}
		else = {
			clr_country_flag = aiEventsFired
			clr_country_flag = aiHasAgendaMilitary
			clr_country_flag = aiHasAgendaExpansion
			clr_country_flag = aiHasAgendaGovernance
			clr_country_flag = aiHasAgendaEconomy
			clr_country_flag = aiHasAgendaOffense
			clr_country_flag = aiHasAgendaDefense
			clr_country_flag = aiHasAgendaInvasion
			clr_country_flag = aiHasAgendaColonization
			clr_country_flag = aiHasAgendaTrade
			clr_country_flag = aiHasAgendaProduction
			clr_country_flag = aiHasAgendaTech
			clr_country_flag = aiHasAgendaReform
			clr_country_flag = aiHasAgendaCE
			clr_country_flag = aiHasActionManpower
			clr_country_flag = aiHasActionBuildShipyards
			clr_country_flag = aiHasActionBuildForts
			clr_country_flag = aiHasActionWarchest
			clr_country_flag = aiHasActionDuringWar
			clr_country_flag = aiHasActionPlanInvasion
			clr_country_flag = aiHasActionPlanColonization
			clr_country_flag = aiHasActionDoColonization
			clr_country_flag = aiHasActionGetCB
			clr_country_flag = aiHasActionDecWar
			clr_country_flag = aiHasActionBuildCity
			clr_country_flag = aiHasActionEstLoyaltyImp
			clr_country_flag = aiHasActionEstFavorSpend
			clr_country_flag = aiHasActionEstDemote
			clr_country_flag = aiHasActionEstPromote
			clr_country_flag = aiHasActionEstPrivGrant
			clr_country_flag = aiHasActionEstPrivRevoke
			clr_country_flag = aiHasActionSolveDis
			clr_country_flag = aiHasActionSolveObs
			clr_country_flag = aiHasActionMoveCapital
			clr_country_flag = aiHasActionManageVassal
			clr_country_flag = aiHasActionEmbraceInst
			clr_country_flag = aiHasActionEducation
			clr_country_flag = aiHasActionArt
			clr_country_flag = aiHasActionSaveTreasury
			clr_country_flag = aiHasActionManageLoan
			clr_country_flag = aiHasActionBuildBureau
			clr_country_flag = aiHasActionBuildRoad
			clr_country_flag = aiHasActionBuildPort
			clr_country_flag = aiHasActionRebel
			if = {
				limit = {
					ai = yes
				}
				set_variable = {
					which = aiTreasuryGeneral
					value = 0
				}
			}
			set_variable = {
				which = aiVarWarGain
				value = 0
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.101
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	immediate = {
		every_country = {
			if = {
				limit = {
					exists = yes
				}
				export_to_variable = {
					which = devTotalCur
					value = total_development
				}
				multiply_variable = {
					which = devGrowthSum
					value = 0.8
				}
				if = {
					limit = {
						is_variable_equal = {
							which = devTotalPrev
							value = 0
						}
					}
					set_variable = {
						which = devTotalPrev
						which = devTotalCur
					}
				}
				subtract_variable = {
					which = devGrowthSum
					which = devTotalPrev
				}
				change_variable = {
					which = devGrowthSum
					which = devTotalCur
				}
				set_variable = {
					which = devTotalPrev
					which = devTotalCur
				}
				set_variable = {
					which = devTotalCur
					value = 0
				}
			}
			else = {
				set_variable = {
					which = devGrowthSum
					value = 0
				}
				set_variable = {
					which = devTotalPrev
					value = 0
				}
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.102
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	trigger = {
		is_at_war = no
	}
	immediate = {
		every_country = {
			limit = {
				exists = yes
				NOT = {
					has_country_flag = aiHasActionManageLoan
				}
				OR = {
					AND = {
						has_country_flag = aiHasActionSaveTreasury
						is_at_war = no
					}
					check_variable = {
						which = aiTreasuryGeneral
						value = 0.001
					}
				}
				OR = {
					ai = yes
					has_country_flag = autoSpending
				}
			}
			export_to_variable = {
				which = aiTreasuryVanillaLimit
				value = monthly_income
			}
			multiply_variable = {
				which = aiTreasuryVanillaLimit
				value = 3
			}
			change_variable = {
				which = aiTreasuryVanillaLimit
				value = 200
			}
			if = {
				limit = {
					has_country_flag = aiHasActionWarchest
				}
				multiply_variable = {
					which = aiTreasuryVanillaLimit
					value = 2
				}
			}
			export_to_variable = {
				which = aiTreasuryVanilla
				value = treasury
			}
			if = {
				limit = {
					check_variable = {
						which = aiTreasuryVanilla
						which = aiTreasuryVanillaLimit
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionSaveTreasury
						is_at_war = no
					}
					set_variable = {
						which = aiTreasuryIncrease
						which = aiTreasuryVanilla
					}
					subtract_variable = {
						which = aiTreasuryIncrease
						which = aiTreasuryVanillaLimit
					}
					if = {
						limit = {
							has_global_flag = aiTesting2
						}
						multiply_variable = {
							which = aiTreasuryIncrease
							value = 10
						}
					}
					change_variable = {
						which = aiTreasuryGeneral
						which = aiTreasuryIncrease
					}
					change_variable = {
						which = aiTestTreasuryGeneral
						which = aiTreasuryIncrease
					}
					export_to_variable = {
						which = tempTreasuryChange
						value = treasury
					}
					subtract_variable = {
						which = tempTreasuryChange
						which = aiTreasuryVanillaLimit
					}
					if = {
						limit = {
							check_variable = {
								which = tempTreasuryChange
								value = 0
							}
						}
						set_variable = {
							which = ducat_cost
							which = tempTreasuryChange
						}
						while = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 65536
								}
							}
							add_treasury = -65536
							subtract_variable = {
								which = ducat_cost
								value = 65536
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 32768
								}
							}
							add_treasury = -32768
							subtract_variable = {
								which = ducat_cost
								value = 32768
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 16384
								}
							}
							add_treasury = -16384
							subtract_variable = {
								which = ducat_cost
								value = 16384
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 8192
								}
							}
							add_treasury = -8192
							subtract_variable = {
								which = ducat_cost
								value = 8192
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 4096
								}
							}
							add_treasury = -4096
							subtract_variable = {
								which = ducat_cost
								value = 4096
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 2048
								}
							}
							add_treasury = -2048
							subtract_variable = {
								which = ducat_cost
								value = 2048
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 1024
								}
							}
							add_treasury = -1024
							subtract_variable = {
								which = ducat_cost
								value = 1024
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 512
								}
							}
							add_treasury = -512
							subtract_variable = {
								which = ducat_cost
								value = 512
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 256
								}
							}
							add_treasury = -256
							subtract_variable = {
								which = ducat_cost
								value = 256
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 128
								}
							}
							add_treasury = -128
							subtract_variable = {
								which = ducat_cost
								value = 128
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 64
								}
							}
							add_treasury = -64
							subtract_variable = {
								which = ducat_cost
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 32
								}
							}
							add_treasury = -32
							subtract_variable = {
								which = ducat_cost
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 16
								}
							}
							add_treasury = -16
							subtract_variable = {
								which = ducat_cost
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 8
								}
							}
							add_treasury = -8
							subtract_variable = {
								which = ducat_cost
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 4
								}
							}
							add_treasury = -4
							subtract_variable = {
								which = ducat_cost
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 2
								}
							}
							add_treasury = -2
							subtract_variable = {
								which = ducat_cost
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 1
								}
							}
							add_treasury = -1
							subtract_variable = {
								which = ducat_cost
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.5
								}
							}
							add_treasury = -0.5
							subtract_variable = {
								which = ducat_cost
								value = 0.5
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.25
								}
							}
							add_treasury = -0.25
							subtract_variable = {
								which = ducat_cost
								value = 0.25
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.125
								}
							}
							add_treasury = -0.125
							subtract_variable = {
								which = ducat_cost
								value = 0.125
							}
						}
						set_variable = {
							which = ducat_cost
							value = 0
						}
					}
					else = {
						set_variable = {
							which = ducat_gain
							which = tempTreasuryChange
						}
						multiply_variable = {
							which = ducat_gain
							value = -1
						}
						while = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 65536
								}
							}
							add_treasury = 65536
							subtract_variable = {
								which = ducat_gain
								value = 65536
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 32768
								}
							}
							add_treasury = 32768
							subtract_variable = {
								which = ducat_gain
								value = 32768
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 16384
								}
							}
							add_treasury = 16384
							subtract_variable = {
								which = ducat_gain
								value = 16384
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 8192
								}
							}
							add_treasury = 8192
							subtract_variable = {
								which = ducat_gain
								value = 8192
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 4096
								}
							}
							add_treasury = 4096
							subtract_variable = {
								which = ducat_gain
								value = 4096
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 2048
								}
							}
							add_treasury = 2048
							subtract_variable = {
								which = ducat_gain
								value = 2048
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 1024
								}
							}
							add_treasury = 1024
							subtract_variable = {
								which = ducat_gain
								value = 1024
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 512
								}
							}
							add_treasury = 512
							subtract_variable = {
								which = ducat_gain
								value = 512
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 256
								}
							}
							add_treasury = 256
							subtract_variable = {
								which = ducat_gain
								value = 256
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 128
								}
							}
							add_treasury = 128
							subtract_variable = {
								which = ducat_gain
								value = 128
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 64
								}
							}
							add_treasury = 64
							subtract_variable = {
								which = ducat_gain
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 32
								}
							}
							add_treasury = 32
							subtract_variable = {
								which = ducat_gain
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 16
								}
							}
							add_treasury = 16
							subtract_variable = {
								which = ducat_gain
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 8
								}
							}
							add_treasury = 8
							subtract_variable = {
								which = ducat_gain
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 4
								}
							}
							add_treasury = 4
							subtract_variable = {
								which = ducat_gain
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 2
								}
							}
							add_treasury = 2
							subtract_variable = {
								which = ducat_gain
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 1
								}
							}
							add_treasury = 1
							subtract_variable = {
								which = ducat_gain
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.5
								}
							}
							add_treasury = 0.5
							subtract_variable = {
								which = ducat_gain
								value = 0.5
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.25
								}
							}
							add_treasury = 0.25
							subtract_variable = {
								which = ducat_gain
								value = 0.25
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.125
								}
							}
							add_treasury = 0.125
							subtract_variable = {
								which = ducat_gain
								value = 0.125
							}
						}
						set_variable = {
							which = ducat_gain
							value = 0
						}
					}
					set_variable = {
						which = tempTreasuryChange
						value = 0
					}
					set_variable = {
						which = aiTreasuryIncrease
						value = 0
					}
				}
			}
			else = {
				set_variable = {
					which = aiTreasuryTotal
					which = aiTreasuryVanilla
				}
				change_variable = {
					which = aiTreasuryTotal
					which = aiTreasuryGeneral
				}
				if = {
					limit = {
						check_variable = {
							which = aiTreasuryTotal
							which = aiTreasuryVanillaLimit
						}
					}
					set_variable = {
						which = aiTreasuryDecrease
						which = aiTreasuryVanillaLimit
					}
					subtract_variable = {
						which = aiTreasuryDecrease
						which = aiTreasuryVanilla
					}
					subtract_variable = {
						which = aiTreasuryGeneral
						which = aiTreasuryDecrease
					}
					export_to_variable = {
						which = tempTreasuryChange
						value = treasury
					}
					subtract_variable = {
						which = tempTreasuryChange
						which = aiTreasuryVanillaLimit
					}
					if = {
						limit = {
							check_variable = {
								which = tempTreasuryChange
								value = 0
							}
						}
						set_variable = {
							which = ducat_cost
							which = tempTreasuryChange
						}
						while = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 65536
								}
							}
							add_treasury = -65536
							subtract_variable = {
								which = ducat_cost
								value = 65536
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 32768
								}
							}
							add_treasury = -32768
							subtract_variable = {
								which = ducat_cost
								value = 32768
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 16384
								}
							}
							add_treasury = -16384
							subtract_variable = {
								which = ducat_cost
								value = 16384
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 8192
								}
							}
							add_treasury = -8192
							subtract_variable = {
								which = ducat_cost
								value = 8192
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 4096
								}
							}
							add_treasury = -4096
							subtract_variable = {
								which = ducat_cost
								value = 4096
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 2048
								}
							}
							add_treasury = -2048
							subtract_variable = {
								which = ducat_cost
								value = 2048
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 1024
								}
							}
							add_treasury = -1024
							subtract_variable = {
								which = ducat_cost
								value = 1024
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 512
								}
							}
							add_treasury = -512
							subtract_variable = {
								which = ducat_cost
								value = 512
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 256
								}
							}
							add_treasury = -256
							subtract_variable = {
								which = ducat_cost
								value = 256
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 128
								}
							}
							add_treasury = -128
							subtract_variable = {
								which = ducat_cost
								value = 128
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 64
								}
							}
							add_treasury = -64
							subtract_variable = {
								which = ducat_cost
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 32
								}
							}
							add_treasury = -32
							subtract_variable = {
								which = ducat_cost
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 16
								}
							}
							add_treasury = -16
							subtract_variable = {
								which = ducat_cost
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 8
								}
							}
							add_treasury = -8
							subtract_variable = {
								which = ducat_cost
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 4
								}
							}
							add_treasury = -4
							subtract_variable = {
								which = ducat_cost
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 2
								}
							}
							add_treasury = -2
							subtract_variable = {
								which = ducat_cost
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 1
								}
							}
							add_treasury = -1
							subtract_variable = {
								which = ducat_cost
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.5
								}
							}
							add_treasury = -0.5
							subtract_variable = {
								which = ducat_cost
								value = 0.5
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.25
								}
							}
							add_treasury = -0.25
							subtract_variable = {
								which = ducat_cost
								value = 0.25
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.125
								}
							}
							add_treasury = -0.125
							subtract_variable = {
								which = ducat_cost
								value = 0.125
							}
						}
						set_variable = {
							which = ducat_cost
							value = 0
						}
					}
					else = {
						set_variable = {
							which = ducat_gain
							which = tempTreasuryChange
						}
						multiply_variable = {
							which = ducat_gain
							value = -1
						}
						while = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 65536
								}
							}
							add_treasury = 65536
							subtract_variable = {
								which = ducat_gain
								value = 65536
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 32768
								}
							}
							add_treasury = 32768
							subtract_variable = {
								which = ducat_gain
								value = 32768
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 16384
								}
							}
							add_treasury = 16384
							subtract_variable = {
								which = ducat_gain
								value = 16384
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 8192
								}
							}
							add_treasury = 8192
							subtract_variable = {
								which = ducat_gain
								value = 8192
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 4096
								}
							}
							add_treasury = 4096
							subtract_variable = {
								which = ducat_gain
								value = 4096
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 2048
								}
							}
							add_treasury = 2048
							subtract_variable = {
								which = ducat_gain
								value = 2048
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 1024
								}
							}
							add_treasury = 1024
							subtract_variable = {
								which = ducat_gain
								value = 1024
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 512
								}
							}
							add_treasury = 512
							subtract_variable = {
								which = ducat_gain
								value = 512
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 256
								}
							}
							add_treasury = 256
							subtract_variable = {
								which = ducat_gain
								value = 256
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 128
								}
							}
							add_treasury = 128
							subtract_variable = {
								which = ducat_gain
								value = 128
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 64
								}
							}
							add_treasury = 64
							subtract_variable = {
								which = ducat_gain
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 32
								}
							}
							add_treasury = 32
							subtract_variable = {
								which = ducat_gain
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 16
								}
							}
							add_treasury = 16
							subtract_variable = {
								which = ducat_gain
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 8
								}
							}
							add_treasury = 8
							subtract_variable = {
								which = ducat_gain
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 4
								}
							}
							add_treasury = 4
							subtract_variable = {
								which = ducat_gain
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 2
								}
							}
							add_treasury = 2
							subtract_variable = {
								which = ducat_gain
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 1
								}
							}
							add_treasury = 1
							subtract_variable = {
								which = ducat_gain
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.5
								}
							}
							add_treasury = 0.5
							subtract_variable = {
								which = ducat_gain
								value = 0.5
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.25
								}
							}
							add_treasury = 0.25
							subtract_variable = {
								which = ducat_gain
								value = 0.25
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.125
								}
							}
							add_treasury = 0.125
							subtract_variable = {
								which = ducat_gain
								value = 0.125
							}
						}
						set_variable = {
							which = ducat_gain
							value = 0
						}
					}
					set_variable = {
						which = tempTreasuryChange
						value = 0
					}
					set_variable = {
						which = aiTreasuryDecrease
						value = 0
					}
				}
				else = {
					export_to_variable = {
						which = tempTreasuryChange
						value = treasury
					}
					subtract_variable = {
						which = tempTreasuryChange
						which = aiTreasuryTotal
					}
					if = {
						limit = {
							check_variable = {
								which = tempTreasuryChange
								value = 0
							}
						}
						set_variable = {
							which = ducat_cost
							which = tempTreasuryChange
						}
						while = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 65536
								}
							}
							add_treasury = -65536
							subtract_variable = {
								which = ducat_cost
								value = 65536
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 32768
								}
							}
							add_treasury = -32768
							subtract_variable = {
								which = ducat_cost
								value = 32768
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 16384
								}
							}
							add_treasury = -16384
							subtract_variable = {
								which = ducat_cost
								value = 16384
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 8192
								}
							}
							add_treasury = -8192
							subtract_variable = {
								which = ducat_cost
								value = 8192
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 4096
								}
							}
							add_treasury = -4096
							subtract_variable = {
								which = ducat_cost
								value = 4096
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 2048
								}
							}
							add_treasury = -2048
							subtract_variable = {
								which = ducat_cost
								value = 2048
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 1024
								}
							}
							add_treasury = -1024
							subtract_variable = {
								which = ducat_cost
								value = 1024
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 512
								}
							}
							add_treasury = -512
							subtract_variable = {
								which = ducat_cost
								value = 512
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 256
								}
							}
							add_treasury = -256
							subtract_variable = {
								which = ducat_cost
								value = 256
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 128
								}
							}
							add_treasury = -128
							subtract_variable = {
								which = ducat_cost
								value = 128
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 64
								}
							}
							add_treasury = -64
							subtract_variable = {
								which = ducat_cost
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 32
								}
							}
							add_treasury = -32
							subtract_variable = {
								which = ducat_cost
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 16
								}
							}
							add_treasury = -16
							subtract_variable = {
								which = ducat_cost
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 8
								}
							}
							add_treasury = -8
							subtract_variable = {
								which = ducat_cost
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 4
								}
							}
							add_treasury = -4
							subtract_variable = {
								which = ducat_cost
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 2
								}
							}
							add_treasury = -2
							subtract_variable = {
								which = ducat_cost
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 1
								}
							}
							add_treasury = -1
							subtract_variable = {
								which = ducat_cost
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.5
								}
							}
							add_treasury = -0.5
							subtract_variable = {
								which = ducat_cost
								value = 0.5
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.25
								}
							}
							add_treasury = -0.25
							subtract_variable = {
								which = ducat_cost
								value = 0.25
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.125
								}
							}
							add_treasury = -0.125
							subtract_variable = {
								which = ducat_cost
								value = 0.125
							}
						}
						set_variable = {
							which = ducat_cost
							value = 0
						}
					}
					else = {
						set_variable = {
							which = ducat_gain
							which = tempTreasuryChange
						}
						multiply_variable = {
							which = ducat_gain
							value = -1
						}
						while = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 65536
								}
							}
							add_treasury = 65536
							subtract_variable = {
								which = ducat_gain
								value = 65536
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 32768
								}
							}
							add_treasury = 32768
							subtract_variable = {
								which = ducat_gain
								value = 32768
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 16384
								}
							}
							add_treasury = 16384
							subtract_variable = {
								which = ducat_gain
								value = 16384
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 8192
								}
							}
							add_treasury = 8192
							subtract_variable = {
								which = ducat_gain
								value = 8192
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 4096
								}
							}
							add_treasury = 4096
							subtract_variable = {
								which = ducat_gain
								value = 4096
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 2048
								}
							}
							add_treasury = 2048
							subtract_variable = {
								which = ducat_gain
								value = 2048
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 1024
								}
							}
							add_treasury = 1024
							subtract_variable = {
								which = ducat_gain
								value = 1024
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 512
								}
							}
							add_treasury = 512
							subtract_variable = {
								which = ducat_gain
								value = 512
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 256
								}
							}
							add_treasury = 256
							subtract_variable = {
								which = ducat_gain
								value = 256
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 128
								}
							}
							add_treasury = 128
							subtract_variable = {
								which = ducat_gain
								value = 128
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 64
								}
							}
							add_treasury = 64
							subtract_variable = {
								which = ducat_gain
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 32
								}
							}
							add_treasury = 32
							subtract_variable = {
								which = ducat_gain
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 16
								}
							}
							add_treasury = 16
							subtract_variable = {
								which = ducat_gain
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 8
								}
							}
							add_treasury = 8
							subtract_variable = {
								which = ducat_gain
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 4
								}
							}
							add_treasury = 4
							subtract_variable = {
								which = ducat_gain
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 2
								}
							}
							add_treasury = 2
							subtract_variable = {
								which = ducat_gain
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 1
								}
							}
							add_treasury = 1
							subtract_variable = {
								which = ducat_gain
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.5
								}
							}
							add_treasury = 0.5
							subtract_variable = {
								which = ducat_gain
								value = 0.5
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.25
								}
							}
							add_treasury = 0.25
							subtract_variable = {
								which = ducat_gain
								value = 0.25
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.125
								}
							}
							add_treasury = 0.125
							subtract_variable = {
								which = ducat_gain
								value = 0.125
							}
						}
						set_variable = {
							which = ducat_gain
							value = 0
						}
					}
					set_variable = {
						which = tempTreasuryChange
						value = 0
					}
					set_variable = {
						which = aiTreasuryGeneral
						value = 0
					}
				}
				set_variable = {
					which = aiTreasuryTotal
					value = 0
				}
			}
			if = {
				limit = {
					ai = yes
					is_at_war = no
					manpower = 1
					manpower_percentage = 0.2
					OR = {
						AND = {
							NOT = {
								has_country_flag = aiHasAgendaMilitary
								has_country_flag = aiHasAgendaInvasion
							}
							has_country_flag = aiHasAgendaEconomy
							has_country_flag = aiHasAgendaReform
							has_country_flag = aiHasAgendaCE
						}
						manpower_percentage = 0.85
					}
				}
				export_to_variable = {
					which = aiTreasuryManpGain
					value = max_manpower
				}
				export_to_variable = {
					which = aiTreasuryManpCheck
					value = manpower
				}
				multiply_variable = {
					which = aiTreasuryManpGain
					value = 0.1
				}
				if = {
					limit = {
						check_variable = {
							which = aiTreasuryManpGain
							which = aiTreasuryManpCheck
						}
					}
					set_variable = {
						which = aiTreasuryManpGain
						which = aiTreasuryManpCheck
					}
				}
				divide_variable = {
					which = aiTreasuryManpGain
					value = 1000
				}
				multiply_variable = {
					which = aiTreasuryManpGain
					value = 1000
				}
				change_variable = {
					which = aiTestTreasuryManp
					which = aiTreasuryManpGain
				}
				set_variable = {
					which = manpower_cost
					which = aiTreasuryManpGain
				}
				while = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 65536
						}
					}
					add_manpower = -65536
					subtract_variable = {
						which = manpower_cost
						value = 65536
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 32768
						}
					}
					add_manpower = -32768
					subtract_variable = {
						which = manpower_cost
						value = 32768
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 16384
						}
					}
					add_manpower = -16384
					subtract_variable = {
						which = manpower_cost
						value = 16384
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 8192
						}
					}
					add_manpower = -8192
					subtract_variable = {
						which = manpower_cost
						value = 8192
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 4096
						}
					}
					add_manpower = -4096
					subtract_variable = {
						which = manpower_cost
						value = 4096
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 2048
						}
					}
					add_manpower = -2048
					subtract_variable = {
						which = manpower_cost
						value = 2048
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 1024
						}
					}
					add_manpower = -1024
					subtract_variable = {
						which = manpower_cost
						value = 1024
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 512
						}
					}
					add_manpower = -512
					subtract_variable = {
						which = manpower_cost
						value = 512
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 256
						}
					}
					add_manpower = -256
					subtract_variable = {
						which = manpower_cost
						value = 256
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 128
						}
					}
					add_manpower = -128
					subtract_variable = {
						which = manpower_cost
						value = 128
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 64
						}
					}
					add_manpower = -64
					subtract_variable = {
						which = manpower_cost
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 32
						}
					}
					add_manpower = -32
					subtract_variable = {
						which = manpower_cost
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 16
						}
					}
					add_manpower = -16
					subtract_variable = {
						which = manpower_cost
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 8
						}
					}
					add_manpower = -8
					subtract_variable = {
						which = manpower_cost
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 4
						}
					}
					add_manpower = -4
					subtract_variable = {
						which = manpower_cost
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 2
						}
					}
					add_manpower = -2
					subtract_variable = {
						which = manpower_cost
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_cost
							value = 1
						}
					}
					add_manpower = -1
					subtract_variable = {
						which = manpower_cost
						value = 1
					}
				}
				set_variable = {
					which = manpower_cost
					value = 0
				}
				multiply_variable = {
					which = aiTreasuryManpGain
					value = 1000
				}
				divide_variable = {
					which = aiTreasuryManpGain
					value = 50
				}
				change_variable = {
					which = aiTreasuryGeneral
					which = aiTreasuryManpGain
				}
				change_variable = {
					which = aiTestTreasuryManpDucat
					which = aiTreasuryManpGain
				}
				set_variable = {
					which = manpower_cost
					value = 0
				}
				set_variable = {
					which = aiTreasuryManpGain
					value = 0
				}
				set_variable = {
					which = aiTreasuryManpCheck
					value = 0
				}
			}
			set_variable = {
				which = aiTreasuryVanilla
				value = 0
			}
			set_variable = {
				which = aiTreasuryVanillaLimit
				value = 0
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.103
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				stability = 1
			}
			change_variable = {
				which = aiTestDoEstRevokeLN
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.106
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.104
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				stability = 1
			}
			change_variable = {
				which = aiTestDoEstRevokeGN
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.006
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.105
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				stability = 1
			}
			change_variable = {
				which = aiTestDoEstRevokeBG
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.206
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.106
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				OR = {
					NOT = {
						stability = -2
					}
					AND = {
						NOT = {
							stability = -1
						}
						average_effective_unrest = 8
					}
					NOT = {
						check_variable = {
							which = estate_burghers_loyalty
							value = 0.11
						}
					}
				}
			}
			change_variable = {
				which = aiTestDoEstGrantBG
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.202
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.107
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				OR = {
					NOT = {
						stability = -2
					}
					AND = {
						NOT = {
							stability = -1
						}
						average_effective_unrest = 8
					}
					NOT = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0.11
						}
					}
				}
			}
			change_variable = {
				which = aiTestDoEstGrantLN
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.102
				days = 2
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.108
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				OR = {
					NOT = {
						stability = -2
					}
					AND = {
						NOT = {
							stability = -1
						}
						average_effective_unrest = 8
					}
					NOT = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 0.11
						}
					}
				}
			}
			change_variable = {
				which = aiTestDoEstGrantGN
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.002
				days = 4
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.109
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	trigger = {
		is_at_war = yes
		NOT = {
			has_country_flag = estate_war_decisions_made
		}
		has_global_flag = first_estate_fired
		has_country_flag = stuffs_set
		ai = yes
	}
	immediate = {
		if = {
			limit = {
				any_known_country = {
					offensive_war_with = PREV
					NOT = {
						defensive_war_with = PREV
					}
				}
			}
			set_variable = {
				which = GN_free_picks
				value = 1
			}
			set_variable = {
				which = LN_free_picks
				value = 1
			}
			set_variable = {
				which = BUR_free_picks
				value = 1
			}
		}
		save_event_target_as = aiLevyTarg
		set_variable = {
			which = tmpPowerDiff
			value = 0
		}
		set_variable = {
			which = tmpPowerDiffSum
			value = 0
		}
		every_country = {
			limit = {
				war_with = event_target:aiLevyTarg
				OR = {
					is_in_war = {
						attacker_leader = THIS
					}
					is_in_war = {
						defender_leader = THIS
					}
				}
			}
			set_variable = {
				which = tmpPowerFoe
				value = 0
			}
			set_variable = {
				which = tmpPowerAlly
				value = 0
			}
			every_country = {
				limit = {
					is_in_war = {
						participants = PREV
						participants = event_target:aiLevyTarg
					}
					NOT = {
						tag = event_target:aiLevyTarg
					}
				}
				set_country_flag = aiInitDiploRelated
				if = {
					limit = {
						always = no
					}
					every_subject_country = {
						limit = {
							NOT = {
								tag = event_target:aiLevyTarg
							}
							AND = {
								NOT = {
									liberty_desire = 50
									is_subject_of_type = tributary_state
									is_subject_of_type = rebellious_decentralized_vassal
									is_subject_of_type = rebellious_subjugated_vassal
								}
							}
						}
						set_country_flag = aiInitDiploRelated
						every_subject_country = {
							limit = {
								NOT = {
									tag = event_target:aiLevyTarg
								}
								AND = {
									NOT = {
										liberty_desire = 50
										is_subject_of_type = tributary_state
										is_subject_of_type = rebellious_decentralized_vassal
										is_subject_of_type = rebellious_subjugated_vassal
									}
								}
							}
							set_country_flag = aiInitDiploRelated
							every_subject_country = {
								limit = {
									NOT = {
										tag = event_target:aiLevyTarg
									}
									AND = {
										NOT = {
											liberty_desire = 50
											is_subject_of_type = tributary_state
											is_subject_of_type = rebellious_decentralized_vassal
											is_subject_of_type = rebellious_subjugated_vassal
										}
									}
								}
								set_country_flag = aiInitDiploRelated
							}
						}
					}
				}
				if = {
					limit = {
						always = no
					}
					overlord = {
						if = {
							limit = {
								NOT = {
									tag = event_target:aiLevyTarg
								}
							}
							if = {
								limit = {
									is_subject = yes
								}
								overlord = {
									if = {
										limit = {
											NOT = {
												tag = event_target:aiLevyTarg
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:aiLevyTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
											every_subject_country = {
												limit = {
													NOT = {
														tag = event_target:aiLevyTarg
													}
													AND = {
														NOT = {
															liberty_desire = 50
															is_subject_of_type = tributary_state
															is_subject_of_type = rebellious_decentralized_vassal
															is_subject_of_type = rebellious_subjugated_vassal
														}
													}
												}
												set_country_flag = aiInitDiploRelated
												every_subject_country = {
													limit = {
														NOT = {
															tag = event_target:aiLevyTarg
														}
														AND = {
															NOT = {
																liberty_desire = 50
																is_subject_of_type = tributary_state
																is_subject_of_type = rebellious_decentralized_vassal
																is_subject_of_type = rebellious_subjugated_vassal
															}
														}
													}
													set_country_flag = aiInitDiploRelated
												}
											}
										}
									}
								}
							}
							else = {
								set_country_flag = aiInitDiploRelated
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:aiLevyTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:aiLevyTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:aiLevyTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
						}
					}
				}
				set_variable = {
					which = aiInitDiploArmy
					value = 0
				}
				set_variable = {
					which = aiInitDiploNavy
					value = 0
				}
				every_country = {
					limit = {
						has_country_flag = aiInitDiploRelated
					}
					clr_country_flag = aiInitDiploRelated
					if = {
						limit = {
							always = yes
						}
						if = {
							limit = {
								always = yes
							}
							export_to_variable = {
								which = AIMiscArmySize
								value = army_size
							}
						}
						else = {
							set_variable = {
								which = AIMiscArmySize
								value = 0
							}
						}
						export_to_variable = {
							which = AIMiscLFL
							value = land_forcelimit
						}
						export_to_variable = {
							which = AIMiscManpow
							value = manpower
						}
						set_variable = {
							which = AIMiscArmyEstate
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = estate_tribals_loyalty
									value = 0.11
								}
							}
							set_variable = {
								which = tmpArmyTR
								which = estate_tribals_infantry_host
							}
							change_variable = {
								which = tmpArmyTR
								which = estate_tribals_cavalry_host
							}
							multiply_variable = {
								which = tmpArmyTR
								value = 1.25
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = tmpArmyTR
							}
							set_variable = {
								which = tmpArmyTR
								value = 0
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 0.11
								}
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_infantry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_cavalry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_greater_nobles_artillery_total
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0.11
								}
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_infantry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_cavalry_total
							}
							change_variable = {
								which = AIMiscArmyEstate
								which = estate_lesser_nobles_artillery_total
							}
						}
						multiply_variable = {
							which = AIMiscArmyEstate
							value = 0.85
						}
						if = {
							limit = {
								always = yes
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = AIMiscManpow
											which = AIMiscLFL
										}
									}
								}
								subtract_variable = {
									which = AIMiscLFL
									which = AIMiscManpow
								}
								multiply_variable = {
									which = AIMiscLFL
									value = 0.15
								}
								multiply_variable = {
									which = AIMiscManpow
									value = 0.3
								}
							}
							else = {
								subtract_variable = {
									which = AIMiscManpow
									which = AIMiscLFL
								}
								multiply_variable = {
									which = AIMiscManpow
									value = 0.15
								}
								multiply_variable = {
									which = AIMiscLFL
									value = 0.3
								}
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscLFL
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscManpow
							}
						}
						if = {
							limit = {
								always = yes
							}
							change_variable = {
								which = AIMiscArmySize
								which = AIMiscArmyEstate
							}
						}
						set_variable = {
							which = tmpAIInitDiploArmy
							which = AIMiscArmySize
						}
						set_variable = {
							which = AIMiscArmySize
							value = 0
						}
						set_variable = {
							which = AIMiscLFL
							value = 0
						}
						set_variable = {
							which = AIMiscManpow
							value = 0
						}
						set_variable = {
							which = AIMiscArmyEstate
							value = 0
						}
						export_to_variable = {
							which = AIMiscMilTech
							value = mil_tech
						}
						export_to_variable = {
							which = AIMiscLandMorale
							value = modifier:land_morale
						}
						export_to_variable = {
							which = AIMiscDisc
							value = modifier:discipline
						}
						multiply_variable = {
							which = AIMiscMilTech
							value = 0.1
						}
						multiply_variable = {
							which = AIMiscLandMorale
							value = 2
						}
						multiply_variable = {
							which = AIMiscDisc
							value = 5
						}
						change_variable = {
							which = AIMiscMilTech
							value = 1
						}
						change_variable = {
							which = AIMiscLandMorale
							value = 1
						}
						change_variable = {
							which = AIMiscDisc
							value = 1
						}
						if = {
							limit = {
								OR = {
									NOT = {
										check_variable = {
											which = AIMiscMilTech
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscLandMorale
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscDisc
											value = 0.001
										}
									}
								}
							}
							set_variable = {
								which = tmpAIInitDiploArmyQual
								value = 0
							}
						}
						else = {
							set_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscMilTech
							}
							multiply_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscLandMorale
							}
							multiply_variable = {
								which = tmpAIInitDiploArmyQual
								which = AIMiscLandMorale
							}
						}
						set_variable = {
							which = AIMiscMilTech
							value = 0
						}
						set_variable = {
							which = AIMiscLandMorale
							value = 0
						}
						set_variable = {
							which = AIMiscDisc
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploArmy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploArmyQual
							value = 0
						}
					}
					if = {
						limit = {
							always = yes
						}
						export_to_variable = {
							which = tmpAIInitDiploNavy
							value = navy_size
						}
						export_to_variable = {
							which = AIMiscDipTech
							value = dip_tech
						}
						export_to_variable = {
							which = AIMiscNavMorale
							value = modifier:naval_morale
						}
						multiply_variable = {
							which = AIMiscDipTech
							value = 0.1
						}
						multiply_variable = {
							which = AIMiscNavMorale
							value = 1.5
						}
						change_variable = {
							which = AIMiscDipTech
							value = 1
						}
						change_variable = {
							which = AIMiscNavMorale
							value = 1
						}
						if = {
							limit = {
								OR = {
									NOT = {
										check_variable = {
											which = AIMiscDipTech
											value = 0.001
										}
									}
									NOT = {
										check_variable = {
											which = AIMiscNavMorale
											value = 0.001
										}
									}
								}
							}
							set_variable = {
								which = tmpAIInitDiploNavyQual
								value = 0
							}
						}
						else = {
							set_variable = {
								which = tmpAIInitDiploNavyQual
								which = AIMiscDipTech
							}
							change_variable = {
								which = tmpAIInitDiploNavyQual
								which = AIMiscNavMorale
							}
						}
						set_variable = {
							which = AIMiscDipTech
							value = 0
						}
						set_variable = {
							which = AIMiscNavMorale
							value = 0
						}
					}
					else = {
						set_variable = {
							which = tmpAIInitDiploNavy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploNavyQual
							value = 0
						}
					}
					multiply_variable = {
						which = tmpAIInitDiploArmy
						which = tmpAIInitDiploArmyQual
					}
					multiply_variable = {
						which = tmpAIInitDiploNavy
						which = tmpAIInitDiploNavyQual
					}
					PREV = {
						set_variable = {
							which = tmpAIInitDiploArmy
							which = PREV
						}
						set_variable = {
							which = tmpAIInitDiploNavy
							which = PREV
						}
						change_variable = {
							which = aiInitDiploArmy
							which = tmpAIInitDiploArmy
						}
						change_variable = {
							which = aiInitDiploNavy
							which = tmpAIInitDiploNavy
						}
						set_variable = {
							which = tmpAIInitDiploArmy
							value = 0
						}
						set_variable = {
							which = tmpAIInitDiploNavy
							value = 0
						}
					}
					set_variable = {
						which = tmpAIInitDiploArmy
						value = 0
					}
					set_variable = {
						which = tmpAIInitDiploNavy
						value = 0
					}
				}
				divide_variable = {
					which = aiInitDiploNavy
					value = 2
				}
				set_variable = {
					which = tmpPower
					which = aiInitDiploArmy
				}
				change_variable = {
					which = tmpPower
					which = aiInitDiploNavy
				}
				divide_variable = {
					which = tmpPower
					value = 50
				}
				set_variable = {
					which = aiInitDiploArmy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploArmyQual
					value = 0
				}
				set_variable = {
					which = aiInitDiploNavy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploNavyQual
					value = 0
				}
				if = {
					limit = {
						war_with = event_target:aiLevyTarg
					}
					PREV = {
						set_variable = {
							which = tmpPower
							which = PREV
						}
						change_variable = {
							which = tmpPowerFoe
							which = tmpPower
						}
						set_variable = {
							which = tmpPower
							value = 0
						}
					}
				}
				else = {
					PREV = {
						set_variable = {
							which = tmpPower
							which = PREV
						}
						change_variable = {
							which = tmpPowerAlly
							which = tmpPower
						}
						set_variable = {
							which = tmpPower
							value = 0
						}
					}
				}
				set_variable = {
					which = tmpPower
					value = 0
				}
			}
			set_variable = {
				which = tmpPowerDiff
				which = tmpPowerFoe
			}
			subtract_variable = {
				which = tmpPowerDiff
				which = tmpPowerAlly
			}
			if = {
				limit = {
					check_variable = {
						which = tmpPowerDiff
						which = event_target:aiLevyTarg
					}
				}
				event_target:aiLevyTarg = {
					set_variable = {
						which = tmpPowerDiff
						which = PREV
					}
				}
			}
			set_variable = {
				which = tmpPowerDiffSum
				which = tmpPowerDiff
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpPowerDiffSum
							value = 0
						}
					}
				}
				set_variable = {
					which = tmpPowerDiffSum
					value = 0
				}
			}
			event_target:aiLevyTarg = {
				change_variable = {
					which = tmpPowerDiffSum
					which = PREV
				}
			}
			set_variable = {
				which = tmpPowerFoe
				value = 0
			}
			set_variable = {
				which = aiInitPowerAlly
				value = 0
			}
			set_variable = {
				which = tmpPowerDiff
				value = 0
			}
			set_variable = {
				which = tmpPowerDiffSum
				value = 0
			}
		}
		set_country_flag = aiInitDiploRelated
		if = {
			limit = {
				always = no
			}
			every_subject_country = {
				limit = {
					NOT = {
						tag = event_target:aiLevyTarg
					}
					AND = {
						NOT = {
							liberty_desire = 50
							is_subject_of_type = tributary_state
							is_subject_of_type = rebellious_decentralized_vassal
							is_subject_of_type = rebellious_subjugated_vassal
						}
					}
				}
				set_country_flag = aiInitDiploRelated
				every_subject_country = {
					limit = {
						NOT = {
							tag = event_target:aiLevyTarg
						}
						AND = {
							NOT = {
								liberty_desire = 50
								is_subject_of_type = tributary_state
								is_subject_of_type = rebellious_decentralized_vassal
								is_subject_of_type = rebellious_subjugated_vassal
							}
						}
					}
					set_country_flag = aiInitDiploRelated
					every_subject_country = {
						limit = {
							NOT = {
								tag = event_target:aiLevyTarg
							}
							AND = {
								NOT = {
									liberty_desire = 50
									is_subject_of_type = tributary_state
									is_subject_of_type = rebellious_decentralized_vassal
									is_subject_of_type = rebellious_subjugated_vassal
								}
							}
						}
						set_country_flag = aiInitDiploRelated
					}
				}
			}
		}
		if = {
			limit = {
				always = no
			}
			overlord = {
				if = {
					limit = {
						NOT = {
							tag = event_target:aiLevyTarg
						}
					}
					if = {
						limit = {
							is_subject = yes
						}
						overlord = {
							if = {
								limit = {
									NOT = {
										tag = event_target:aiLevyTarg
									}
								}
								set_country_flag = aiInitDiploRelated
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:aiLevyTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:aiLevyTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:aiLevyTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
						}
					}
					else = {
						set_country_flag = aiInitDiploRelated
						every_subject_country = {
							limit = {
								NOT = {
									tag = event_target:aiLevyTarg
								}
								AND = {
									NOT = {
										liberty_desire = 50
										is_subject_of_type = tributary_state
										is_subject_of_type = rebellious_decentralized_vassal
										is_subject_of_type = rebellious_subjugated_vassal
									}
								}
							}
							set_country_flag = aiInitDiploRelated
							every_subject_country = {
								limit = {
									NOT = {
										tag = event_target:aiLevyTarg
									}
									AND = {
										NOT = {
											liberty_desire = 50
											is_subject_of_type = tributary_state
											is_subject_of_type = rebellious_decentralized_vassal
											is_subject_of_type = rebellious_subjugated_vassal
										}
									}
								}
								set_country_flag = aiInitDiploRelated
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:aiLevyTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
								}
							}
						}
					}
				}
			}
		}
		set_variable = {
			which = aiInitDiploArmy
			value = 0
		}
		set_variable = {
			which = aiInitDiploNavy
			value = 0
		}
		every_country = {
			limit = {
				has_country_flag = aiInitDiploRelated
			}
			clr_country_flag = aiInitDiploRelated
			if = {
				limit = {
					always = yes
				}
				if = {
					limit = {
						always = yes
					}
					export_to_variable = {
						which = AIMiscArmySize
						value = army_size
					}
				}
				else = {
					set_variable = {
						which = AIMiscArmySize
						value = 0
					}
				}
				export_to_variable = {
					which = AIMiscLFL
					value = land_forcelimit
				}
				export_to_variable = {
					which = AIMiscManpow
					value = manpower
				}
				set_variable = {
					which = AIMiscArmyEstate
					value = 0
				}
				if = {
					limit = {
						check_variable = {
							which = estate_tribals_loyalty
							value = 0.11
						}
					}
					set_variable = {
						which = tmpArmyTR
						which = estate_tribals_infantry_host
					}
					change_variable = {
						which = tmpArmyTR
						which = estate_tribals_cavalry_host
					}
					multiply_variable = {
						which = tmpArmyTR
						value = 1.25
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = tmpArmyTR
					}
					set_variable = {
						which = tmpArmyTR
						value = 0
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 0.11
						}
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_infantry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_cavalry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_artillery_total
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0.11
						}
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_infantry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_cavalry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_artillery_total
					}
				}
				multiply_variable = {
					which = AIMiscArmyEstate
					value = 0.85
				}
				if = {
					limit = {
						always = yes
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = AIMiscManpow
									which = AIMiscLFL
								}
							}
						}
						subtract_variable = {
							which = AIMiscLFL
							which = AIMiscManpow
						}
						multiply_variable = {
							which = AIMiscLFL
							value = 0.15
						}
						multiply_variable = {
							which = AIMiscManpow
							value = 0.3
						}
					}
					else = {
						subtract_variable = {
							which = AIMiscManpow
							which = AIMiscLFL
						}
						multiply_variable = {
							which = AIMiscManpow
							value = 0.15
						}
						multiply_variable = {
							which = AIMiscLFL
							value = 0.3
						}
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscLFL
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscManpow
					}
				}
				if = {
					limit = {
						always = no
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscArmyEstate
					}
				}
				set_variable = {
					which = tmpAIInitDiploArmy
					which = AIMiscArmySize
				}
				set_variable = {
					which = AIMiscArmySize
					value = 0
				}
				set_variable = {
					which = AIMiscLFL
					value = 0
				}
				set_variable = {
					which = AIMiscManpow
					value = 0
				}
				set_variable = {
					which = AIMiscArmyEstate
					value = 0
				}
				export_to_variable = {
					which = AIMiscMilTech
					value = mil_tech
				}
				export_to_variable = {
					which = AIMiscLandMorale
					value = modifier:land_morale
				}
				export_to_variable = {
					which = AIMiscDisc
					value = modifier:discipline
				}
				multiply_variable = {
					which = AIMiscMilTech
					value = 0.1
				}
				multiply_variable = {
					which = AIMiscLandMorale
					value = 2
				}
				multiply_variable = {
					which = AIMiscDisc
					value = 5
				}
				change_variable = {
					which = AIMiscMilTech
					value = 1
				}
				change_variable = {
					which = AIMiscLandMorale
					value = 1
				}
				change_variable = {
					which = AIMiscDisc
					value = 1
				}
				if = {
					limit = {
						OR = {
							NOT = {
								check_variable = {
									which = AIMiscMilTech
									value = 0.001
								}
							}
							NOT = {
								check_variable = {
									which = AIMiscLandMorale
									value = 0.001
								}
							}
							NOT = {
								check_variable = {
									which = AIMiscDisc
									value = 0.001
								}
							}
						}
					}
					set_variable = {
						which = tmpAIInitDiploArmyQual
						value = 0
					}
				}
				else = {
					set_variable = {
						which = tmpAIInitDiploArmyQual
						which = AIMiscMilTech
					}
					multiply_variable = {
						which = tmpAIInitDiploArmyQual
						which = AIMiscLandMorale
					}
					multiply_variable = {
						which = tmpAIInitDiploArmyQual
						which = AIMiscLandMorale
					}
				}
				set_variable = {
					which = AIMiscMilTech
					value = 0
				}
				set_variable = {
					which = AIMiscLandMorale
					value = 0
				}
				set_variable = {
					which = AIMiscDisc
					value = 0
				}
			}
			else = {
				set_variable = {
					which = tmpAIInitDiploArmy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploArmyQual
					value = 0
				}
			}
			if = {
				limit = {
					always = yes
				}
				export_to_variable = {
					which = tmpAIInitDiploNavy
					value = navy_size
				}
				export_to_variable = {
					which = AIMiscDipTech
					value = dip_tech
				}
				export_to_variable = {
					which = AIMiscNavMorale
					value = modifier:naval_morale
				}
				multiply_variable = {
					which = AIMiscDipTech
					value = 0.1
				}
				multiply_variable = {
					which = AIMiscNavMorale
					value = 1.5
				}
				change_variable = {
					which = AIMiscDipTech
					value = 1
				}
				change_variable = {
					which = AIMiscNavMorale
					value = 1
				}
				if = {
					limit = {
						OR = {
							NOT = {
								check_variable = {
									which = AIMiscDipTech
									value = 0.001
								}
							}
							NOT = {
								check_variable = {
									which = AIMiscNavMorale
									value = 0.001
								}
							}
						}
					}
					set_variable = {
						which = tmpAIInitDiploNavyQual
						value = 0
					}
				}
				else = {
					set_variable = {
						which = tmpAIInitDiploNavyQual
						which = AIMiscDipTech
					}
					change_variable = {
						which = tmpAIInitDiploNavyQual
						which = AIMiscNavMorale
					}
				}
				set_variable = {
					which = AIMiscDipTech
					value = 0
				}
				set_variable = {
					which = AIMiscNavMorale
					value = 0
				}
			}
			else = {
				set_variable = {
					which = tmpAIInitDiploNavy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploNavyQual
					value = 0
				}
			}
			multiply_variable = {
				which = tmpAIInitDiploArmy
				which = tmpAIInitDiploArmyQual
			}
			multiply_variable = {
				which = tmpAIInitDiploNavy
				which = tmpAIInitDiploNavyQual
			}
			PREV = {
				set_variable = {
					which = tmpAIInitDiploArmy
					which = PREV
				}
				set_variable = {
					which = tmpAIInitDiploNavy
					which = PREV
				}
				change_variable = {
					which = aiInitDiploArmy
					which = tmpAIInitDiploArmy
				}
				change_variable = {
					which = aiInitDiploNavy
					which = tmpAIInitDiploNavy
				}
				set_variable = {
					which = tmpAIInitDiploArmy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploNavy
					value = 0
				}
			}
			set_variable = {
				which = tmpAIInitDiploArmy
				value = 0
			}
			set_variable = {
				which = tmpAIInitDiploNavy
				value = 0
			}
		}
		divide_variable = {
			which = aiInitDiploNavy
			value = 2
		}
		set_variable = {
			which = tmpPowerState
			which = aiInitDiploArmy
		}
		change_variable = {
			which = tmpPowerState
			which = aiInitDiploNavy
		}
		divide_variable = {
			which = tmpPowerState
			value = 50
		}
		set_variable = {
			which = aiInitDiploArmy
			value = 0
		}
		set_variable = {
			which = tmpAIInitDiploArmyQual
			value = 0
		}
		set_variable = {
			which = aiInitDiploNavy
			value = 0
		}
		set_variable = {
			which = tmpAIInitDiploNavyQual
			value = 0
		}
		set_country_flag = aiInitDiploRelated
		if = {
			limit = {
				always = no
			}
			every_subject_country = {
				limit = {
					NOT = {
						tag = event_target:aiLevyTarg
					}
					AND = {
						NOT = {
							liberty_desire = 50
							is_subject_of_type = tributary_state
							is_subject_of_type = rebellious_decentralized_vassal
							is_subject_of_type = rebellious_subjugated_vassal
						}
					}
				}
				set_country_flag = aiInitDiploRelated
				every_subject_country = {
					limit = {
						NOT = {
							tag = event_target:aiLevyTarg
						}
						AND = {
							NOT = {
								liberty_desire = 50
								is_subject_of_type = tributary_state
								is_subject_of_type = rebellious_decentralized_vassal
								is_subject_of_type = rebellious_subjugated_vassal
							}
						}
					}
					set_country_flag = aiInitDiploRelated
					every_subject_country = {
						limit = {
							NOT = {
								tag = event_target:aiLevyTarg
							}
							AND = {
								NOT = {
									liberty_desire = 50
									is_subject_of_type = tributary_state
									is_subject_of_type = rebellious_decentralized_vassal
									is_subject_of_type = rebellious_subjugated_vassal
								}
							}
						}
						set_country_flag = aiInitDiploRelated
					}
				}
			}
		}
		if = {
			limit = {
				always = no
			}
			overlord = {
				if = {
					limit = {
						NOT = {
							tag = event_target:aiLevyTarg
						}
					}
					if = {
						limit = {
							is_subject = yes
						}
						overlord = {
							if = {
								limit = {
									NOT = {
										tag = event_target:aiLevyTarg
									}
								}
								set_country_flag = aiInitDiploRelated
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:aiLevyTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
									every_subject_country = {
										limit = {
											NOT = {
												tag = event_target:aiLevyTarg
											}
											AND = {
												NOT = {
													liberty_desire = 50
													is_subject_of_type = tributary_state
													is_subject_of_type = rebellious_decentralized_vassal
													is_subject_of_type = rebellious_subjugated_vassal
												}
											}
										}
										set_country_flag = aiInitDiploRelated
										every_subject_country = {
											limit = {
												NOT = {
													tag = event_target:aiLevyTarg
												}
												AND = {
													NOT = {
														liberty_desire = 50
														is_subject_of_type = tributary_state
														is_subject_of_type = rebellious_decentralized_vassal
														is_subject_of_type = rebellious_subjugated_vassal
													}
												}
											}
											set_country_flag = aiInitDiploRelated
										}
									}
								}
							}
						}
					}
					else = {
						set_country_flag = aiInitDiploRelated
						every_subject_country = {
							limit = {
								NOT = {
									tag = event_target:aiLevyTarg
								}
								AND = {
									NOT = {
										liberty_desire = 50
										is_subject_of_type = tributary_state
										is_subject_of_type = rebellious_decentralized_vassal
										is_subject_of_type = rebellious_subjugated_vassal
									}
								}
							}
							set_country_flag = aiInitDiploRelated
							every_subject_country = {
								limit = {
									NOT = {
										tag = event_target:aiLevyTarg
									}
									AND = {
										NOT = {
											liberty_desire = 50
											is_subject_of_type = tributary_state
											is_subject_of_type = rebellious_decentralized_vassal
											is_subject_of_type = rebellious_subjugated_vassal
										}
									}
								}
								set_country_flag = aiInitDiploRelated
								every_subject_country = {
									limit = {
										NOT = {
											tag = event_target:aiLevyTarg
										}
										AND = {
											NOT = {
												liberty_desire = 50
												is_subject_of_type = tributary_state
												is_subject_of_type = rebellious_decentralized_vassal
												is_subject_of_type = rebellious_subjugated_vassal
											}
										}
									}
									set_country_flag = aiInitDiploRelated
								}
							}
						}
					}
				}
			}
		}
		set_variable = {
			which = aiInitDiploArmy
			value = 0
		}
		set_variable = {
			which = aiInitDiploNavy
			value = 0
		}
		every_country = {
			limit = {
				has_country_flag = aiInitDiploRelated
			}
			clr_country_flag = aiInitDiploRelated
			if = {
				limit = {
					always = yes
				}
				if = {
					limit = {
						always = no
					}
					export_to_variable = {
						which = AIMiscArmySize
						value = army_size
					}
				}
				else = {
					set_variable = {
						which = AIMiscArmySize
						value = 0
					}
				}
				export_to_variable = {
					which = AIMiscLFL
					value = land_forcelimit
				}
				export_to_variable = {
					which = AIMiscManpow
					value = manpower
				}
				set_variable = {
					which = AIMiscArmyEstate
					value = 0
				}
				if = {
					limit = {
						check_variable = {
							which = estate_tribals_loyalty
							value = 0.11
						}
					}
					set_variable = {
						which = tmpArmyTR
						which = estate_tribals_infantry_host
					}
					change_variable = {
						which = tmpArmyTR
						which = estate_tribals_cavalry_host
					}
					multiply_variable = {
						which = tmpArmyTR
						value = 1.25
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = tmpArmyTR
					}
					set_variable = {
						which = tmpArmyTR
						value = 0
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 0.11
						}
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_infantry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_cavalry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_greater_nobles_artillery_total
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0.11
						}
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_infantry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_cavalry_total
					}
					change_variable = {
						which = AIMiscArmyEstate
						which = estate_lesser_nobles_artillery_total
					}
				}
				multiply_variable = {
					which = AIMiscArmyEstate
					value = 0.85
				}
				if = {
					limit = {
						always = no
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = AIMiscManpow
									which = AIMiscLFL
								}
							}
						}
						subtract_variable = {
							which = AIMiscLFL
							which = AIMiscManpow
						}
						multiply_variable = {
							which = AIMiscLFL
							value = 0.15
						}
						multiply_variable = {
							which = AIMiscManpow
							value = 0.3
						}
					}
					else = {
						subtract_variable = {
							which = AIMiscManpow
							which = AIMiscLFL
						}
						multiply_variable = {
							which = AIMiscManpow
							value = 0.15
						}
						multiply_variable = {
							which = AIMiscLFL
							value = 0.3
						}
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscLFL
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscManpow
					}
				}
				if = {
					limit = {
						always = yes
					}
					change_variable = {
						which = AIMiscArmySize
						which = AIMiscArmyEstate
					}
				}
				set_variable = {
					which = tmpAIInitDiploArmy
					which = AIMiscArmySize
				}
				set_variable = {
					which = AIMiscArmySize
					value = 0
				}
				set_variable = {
					which = AIMiscLFL
					value = 0
				}
				set_variable = {
					which = AIMiscManpow
					value = 0
				}
				set_variable = {
					which = AIMiscArmyEstate
					value = 0
				}
				export_to_variable = {
					which = AIMiscMilTech
					value = mil_tech
				}
				export_to_variable = {
					which = AIMiscLandMorale
					value = modifier:land_morale
				}
				export_to_variable = {
					which = AIMiscDisc
					value = modifier:discipline
				}
				multiply_variable = {
					which = AIMiscMilTech
					value = 0.1
				}
				multiply_variable = {
					which = AIMiscLandMorale
					value = 2
				}
				multiply_variable = {
					which = AIMiscDisc
					value = 5
				}
				change_variable = {
					which = AIMiscMilTech
					value = 1
				}
				change_variable = {
					which = AIMiscLandMorale
					value = 1
				}
				change_variable = {
					which = AIMiscDisc
					value = 1
				}
				if = {
					limit = {
						OR = {
							NOT = {
								check_variable = {
									which = AIMiscMilTech
									value = 0.001
								}
							}
							NOT = {
								check_variable = {
									which = AIMiscLandMorale
									value = 0.001
								}
							}
							NOT = {
								check_variable = {
									which = AIMiscDisc
									value = 0.001
								}
							}
						}
					}
					set_variable = {
						which = tmpAIInitDiploArmyQual
						value = 0
					}
				}
				else = {
					set_variable = {
						which = tmpAIInitDiploArmyQual
						which = AIMiscMilTech
					}
					multiply_variable = {
						which = tmpAIInitDiploArmyQual
						which = AIMiscLandMorale
					}
					multiply_variable = {
						which = tmpAIInitDiploArmyQual
						which = AIMiscLandMorale
					}
				}
				set_variable = {
					which = AIMiscMilTech
					value = 0
				}
				set_variable = {
					which = AIMiscLandMorale
					value = 0
				}
				set_variable = {
					which = AIMiscDisc
					value = 0
				}
			}
			else = {
				set_variable = {
					which = tmpAIInitDiploArmy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploArmyQual
					value = 0
				}
			}
			if = {
				limit = {
					always = no
				}
				export_to_variable = {
					which = tmpAIInitDiploNavy
					value = navy_size
				}
				export_to_variable = {
					which = AIMiscDipTech
					value = dip_tech
				}
				export_to_variable = {
					which = AIMiscNavMorale
					value = modifier:naval_morale
				}
				multiply_variable = {
					which = AIMiscDipTech
					value = 0.1
				}
				multiply_variable = {
					which = AIMiscNavMorale
					value = 1.5
				}
				change_variable = {
					which = AIMiscDipTech
					value = 1
				}
				change_variable = {
					which = AIMiscNavMorale
					value = 1
				}
				if = {
					limit = {
						OR = {
							NOT = {
								check_variable = {
									which = AIMiscDipTech
									value = 0.001
								}
							}
							NOT = {
								check_variable = {
									which = AIMiscNavMorale
									value = 0.001
								}
							}
						}
					}
					set_variable = {
						which = tmpAIInitDiploNavyQual
						value = 0
					}
				}
				else = {
					set_variable = {
						which = tmpAIInitDiploNavyQual
						which = AIMiscDipTech
					}
					change_variable = {
						which = tmpAIInitDiploNavyQual
						which = AIMiscNavMorale
					}
				}
				set_variable = {
					which = AIMiscDipTech
					value = 0
				}
				set_variable = {
					which = AIMiscNavMorale
					value = 0
				}
			}
			else = {
				set_variable = {
					which = tmpAIInitDiploNavy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploNavyQual
					value = 0
				}
			}
			multiply_variable = {
				which = tmpAIInitDiploArmy
				which = tmpAIInitDiploArmyQual
			}
			multiply_variable = {
				which = tmpAIInitDiploNavy
				which = tmpAIInitDiploNavyQual
			}
			PREV = {
				set_variable = {
					which = tmpAIInitDiploArmy
					which = PREV
				}
				set_variable = {
					which = tmpAIInitDiploNavy
					which = PREV
				}
				change_variable = {
					which = aiInitDiploArmy
					which = tmpAIInitDiploArmy
				}
				change_variable = {
					which = aiInitDiploNavy
					which = tmpAIInitDiploNavy
				}
				set_variable = {
					which = tmpAIInitDiploArmy
					value = 0
				}
				set_variable = {
					which = tmpAIInitDiploNavy
					value = 0
				}
			}
			set_variable = {
				which = tmpAIInitDiploArmy
				value = 0
			}
			set_variable = {
				which = tmpAIInitDiploNavy
				value = 0
			}
		}
		divide_variable = {
			which = aiInitDiploNavy
			value = 2
		}
		set_variable = {
			which = tmpPowerEstate
			which = aiInitDiploArmy
		}
		change_variable = {
			which = tmpPowerEstate
			which = aiInitDiploNavy
		}
		divide_variable = {
			which = tmpPowerEstate
			value = 50
		}
		set_variable = {
			which = aiInitDiploArmy
			value = 0
		}
		set_variable = {
			which = tmpAIInitDiploArmyQual
			value = 0
		}
		set_variable = {
			which = aiInitDiploNavy
			value = 0
		}
		set_variable = {
			which = tmpAIInitDiploNavyQual
			value = 0
		}
		multiply_variable = {
			which = tmpPowerEstate
			value = 0.5
		}
		if = {
			limit = {
				OR = {
					check_variable = {
						which = tmpPowerDiff
						which = tmpPowerState
					}
					check_variable = {
						which = tmpPowerDiffSum
						which = tmpPowerState
					}
				}
			}
			change_variable = {
				which = tmpPowerState
				which = tmpPowerEstate
			}
			if = {
				limit = {
					OR = {
						check_variable = {
							which = tmpPowerDiff
							which = tmpPowerState
						}
						check_variable = {
							which = tmpPowerDiffSum
							which = tmpPowerState
						}
					}
				}
				set_country_flag = GN_war_full
				set_country_flag = LN_war_full
				set_country_flag = BG_war_full
				set_country_flag = TR_war_full
			}
			else = {
				set_country_flag = GN_war_part
				set_country_flag = LN_war_part
				set_country_flag = BG_war_part
				set_country_flag = TR_war_part
			}
		}
		else = {
			multiply_variable = {
				which = tmpPowerState
				value = 0.75
			}
			if = {
				limit = {
					OR = {
						check_variable = {
							which = tmpPowerDiff
							which = tmpPowerState
						}
						check_variable = {
							which = tmpPowerDiffSum
							which = tmpPowerState
						}
						any_country = {
							war_with = PREV
							OR = {
								owns = 1402
								controls = 1402
							}
						}
					}
				}
				set_country_flag = GN_war_part
				set_country_flag = LN_war_part
				set_country_flag = BG_war_part
				set_country_flag = TR_war_part
			}
			else = {
				multiply_variable = {
					which = tmpPowerState
					value = 0.25
				}
				if = {
					limit = {
						OR = {
							check_variable = {
								which = tmpPowerDiff
								which = tmpPowerState
							}
							check_variable = {
								which = tmpPowerDiffSum
								which = tmpPowerState
							}
						}
					}
					if = {
						limit = {
							check_variable = {
								which = estate_greater_nobles_weight_share
								value = 0.01
							}
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.46
							}
						}
						set_country_flag = GN_war_part
					}
					if = {
						limit = {
							check_variable = {
								which = estate_lesser_nobles_weight_share
								value = 0.01
							}
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.46
							}
						}
						set_country_flag = LN_war_part
					}
					if = {
						limit = {
							check_variable = {
								which = estate_burghers_weight_share
								value = 0.01
							}
							check_variable = {
								which = estate_burghers_loyalty
								value = 0.46
							}
						}
						set_country_flag = BG_war_part
					}
					if = {
						limit = {
							check_variable = {
								which = estate_tribals_weight_share
								value = 0.01
							}
							check_variable = {
								which = estate_tribals_loyalty
								value = 0.46
							}
						}
						set_country_flag = TR_war_part
					}
				}
			}
		}
		set_variable = {
			which = tmpPowerDiff
			value = 0
		}
		set_variable = {
			which = tmpPowerDiffSum
			value = 0
		}
		set_variable = {
			which = tmpPowerState
			value = 0
		}
		set_variable = {
			which = tmpPowerEstate
			value = 0
		}
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.01
					}
					check_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.21
					}
				}
			}
			clr_country_flag = GN_war_full
			clr_country_flag = GN_war_part
			set_variable = {
				which = GN_free_picks
				value = 0
			}
		}
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.01
					}
					check_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.21
					}
				}
			}
			clr_country_flag = LN_war_full
			clr_country_flag = LN_war_part
			set_variable = {
				which = LN_free_picks
				value = 0
			}
		}
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = estate_burghers_weight_share
						value = 0.01
					}
					check_variable = {
						which = estate_burghers_loyalty
						value = 0.21
					}
				}
			}
			clr_country_flag = BG_war_full
			clr_country_flag = BG_war_part
			set_variable = {
				which = BUR_free_picks
				value = 0
			}
		}
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = estate_tribals_weight_share
						value = 0.01
					}
					check_variable = {
						which = estate_tribals_loyalty
						value = 0.11
					}
				}
			}
			clr_country_flag = TR_war_full
			clr_country_flag = TR_war_part
		}
		if = {
			limit = {
				OR = {
					has_country_flag = GN_war_part
					has_country_flag = LN_war_part
					has_country_flag = BG_war_part
					has_country_flag = TR_war_part
					has_country_flag = GN_war_full
					has_country_flag = LN_war_full
					has_country_flag = BG_war_full
					has_country_flag = TR_war_full
					check_variable = {
						which = GN_free_picks
						value = 1
					}
					check_variable = {
						which = LN_free_picks
						value = 1
					}
					check_variable = {
						which = BUR_free_picks
						value = 1
					}
				}
			}
			set_country_flag = estate_war_decisions_made
		}
		if = {
			limit = {
				OR = {
					has_country_flag = GN_war_part
					has_country_flag = GN_war_full
					check_variable = {
						which = GN_free_picks
						value = 1
					}
				}
			}
			country_event = {
				id = POP_Estates_Interactions.007
			}
		}
		if = {
			limit = {
				has_country_flag = GN_war_full
			}
			country_event = {
				id = POP_Estates_Interactions.007
				days = 6
			}
		}
		if = {
			limit = {
				OR = {
					has_country_flag = LN_war_part
					has_country_flag = LN_war_full
					check_variable = {
						which = LN_free_picks
						value = 1
					}
				}
			}
			country_event = {
				id = POP_Estates_Interactions.108
				days = 2
			}
		}
		if = {
			limit = {
				has_country_flag = LN_war_full
			}
			country_event = {
				id = POP_Estates_Interactions.108
				days = 8
			}
		}
		if = {
			limit = {
				OR = {
					has_country_flag = BG_war_part
					has_country_flag = BG_war_full
					check_variable = {
						which = BUR_free_picks
						value = 1
					}
				}
			}
			country_event = {
				id = POP_Estates_Interactions.207
				days = 4
			}
		}
		if = {
			limit = {
				has_country_flag = BG_war_full
			}
			country_event = {
				id = POP_Estates_Interactions.207
				days = 10
			}
			country_event = {
				id = POP_Estates_Interactions.207
				days = 16
			}
		}
		if = {
			limit = {
				OR = {
					has_country_flag = TR_war_full
					has_country_flag = TR_war_part
				}
			}
			country_event = {
				id = POP_Estates_Interactions.407
			}
		}
		clr_country_flag = GN_war_part
		clr_country_flag = LN_war_part
		clr_country_flag = BG_war_part
		clr_country_flag = TR_war_part
		clr_country_flag = GN_war_full
		clr_country_flag = LN_war_full
		clr_country_flag = BG_war_full
		clr_country_flag = TR_war_full
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.111
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	immediate = {
		every_country = {
			limit = {
				exists = yes
			}
			if = {
				limit = {
					has_country_modifier = aiModCentralize
				}
				if = {
					limit = {
						check_variable = {
							which = absolutismvar
							which = max_absolutism
						}
					}
					remove_country_modifier = aiModCentralize
				}
				else = {
					add_adm_power = -12
				}
			}
			else_if = {
				limit = {
					NOT = {
						check_variable = {
							which = absolutismvar
							which = max_absolutism
						}
					}
					ai = yes
				}
				add_country_modifier = {
					name = aiModCentralize
					duration = -1
				}
				add_adm_power = -12
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.112
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	trigger = {
		is_at_war = no
		check_variable = {
			which = country_actual_income
			value = 0
		}
		ai = yes
	}
	immediate = {
		set_variable = {
			which = aiEduArtSpent
			which = country_actual_income
		}
		multiply_variable = {
			which = aiEduArtSpent
			value = 0.3
		}
		if = {
			limit = {
				has_country_flag = aiHasActionEduArt
			}
			multiply_variable = {
				which = aiEduArtSpent
				value = 2
			}
		}
		set_variable = {
			which = temp
			which = university_education_multiplier
		}
		subtract_variable = {
			which = temp
			value = 1
		}
		multiply_variable = {
			which = temp
			value = 0.3
		}
		if = {
			limit = {
				NOT = {
					patriarch_authority = 50
				}
			}
			if = {
				limit = {
					NOT = {
						patriarch_authority = 30
					}
				}
				if = {
					limit = {
						NOT = {
							patriarch_authority = 15
						}
					}
					change_variable = {
						which = temp
						value = 0.3
					}
				}
				else = {
					change_variable = {
						which = temp
						value = 0.2
					}
				}
			}
			else = {
				change_variable = {
					which = temp
					value = 0.1
				}
			}
		}
		if = {
			limit = {
				is_year = 1600
				NOT = {
					check_variable = {
						which = education_level
						value = 40
					}
				}
			}
			change_variable = {
				which = temp
				value = 0.15
			}
		}
		if = {
			limit = {
				is_year = 1750
				NOT = {
					check_variable = {
						which = education_level
						value = 60
					}
				}
			}
			change_variable = {
				which = temp
				value = 0.15
			}
		}
		if = {
			limit = {
				average_autonomy = 50
			}
			if = {
				limit = {
					average_autonomy = 65
				}
				if = {
					limit = {
						average_autonomy = 75
					}
					change_variable = {
						which = temp
						value = -0.3
					}
				}
				else = {
					change_variable = {
						which = temp
						value = -0.2
					}
				}
			}
			else = {
				change_variable = {
					which = temp
					value = -0.1
				}
			}
		}
		if = {
			limit = {
				OR = {
					is_emperor = yes
					government_rank = 6
				}
			}
			change_variable = {
				which = temp
				value = -0.1
			}
		}
		if = {
			limit = {
				num_of_allies = 2
			}
			if = {
				limit = {
					num_of_allies = 3
				}
				change_variable = {
					which = temp
					value = -0.2
				}
			}
			else = {
				change_variable = {
					which = temp
					value = -0.1
				}
			}
		}
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = temp
						value = 0
					}
				}
			}
			set_variable = {
				which = temp
				value = 0
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = temp
					value = 0.7
				}
			}
			set_variable = {
				which = temp
				value = 0.7
			}
		}
		multiply_variable = {
			which = temp
			which = aiEduArtSpent
		}
		change_variable = {
			which = education_money_endowed
			which = temp
		}
		subtract_variable = {
			which = aiEduArtSpent
			which = temp
		}
		change_variable = {
			which = court_money_endowed
			which = aiEduArtSpent
		}
		change_variable = {
			which = aiEduArtSpent
			which = temp
		}
		change_variable = {
			which = aiTestEduArt
			which = aiEduArtSpent
		}
		set_variable = {
			which = tempSpend
			which = aiEduArtSpent
		}
		THIS = {
			set_variable = {
				which = tempSpend
				which = PREV
			}
			if = {
				limit = {
					check_variable = {
						which = tempSpend
						which = aiTreasuryGeneral
					}
				}
				export_to_variable = {
					which = aiTreasuryVanilla
					value = treasury
				}
				subtract_variable = {
					which = tempSpend
					which = aiTreasuryGeneral
				}
				if = {
					limit = {
						check_variable = {
							which = aiTreasuryVanilla
							which = tempSpend
						}
					}
					subtract_variable = {
						which = aiTreasuryVanilla
						which = tempSpend
					}
					export_to_variable = {
						which = tempTreasuryChange
						value = treasury
					}
					subtract_variable = {
						which = tempTreasuryChange
						which = aiTreasuryVanilla
					}
					if = {
						limit = {
							check_variable = {
								which = tempTreasuryChange
								value = 0
							}
						}
						set_variable = {
							which = ducat_cost
							which = tempTreasuryChange
						}
						while = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 65536
								}
							}
							add_treasury = -65536
							subtract_variable = {
								which = ducat_cost
								value = 65536
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 32768
								}
							}
							add_treasury = -32768
							subtract_variable = {
								which = ducat_cost
								value = 32768
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 16384
								}
							}
							add_treasury = -16384
							subtract_variable = {
								which = ducat_cost
								value = 16384
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 8192
								}
							}
							add_treasury = -8192
							subtract_variable = {
								which = ducat_cost
								value = 8192
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 4096
								}
							}
							add_treasury = -4096
							subtract_variable = {
								which = ducat_cost
								value = 4096
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 2048
								}
							}
							add_treasury = -2048
							subtract_variable = {
								which = ducat_cost
								value = 2048
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 1024
								}
							}
							add_treasury = -1024
							subtract_variable = {
								which = ducat_cost
								value = 1024
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 512
								}
							}
							add_treasury = -512
							subtract_variable = {
								which = ducat_cost
								value = 512
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 256
								}
							}
							add_treasury = -256
							subtract_variable = {
								which = ducat_cost
								value = 256
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 128
								}
							}
							add_treasury = -128
							subtract_variable = {
								which = ducat_cost
								value = 128
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 64
								}
							}
							add_treasury = -64
							subtract_variable = {
								which = ducat_cost
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 32
								}
							}
							add_treasury = -32
							subtract_variable = {
								which = ducat_cost
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 16
								}
							}
							add_treasury = -16
							subtract_variable = {
								which = ducat_cost
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 8
								}
							}
							add_treasury = -8
							subtract_variable = {
								which = ducat_cost
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 4
								}
							}
							add_treasury = -4
							subtract_variable = {
								which = ducat_cost
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 2
								}
							}
							add_treasury = -2
							subtract_variable = {
								which = ducat_cost
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 1
								}
							}
							add_treasury = -1
							subtract_variable = {
								which = ducat_cost
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.5
								}
							}
							add_treasury = -0.5
							subtract_variable = {
								which = ducat_cost
								value = 0.5
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.25
								}
							}
							add_treasury = -0.25
							subtract_variable = {
								which = ducat_cost
								value = 0.25
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_cost
									value = 0.125
								}
							}
							add_treasury = -0.125
							subtract_variable = {
								which = ducat_cost
								value = 0.125
							}
						}
						set_variable = {
							which = ducat_cost
							value = 0
						}
					}
					else = {
						set_variable = {
							which = ducat_gain
							which = tempTreasuryChange
						}
						multiply_variable = {
							which = ducat_gain
							value = -1
						}
						while = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 65536
								}
							}
							add_treasury = 65536
							subtract_variable = {
								which = ducat_gain
								value = 65536
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 32768
								}
							}
							add_treasury = 32768
							subtract_variable = {
								which = ducat_gain
								value = 32768
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 16384
								}
							}
							add_treasury = 16384
							subtract_variable = {
								which = ducat_gain
								value = 16384
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 8192
								}
							}
							add_treasury = 8192
							subtract_variable = {
								which = ducat_gain
								value = 8192
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 4096
								}
							}
							add_treasury = 4096
							subtract_variable = {
								which = ducat_gain
								value = 4096
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 2048
								}
							}
							add_treasury = 2048
							subtract_variable = {
								which = ducat_gain
								value = 2048
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 1024
								}
							}
							add_treasury = 1024
							subtract_variable = {
								which = ducat_gain
								value = 1024
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 512
								}
							}
							add_treasury = 512
							subtract_variable = {
								which = ducat_gain
								value = 512
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 256
								}
							}
							add_treasury = 256
							subtract_variable = {
								which = ducat_gain
								value = 256
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 128
								}
							}
							add_treasury = 128
							subtract_variable = {
								which = ducat_gain
								value = 128
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 64
								}
							}
							add_treasury = 64
							subtract_variable = {
								which = ducat_gain
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 32
								}
							}
							add_treasury = 32
							subtract_variable = {
								which = ducat_gain
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 16
								}
							}
							add_treasury = 16
							subtract_variable = {
								which = ducat_gain
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 8
								}
							}
							add_treasury = 8
							subtract_variable = {
								which = ducat_gain
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 4
								}
							}
							add_treasury = 4
							subtract_variable = {
								which = ducat_gain
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 2
								}
							}
							add_treasury = 2
							subtract_variable = {
								which = ducat_gain
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 1
								}
							}
							add_treasury = 1
							subtract_variable = {
								which = ducat_gain
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.5
								}
							}
							add_treasury = 0.5
							subtract_variable = {
								which = ducat_gain
								value = 0.5
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.25
								}
							}
							add_treasury = 0.25
							subtract_variable = {
								which = ducat_gain
								value = 0.25
							}
						}
						if = {
							limit = {
								check_variable = {
									which = ducat_gain
									value = 0.125
								}
							}
							add_treasury = 0.125
							subtract_variable = {
								which = ducat_gain
								value = 0.125
							}
						}
						set_variable = {
							which = ducat_gain
							value = 0
						}
					}
					set_variable = {
						which = tempTreasuryChange
						value = 0
					}
				}
				else = {
					change_variable = {
						which = aiErrorDoTreasuryaiEduArtSpent
						value = 1
					}
				}
				set_variable = {
					which = aiTreasuryGeneral
					value = 0
				}
				set_variable = {
					which = aiTreasuryVanilla
					value = 0
				}
			}
			else = {
				subtract_variable = {
					which = aiTreasuryGeneral
					which = tempSpend
				}
			}
			set_variable = {
				which = tempSpend
				value = 0
			}
		}
		set_variable = {
			which = tempSpend
			value = 0
		}
		set_variable = {
			which = aiEduArtSpent
			value = 0
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.113
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	trigger = {
		NOT = {
			has_country_modifier = gp_3
		}
	}
	immediate = {
		add_country_modifier = {
			name = gp_3
			duration = 1065
		}
		regiongroup = {
			region = {
				limit = {
					is_city = yes
				}
				set_variable = {
					which = travel_time_reduced
					value = 0
				}
				trigger_switch = {
					on_trigger = has_building
					road_network = {
						trigger_switch = {
							on_trigger = has_province_flag
							favorable_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 0.25
								}
							}
							challenging_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 0.5
								}
							}
							rugged_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 1.5
								}
							}
						}
					}
					paved_road_network = {
						trigger_switch = {
							on_trigger = has_province_flag
							favorable_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 0.5
								}
							}
							challenging_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 1
								}
							}
							rugged_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 2
								}
							}
						}
					}
					highway_network = {
						trigger_switch = {
							on_trigger = has_province_flag
							favorable_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 0.75
								}
							}
							challenging_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 1.5
								}
							}
							rugged_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 3
								}
							}
						}
					}
					road_and_rail_network = {
						trigger_switch = {
							on_trigger = has_province_flag
							favorable_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 1.5
								}
							}
							challenging_terrain = {
								if = {
									limit = {
										OR = {
											AND = {
												OR = {
													has_terrain = grass_hills
													has_terrain = shrub_hills
													has_terrain = wood_hills
													has_terrain = forest_hills
													has_terrain = desert_hills
													has_terrain = jungle_hills
												}
											}
											has_terrain = tundra
										}
									}
									set_variable = {
										which = travel_time_reduced
										value = 3
									}
								}
								else = {
									set_variable = {
										which = travel_time_reduced
										value = 2.5
									}
								}
							}
							rugged_terrain = {
								set_variable = {
									which = travel_time_reduced
									value = 4.5
								}
							}
						}
					}
				}
				set_variable = {
					which = prov_rad
					which = travel_time_terrain_base
				}
				subtract_variable = {
					which = prov_rad
					which = travel_time_reduced
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = prov_rad
								value = 0.01
							}
						}
					}
					set_variable = {
						which = prov_rad
						value = 0.01
					}
				}
				multiply_variable = {
					which = prov_rad
					which = prov_radius
				}
				multiply_variable = {
					which = prov_rad
					value = 0.2
				}
				if = {
					limit = {
						OR = {
							AND = {
								AND = {
									OR = {
										owner = {
											is_nomad = yes
										}
										controller = {
											is_nomad = yes
										}
									}
								}
								ROOT = {
									is_nomad = yes
								}
							}
							AND = {
								OR = {
									owner = {
										culture_group = east_slavic
									}
									controller = {
										culture_group = east_slavic
									}
								}
								ROOT = {
									culture_group = east_slavic
								}
								OR = {
									superregion = greater_russia_superregion
									superregion = central_asia_superregion
									superregion = eastern_steppe_superregion
								}
							}
						}
						has_province_flag = nomad_speed_boost
						NOT = {
							has_building = road_and_rail_network
						}
						check_variable = {
							which = prov_rad
							value = 0.001
						}
					}
					divide_variable = {
						which = prov_rad
						value = 3
					}
				}
				set_variable = {
					which = prov_factor
					which = prov_rad
				}
				multiply_variable = {
					which = prov_factor
					value = 0.5
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = prov_rad
								value = 0.01
							}
						}
					}
					set_variable = {
						which = prov_rad
						value = 0.01
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = prov_factor
								value = 0.01
							}
						}
					}
					set_variable = {
						which = prov_factor
						value = 0.01
					}
				}
				change_variable = {
					which = prov_factor
					value = 0.5
				}
				set_variable = {
					which = aiProvValueNeighbNum
					value = 1
				}
				every_neighbor_province = {
					limit = {
						is_city = yes
					}
					PREV = {
						change_variable = {
							which = aiProvValueNeighbNum
							value = 1
						}
					}
				}
				set_variable = {
					which = aiProvValueBase
					which = devPointTotal
				}
				divide_variable = {
					which = aiProvValueBase
					value = 2
				}
				set_variable = {
					which = aiProvValueNeighb
					value = 0
				}
				set_variable = {
					which = travel_time_reduced
					value = 0
				}
				set_variable = {
					which = prov_rad
					value = 0
				}
			}
		}
		set_variable = {
			which = aiProvValueItr
			value = 5
		}
		while = {
			limit = {
				check_variable = {
					which = aiProvValueItr
					value = 1
				}
			}
			subtract_variable = {
				which = aiProvValueItr
				value = 1
			}
			regiongroup = {
				region = {
					limit = {
						is_city = yes
					}
					set_variable = {
						which = aiProvValueReceive
						value = 0
					}
					set_variable = {
						which = aiProvValueDistance
						which = prov_factor
					}
					every_neighbor_province = {
						limit = {
							is_city = yes
						}
						set_variable = {
							which = aiProvValueReceive
							which = aiProvValueBase
						}
						change_variable = {
							which = aiProvValueReceive
							which = aiProvValueNeighb
						}
						set_variable = {
							which = aiProvValueDistance
							which = PREV
						}
						change_variable = {
							which = aiProvValueDistance
							which = prov_factor
						}
						divide_variable = {
							which = aiProvValueReceive
							which = aiProvValueDistance
						}
						PREV = {
							change_variable = {
								which = aiProvValueReceive
								which = PREV
							}
						}
						set_variable = {
							which = aiProvValueReceive
							value = 0
						}
						set_variable = {
							which = aiProvValueDistance
							value = 0
						}
					}
					set_variable = {
						which = aiProvValueSave
						which = aiProvValueReceive
					}
					divide_variable = {
						which = aiProvValueSave
						which = aiProvValueNeighbNum
					}
					set_variable = {
						which = aiProvValueReceive
						value = 0
					}
					set_variable = {
						which = aiProvValueDistance
						value = 0
					}
				}
			}
			regiongroup = {
				region = {
					limit = {
						is_city = yes
					}
					set_variable = {
						which = aiProvValueNeighb
						which = aiProvValueSave
					}
					set_variable = {
						which = aiProvValueSave
						value = 0
					}
				}
			}
		}
		regiongroup = {
			region = {
				limit = {
					is_city = yes
				}
				set_variable = {
					which = aiProvValue
					which = aiProvValueBase
				}
				change_variable = {
					which = aiProvValue
					which = aiProvValueNeighb
				}
				trigger_switch = {
					on_trigger = has_province_flag
					good_natural_place = {
						change_variable = {
							which = aiProvValue
							value = 1
						}
					}
					great_natural_place = {
						multiply_variable = {
							which = aiProvValue
							value = 1.2
						}
						change_variable = {
							which = aiProvValue
							value = 3
						}
					}
					awesome_natural_place = {
						multiply_variable = {
							which = aiProvValue
							value = 1.35
						}
						change_variable = {
							which = aiProvValue
							value = 5
						}
					}
				}
				divide_variable = {
					which = aiProvValue
					value = 15
				}
				set_variable = {
					which = prov_factor
					value = 0
				}
				set_variable = {
					which = aiProvValueBase
					value = 0
				}
				set_variable = {
					which = aiProvValueNeighb
					value = 0
				}
				set_variable = {
					which = aiProvValueNeighbNum
					value = 0
				}
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.114
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = aiDoDecWarFrom
	}
	immediate = {
		every_country = {
			limit = {
				has_country_flag = aiDoDecWarTo@PREV
				NOT = {
					war_with = PREV
				}
			}
			clr_country_flag = aiDoDecWarTo@PREV
			PREV = {
				clr_country_flag = aiDoDecWarFrom
				export_to_variable = {
					which = aiDoDecWarPostTreasury
					value = treasury
				}
				if = {
					limit = {
						num_of_loans = 32
					}
					if = {
						limit = {
							num_of_loans = 48
						}
						if = {
							limit = {
								num_of_loans = 56
							}
							if = {
								limit = {
									num_of_loans = 60
								}
								if = {
									limit = {
										num_of_loans = 62
									}
									if = {
										limit = {
											num_of_loans = 63
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 63
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 62
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 61
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 61
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 60
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										num_of_loans = 58
									}
									if = {
										limit = {
											num_of_loans = 59
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 59
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 58
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 57
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 57
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 56
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									num_of_loans = 52
								}
								if = {
									limit = {
										num_of_loans = 54
									}
									if = {
										limit = {
											num_of_loans = 55
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 55
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 54
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 53
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 53
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 52
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										num_of_loans = 50
									}
									if = {
										limit = {
											num_of_loans = 51
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 51
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 50
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 49
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 49
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 48
										}
									}
								}
							}
						}
					}
					else = {
						if = {
							limit = {
								num_of_loans = 40
							}
							if = {
								limit = {
									num_of_loans = 44
								}
								if = {
									limit = {
										num_of_loans = 46
									}
									if = {
										limit = {
											num_of_loans = 47
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 47
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 46
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 45
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 45
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 44
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										num_of_loans = 42
									}
									if = {
										limit = {
											num_of_loans = 43
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 43
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 42
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 41
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 41
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 40
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									num_of_loans = 36
								}
								if = {
									limit = {
										num_of_loans = 38
									}
									if = {
										limit = {
											num_of_loans = 39
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 39
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 38
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 37
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 37
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 36
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										num_of_loans = 34
									}
									if = {
										limit = {
											num_of_loans = 35
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 35
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 34
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 33
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 33
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 32
										}
									}
								}
							}
						}
					}
				}
				else = {
					if = {
						limit = {
							num_of_loans = 16
						}
						if = {
							limit = {
								num_of_loans = 24
							}
							if = {
								limit = {
									num_of_loans = 28
								}
								if = {
									limit = {
										num_of_loans = 30
									}
									if = {
										limit = {
											num_of_loans = 31
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 31
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 30
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 29
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 29
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 28
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										num_of_loans = 26
									}
									if = {
										limit = {
											num_of_loans = 27
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 27
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 26
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 25
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 25
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 24
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									num_of_loans = 20
								}
								if = {
									limit = {
										num_of_loans = 22
									}
									if = {
										limit = {
											num_of_loans = 23
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 23
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 22
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 21
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 21
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 20
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										num_of_loans = 18
									}
									if = {
										limit = {
											num_of_loans = 19
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 19
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 18
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 17
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 17
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 16
										}
									}
								}
							}
						}
					}
					else = {
						if = {
							limit = {
								num_of_loans = 8
							}
							if = {
								limit = {
									num_of_loans = 12
								}
								if = {
									limit = {
										num_of_loans = 14
									}
									if = {
										limit = {
											num_of_loans = 15
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 15
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 14
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 13
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 13
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 12
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										num_of_loans = 10
									}
									if = {
										limit = {
											num_of_loans = 11
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 11
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 10
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 9
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 9
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 8
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									num_of_loans = 4
								}
								if = {
									limit = {
										num_of_loans = 6
									}
									if = {
										limit = {
											num_of_loans = 7
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 7
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 6
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 5
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 5
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 4
										}
									}
								}
							}
							else = {
								if = {
									limit = {
										num_of_loans = 2
									}
									if = {
										limit = {
											num_of_loans = 3
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 3
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 2
										}
									}
								}
								else = {
									if = {
										limit = {
											num_of_loans = 1
										}
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 1
										}
									}
									else = {
										set_variable = {
											which = aiDoDecWarPostLoan
											value = 0
										}
									}
								}
							}
						}
					}
				}
				export_to_variable = {
					which = aiDoDecWarPostDev
					value = total_development
				}
				multiply_variable = {
					which = aiDoDecWarPostLoan
					which = aiDoDecWarPostDev
				}
				multiply_variable = {
					which = aiDoDecWarPostLoan
					value = 0.35
				}
				subtract_variable = {
					which = aiDoDecWarFromYear
					which = year_ticker
				}
				multiply_variable = {
					which = aiDoDecWarFromYear
					value = -1
				}
				multiply_variable = {
					which = aiDoDecWarFromSurplus
					which = aiDoDecWarFromYear
				}
				multiply_variable = {
					which = aiDoDecWarFromSurplus
					value = 12
				}
				subtract_variable = {
					which = aiDoDecWarPostTreasury
					which = aiDoDecWarPostLoan
				}
				subtract_variable = {
					which = aiDoDecWarPostTreasury
					which = aiDoDecWarFromSurplus
				}
				change_variable = {
					which = aiDoDecWarPostTreasury
					which = aiTreasuryGeneral
				}
				subtract_variable = {
					which = aiDoDecWarPostTreasury
					which = aiDoDecWarFromTreasury
				}
				change_variable = {
					which = aiDoDecWarPostTreasury
					which = loot_pool
				}
				change_variable = {
					which = aiDoDecWarPostTreasury
					which = loot_pool_moving
				}
				divide_variable = {
					which = aiDoDecWarPostTreasury
					value = 300
				}
				subtract_variable = {
					which = aiDoDecWarPostDev
					which = aiDoDecWarFromDev
				}
				divide_variable = {
					which = aiDoDecWarPostDev
					value = 3
				}
				change_variable = {
					which = aiVarWarGain
					which = aiDoDecWarPostTreasury
				}
				change_variable = {
					which = aiVarWarGain
					which = aiDoDecWarPostDev
				}
				set_variable = {
					which = aiDoDecWarPostTreasury
					value = 0
				}
				set_variable = {
					which = aiDoDecWarPostLoan
					value = 0
				}
				set_variable = {
					which = aiDoDecWarPostDev
					value = 0
				}
				set_variable = {
					which = aiDoDecWarFromYear
					value = 0
				}
				set_variable = {
					which = aiDoDecWarFromSurplus
					value = 0
				}
				set_variable = {
					which = aiDoDecWarFromTreasury
					value = 0
				}
				set_variable = {
					which = aiDoDecWarFromDev
					value = 0
				}
			}
		}
	}
	option = {
		name = no_localisation
	}
}
country_event = {
	id = POP_AI.203
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	option = {
		name = POP_AI.203.a
		set_global_flag = aiTesting
	}
	option = {
		name = POP_AI.203.b
		set_global_flag = aiTesting2
	}
	option = {
		name = POP_AI.203.c
		clr_global_flag = aiTesting
	}
	option = {
		name = POP_AI.203.d
		clr_global_flag = aiTesting2
	}
	option = {
		name = POP_AI.203.e
		regiongroup = {
			region = {
				remove_province_modifier = ai_built_city
				remove_province_modifier = built_fort
				remove_province_modifier = ai_built_shipyard
				remove_province_modifier = ai_built_bureau
				remove_province_modifier = road_built_recently
				remove_province_modifier = built_harbour
			}
		}
	}
}
country_event = {
	id = POP_AI.205
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	hidden = yes
	is_triggered_only = yes
	option = {
		name = no_localisation
		change_variable = {
			which = aiTreasuryGeneral
			value = 100
		}
	}
	option = {
		name = no_localisation
		change_variable = {
			which = aiTreasuryGeneral
			value = 500
		}
	}
	option = {
		name = no_localisation
		change_variable = {
			which = aiTreasuryGeneral
			value = 2500
		}
	}
}
