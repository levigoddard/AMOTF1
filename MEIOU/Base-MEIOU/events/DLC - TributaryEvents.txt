namespace = tributary_events
country_event = {
	id = tributary_events.1
	title = tributary_events.1.t
	desc = tributary_events.1.d
	picture = MERITOCRACY_eventPicture
	is_triggered_only = yes
	mean_time_to_happen = {
		days = 1
	}
	trigger = {
		has_dlc = "Mandate of Heaven"
		AND = {
			OR = {
				is_subject_of_type = tributary_state
				is_subject_of_type = close_tributary_state
			}
		}
		NOT = {
			has_country_modifier = tributary_diplomatic_influence
		}
		NOT = {
			has_country_modifier = tributary_institution_influence
		}
		overlord = {
			can_be_overlord = tributary_state
			OR = {
				institution_difference = {
					who = ROOT
					value = 1
				}
				tech_difference = 4
			}
			NOT = {
				ai_attitude = {
					who = ROOT
					attitude = attitude_hostile
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_list = {
				25 = {
					set_country_flag = overlord_inspired_official
				}
				25 = {
					set_country_flag = overlord_inspired_trader
				}
				25 = {
					set_country_flag = overlord_inspired_institutions_spread
				}
				25 = {
					set_country_flag = overlord_inspired_dip_rep
				}
			}
			overlord = {
				save_event_target_as = overlord_country
			}
			set_variable = {
				which = burghers_loyalty_added_a
				value = 5
			}
			set_variable = {
				which = nobles_loyalty_added_a
				value = 5
			}
		}
	}
	option = {
		name = "tributary_events.1.a"
		trigger_switch = {
			on_trigger = has_country_flag
			overlord_inspired_official = {
				define_advisor = {
					type = philosopher
					skill = 2
					discount = yes
					religion = event_target:overlord_country
				}
				clr_country_flag = overlord_inspired_official
			}
			overlord_inspired_trader = {
				define_advisor = {
					type = trader
					skill = 2
					discount = yes
					religion = event_target:overlord_country
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_weight_share
							value = 0.01
						}
					}
					custom_tooltip = estate_burghers_loyalty_added_a
					hidden_effect = {
						set_variable = {
							which = burghers_loyalty_added
							value = 0
						}
						set_variable = {
							which = burghers_loyalty_added
							which = burghers_loyalty_added_a
						}
						if = {
							limit = {
								check_variable = {
									which = burghers_loyalty_added
									value = 64
								}
							}
							add_estate_loyalty = {
								estate = estate_city_burghers
								loyalty = 64
							}
							change_variable = {
								which = estate_burghers_loyalty
								value = 0.64
							}
							subtract_variable = {
								which = burghers_loyalty_added
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = burghers_loyalty_added
									value = 32
								}
							}
							add_estate_loyalty = {
								estate = estate_city_burghers
								loyalty = 32
							}
							change_variable = {
								which = estate_burghers_loyalty
								value = 0.32
							}
							subtract_variable = {
								which = burghers_loyalty_added
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = burghers_loyalty_added
									value = 16
								}
							}
							add_estate_loyalty = {
								estate = estate_city_burghers
								loyalty = 16
							}
							change_variable = {
								which = estate_burghers_loyalty
								value = 0.16
							}
							subtract_variable = {
								which = burghers_loyalty_added
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = burghers_loyalty_added
									value = 8
								}
							}
							add_estate_loyalty = {
								estate = estate_city_burghers
								loyalty = 8
							}
							change_variable = {
								which = estate_burghers_loyalty
								value = 0.08
							}
							subtract_variable = {
								which = burghers_loyalty_added
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = burghers_loyalty_added
									value = 4
								}
							}
							add_estate_loyalty = {
								estate = estate_city_burghers
								loyalty = 4
							}
							change_variable = {
								which = estate_burghers_loyalty
								value = 0.04
							}
							subtract_variable = {
								which = burghers_loyalty_added
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = burghers_loyalty_added
									value = 2
								}
							}
							add_estate_loyalty = {
								estate = estate_city_burghers
								loyalty = 2
							}
							change_variable = {
								which = estate_burghers_loyalty
								value = 0.02
							}
							subtract_variable = {
								which = burghers_loyalty_added
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = burghers_loyalty_added
									value = 1
								}
							}
							add_estate_loyalty = {
								estate = estate_city_burghers
								loyalty = 1
							}
							change_variable = {
								which = estate_burghers_loyalty
								value = 0.01
							}
							subtract_variable = {
								which = burghers_loyalty_added
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_burghers_loyalty
									value = 1
								}
							}
							set_variable = {
								which = estate_burghers_loyalty
								value = 1
							}
						}
						every_owned_province = {
							limit = {
								has_province_flag = burghers_control_province
							}
							hidden_effect = {
								set_variable = {
									which = estate_burghers_loyalty
									which = owner
								}
								set_variable = {
									which = EstateProv_UnrestSave
									which = EstateProv_Unrest
								}
								set_variable = {
									which = EstateProv_Unrest
									which = estate_burghers_loyalty
								}
								set_variable = {
									which = estate_burghers_loyalty
									value = 0
								}
								if = {
									limit = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.6
										}
									}
									set_province_flag = loss
									subtract_variable = {
										which = EstateProv_Unrest
										value = 0.6
									}
								}
								else_if = {
									limit = {
										NOT = {
											check_variable = {
												which = EstateProv_Unrest
												value = 0.401
											}
										}
									}
									set_province_flag = gain
									subtract_variable = {
										which = EstateProv_Unrest
										value = 0.4
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = -1
									}
								}
								else = {
									set_variable = {
										which = EstateProv_Unrest
										value = 0
									}
								}
								multiply_variable = {
									which = EstateProv_Unrest
									value = 16.62
								}
								set_variable = {
									which = inp_m_exp
									which = EstateProv_Unrest
								}
								if = {
									limit = {
										NOT = {
											check_variable = {
												which = inp_m_exp
												value = 0
											}
										}
									}
									set_variable = {
										which = exp_val
										value = 0
									}
									change_variable = {
										which = err.math.exp.undef
										value = 1
									}
								}
								else_if = {
									limit = {
										is_variable_equal = {
											which = inp_m_exp
											value = 0
										}
									}
									set_variable = {
										which = exp_val
										value = 0
									}
								}
								else = {
									set_variable = {
										which = exp_m_exp
										value = 1.7
									}
									set_variable = {
										which = int_m_exp
										which = exp_m_exp
									}
									multiply_variable = {
										which = int_m_exp
										value = 0.001
									}
									multiply_variable = {
										which = int_m_exp
										value = 1000
									}
									set_variable = {
										which = dec_m_exp
										which = exp_m_exp
									}
									subtract_variable = {
										which = dec_m_exp
										which = int_m_exp
									}
									set_variable = {
										which = inp
										which = inp_m_exp
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = inp
													value = 0.001
												}
											}
										}
										set_variable = {
											which = ln_val
											value = 0
										}
										change_variable = {
											which = err.math.ln.undef
											value = 1
										}
									}
									else = {
										set_variable = {
											which = ln_val
											value = 0
										}
										set_variable = {
											which = scale
											value = 10000
										}
										set_variable = {
											which = k
											value = 0
										}
										set_variable = {
											which = k_div
											which = scale
										}
										while = {
											limit = {
												check_variable = {
													which = inp
													value = 2.001
												}
											}
											multiply_variable = {
												which = inp
												value = 0.5
											}
											change_variable = {
												which = ln_val
												value = 6931.472
											}
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = inp
														value = 1
													}
												}
											}
											multiply_variable = {
												which = inp
												value = 2
											}
											subtract_variable = {
												which = ln_val
												value = 6931.472
											}
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = k
														value = 10
													}
												}
											}
											change_variable = {
												which = k
												value = 1
											}
											multiply_variable = {
												which = k_div
												value = 0.5
											}
											set_variable = {
												which = t_m_ln
												which = scale
											}
											change_variable = {
												which = t_m_ln
												which = k_div
											}
											if = {
												limit = {
													check_variable = {
														which = inp
														which = t_m_ln
													}
												}
												divide_variable = {
													which = inp
													which = t_m_ln
												}
												multiply_variable = {
													which = inp
													which = scale
												}
												set_variable = {
													which = lt_ind
													which = k
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 6
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 8
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 9
																}
															}
															if = {
																limit = {
																	check_variable = {
																		which = lt_ind
																		value = 10
																	}
																}
																set_variable = {
																	which = lt_val
																	value = 9.761
																}
															}
															else = {
																set_variable = {
																	which = lt_val
																	value = 19.512
																}
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 38.986
															}
														}
													}
													else = {
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 7
																}
															}
															set_variable = {
																which = lt_val
																value = 77.821
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 155.042
															}
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 3
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 4
																}
															}
															if = {
																limit = {
																	check_variable = {
																		which = lt_ind
																		value = 5
																	}
																}
																set_variable = {
																	which = lt_val
																	value = 307.717
																}
															}
															else = {
																set_variable = {
																	which = lt_val
																	value = 606.246
																}
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 1177.83
															}
														}
													}
													else = {
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 2
																}
															}
															set_variable = {
																which = lt_val
																value = 2231.436
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 4054.651
															}
														}
													}
												}
												set_variable = {
													which = lt_ind
													value = 0
												}
												change_variable = {
													which = ln_val
													which = lt_val
												}
											}
											set_variable = {
												which = t_m_ln
												value = 0
											}
										}
										divide_variable = {
											which = ln_val
											value = 10000
										}
										set_variable = {
											which = scale
											value = 0
										}
										set_variable = {
											which = k
											value = 0
										}
										set_variable = {
											which = k_div
											value = 0
										}
										set_variable = {
											which = lt_val
											value = 0
										}
									}
									set_variable = {
										which = inp
										value = 0
									}
									multiply_variable = {
										which = dec_m_exp
										which = ln_val
									}
									set_variable = {
										which = math.e.expnt
										which = dec_m_exp
									}
									set_variable = {
										which = math.e.return
										value = 1
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = math.e.expnt
													value = -6.999
												}
											}
										}
										set_variable = {
											which = exp_val
											value = 0
										}
									}
									else = {
										while = {
											limit = {
												check_variable = {
													which = math.e.expnt
													value = 1
												}
											}
											subtract_variable = {
												which = math.e.expnt
												value = 1
											}
											multiply_variable = {
												which = math.e.return
												value = 2.718
											}
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = math.e.expnt
														value = 0
													}
												}
											}
											change_variable = {
												which = math.e.expnt
												value = 1
											}
											divide_variable = {
												which = math.e.return
												value = 2.718
											}
										}
										set_variable = {
											which = math.e.sm
											value = 1
										}
										if = {
											limit = {
												NOT = {
													is_variable_equal = {
														which = math.e.expnt
														value = 0
													}
												}
											}
											set_variable = {
												which = math.e.sq
												which = math.e.expnt
											}
											multiply_variable = {
												which = math.e.sq
												which = math.e.expnt
											}
											set_variable = {
												which = math.e.fct
												value = 2
											}
											set_variable = {
												which = math.e.fctl
												value = 2
											}
											set_variable = {
												which = math.e.a1
												which = math.e.sq
											}
											set_variable = {
												which = math.e.a2
												which = math.e.expnt
											}
											set_variable = {
												which = math.e.a3
												value = 2
											}
											set_variable = {
												which = math.e.tmp
												which = math.e.a2
											}
											multiply_variable = {
												which = math.e.tmp
												which = math.e.a3
											}
											change_variable = {
												which = math.e.tmp
												which = math.e.a1
											}
											divide_variable = {
												which = math.e.tmp
												which = math.e.fct
											}
											change_variable = {
												which = math.e.sm
												which = math.e.tmp
											}
											set_variable = {
												which = math.e.prec
												value = 3
											}
											subtract_variable = {
												which = math.e.prec
												value = 1
											}
											while = {
												limit = {
													check_variable = {
														which = math.e.prec
														value = 1
													}
												}
												subtract_variable = {
													which = math.e.prec
													value = 1
												}
												change_variable = {
													which = math.e.fctl
													value = 1
												}
												multiply_variable = {
													which = math.e.fct
													which = math.e.fctl
												}
												change_variable = {
													which = math.e.fctl
													value = 1
												}
												multiply_variable = {
													which = math.e.fct
													which = math.e.fctl
												}
												multiply_variable = {
													which = math.e.a1
													which = math.e.sq
												}
												multiply_variable = {
													which = math.e.a2
													which = math.e.sq
												}
												change_variable = {
													which = math.e.a3
													value = 2
												}
												set_variable = {
													which = math.e.tmp
													which = math.e.a2
												}
												multiply_variable = {
													which = math.e.tmp
													which = math.e.a3
												}
												change_variable = {
													which = math.e.tmp
													which = math.e.a1
												}
												divide_variable = {
													which = math.e.tmp
													which = math.e.fct
												}
												change_variable = {
													which = math.e.sm
													which = math.e.tmp
												}
											}
										}
										multiply_variable = {
											which = math.e.return
											which = math.e.sm
										}
										set_variable = {
											which = exp_val
											which = math.e.return
										}
										set_variable = {
											which = math.e.sm
											value = 0
										}
										set_variable = {
											which = math.e.tmp
											value = 0
										}
										set_variable = {
											which = math.e.a1
											value = 0
										}
										set_variable = {
											which = math.e.a2
											value = 0
										}
										set_variable = {
											which = math.e.a3
											value = 0
										}
										set_variable = {
											which = math.e.fctl
											value = 0
										}
										set_variable = {
											which = math.e.fct
											value = 0
										}
										set_variable = {
											which = math.e.prec
											value = 0
										}
										set_variable = {
											which = math.e.sq
											value = 0
										}
									}
									set_variable = {
										which = math.e.expnt
										value = 0
									}
									set_variable = {
										which = math.e.return
										value = 0
									}
									while = {
										limit = {
											check_variable = {
												which = int_m_exp
												value = 1
											}
										}
										subtract_variable = {
											which = int_m_exp
											value = 1
										}
										multiply_variable = {
											which = exp_val
											which = inp_m_exp
										}
									}
									set_variable = {
										which = exp_m_exp
										value = 0
									}
									set_variable = {
										which = int_m_exp
										value = 0
									}
									set_variable = {
										which = dec_m_exp
										value = 0
									}
									set_variable = {
										which = ln_val
										value = 0
									}
								}
								set_variable = {
									which = inp_m_exp
									value = 0
								}
								set_variable = {
									which = EstateProv_Unrest
									which = exp_val
								}
								set_variable = {
									which = exp_val
									value = 0
								}
								export_to_variable = {
									which = EstateProv_LA
									value = local_autonomy
								}
								multiply_variable = {
									which = EstateProv_LA
									value = 0.008
								}
								change_variable = {
									which = EstateProv_LA
									value = 0.2
								}
								multiply_variable = {
									which = EstateProv_Unrest
									which = EstateProv_LA
								}
								set_variable = {
									which = EstateProv_Unrest_Inp
									which = EstateProv_Unrest
								}
								if = {
									limit = {
										has_province_flag = loss
									}
									clr_province_flag = loss
									multiply_variable = {
										which = EstateProv_Unrest
										value = -1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 0.1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 10
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 25.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 25.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_25.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_25.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_25.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 12.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 12.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_12.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_12.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_12.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 6.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 6.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_6.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_6.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_6.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 3.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 3.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_3.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_3.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_3.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 1.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 1.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_1.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_1.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_1.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.1
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.1
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.1
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.1
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								else_if = {
									limit = {
										has_province_flag = gain
									}
									clr_province_flag = gain
									multiply_variable = {
										which = EstateProv_Unrest
										value = 1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 0.1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 10
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 25.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 25.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_25.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_25.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
										remove_province_modifier = EstateProv_UnrestGain_25.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 12.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 12.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_12.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_12.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
										remove_province_modifier = EstateProv_UnrestGain_12.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 6.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 6.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_6.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_6.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
										remove_province_modifier = EstateProv_UnrestGain_6.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 3.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 3.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_3.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_3.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
										remove_province_modifier = EstateProv_UnrestGain_3.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 1.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 1.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_1.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_1.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
										remove_province_modifier = EstateProv_UnrestGain_1.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
										remove_province_modifier = EstateProv_UnrestGain_0.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
										remove_province_modifier = EstateProv_UnrestGain_0.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
										remove_province_modifier = EstateProv_UnrestGain_0.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.1
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.1
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.1
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.1
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
										remove_province_modifier = EstateProv_UnrestGain_0.1
									}
								}
								if = {
									limit = {
										check_variable = {
											which = EstateProv_UnrestSave
											value = 0.001
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = EstateProv_Unrest
													value = 0.001
												}
											}
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_25.6
											}
											remove_province_modifier = EstateProv_UnrestGain_25.6
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_12.8
											}
											remove_province_modifier = EstateProv_UnrestGain_12.8
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_6.4
											}
											remove_province_modifier = EstateProv_UnrestGain_6.4
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_3.2
											}
											remove_province_modifier = EstateProv_UnrestGain_3.2
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_1.6
											}
											remove_province_modifier = EstateProv_UnrestGain_1.6
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.8
											}
											remove_province_modifier = EstateProv_UnrestGain_0.8
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.4
											}
											remove_province_modifier = EstateProv_UnrestGain_0.4
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.2
											}
											remove_province_modifier = EstateProv_UnrestGain_0.2
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.1
											}
											remove_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
								}
								else_if = {
									limit = {
										NOT = {
											check_variable = {
												which = EstateProv_UnrestSave
												value = 0
											}
										}
										check_variable = {
											which = EstateProv_Unrest
											value = 0
										}
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_25.6
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_12.8
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_6.4
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_3.2
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_1.6
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.8
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.4
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.2
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								if = {
									limit = {
										is_variable_equal = {
											which = EstateProv_Unrest
											value = 0
										}
									}
									set_variable = {
										which = EstateProv_Unrest
										value = 0
									}
								}
								set_variable = {
									which = EstateProv_UnrestSave
									value = 0
								}
								set_variable = {
									which = EstateProv_LA
									value = 0
								}
								set_variable = {
									which = EstateProv_Unrest_Inp
									value = 0
								}
							}
						}
					}
				}
				clr_country_flag = overlord_inspired_trader
			}
			overlord_inspired_institutions_spread = {
				clr_country_flag = overlord_inspired_institutions_spread
				add_country_modifier = {
					name = "tributary_institution_influence"
					duration = 5475
				}
			}
			overlord_inspired_dip_rep = {
				add_country_modifier = {
					name = "tributary_diplomatic_influence"
					duration = 5475
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.05
						}
						OR = {
							check_variable = {
								which = estate_greater_nobles_weight_share
								which = estate_lesser_nobles_weight_share
							}
							check_variable = {
								which = estate_greater_nobles_weight_share
								value = 0.10
							}
						}
					}
					custom_tooltip = t_estate_greater_nobles_loyalty_added_a
					hidden_effect = {
						set_variable = {
							which = greater_nobles_loyalty_added
							value = 0
						}
						set_variable = {
							which = greater_nobles_loyalty_added
							which = nobles_loyalty_added_a
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 64
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 64
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.64
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 32
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 32
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.32
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 16
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 16
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.16
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 8
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 8
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.08
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 4
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 4
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.04
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 2
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 2
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.02
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 1
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 1
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.01
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 1
								}
							}
							set_variable = {
								which = estate_greater_nobles_loyalty
								value = 1
							}
						}
						every_owned_province = {
							limit = {
								has_province_flag = greater_nobles_control_province
							}
							hidden_effect = {
								set_variable = {
									which = estate_greater_nobles_loyalty
									which = owner
								}
								set_variable = {
									which = EstateProv_UnrestSave
									which = EstateProv_Unrest
								}
								set_variable = {
									which = EstateProv_Unrest
									which = estate_greater_nobles_loyalty
								}
								set_variable = {
									which = estate_greater_nobles_loyalty
									value = 0
								}
								if = {
									limit = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.6
										}
									}
									set_province_flag = loss
									subtract_variable = {
										which = EstateProv_Unrest
										value = 0.6
									}
								}
								else_if = {
									limit = {
										NOT = {
											check_variable = {
												which = EstateProv_Unrest
												value = 0.401
											}
										}
									}
									set_province_flag = gain
									subtract_variable = {
										which = EstateProv_Unrest
										value = 0.4
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = -1
									}
								}
								else = {
									set_variable = {
										which = EstateProv_Unrest
										value = 0
									}
								}
								multiply_variable = {
									which = EstateProv_Unrest
									value = 16.62
								}
								set_variable = {
									which = inp_m_exp
									which = EstateProv_Unrest
								}
								if = {
									limit = {
										NOT = {
											check_variable = {
												which = inp_m_exp
												value = 0
											}
										}
									}
									set_variable = {
										which = exp_val
										value = 0
									}
									change_variable = {
										which = err.math.exp.undef
										value = 1
									}
								}
								else_if = {
									limit = {
										is_variable_equal = {
											which = inp_m_exp
											value = 0
										}
									}
									set_variable = {
										which = exp_val
										value = 0
									}
								}
								else = {
									set_variable = {
										which = exp_m_exp
										value = 1.7
									}
									set_variable = {
										which = int_m_exp
										which = exp_m_exp
									}
									multiply_variable = {
										which = int_m_exp
										value = 0.001
									}
									multiply_variable = {
										which = int_m_exp
										value = 1000
									}
									set_variable = {
										which = dec_m_exp
										which = exp_m_exp
									}
									subtract_variable = {
										which = dec_m_exp
										which = int_m_exp
									}
									set_variable = {
										which = inp
										which = inp_m_exp
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = inp
													value = 0.001
												}
											}
										}
										set_variable = {
											which = ln_val
											value = 0
										}
										change_variable = {
											which = err.math.ln.undef
											value = 1
										}
									}
									else = {
										set_variable = {
											which = ln_val
											value = 0
										}
										set_variable = {
											which = scale
											value = 10000
										}
										set_variable = {
											which = k
											value = 0
										}
										set_variable = {
											which = k_div
											which = scale
										}
										while = {
											limit = {
												check_variable = {
													which = inp
													value = 2.001
												}
											}
											multiply_variable = {
												which = inp
												value = 0.5
											}
											change_variable = {
												which = ln_val
												value = 6931.472
											}
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = inp
														value = 1
													}
												}
											}
											multiply_variable = {
												which = inp
												value = 2
											}
											subtract_variable = {
												which = ln_val
												value = 6931.472
											}
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = k
														value = 10
													}
												}
											}
											change_variable = {
												which = k
												value = 1
											}
											multiply_variable = {
												which = k_div
												value = 0.5
											}
											set_variable = {
												which = t_m_ln
												which = scale
											}
											change_variable = {
												which = t_m_ln
												which = k_div
											}
											if = {
												limit = {
													check_variable = {
														which = inp
														which = t_m_ln
													}
												}
												divide_variable = {
													which = inp
													which = t_m_ln
												}
												multiply_variable = {
													which = inp
													which = scale
												}
												set_variable = {
													which = lt_ind
													which = k
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 6
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 8
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 9
																}
															}
															if = {
																limit = {
																	check_variable = {
																		which = lt_ind
																		value = 10
																	}
																}
																set_variable = {
																	which = lt_val
																	value = 9.761
																}
															}
															else = {
																set_variable = {
																	which = lt_val
																	value = 19.512
																}
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 38.986
															}
														}
													}
													else = {
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 7
																}
															}
															set_variable = {
																which = lt_val
																value = 77.821
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 155.042
															}
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 3
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 4
																}
															}
															if = {
																limit = {
																	check_variable = {
																		which = lt_ind
																		value = 5
																	}
																}
																set_variable = {
																	which = lt_val
																	value = 307.717
																}
															}
															else = {
																set_variable = {
																	which = lt_val
																	value = 606.246
																}
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 1177.83
															}
														}
													}
													else = {
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 2
																}
															}
															set_variable = {
																which = lt_val
																value = 2231.436
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 4054.651
															}
														}
													}
												}
												set_variable = {
													which = lt_ind
													value = 0
												}
												change_variable = {
													which = ln_val
													which = lt_val
												}
											}
											set_variable = {
												which = t_m_ln
												value = 0
											}
										}
										divide_variable = {
											which = ln_val
											value = 10000
										}
										set_variable = {
											which = scale
											value = 0
										}
										set_variable = {
											which = k
											value = 0
										}
										set_variable = {
											which = k_div
											value = 0
										}
										set_variable = {
											which = lt_val
											value = 0
										}
									}
									set_variable = {
										which = inp
										value = 0
									}
									multiply_variable = {
										which = dec_m_exp
										which = ln_val
									}
									set_variable = {
										which = math.e.expnt
										which = dec_m_exp
									}
									set_variable = {
										which = math.e.return
										value = 1
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = math.e.expnt
													value = -6.999
												}
											}
										}
										set_variable = {
											which = exp_val
											value = 0
										}
									}
									else = {
										while = {
											limit = {
												check_variable = {
													which = math.e.expnt
													value = 1
												}
											}
											subtract_variable = {
												which = math.e.expnt
												value = 1
											}
											multiply_variable = {
												which = math.e.return
												value = 2.718
											}
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = math.e.expnt
														value = 0
													}
												}
											}
											change_variable = {
												which = math.e.expnt
												value = 1
											}
											divide_variable = {
												which = math.e.return
												value = 2.718
											}
										}
										set_variable = {
											which = math.e.sm
											value = 1
										}
										if = {
											limit = {
												NOT = {
													is_variable_equal = {
														which = math.e.expnt
														value = 0
													}
												}
											}
											set_variable = {
												which = math.e.sq
												which = math.e.expnt
											}
											multiply_variable = {
												which = math.e.sq
												which = math.e.expnt
											}
											set_variable = {
												which = math.e.fct
												value = 2
											}
											set_variable = {
												which = math.e.fctl
												value = 2
											}
											set_variable = {
												which = math.e.a1
												which = math.e.sq
											}
											set_variable = {
												which = math.e.a2
												which = math.e.expnt
											}
											set_variable = {
												which = math.e.a3
												value = 2
											}
											set_variable = {
												which = math.e.tmp
												which = math.e.a2
											}
											multiply_variable = {
												which = math.e.tmp
												which = math.e.a3
											}
											change_variable = {
												which = math.e.tmp
												which = math.e.a1
											}
											divide_variable = {
												which = math.e.tmp
												which = math.e.fct
											}
											change_variable = {
												which = math.e.sm
												which = math.e.tmp
											}
											set_variable = {
												which = math.e.prec
												value = 3
											}
											subtract_variable = {
												which = math.e.prec
												value = 1
											}
											while = {
												limit = {
													check_variable = {
														which = math.e.prec
														value = 1
													}
												}
												subtract_variable = {
													which = math.e.prec
													value = 1
												}
												change_variable = {
													which = math.e.fctl
													value = 1
												}
												multiply_variable = {
													which = math.e.fct
													which = math.e.fctl
												}
												change_variable = {
													which = math.e.fctl
													value = 1
												}
												multiply_variable = {
													which = math.e.fct
													which = math.e.fctl
												}
												multiply_variable = {
													which = math.e.a1
													which = math.e.sq
												}
												multiply_variable = {
													which = math.e.a2
													which = math.e.sq
												}
												change_variable = {
													which = math.e.a3
													value = 2
												}
												set_variable = {
													which = math.e.tmp
													which = math.e.a2
												}
												multiply_variable = {
													which = math.e.tmp
													which = math.e.a3
												}
												change_variable = {
													which = math.e.tmp
													which = math.e.a1
												}
												divide_variable = {
													which = math.e.tmp
													which = math.e.fct
												}
												change_variable = {
													which = math.e.sm
													which = math.e.tmp
												}
											}
										}
										multiply_variable = {
											which = math.e.return
											which = math.e.sm
										}
										set_variable = {
											which = exp_val
											which = math.e.return
										}
										set_variable = {
											which = math.e.sm
											value = 0
										}
										set_variable = {
											which = math.e.tmp
											value = 0
										}
										set_variable = {
											which = math.e.a1
											value = 0
										}
										set_variable = {
											which = math.e.a2
											value = 0
										}
										set_variable = {
											which = math.e.a3
											value = 0
										}
										set_variable = {
											which = math.e.fctl
											value = 0
										}
										set_variable = {
											which = math.e.fct
											value = 0
										}
										set_variable = {
											which = math.e.prec
											value = 0
										}
										set_variable = {
											which = math.e.sq
											value = 0
										}
									}
									set_variable = {
										which = math.e.expnt
										value = 0
									}
									set_variable = {
										which = math.e.return
										value = 0
									}
									while = {
										limit = {
											check_variable = {
												which = int_m_exp
												value = 1
											}
										}
										subtract_variable = {
											which = int_m_exp
											value = 1
										}
										multiply_variable = {
											which = exp_val
											which = inp_m_exp
										}
									}
									set_variable = {
										which = exp_m_exp
										value = 0
									}
									set_variable = {
										which = int_m_exp
										value = 0
									}
									set_variable = {
										which = dec_m_exp
										value = 0
									}
									set_variable = {
										which = ln_val
										value = 0
									}
								}
								set_variable = {
									which = inp_m_exp
									value = 0
								}
								set_variable = {
									which = EstateProv_Unrest
									which = exp_val
								}
								set_variable = {
									which = exp_val
									value = 0
								}
								export_to_variable = {
									which = EstateProv_LA
									value = local_autonomy
								}
								multiply_variable = {
									which = EstateProv_LA
									value = 0.008
								}
								change_variable = {
									which = EstateProv_LA
									value = 0.2
								}
								multiply_variable = {
									which = EstateProv_Unrest
									which = EstateProv_LA
								}
								set_variable = {
									which = EstateProv_Unrest_Inp
									which = EstateProv_Unrest
								}
								if = {
									limit = {
										has_province_flag = loss
									}
									clr_province_flag = loss
									multiply_variable = {
										which = EstateProv_Unrest
										value = -1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 0.1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 10
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 25.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 25.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_25.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_25.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_25.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 12.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 12.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_12.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_12.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_12.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 6.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 6.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_6.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_6.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_6.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 3.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 3.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_3.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_3.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_3.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 1.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 1.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_1.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_1.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_1.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.1
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.1
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.1
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.1
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								else_if = {
									limit = {
										has_province_flag = gain
									}
									clr_province_flag = gain
									multiply_variable = {
										which = EstateProv_Unrest
										value = 1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 0.1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 10
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 25.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 25.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_25.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_25.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
										remove_province_modifier = EstateProv_UnrestGain_25.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 12.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 12.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_12.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_12.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
										remove_province_modifier = EstateProv_UnrestGain_12.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 6.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 6.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_6.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_6.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
										remove_province_modifier = EstateProv_UnrestGain_6.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 3.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 3.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_3.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_3.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
										remove_province_modifier = EstateProv_UnrestGain_3.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 1.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 1.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_1.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_1.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
										remove_province_modifier = EstateProv_UnrestGain_1.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
										remove_province_modifier = EstateProv_UnrestGain_0.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
										remove_province_modifier = EstateProv_UnrestGain_0.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
										remove_province_modifier = EstateProv_UnrestGain_0.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.1
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.1
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.1
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.1
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
										remove_province_modifier = EstateProv_UnrestGain_0.1
									}
								}
								if = {
									limit = {
										check_variable = {
											which = EstateProv_UnrestSave
											value = 0.001
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = EstateProv_Unrest
													value = 0.001
												}
											}
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_25.6
											}
											remove_province_modifier = EstateProv_UnrestGain_25.6
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_12.8
											}
											remove_province_modifier = EstateProv_UnrestGain_12.8
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_6.4
											}
											remove_province_modifier = EstateProv_UnrestGain_6.4
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_3.2
											}
											remove_province_modifier = EstateProv_UnrestGain_3.2
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_1.6
											}
											remove_province_modifier = EstateProv_UnrestGain_1.6
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.8
											}
											remove_province_modifier = EstateProv_UnrestGain_0.8
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.4
											}
											remove_province_modifier = EstateProv_UnrestGain_0.4
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.2
											}
											remove_province_modifier = EstateProv_UnrestGain_0.2
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.1
											}
											remove_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
								}
								else_if = {
									limit = {
										NOT = {
											check_variable = {
												which = EstateProv_UnrestSave
												value = 0
											}
										}
										check_variable = {
											which = EstateProv_Unrest
											value = 0
										}
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_25.6
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_12.8
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_6.4
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_3.2
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_1.6
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.8
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.4
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.2
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								if = {
									limit = {
										is_variable_equal = {
											which = EstateProv_Unrest
											value = 0
										}
									}
									set_variable = {
										which = EstateProv_Unrest
										value = 0
									}
								}
								set_variable = {
									which = EstateProv_UnrestSave
									value = 0
								}
								set_variable = {
									which = EstateProv_LA
									value = 0
								}
								set_variable = {
									which = EstateProv_Unrest_Inp
									value = 0
								}
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_weight_share
							value = 0.15
						}
						OR = {
							check_variable = {
								which = estate_lesser_nobles_weight_share
								which = estate_greater_nobles_weight_share
							}
							check_variable = {
								which = estate_lesser_nobles_weight_share
								value = 0.25
							}
						}
					}
					custom_tooltip = t_estate_lesser_nobles_loyalty_added_a
					hidden_effect = {
						set_variable = {
							which = lesser_nobles_loyalty_added
							value = 0
						}
						set_variable = {
							which = lesser_nobles_loyalty_added
							which = nobles_loyalty_added_a
						}
						if = {
							limit = {
								check_variable = {
									which = lesser_nobles_loyalty_added
									value = 64
								}
							}
							add_estate_loyalty = {
								estate = estate_lesser_nobles
								loyalty = 64
							}
							change_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.64
							}
							subtract_variable = {
								which = lesser_nobles_loyalty_added
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = lesser_nobles_loyalty_added
									value = 32
								}
							}
							add_estate_loyalty = {
								estate = estate_lesser_nobles
								loyalty = 32
							}
							change_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.32
							}
							subtract_variable = {
								which = lesser_nobles_loyalty_added
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = lesser_nobles_loyalty_added
									value = 16
								}
							}
							add_estate_loyalty = {
								estate = estate_lesser_nobles
								loyalty = 16
							}
							change_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.16
							}
							subtract_variable = {
								which = lesser_nobles_loyalty_added
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = lesser_nobles_loyalty_added
									value = 8
								}
							}
							add_estate_loyalty = {
								estate = estate_lesser_nobles
								loyalty = 8
							}
							change_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.08
							}
							subtract_variable = {
								which = lesser_nobles_loyalty_added
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = lesser_nobles_loyalty_added
									value = 4
								}
							}
							add_estate_loyalty = {
								estate = estate_lesser_nobles
								loyalty = 4
							}
							change_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.04
							}
							subtract_variable = {
								which = lesser_nobles_loyalty_added
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = lesser_nobles_loyalty_added
									value = 2
								}
							}
							add_estate_loyalty = {
								estate = estate_lesser_nobles
								loyalty = 2
							}
							change_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.02
							}
							subtract_variable = {
								which = lesser_nobles_loyalty_added
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = lesser_nobles_loyalty_added
									value = 1
								}
							}
							add_estate_loyalty = {
								estate = estate_lesser_nobles
								loyalty = 1
							}
							change_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.01
							}
							subtract_variable = {
								which = lesser_nobles_loyalty_added
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_lesser_nobles_loyalty
									value = 1
								}
							}
							set_variable = {
								which = estate_lesser_nobles_loyalty
								value = 1
							}
						}
						every_owned_province = {
							limit = {
								has_province_flag = lesser_nobles_control_province
							}
							hidden_effect = {
								set_variable = {
									which = estate_lesser_nobles_loyalty
									which = owner
								}
								set_variable = {
									which = EstateProv_UnrestSave
									which = EstateProv_Unrest
								}
								set_variable = {
									which = EstateProv_Unrest
									which = estate_lesser_nobles_loyalty
								}
								set_variable = {
									which = estate_lesser_nobles_loyalty
									value = 0
								}
								if = {
									limit = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.6
										}
									}
									set_province_flag = loss
									subtract_variable = {
										which = EstateProv_Unrest
										value = 0.6
									}
								}
								else_if = {
									limit = {
										NOT = {
											check_variable = {
												which = EstateProv_Unrest
												value = 0.401
											}
										}
									}
									set_province_flag = gain
									subtract_variable = {
										which = EstateProv_Unrest
										value = 0.4
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = -1
									}
								}
								else = {
									set_variable = {
										which = EstateProv_Unrest
										value = 0
									}
								}
								multiply_variable = {
									which = EstateProv_Unrest
									value = 16.62
								}
								set_variable = {
									which = inp_m_exp
									which = EstateProv_Unrest
								}
								if = {
									limit = {
										NOT = {
											check_variable = {
												which = inp_m_exp
												value = 0
											}
										}
									}
									set_variable = {
										which = exp_val
										value = 0
									}
									change_variable = {
										which = err.math.exp.undef
										value = 1
									}
								}
								else_if = {
									limit = {
										is_variable_equal = {
											which = inp_m_exp
											value = 0
										}
									}
									set_variable = {
										which = exp_val
										value = 0
									}
								}
								else = {
									set_variable = {
										which = exp_m_exp
										value = 1.7
									}
									set_variable = {
										which = int_m_exp
										which = exp_m_exp
									}
									multiply_variable = {
										which = int_m_exp
										value = 0.001
									}
									multiply_variable = {
										which = int_m_exp
										value = 1000
									}
									set_variable = {
										which = dec_m_exp
										which = exp_m_exp
									}
									subtract_variable = {
										which = dec_m_exp
										which = int_m_exp
									}
									set_variable = {
										which = inp
										which = inp_m_exp
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = inp
													value = 0.001
												}
											}
										}
										set_variable = {
											which = ln_val
											value = 0
										}
										change_variable = {
											which = err.math.ln.undef
											value = 1
										}
									}
									else = {
										set_variable = {
											which = ln_val
											value = 0
										}
										set_variable = {
											which = scale
											value = 10000
										}
										set_variable = {
											which = k
											value = 0
										}
										set_variable = {
											which = k_div
											which = scale
										}
										while = {
											limit = {
												check_variable = {
													which = inp
													value = 2.001
												}
											}
											multiply_variable = {
												which = inp
												value = 0.5
											}
											change_variable = {
												which = ln_val
												value = 6931.472
											}
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = inp
														value = 1
													}
												}
											}
											multiply_variable = {
												which = inp
												value = 2
											}
											subtract_variable = {
												which = ln_val
												value = 6931.472
											}
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = k
														value = 10
													}
												}
											}
											change_variable = {
												which = k
												value = 1
											}
											multiply_variable = {
												which = k_div
												value = 0.5
											}
											set_variable = {
												which = t_m_ln
												which = scale
											}
											change_variable = {
												which = t_m_ln
												which = k_div
											}
											if = {
												limit = {
													check_variable = {
														which = inp
														which = t_m_ln
													}
												}
												divide_variable = {
													which = inp
													which = t_m_ln
												}
												multiply_variable = {
													which = inp
													which = scale
												}
												set_variable = {
													which = lt_ind
													which = k
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 6
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 8
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 9
																}
															}
															if = {
																limit = {
																	check_variable = {
																		which = lt_ind
																		value = 10
																	}
																}
																set_variable = {
																	which = lt_val
																	value = 9.761
																}
															}
															else = {
																set_variable = {
																	which = lt_val
																	value = 19.512
																}
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 38.986
															}
														}
													}
													else = {
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 7
																}
															}
															set_variable = {
																which = lt_val
																value = 77.821
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 155.042
															}
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 3
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 4
																}
															}
															if = {
																limit = {
																	check_variable = {
																		which = lt_ind
																		value = 5
																	}
																}
																set_variable = {
																	which = lt_val
																	value = 307.717
																}
															}
															else = {
																set_variable = {
																	which = lt_val
																	value = 606.246
																}
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 1177.83
															}
														}
													}
													else = {
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 2
																}
															}
															set_variable = {
																which = lt_val
																value = 2231.436
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 4054.651
															}
														}
													}
												}
												set_variable = {
													which = lt_ind
													value = 0
												}
												change_variable = {
													which = ln_val
													which = lt_val
												}
											}
											set_variable = {
												which = t_m_ln
												value = 0
											}
										}
										divide_variable = {
											which = ln_val
											value = 10000
										}
										set_variable = {
											which = scale
											value = 0
										}
										set_variable = {
											which = k
											value = 0
										}
										set_variable = {
											which = k_div
											value = 0
										}
										set_variable = {
											which = lt_val
											value = 0
										}
									}
									set_variable = {
										which = inp
										value = 0
									}
									multiply_variable = {
										which = dec_m_exp
										which = ln_val
									}
									set_variable = {
										which = math.e.expnt
										which = dec_m_exp
									}
									set_variable = {
										which = math.e.return
										value = 1
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = math.e.expnt
													value = -6.999
												}
											}
										}
										set_variable = {
											which = exp_val
											value = 0
										}
									}
									else = {
										while = {
											limit = {
												check_variable = {
													which = math.e.expnt
													value = 1
												}
											}
											subtract_variable = {
												which = math.e.expnt
												value = 1
											}
											multiply_variable = {
												which = math.e.return
												value = 2.718
											}
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = math.e.expnt
														value = 0
													}
												}
											}
											change_variable = {
												which = math.e.expnt
												value = 1
											}
											divide_variable = {
												which = math.e.return
												value = 2.718
											}
										}
										set_variable = {
											which = math.e.sm
											value = 1
										}
										if = {
											limit = {
												NOT = {
													is_variable_equal = {
														which = math.e.expnt
														value = 0
													}
												}
											}
											set_variable = {
												which = math.e.sq
												which = math.e.expnt
											}
											multiply_variable = {
												which = math.e.sq
												which = math.e.expnt
											}
											set_variable = {
												which = math.e.fct
												value = 2
											}
											set_variable = {
												which = math.e.fctl
												value = 2
											}
											set_variable = {
												which = math.e.a1
												which = math.e.sq
											}
											set_variable = {
												which = math.e.a2
												which = math.e.expnt
											}
											set_variable = {
												which = math.e.a3
												value = 2
											}
											set_variable = {
												which = math.e.tmp
												which = math.e.a2
											}
											multiply_variable = {
												which = math.e.tmp
												which = math.e.a3
											}
											change_variable = {
												which = math.e.tmp
												which = math.e.a1
											}
											divide_variable = {
												which = math.e.tmp
												which = math.e.fct
											}
											change_variable = {
												which = math.e.sm
												which = math.e.tmp
											}
											set_variable = {
												which = math.e.prec
												value = 3
											}
											subtract_variable = {
												which = math.e.prec
												value = 1
											}
											while = {
												limit = {
													check_variable = {
														which = math.e.prec
														value = 1
													}
												}
												subtract_variable = {
													which = math.e.prec
													value = 1
												}
												change_variable = {
													which = math.e.fctl
													value = 1
												}
												multiply_variable = {
													which = math.e.fct
													which = math.e.fctl
												}
												change_variable = {
													which = math.e.fctl
													value = 1
												}
												multiply_variable = {
													which = math.e.fct
													which = math.e.fctl
												}
												multiply_variable = {
													which = math.e.a1
													which = math.e.sq
												}
												multiply_variable = {
													which = math.e.a2
													which = math.e.sq
												}
												change_variable = {
													which = math.e.a3
													value = 2
												}
												set_variable = {
													which = math.e.tmp
													which = math.e.a2
												}
												multiply_variable = {
													which = math.e.tmp
													which = math.e.a3
												}
												change_variable = {
													which = math.e.tmp
													which = math.e.a1
												}
												divide_variable = {
													which = math.e.tmp
													which = math.e.fct
												}
												change_variable = {
													which = math.e.sm
													which = math.e.tmp
												}
											}
										}
										multiply_variable = {
											which = math.e.return
											which = math.e.sm
										}
										set_variable = {
											which = exp_val
											which = math.e.return
										}
										set_variable = {
											which = math.e.sm
											value = 0
										}
										set_variable = {
											which = math.e.tmp
											value = 0
										}
										set_variable = {
											which = math.e.a1
											value = 0
										}
										set_variable = {
											which = math.e.a2
											value = 0
										}
										set_variable = {
											which = math.e.a3
											value = 0
										}
										set_variable = {
											which = math.e.fctl
											value = 0
										}
										set_variable = {
											which = math.e.fct
											value = 0
										}
										set_variable = {
											which = math.e.prec
											value = 0
										}
										set_variable = {
											which = math.e.sq
											value = 0
										}
									}
									set_variable = {
										which = math.e.expnt
										value = 0
									}
									set_variable = {
										which = math.e.return
										value = 0
									}
									while = {
										limit = {
											check_variable = {
												which = int_m_exp
												value = 1
											}
										}
										subtract_variable = {
											which = int_m_exp
											value = 1
										}
										multiply_variable = {
											which = exp_val
											which = inp_m_exp
										}
									}
									set_variable = {
										which = exp_m_exp
										value = 0
									}
									set_variable = {
										which = int_m_exp
										value = 0
									}
									set_variable = {
										which = dec_m_exp
										value = 0
									}
									set_variable = {
										which = ln_val
										value = 0
									}
								}
								set_variable = {
									which = inp_m_exp
									value = 0
								}
								set_variable = {
									which = EstateProv_Unrest
									which = exp_val
								}
								set_variable = {
									which = exp_val
									value = 0
								}
								export_to_variable = {
									which = EstateProv_LA
									value = local_autonomy
								}
								multiply_variable = {
									which = EstateProv_LA
									value = 0.008
								}
								change_variable = {
									which = EstateProv_LA
									value = 0.2
								}
								multiply_variable = {
									which = EstateProv_Unrest
									which = EstateProv_LA
								}
								set_variable = {
									which = EstateProv_Unrest_Inp
									which = EstateProv_Unrest
								}
								if = {
									limit = {
										has_province_flag = loss
									}
									clr_province_flag = loss
									multiply_variable = {
										which = EstateProv_Unrest
										value = -1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 0.1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 10
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 25.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 25.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_25.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_25.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_25.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 12.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 12.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_12.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_12.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_12.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 6.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 6.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_6.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_6.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_6.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 3.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 3.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_3.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_3.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_3.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 1.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 1.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_1.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_1.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_1.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.1
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.1
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.1
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.1
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								else_if = {
									limit = {
										has_province_flag = gain
									}
									clr_province_flag = gain
									multiply_variable = {
										which = EstateProv_Unrest
										value = 1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 0.1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 10
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 25.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 25.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_25.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_25.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
										remove_province_modifier = EstateProv_UnrestGain_25.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 12.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 12.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_12.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_12.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
										remove_province_modifier = EstateProv_UnrestGain_12.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 6.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 6.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_6.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_6.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
										remove_province_modifier = EstateProv_UnrestGain_6.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 3.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 3.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_3.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_3.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
										remove_province_modifier = EstateProv_UnrestGain_3.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 1.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 1.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_1.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_1.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
										remove_province_modifier = EstateProv_UnrestGain_1.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
										remove_province_modifier = EstateProv_UnrestGain_0.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
										remove_province_modifier = EstateProv_UnrestGain_0.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
										remove_province_modifier = EstateProv_UnrestGain_0.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.1
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.1
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.1
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.1
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
										remove_province_modifier = EstateProv_UnrestGain_0.1
									}
								}
								if = {
									limit = {
										check_variable = {
											which = EstateProv_UnrestSave
											value = 0.001
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = EstateProv_Unrest
													value = 0.001
												}
											}
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_25.6
											}
											remove_province_modifier = EstateProv_UnrestGain_25.6
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_12.8
											}
											remove_province_modifier = EstateProv_UnrestGain_12.8
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_6.4
											}
											remove_province_modifier = EstateProv_UnrestGain_6.4
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_3.2
											}
											remove_province_modifier = EstateProv_UnrestGain_3.2
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_1.6
											}
											remove_province_modifier = EstateProv_UnrestGain_1.6
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.8
											}
											remove_province_modifier = EstateProv_UnrestGain_0.8
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.4
											}
											remove_province_modifier = EstateProv_UnrestGain_0.4
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.2
											}
											remove_province_modifier = EstateProv_UnrestGain_0.2
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.1
											}
											remove_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
								}
								else_if = {
									limit = {
										NOT = {
											check_variable = {
												which = EstateProv_UnrestSave
												value = 0
											}
										}
										check_variable = {
											which = EstateProv_Unrest
											value = 0
										}
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_25.6
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_12.8
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_6.4
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_3.2
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_1.6
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.8
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.4
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.2
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								if = {
									limit = {
										is_variable_equal = {
											which = EstateProv_Unrest
											value = 0
										}
									}
									set_variable = {
										which = EstateProv_Unrest
										value = 0
									}
								}
								set_variable = {
									which = EstateProv_UnrestSave
									value = 0
								}
								set_variable = {
									which = EstateProv_LA
									value = 0
								}
								set_variable = {
									which = EstateProv_Unrest_Inp
									value = 0
								}
							}
						}
					}
				}
				clr_country_flag = overlord_inspired_dip_rep
			}
		}
	}
	option = {
		name = "tributary_events.1.b"
		add_legitimacy = 10
		add_horde_unity = 10
		add_devotion = 10
		add_republican_tradition = 5
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
	}
}
country_event = {
	id = tributary_events.2
	title = tributary_events.2.t
	desc = tributary_events.2.d
	picture = TRIBUTARY_FLEET_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		is_subject_of_type = tributary_state
		overlord = {
			can_be_overlord = tributary_state
			NOT = {
				ai_attitude = {
					who = ROOT
					attitude = attitude_hostile
				}
			}
			any_subject_country = {
				AND = {
					OR = {
						is_subject_of_type = tributary_state
						is_subject_of_type = close_tributary_state
					}
				}
				NOT = {
					tag = ROOT
				}
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	option = {
		name = "tributary_events.2.a"
		add_prestige = 10
		random_country = {
			limit = {
				overlord = {
					any_subject_country = {
						tag = ROOT
					}
				}
			}
			add_opinion = {
				who = ROOT
				modifier = tributary_same_overlord
			}
		}
	}
	option = {
		name = "tributary_events.2.b"
		add_legitimacy = 5
		add_horde_unity = 5
		add_devotion = 5
		add_republican_tradition = 2.5
		random_neighbor_country = {
			limit = {
				is_subject = no
			}
			add_opinion = {
				who = ROOT
				modifier = tributary_impressive_overlord
			}
		}
	}
}
country_event = {
	id = tributary_events.3
	title = tributary_events.3.t
	desc = tributary_events.3.d
	picture = IMPERIAL_SEAL_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		is_subject_of_type = close_tributary_state
		overlord = {
			can_be_overlord = tributary_state
			NOT = {
				ai_attitude = {
					who = ROOT
					attitude = attitude_hostile
				}
			}
			OR = {
				AND = {
					has_country_modifier = title_4
					ROOT = {
						NOT = {
							has_country_modifier = title_4
							has_country_modifier = title_5
							has_country_modifier = title_6
						}
					}
				}
				AND = {
					has_country_modifier = title_5
					ROOT = {
						NOT = {
							has_country_modifier = title_5
							has_country_modifier = title_6
						}
					}
				}
				AND = {
					has_country_modifier = title_6
					ROOT = {
						NOT = {
							has_country_modifier = title_6
						}
					}
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			set_variable = {
				which = nobles_loyalty_added_a
				value = 5
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	option = {
		name = "tributary_events.3.a"
		add_legitimacy = 10
		add_horde_unity = 10
		add_devotion = 10
		add_republican_tradition = 5
		if = {
			limit = {
				check_variable = {
					which = estate_greater_nobles_weight_share
					value = 0.05
				}
				OR = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						which = estate_lesser_nobles_weight_share
					}
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.10
					}
				}
			}
			custom_tooltip = t_estate_greater_nobles_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = greater_nobles_loyalty_added
					value = 0
				}
				set_variable = {
					which = greater_nobles_loyalty_added
					which = nobles_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 64
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 32
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 16
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 8
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 4
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 2
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 1
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_greater_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_greater_nobles_loyalty
						}
						set_variable = {
							which = estate_greater_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_lesser_nobles_weight_share
					value = 0.15
				}
				OR = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						which = estate_greater_nobles_weight_share
					}
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.25
					}
				}
			}
			custom_tooltip = t_estate_lesser_nobles_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = lesser_nobles_loyalty_added
					value = 0
				}
				set_variable = {
					which = lesser_nobles_loyalty_added
					which = nobles_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 64
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 32
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 16
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 8
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 4
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 2
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 1
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_lesser_nobles_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = lesser_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_lesser_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_lesser_nobles_loyalty
						}
						set_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
	}
	option = {
		name = "tributary_events.3.b"
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
	}
}
country_event = {
	id = tributary_events.4
	title = tributary_events.4.t
	desc = tributary_events.4.d
	picture = GIFTS_TO_EMPEROR_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		can_be_overlord = tributary_state
		OR = {
			AND = {
				has_country_modifier = title_5
				calc_true_if = {
					any_subject_country = {
						AND = {
							OR = {
								is_subject_of_type = tributary_state
								is_subject_of_type = close_tributary_state
							}
						}
					}
					amount = 6
				}
			}
			AND = {
				has_country_modifier = title_6
				calc_true_if = {
					any_subject_country = {
						AND = {
							OR = {
								is_subject_of_type = tributary_state
								is_subject_of_type = close_tributary_state
							}
						}
					}
					amount = 10
				}
			}
		}
		NOT = {
			has_country_modifier = influential_tributary_network
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	option = {
		name = "tributary_events.4.a"
		add_country_modifier = {
			name = influential_tributary_network
			duration = 3650
		}
	}
	option = {
		name = "tributary_events.4.b"
		add_dip_power = 50
	}
}
country_event = {
	id = tributary_events.5
	title = tributary_events.5.t
	desc = tributary_events.5.d
	picture = MERITOCRACY_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		can_be_overlord = tributary_state
		any_subject_country = {
			AND = {
				OR = {
					is_subject_of_type = tributary_state
					is_subject_of_type = close_tributary_state
				}
			}
			OR = {
				institution_difference = {
					who = ROOT
					value = 1
				}
				tech_difference = 4
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_subject_country = {
				limit = {
					AND = {
						OR = {
							is_subject_of_type = tributary_state
							is_subject_of_type = close_tributary_state
						}
					}
					OR = {
						institution_difference = {
							who = ROOT
							value = 1
						}
						tech_difference = 4
					}
				}
				save_event_target_as = tributary_advanced_underling
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	option = {
		name = "tributary_events.5.a"
		event_target:tributary_advanced_underling = {
			add_opinion = {
				who = ROOT
				modifier = tributary_forced_brain_drain
			}
		}
		add_country_modifier = {
			name = "tributary_diffusion_of_knowledge"
			duration = 3650
		}
	}
	option = {
		name = "tributary_events.5.b"
		trigger = {
			always = no
			any_subject_country = {
				AND = {
					OR = {
						is_subject_of_type = tributary_state
						is_subject_of_type = close_tributary_state
					}
				}
				institution_difference = {
					who = ROOT
					value = 1
				}
			}
		}
		event_target:tributary_advanced_underling = {
			add_opinion = {
				who = ROOT
				modifier = tributary_forced_brain_drain
			}
		}
		capital_scope = {}
	}
	option = {
		name = "tributary_events.5.c"
		add_prestige = 5
	}
}
country_event = {
	id = tributary_events.6
	title = tributary_events.6.t
	desc = tributary_events.6.d
	picture = TRIBUTARY_FLEET_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		AND = {
			OR = {
				is_subject_of_type = tributary_state
				is_subject_of_type = close_tributary_state
			}
		}
		num_of_ports = 1
		overlord = {
			can_be_overlord = tributary_state
			num_of_ports = 1
			NOT = {
				government = tribal
			}
		}
		any_owned_province = {
			has_port = yes
			is_in_capital_area = yes
		}
		NOT = {
			any_owned_province = {
				has_province_modifier = tributary_overlord_trading_port
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_port = yes
					is_in_capital_area = yes
				}
				save_event_target_as = tributary_trader_port
			}
			random_owned_province = {
				limit = {
					has_port = yes
					is_in_capital_area = yes
					province_trade_power = 6
				}
				save_event_target_as = tributary_trader_port
			}
			random_owned_province = {
				limit = {
					has_port = yes
					is_in_capital_area = yes
					OR = {
						development = 15
						province_trade_power = 10
					}
				}
				save_event_target_as = tributary_trader_port
			}
		}
	}
	option = {
		name = "tributary_events.6.a"
		custom_tooltip = tributary_events.6.a.tt
		add_corruption = 1
		event_target:tributary_trader_port = {
			add_province_modifier = {
				name = "tributary_overlord_trading_port"
				duration = 10950
			}
			if = {
				limit = {
					has_province_modifier = urban_development_efforts
				}
				extend_province_modifier = {
					name = urban_development_efforts
					duration = 3625
				}
			}
			else = {
				add_province_modifier = {
					name = urban_development_efforts
					duration = 3625
				}
			}
		}
		set_country_flag = tributary_harbored_criminals
	}
	option = {
		name = "tributary_events.6.b"
		event_target:tributary_trader_port = {
			add_province_modifier = {
				name = "tributary_overlord_trading_port"
				duration = 1825
			}
		}
	}
}
country_event = {
	id = tributary_events.7
	title = tributary_events.7.t
	desc = tributary_events.7.d
	picture = GIFTS_TO_EMPEROR_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		can_be_overlord = tributary_state
		any_subject_country = {
			AND = {
				OR = {
					is_subject_of_type = tributary_state
					is_subject_of_type = close_tributary_state
				}
			}
			has_country_flag = tributary_harbored_criminals
			NOT = {
				had_country_flag = {
					flag = tributary_harbored_criminals
					days = 10950
				}
			}
			any_owned_province = {
				has_province_modifier = tributary_overlord_trading_port
			}
		}
	}
	immediate = {
		random_subject_country = {
			limit = {
				AND = {
					OR = {
						is_subject_of_type = tributary_state
						is_subject_of_type = close_tributary_state
					}
				}
				has_country_flag = tributary_harbored_criminals
				NOT = {
					had_country_flag = {
						flag = tributary_harbored_criminals
						days = 10950
					}
				}
				any_owned_province = {
					has_province_modifier = tributary_overlord_trading_port
				}
			}
			save_event_target_as = tributary_criminal_country
			clr_country_flag = tributary_harbored_criminals
		}
	}
	option = {
		name = "tributary_events.7.a"
		add_prestige = -5
		event_target:tributary_criminal_country = {
			country_event = {
				id = tributary_events.8
			}
		}
	}
	option = {
		name = "tributary_events.7.b"
		add_prestige = -10
		add_legitimacy = -5
		add_horde_unity = -5
		add_devotion = -5
		add_republican_tradition = -2.5
	}
}
country_event = {
	id = tributary_events.8
	title = tributary_events.8.t
	desc = tributary_events.8.d
	picture = GIFTS_TO_EMPEROR_eventPicture
	is_triggered_only = yes
	mean_time_to_happen = {
		days = 1
	}
	trigger = {
		has_dlc = "Mandate of Heaven"
		AND = {
			OR = {
				is_subject_of_type = tributary_state
				is_subject_of_type = close_tributary_state
			}
		}
		num_of_ports = 1
		overlord = {
			can_be_overlord = tributary_state
		}
	}
	option = {
		name = "tributary_events.8.a"
		add_years_of_income = -0.5
		overlord = {
			add_opinion = {
				who = ROOT
				modifier = tributary_stopped_smugglers
			}
			add_trust = {
				who = ROOT
				value = 10
			}
			country_event = {
				id = tributary_events.20
			}
		}
		random_owned_province = {
			limit = {
				has_province_modifier = tributary_overlord_trading_port
			}
			remove_province_modifier = tributary_overlord_trading_port
		}
	}
	option = {
		name = "tributary_events.8.b"
		overlord = {
			add_opinion = {
				who = ROOT
				modifier = tributary_harbored_criminals
			}
			country_event = {
				id = tributary_events.21
			}
		}
		random_owned_province = {
			limit = {
				has_province_modifier = tributary_overlord_trading_port
			}
			if = {
				limit = {
					has_province_modifier = urban_development_efforts
				}
				extend_province_modifier = {
					name = urban_development_efforts
					duration = 3625
				}
			}
			else = {
				add_province_modifier = {
					name = urban_development_efforts
					duration = 3625
				}
			}
			remove_province_modifier = tributary_overlord_trading_port
		}
	}
}
country_event = {
	id = tributary_events.9
	title = tributary_events.9.t
	desc = tributary_events.9.d
	picture = MERITOCRACY_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		can_be_overlord = tributary_state
		OR = {
			AND = {
				has_country_modifier = title_5
				calc_true_if = {
					all_subject_country = {
						is_subject_of_type = tributary_state
					}
					amount = 6
				}
			}
			AND = {
				has_country_modifier = title_6
				calc_true_if = {
					all_subject_country = {
						is_subject_of_type = tributary_state
					}
					amount = 10
				}
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	option = {
		name = "tributary_events.9.a"
		add_dip_power = -50
	}
	option = {
		name = "tributary_events.9.b"
		add_years_of_income = -0.33
	}
}
country_event = {
	id = tributary_events.10
	title = tributary_events.10.t
	desc = tributary_events.10.d
	picture = WOKOU_INCIDENT_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					is_capital = yes
				}
				save_event_target_as = ningbo_province
			}
			random_owned_province = {
				limit = {
					has_port = no
					is_in_capital_area = yes
				}
				save_event_target_as = ningbo_province
			}
			random_owned_province = {
				limit = {
					has_port = yes
					is_in_capital_area = yes
				}
				save_event_target_as = ningbo_province
			}
			random_owned_province = {
				limit = {
					is_capital = no
					has_port = yes
					is_in_capital_area = yes
				}
				save_event_target_as = ningbo_province
			}
			random_subject_country = {
				limit = {
					AND = {
						OR = {
							is_subject_of_type = tributary_state
							is_subject_of_type = close_tributary_state
						}
					}
					OR = {
						AND = {
							government = monarchy
							NOT = {
								legitimacy_or_horde_unity = 80
							}
						}
						AND = {
							government = republic
							NOT = {
								republican_tradition = 80
							}
						}
					}
				}
				save_event_target_as = ningbo_country
			}
		}
	}
	trigger = {
		has_dlc = "Mandate of Heaven"
		can_be_overlord = tributary_state
		any_subject_country = {
			AND = {
				OR = {
					is_subject_of_type = tributary_state
					is_subject_of_type = close_tributary_state
				}
			}
			OR = {
				AND = {
					government = monarchy
					NOT = {
						legitimacy_or_horde_unity = 80
					}
				}
				AND = {
					government = republic
					NOT = {
						republican_tradition = 80
					}
				}
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	option = {
		name = "tributary_events.10.a"
		add_adm_power = 15
		event_target:ningbo_country = {
			country_event = {
				id = tributary_events.11
			}
		}
	}
	option = {
		name = "tributary_events.10.b"
		add_dip_power = 50
	}
}
country_event = {
	id = tributary_events.11
	title = tributary_events.11.t
	desc = tributary_events.11.d
	picture = WOKOU_INCIDENT_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			set_variable = {
				which = nobles_loyalty_removed_a
				value = 5
			}
			set_variable = {
				which = nobles_loyalty_added_a
				value = 5
			}
			set_variable = {
				which = burghers_loyalty_removed_a
				value = 5
			}
			set_variable = {
				which = burghers_loyalty_added_a
				value = 5
			}
		}
	}
	option = {
		name = "tributary_events.11.a"
		FROM = {
			random_active_trade_node = {
				limit = {
					NOT = {
						has_trade_modifier = {
							who = ROOT
							name = tributary_soured_relations
						}
					}
				}
				add_trade_modifier = {
					who = ROOT
					duration = 5475
					power = -10
					key = tributary_soured_relations
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_greater_nobles_weight_share
					value = 0.05
				}
				OR = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						which = estate_lesser_nobles_weight_share
					}
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.10
					}
				}
			}
			custom_tooltip = t_estate_greater_nobles_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = greater_nobles_loyalty_added
					value = 0
				}
				set_variable = {
					which = greater_nobles_loyalty_added
					which = nobles_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 64
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 32
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 16
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 8
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 4
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 2
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 1
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_greater_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_greater_nobles_loyalty
						}
						set_variable = {
							which = estate_greater_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_lesser_nobles_weight_share
					value = 0.15
				}
				OR = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						which = estate_greater_nobles_weight_share
					}
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.25
					}
				}
			}
			custom_tooltip = t_estate_lesser_nobles_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = lesser_nobles_loyalty_added
					value = 0
				}
				set_variable = {
					which = lesser_nobles_loyalty_added
					which = nobles_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 64
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 32
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 16
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 8
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 4
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 2
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 1
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_lesser_nobles_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = lesser_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_lesser_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_lesser_nobles_loyalty
						}
						set_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_burghers_weight_share
					value = 0.01
				}
			}
			custom_tooltip = estate_burghers_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = burghers_loyalty_removed
					value = 0
				}
				set_variable = {
					which = burghers_loyalty_removed
					which = burghers_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -64
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -32
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -16
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -8
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -4
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -2
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -1
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_burghers_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_burghers_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_burghers_loyalty
						}
						set_variable = {
							which = estate_burghers_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
	}
	option = {
		name = "tributary_events.11.b"
		add_years_of_income = -1
		hidden_effect = {
			export_to_variable = {
				which = money_to_give
				value = years_of_income
				who = ROOT
			}
		}
		FROM = {
			country_event = {
				id = tributary_events.12
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_greater_nobles_weight_share
					value = 0.05
				}
				OR = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						which = estate_lesser_nobles_weight_share
					}
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.10
					}
				}
			}
			custom_tooltip = t_estate_greater_nobles_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = greater_nobles_loyalty_removed
					value = 0
				}
				set_variable = {
					which = greater_nobles_loyalty_removed
					which = nobles_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -64
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -32
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -16
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -8
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -4
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -2
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -1
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_greater_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_greater_nobles_loyalty
						}
						set_variable = {
							which = estate_greater_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_lesser_nobles_weight_share
					value = 0.15
				}
				OR = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						which = estate_greater_nobles_weight_share
					}
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.25
					}
				}
			}
			custom_tooltip = t_estate_lesser_nobles_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = lesser_nobles_loyalty_removed
					value = 0
				}
				set_variable = {
					which = lesser_nobles_loyalty_removed
					which = nobles_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -64
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -32
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -16
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -8
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -4
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -2
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -1
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = lesser_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_lesser_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_lesser_nobles_loyalty
						}
						set_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_burghers_weight_share
					value = 0.01
				}
			}
			custom_tooltip = estate_burghers_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = burghers_loyalty_added
					value = 0
				}
				set_variable = {
					which = burghers_loyalty_added
					which = burghers_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 64
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 32
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 16
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 8
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 4
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 2
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 1
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_burghers_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_burghers_loyalty
						}
						set_variable = {
							which = estate_burghers_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
	}
}
country_event = {
	id = tributary_events.12
	title = tributary_events.12.t
	desc = tributary_events.12.d
	picture = WOKOU_INCIDENT_eventPicture
	is_triggered_only = yes
	option = {
		name = "tributary_events.12.a"
		custom_tooltip = tributary_events.12.a.tt
		FROM = {
			PREV = {
				set_variable = {
					which = money_to_give
					which = PREV
				}
			}
			set_variable = {
				which = money_to_give
				value = 0
			}
		}
		set_variable = {
			which = ducat_gain
			which = money_to_give
		}
		while = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 65536
				}
			}
			add_treasury = 65536
			subtract_variable = {
				which = ducat_gain
				value = 65536
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 32768
				}
			}
			add_treasury = 32768
			subtract_variable = {
				which = ducat_gain
				value = 32768
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 16384
				}
			}
			add_treasury = 16384
			subtract_variable = {
				which = ducat_gain
				value = 16384
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 8192
				}
			}
			add_treasury = 8192
			subtract_variable = {
				which = ducat_gain
				value = 8192
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 4096
				}
			}
			add_treasury = 4096
			subtract_variable = {
				which = ducat_gain
				value = 4096
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 2048
				}
			}
			add_treasury = 2048
			subtract_variable = {
				which = ducat_gain
				value = 2048
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 1024
				}
			}
			add_treasury = 1024
			subtract_variable = {
				which = ducat_gain
				value = 1024
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 512
				}
			}
			add_treasury = 512
			subtract_variable = {
				which = ducat_gain
				value = 512
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 256
				}
			}
			add_treasury = 256
			subtract_variable = {
				which = ducat_gain
				value = 256
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 128
				}
			}
			add_treasury = 128
			subtract_variable = {
				which = ducat_gain
				value = 128
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 64
				}
			}
			add_treasury = 64
			subtract_variable = {
				which = ducat_gain
				value = 64
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 32
				}
			}
			add_treasury = 32
			subtract_variable = {
				which = ducat_gain
				value = 32
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 16
				}
			}
			add_treasury = 16
			subtract_variable = {
				which = ducat_gain
				value = 16
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 8
				}
			}
			add_treasury = 8
			subtract_variable = {
				which = ducat_gain
				value = 8
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 4
				}
			}
			add_treasury = 4
			subtract_variable = {
				which = ducat_gain
				value = 4
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 2
				}
			}
			add_treasury = 2
			subtract_variable = {
				which = ducat_gain
				value = 2
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 1
				}
			}
			add_treasury = 1
			subtract_variable = {
				which = ducat_gain
				value = 1
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 0.5
				}
			}
			add_treasury = 0.5
			subtract_variable = {
				which = ducat_gain
				value = 0.5
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 0.25
				}
			}
			add_treasury = 0.25
			subtract_variable = {
				which = ducat_gain
				value = 0.25
			}
		}
		if = {
			limit = {
				check_variable = {
					which = ducat_gain
					value = 0.125
				}
			}
			add_treasury = 0.125
			subtract_variable = {
				which = ducat_gain
				value = 0.125
			}
		}
		set_variable = {
			which = ducat_gain
			value = 0
		}
		set_variable = {
			which = money_to_give
			value = 0
		}
	}
}
country_event = {
	id = tributary_events.13
	title = tributary_events.13.t
	desc = tributary_events.13.d
	picture = TRIBUTARY_FLEET_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		can_be_overlord = tributary_state
		NOT = {
			has_country_modifier = tributary_smuggling_ring_overlord
		}
		any_subject_country = {
			is_subject_of_type = tributary_state
			NOT = {
				has_country_modifier = tributary_smuggling_ring_subject
			}
			OR = {
				NOT = {
					has_country_flag = tributary_smugglers_happened
				}
				had_country_flag = {
					flag = tributary_smugglers_happened
					days = 5475
				}
			}
			any_owned_province = {
				OR = {
					development = 15
					AND = {
						NOT = {
							trade_goods = wool
						}
						NOT = {
							trade_goods = copper
						}
						NOT = {
							trade_goods = fish
						}
						NOT = {
							AND = {
								OR = {
									trade_goods = wheat
									trade_goods = rice
									trade_goods = millet
									trade_goods = maize
								}
							}
						}
					}
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_subject_country = {
				limit = {
					is_subject_of_type = tributary_state
					NOT = {
						has_country_modifier = tributary_smuggling_ring_subject
					}
					OR = {
						NOT = {
							has_country_flag = tributary_smugglers_happened
						}
						had_country_flag = {
							flag = tributary_smugglers_happened
							days = 5475
						}
					}
					any_owned_province = {
						OR = {
							development = 15
							AND = {
								NOT = {
									trade_goods = wool
								}
								NOT = {
									trade_goods = copper
								}
								NOT = {
									trade_goods = fish
								}
								NOT = {
									AND = {
										OR = {
											trade_goods = wheat
											trade_goods = rice
											trade_goods = millet
											trade_goods = maize
										}
									}
								}
							}
						}
					}
				}
				save_event_target_as = exotic_tributary
			}
			set_variable = {
				which = burghers_loyalty_removed_a
				value = 5
			}
			set_variable = {
				which = burghers_loyalty_added_a
				value = 5
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	option = {
		name = "tributary_events.13.a"
		add_corruption = 1
		event_target:exotic_tributary = {
			country_event = {
				id = tributary_events.15
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_burghers_weight_share
					value = 0.01
				}
			}
			custom_tooltip = estate_burghers_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = burghers_loyalty_removed
					value = 0
				}
				set_variable = {
					which = burghers_loyalty_removed
					which = burghers_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -64
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -32
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -16
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -8
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -4
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -2
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -1
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_burghers_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_burghers_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_burghers_loyalty
						}
						set_variable = {
							which = estate_burghers_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		add_country_modifier = {
			name = "tributary_smuggling_ring_overlord"
			duration = 5475
		}
	}
	option = {
		name = "tributary_events.13.b"
		add_legitimacy = 5
		add_devotion = 5
		add_horde_unity = 5
		add_republican_tradition = 2.5
		if = {
			limit = {
				check_variable = {
					which = estate_burghers_weight_share
					value = 0.01
				}
			}
			custom_tooltip = estate_burghers_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = burghers_loyalty_added
					value = 0
				}
				set_variable = {
					which = burghers_loyalty_added
					which = burghers_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 64
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 32
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 16
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 8
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 4
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 2
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 1
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_burghers_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_burghers_loyalty
						}
						set_variable = {
							which = estate_burghers_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		event_target:exotic_tributary = {
			country_event = {
				id = tributary_events.14
			}
		}
	}
}
country_event = {
	id = tributary_events.14
	title = tributary_events.14.t
	desc = tributary_events.14.d
	picture = TRIBUTARY_FLEET_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			set_country_flag = tributary_smugglers_happened
			set_variable = {
				which = burghers_loyalty_removed_a
				value = 5
			}
			set_variable = {
				which = burghers_loyalty_added_a
				value = 5
			}
		}
	}
	option = {
		name = "tributary_events.14.a"
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = tributary_stopped_smugglers
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_burghers_weight_share
					value = 0.01
				}
			}
			custom_tooltip = estate_burghers_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = burghers_loyalty_removed
					value = 0
				}
				set_variable = {
					which = burghers_loyalty_removed
					which = burghers_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -64
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -32
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -16
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -8
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -4
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -2
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -1
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_burghers_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_burghers_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_burghers_loyalty
						}
						set_variable = {
							which = estate_burghers_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
	}
	option = {
		name = "tributary_events.14.b"
		add_corruption = 1
		add_country_modifier = {
			name = "tributary_smuggling_ring_subject"
			duration = 5475
		}
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = tributary_aiding_smugglers
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_burghers_weight_share
					value = 0.01
				}
			}
			custom_tooltip = estate_burghers_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = burghers_loyalty_added
					value = 0
				}
				set_variable = {
					which = burghers_loyalty_added
					which = burghers_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 64
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 32
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 16
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 8
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 4
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 2
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 1
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_burghers_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_burghers_loyalty
						}
						set_variable = {
							which = estate_burghers_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
	}
}
country_event = {
	id = tributary_events.15
	title = tributary_events.15.t
	desc = tributary_events.15.d
	picture = TRIBUTARY_FLEET_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			set_ruler_flag = tributary_smugglers_happened
		}
	}
	option = {
		name = "tributary_events.15.a"
		add_country_modifier = {
			name = "tributary_smuggling_ring_subject"
			duration = 3650
		}
	}
}
country_event = {
	id = tributary_events.16
	title = tributary_events.16.t
	desc = tributary_events.16.d
	picture = WOKOU_INCIDENT_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		AND = {
			OR = {
				is_subject_of_type = tributary_state
				is_subject_of_type = close_tributary_state
			}
		}
		overlord = {
			can_be_overlord = tributary_state
		}
		any_owned_province = {
			NOT = {
				has_province_modifier = tributary_overlord_refugees
			}
			OR = {
				development = 10
				is_capital = yes
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	option = {
		name = "tributary_events.16.a"
		random_owned_province = {
			limit = {
				OR = {
					is_capital = yes
					development = 10
				}
			}
			add_province_modifier = {
				name = "tributary_overlord_refugees"
				duration = 3650
			}
		}
	}
	option = {
		name = "tributary_events.16.b"
		add_legitimacy = 10
		add_horde_unity = 10
		add_devotion = 10
		add_republican_tradition = 5
		overlord = {
			add_opinion = {
				who = ROOT
				modifier = tributary_gave_up_political_refugees
			}
		}
	}
}
country_event = {
	id = tributary_events.17
	title = tributary_events.17.t
	desc = tributary_events.17.d
	picture = GIFTS_TO_EMPEROR_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		religion_group = taoic
		can_be_overlord = tributary_state
		any_subject_country = {
			AND = {
				OR = {
					is_subject_of_type = tributary_state
					is_subject_of_type = close_tributary_state
				}
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
			if = {
				limit = {
					num_of_ports = 1
				}
				random_list = {
					25 = {
						set_country_flag = eunuch_administrators
					}
					25 = {
						set_country_flag = eunuch_general
					}
					25 = {
						set_country_flag = eunuch_advisor
					}
					25 = {
						set_country_flag = eunuch_admiral
					}
				}
				else = {
					random_list = {
						33 = {
							set_country_flag = eunuch_administrators
						}
						33 = {
							set_country_flag = eunuch_general
						}
						33 = {
							set_country_flag = eunuch_advisor
						}
					}
				}
			}
			random_subject_country = {
				limit = {
					AND = {
						OR = {
							is_subject_of_type = tributary_state
							is_subject_of_type = close_tributary_state
						}
					}
				}
				save_event_target_as = tributary_country
			}
		}
	}
	option = {
		name = "tributary_events.17.a"
		trigger_switch = {
			on_trigger = has_country_flag
			eunuch_administrators = {
				add_adm_power = 50
				clr_country_flag = eunuch_administrators
			}
			eunuch_general = {
				create_general = {
					tradition = 40
				}
				clr_country_flag = eunuch_general
			}
			eunuch_advisor = {
				define_advisor = {
					type = master_of_mint
					skill = 2
					discount = yes
					culture = event_target:tributary_country
					religion = event_target:tributary_country
				}
				clr_country_flag = eunuch_advisor
			}
			eunuch_admiral = {
				create_admiral = {
					tradition = 40
				}
				clr_country_flag = eunuch_admiral
			}
		}
	}
}
country_event = {
	id = tributary_events.18
	title = tributary_events.18.t
	desc = tributary_events.18.d
	picture = WOKOU_INCIDENT_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		num_of_ports = 1
		can_be_overlord = tributary_state
		NOT = {
			has_country_modifier = tributary_mission_piracy
		}
		any_subject_country = {
			is_subject_of_type = tributary_state
			num_of_ports = 1
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	option = {
		name = "tributary_events.18.a"
		add_years_of_income = -0.5
		add_country_modifier = {
			name = tributary_mission_piracy
			duration = 1825
		}
	}
	option = {
		name = "tributary_events.18.b"
		add_country_modifier = {
			name = tributary_mission_piracy
			duration = 3650
		}
	}
}
country_event = {
	id = tributary_events.19
	title = tributary_events.19.t
	desc = tributary_events.19.d
	picture = GIFTS_TO_EMPEROR_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		can_be_overlord = tributary_state
		any_subject_country = {
			is_subject_of_type = close_tributary_state
			ROOT = {
				trust = {
					who = PREV
					value = 85
				}
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
			random_subject_country = {
				limit = {
					ROOT = {
						trust = {
							who = PREV
							value = 85
						}
					}
				}
				save_event_target_as = tributary_loyal
			}
		}
	}
	option = {
		name = "tributary_events.19.a"
		add_years_of_income = -0.75
		event_target:tributary_loyal = {
			country_event = {
				id = tributary_events.22
			}
			add_opinion = {
				who = ROOT
				modifier = tributary_paid_for_service
			}
		}
	}
	option = {
		name = "tributary_events.19.b"
		add_legitimacy = -10
		add_horde_unity = -10
		add_devotion = -10
		add_republican_tradition = -5
		every_subject_country = {
			limit = {
				AND = {
					OR = {
						is_subject_of_type = tributary_state
						is_subject_of_type = close_tributary_state
					}
				}
			}
			add_opinion = {
				who = ROOT
				modifier = tributary_ungrateful_overlord
			}
		}
	}
}
country_event = {
	id = tributary_events.20
	title = tributary_events.20.t
	desc = tributary_events.20.d
	picture = GIFTS_TO_EMPEROR_eventPicture
	is_triggered_only = yes
	option = {
		name = "tributary_events.20.a"
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = tributary_stopped_smugglers
			}
		}
	}
}
country_event = {
	id = tributary_events.21
	title = tributary_events.21.t
	desc = tributary_events.21.d
	picture = GIFTS_TO_EMPEROR_eventPicture
	is_triggered_only = yes
	immediate = {
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = tributary_harbored_criminals
			}
		}
	}
	option = {
		name = "tributary_events.21.a"
		trigger = {
			FROM = {
				is_subject_of_type = close_tributary_state
			}
		}
		hidden_effect = {
			free_vassal = FROM
		}
		create_subject = {
			subject = FROM
			subject_type = tributary_state
		}
	}
	option = {
		name = "tributary_events.21.b"
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = tributary_harbored_criminals
			}
		}
	}
}
country_event = {
	id = tributary_events.22
	title = tributary_events.22.t
	desc = tributary_events.22.d
	picture = GIFTS_TO_EMPEROR_eventPicture
	is_triggered_only = yes
	option = {
		name = "tributary_events.22.a"
		add_years_of_income = 1
		add_legitimacy = 10
		add_horde_unity = 10
		add_devotion = 10
		add_republican_tradition = 5
		FROM = {
			add_opinion = {
				who = ROOT
				modifier = tributary_paid_for_service
			}
		}
	}
}
country_event = {
	id = tributary_events.23
	title = tributary_events.23.t
	desc = tributary_events.23.d
	picture = CHINESE_GENERAL_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		can_be_overlord = tributary_state
		NOT = {
			religion_group = taoic
		}
		any_subject_country = {
			is_subject_of_type = tributary_state
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
			if = {
				limit = {
					num_of_ports = 1
				}
				random_list = {
					25 = {
						set_country_flag = fortune_seekers_officers
					}
					25 = {
						set_country_flag = fortune_seekers_general
					}
					25 = {
						set_country_flag = fortune_seekers_advisor
					}
					25 = {
						set_country_flag = fortune_seekers_admiral
					}
				}
				else = {
					random_list = {
						33 = {
							set_country_flag = fortune_seekers_officers
						}
						33 = {
							set_country_flag = fortune_seekers_general
						}
						33 = {
							set_country_flag = fortune_seekers_advisor
						}
					}
				}
			}
			random_subject_country = {
				limit = {
					is_subject_of_type = tributary_state
				}
				save_event_target_as = tributary_country
			}
		}
	}
	option = {
		name = "tributary_events.23.a"
		trigger_switch = {
			on_trigger = has_country_flag
			fortune_seekers_officers = {
				add_yearly_manpower = 1
				clr_country_flag = fortune_seekers_officers
			}
			fortune_seekers_general = {
				create_general = {
					tradition = 40
				}
				clr_country_flag = fortune_seekers_general
			}
			fortune_seekers_advisor = {
				define_advisor = {
					type = grand_captain
					skill = 2
					discount = yes
					culture = event_target:tributary_country
					religion = event_target:tributary_country
				}
				clr_country_flag = fortune_seekers_advisor
			}
			fortune_seekers_admiral = {
				create_admiral = {
					tradition = 40
				}
				clr_country_flag = fortune_seekers_admiral
			}
		}
	}
}
country_event = {
	id = tributary_events.24
	title = tributary_events.24.t
	desc = tributary_events.24.d
	picture = TRIBUTARY_FLEET_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		AND = {
			OR = {
				is_subject_of_type = tributary_state
				is_subject_of_type = close_tributary_state
			}
		}
		overlord = {
			can_be_overlord = tributary_state
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
			if = {
				limit = {
					num_of_ports = 1
				}
				random_list = {
					20 = {
						set_country_flag = adventurer_officer
					}
					20 = {
						set_country_flag = adventurer_general
					}
					20 = {
						set_country_flag = adventurer_advisor
					}
					20 = {
						set_country_flag = adventurer_statesman
					}
					20 = {
						set_country_flag = adventurer_admiral
					}
				}
				else = {
					random_list = {
						25 = {
							set_country_flag = adventurer_officer
						}
						25 = {
							set_country_flag = adventurer_general
						}
						25 = {
							set_country_flag = adventurer_statesman
						}
						25 = {
							set_country_flag = adventurer_advisor
						}
					}
				}
			}
			overlord = {
				save_event_target_as = overlord_country
			}
		}
	}
	option = {
		name = "tributary_events.24.a"
		trigger_switch = {
			on_trigger = has_country_flag
			adventurer_officer = {
				define_advisor = {
					type = army_reformer
					culture = event_target:overlord_country
					religion = event_target:overlord_country
					skill = 3
					discount = yes
				}
				clr_country_flag = adventurer_officer
			}
			adventurer_general = {
				create_general = {
					tradition = 40
				}
				clr_country_flag = adventurer_general
			}
			adventurer_advisor = {
				define_advisor = {
					type = trader
					skill = 3
					culture = event_target:overlord_country
					religion = event_target:overlord_country
					discount = yes
				}
				clr_country_flag = adventurer_advisor
			}
			adventurer_statesman = {
				define_advisor = {
					type = trader
					skill = 3
					culture = event_target:overlord_country
					religion = event_target:overlord_country
					discount = yes
				}
				clr_country_flag = adventurer_statesman
			}
			adventurer_admiral = {
				create_admiral = {
					tradition = 40
				}
				clr_country_flag = adventurer_admiral
			}
		}
	}
}
country_event = {
	id = tributary_events.25
	title = tributary_events.25.t
	desc = tributary_events.25.d
	picture = CHINESE_GENERAL_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		is_subject_of_type = close_tributary_state
		OR = {
			AND = {
				government = monarchy
				NOT = {
					AND = {
						OR = {
							AND = {
								OR = {
									culture_group = chinese_group
									has_country_flag = barbarian_claimant_china
								}
								has_reform = celestial_empire
							}
							has_reform = celestial_empire_legacy
						}
					}
				}
				NOT = {
					legitimacy_or_horde_unity = 80
				}
			}
			AND = {
				government = republic
				NOT = {
					republican_tradition = 80
				}
			}
			AND = {
				government = theocracy
				NOT = {
					devotion = 80
				}
			}
		}
		num_of_cities = 3
		overlord = {
			can_be_overlord = tributary_state
			NOT = {
				trust = {
					who = PREV
					value = 50
				}
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					is_capital = no
					is_state = yes
				}
				set_province_flag = tributary_supported_pretenders_here
			}
		}
	}
	option = {
		name = "tributary_events.25.a"
		if = {
			limit = {
				government = monarchy
			}
			random_owned_province = {
				limit = {
					has_province_flag = tributary_supported_pretenders_here
				}
				spawn_rebels = {
					type = pretender_rebels
					size = 2
				}
				clr_province_flag = tributary_supported_pretenders_here
			}
		}
		if = {
			limit = {
				government = theocracy
			}
			random_owned_province = {
				limit = {
					has_province_flag = tributary_supported_pretenders_here
				}
				spawn_rebels = {
					type = particularist_rebels
					size = 1
				}
				clr_province_flag = tributary_supported_pretenders_here
			}
		}
		if = {
			limit = {
				government = republic
			}
			random_owned_province = {
				limit = {
					has_province_flag = tributary_supported_pretenders_here
				}
				spawn_rebels = {
					type = revolutionary_rebels
					size = 1
				}
				clr_province_flag = tributary_supported_pretenders_here
			}
		}
	}
	option = {
		name = "tributary_events.25.b"
		add_years_of_income = -1
		overlord = {
			add_trust = {
				who = ROOT
				value = 10
			}
		}
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_province_flag = tributary_supported_pretenders_here
				}
				clr_province_flag = tributary_supported_pretenders_here
			}
		}
	}
}
country_event = {
	id = tributary_events.26
	title = tributary_events.26.t
	desc = tributary_events.26.d
	picture = BORDER_TENSION_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		is_subject_of_type = tributary_state
		overlord = {
			can_be_overlord = tributary_state
			government = tribal
			is_neighbor_of = ROOT
		}
		NOT = {
			has_country_modifier = horde_slave_raid
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	option = {
		name = "tributary_events.26.a"
		add_prestige = -10
		add_country_modifier = {
			name = "horde_slave_raid"
			duration = 1850
		}
	}
}
country_event = {
	id = tributary_events.27
	title = tributary_events.27.t
	desc = tributary_events.27.d
	picture = CHINESE_GENERAL_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Mandate of Heaven"
		is_subject_of_type = tributary_state
		any_country = {
			is_in_war = {
				defender_leader = ROOT
				attacker_leader = THIS
			}
			is_subject_of_type = tributary_state
			overlord = {
				can_be_overlord = tributary_state
				overlord_of = ROOT
				OR = {
					NOT = {
						has_country_flag = factions_meddled_in_tributary
					}
					had_country_flag = {
						flag = factions_meddled_in_tributary
						days = 10950
					}
				}
			}
		}
	}
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
			random_list = {
				33 = {
					set_country_flag = extra_men
				}
				33 = {
					set_country_flag = extra_tradition
				}
				33 = {
					set_country_flag = extra_money
				}
			}
			random_country = {
				limit = {
					is_in_war = {
						defender_leader = ROOT
						attacker_leader = THIS
					}
					is_subject_of_type = tributary_state
					overlord = {
						overlord_of = ROOT
					}
				}
				save_event_target_as = other_tributary_country
			}
		}
	}
	option = {
		name = "tributary_events.27.a"
		custom_tooltip = tributary_events.27.a.tt
		trigger_switch = {
			on_trigger = has_country_flag
			extra_men = {
				add_yearly_manpower = 1
				clr_country_flag = extra_men
			}
			extra_tradition = {
				add_army_tradition = 20
				clr_country_flag = extra_tradition
			}
			extra_money = {
				add_years_of_income = 1
				clr_country_flag = extra_money
			}
		}
		overlord = {
			country_event = {
				id = tributary_events.29
			}
			tooltip = {
				add_trust = {
					who = ROOT
					value = -5
					mutual = yes
				}
			}
		}
		event_target:other_tributary_country = {
			country_event = {
				id = tributary_events.28
			}
		}
	}
	option = {
		name = "tributary_events.27.b"
		hidden_effect = {
			trigger_switch = {
				on_trigger = has_country_flag
				extra_men = {
					clr_country_flag = extra_men
				}
				extra_tradition = {
					clr_country_flag = extra_tradition
				}
				extra_money = {
					clr_country_flag = extra_money
				}
			}
		}
		add_prestige = 10
	}
}
country_event = {
	id = tributary_events.28
	title = tributary_events.28.t
	desc = tributary_events.28.d
	picture = CHINESE_GENERAL_eventPicture
	is_triggered_only = yes
	option = {
		name = "tributary_events.28.a"
		overlord = {
			reverse_add_opinion = {
				who = ROOT
				modifier = overlord_supported_our_enemies
			}
		}
	}
}
country_event = {
	id = tributary_events.29
	title = tributary_events.29.t
	desc = tributary_events.29.d
	picture = GIFTS_TO_EMPEROR_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			set_country_flag = factions_meddled_in_tributary
		}
	}
	option = {
		name = "tributary_events.29.a"
		add_trust = {
			who = FROM
			value = -5
			mutual = yes
		}
	}
}
country_event = {
	id = tributary_events.30
	title = tributary_events.30.t
	desc = tributary_events.30.d
	picture = CHINESE_GENERAL_eventPicture
	trigger = {
		has_dlc = "Mandate of Heaven"
		can_be_overlord = tributary_state
		any_subject_country = {
			AND = {
				OR = {
					is_subject_of_type = tributary_state
					is_subject_of_type = close_tributary_state
				}
			}
			NOT = {
				has_country_modifier = overlord_military_mission
			}
			any_country = {
				is_enemy = ROOT
				defensive_war_with = PREV
			}
		}
		OR = {
			NOT = {
				has_country_flag = overlord_gave_military_mission
			}
			had_country_flag = {
				flag = overlord_gave_military_mission
				days = 10950
			}
		}
	}
	mean_time_to_happen = {
		months = 300
		modifier = {
			factor = 0.66
			NOT = {
				is_at_war = yes
			}
		}
		modifier = {
			factor = 0.5
			any_subject_country = {
				AND = {
					OR = {
						is_subject_of_type = tributary_state
						is_subject_of_type = close_tributary_state
					}
				}
				NOT = {
					has_country_modifier = overlord_military_mission
				}
				any_country = {
					is_enemy = ROOT
					defensive_war_with = PREV
				}
				NOT = {
					manpower = 1
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_subject_country = {
				limit = {
					AND = {
						OR = {
							is_subject_of_type = tributary_state
							is_subject_of_type = close_tributary_state
						}
					}
					NOT = {
						has_country_modifier = overlord_military_mission
					}
					any_country = {
						is_enemy = ROOT
						defensive_war_with = PREV
					}
				}
				save_event_target_as = tributary_warring_rival
				random_country = {
					limit = {
						is_enemy = ROOT
						defensive_war_with = PREV
					}
					save_event_target_as = overlord_rival
				}
			}
			set_country_flag = overlord_gave_military_mission
		}
	}
	option = {
		name = "tributary_events.30.a"
		hidden_effect = {
			event_target:tributary_warring_rival = {
				set_country_flag = overlord_all_the_support
				country_event = {
					id = tributary_events.31
				}
			}
		}
		add_mil_power = -50
		add_yearly_manpower = -1
		add_years_of_income = -0.5
		event_target:tributary_warring_rival = {
			add_opinion = {
				who = ROOT
				modifier = overlord_military_aid
			}
		}
		tooltip = {
			event_target:tributary_warring_rival = {
				add_yearly_manpower = 2
				add_years_of_income = 1
				overlord = {
					add_trust = {
						who = ROOT
						value = 10
						mutual = yes
					}
				}
				add_country_modifier = {
					name = overlord_military_mission
					duration = 7300
				}
			}
		}
		ai_chance = {
			factor = 20
			modifier = {
				factor = 0
				NOT = {
					manpower = 0.2
					years_of_income = 0.3
				}
			}
			modifier = {
				factor = 0
				num_of_loans = 1
			}
			modifier = {
				factor = 0
				AND = {
					is_at_war = yes
					NOT = {
						war_score = -15
					}
				}
			}
			modifier = {
				factor = 0.5
				is_at_war = yes
			}
			modifier = {
				factor = 0.5
				AND = {
					NOT = {
						manpower = 0.4
					}
					years_of_income = 0.3
				}
			}
			modifier = {
				factor = 2
				AND = {
					manpower = 0.6
					years_of_income = 0.3
				}
			}
			modifier = {
				factor = 2
				AND = {
					manpower = 0.8
					years_of_income = 0.3
				}
			}
			modifier = {
				factor = 1.5
				AND = {
					manpower = 0.6
					years_of_income = 0.5
				}
			}
			modifier = {
				factor = 2
				AND = {
					manpower = 0.8
					years_of_income = 1
				}
			}
		}
	}
	option = {
		name = "tributary_events.30.b"
		hidden_effect = {
			event_target:tributary_warring_rival = {
				set_country_flag = overlord_manpower_support
				country_event = {
					id = tributary_events.31
				}
			}
		}
		add_mil_power = -50
		add_yearly_manpower = -1
		event_target:tributary_warring_rival = {
			add_opinion = {
				who = ROOT
				modifier = overlord_military_aid
			}
		}
		tooltip = {
			event_target:tributary_warring_rival = {
				add_yearly_manpower = 2
				overlord = {
					add_trust = {
						who = ROOT
						value = 10
						mutual = yes
					}
				}
				add_country_modifier = {
					name = overlord_military_mission
					duration = 7300
				}
			}
		}
		ai_chance = {
			factor = 25
			modifier = {
				factor = 0
				NOT = {
					manpower = 0.2
				}
			}
			modifier = {
				factor = 0
				AND = {
					is_at_war = yes
					NOT = {
						war_score = -15
					}
				}
			}
			modifier = {
				factor = 0.5
				is_at_war = yes
			}
			modifier = {
				factor = 0.5
				NOT = {
					manpower = 0.4
				}
			}
			modifier = {
				factor = 2
				AND = {
					manpower = 0.6
					NOT = {
						years_of_income = 0.3
					}
				}
			}
			modifier = {
				factor = 2
				AND = {
					manpower = 0.8
					NOT = {
						years_of_income = 0.3
					}
				}
			}
		}
	}
	option = {
		name = "tributary_events.30.c"
		hidden_effect = {
			event_target:tributary_warring_rival = {
				set_country_flag = overlord_funding_support
				country_event = {
					id = tributary_events.31
				}
			}
		}
		add_mil_power = -50
		add_years_of_income = -0.5
		event_target:tributary_warring_rival = {
			add_opinion = {
				who = ROOT
				modifier = overlord_military_aid
			}
		}
		tooltip = {
			event_target:tributary_warring_rival = {
				add_years_of_income = 1
				overlord = {
					add_trust = {
						who = ROOT
						value = 10
						mutual = yes
					}
				}
				add_country_modifier = {
					name = overlord_military_mission
					duration = 7300
				}
			}
		}
		ai_chance = {
			factor = 25
			modifier = {
				factor = 0
				NOT = {
					years_of_income = 0.3
				}
			}
			modifier = {
				factor = 0
				num_of_loans = 1
			}
			modifier = {
				factor = 0
				AND = {
					is_at_war = yes
					NOT = {
						war_score = -15
					}
				}
			}
			modifier = {
				factor = 0.5
				is_at_war = yes
			}
			modifier = {
				factor = 0.5
				NOT = {
					years_of_income = 0.5
				}
			}
			modifier = {
				factor = 2
				years_of_income = 1
			}
		}
	}
	option = {
		name = "tributary_events.30.e"
		hidden_effect = {
			event_target:tributary_warring_rival = {
				set_country_flag = overlord_military_mission
				country_event = {
					id = tributary_events.31
				}
			}
		}
		add_mil_power = -50
		event_target:tributary_warring_rival = {
			add_opinion = {
				who = ROOT
				modifier = overlord_military_aid
			}
		}
		tooltip = {
			event_target:tributary_warring_rival = {
				overlord = {
					add_trust = {
						who = ROOT
						value = 10
						mutual = yes
					}
				}
				add_country_modifier = {
					name = overlord_military_mission
					duration = 7300
				}
			}
		}
		ai_chance = {
			factor = 25
		}
	}
	option = {
		name = "tributary_events.30.f"
		add_prestige = -5
		ai_chance = {
			factor = 5
		}
	}
}
country_event = {
	id = tributary_events.31
	title = tributary_events.31.t
	desc = {
		trigger = {
			has_country_flag = overlord_military_mission
		}
		desc = "tributary_events.31.d.a"
	}
	desc = {
		trigger = {
			has_country_flag = overlord_funding_support
		}
		desc = "tributary_events.31.d.b"
	}
	desc = {
		trigger = {
			has_country_flag = overlord_manpower_support
		}
		desc = "tributary_events.31.d.c"
	}
	desc = {
		trigger = {
			has_country_flag = overlord_all_the_support
		}
		desc = "tributary_events.31.d.d"
	}
	picture = CHINESE_GENERAL_eventPicture
	is_triggered_only = yes
	option = {
		name = "tributary_events.31.a"
		trigger_switch = {
			on_trigger = has_country_flag
			overlord_all_the_support = {
				add_yearly_manpower = 2
				add_years_of_income = 1
				overlord = {
					add_trust = {
						who = ROOT
						value = 10
						mutual = yes
					}
				}
				add_country_modifier = {
					name = overlord_military_mission
					duration = 7300
				}
				clr_country_flag = overlord_all_the_support
			}
			overlord_manpower_support = {
				add_yearly_manpower = 2
				overlord = {
					add_trust = {
						who = ROOT
						value = 10
						mutual = yes
					}
				}
				add_country_modifier = {
					name = overlord_military_mission
					duration = 7300
				}
				clr_country_flag = overlord_manpower_support
			}
			overlord_funding_support = {
				add_years_of_income = 1
				overlord = {
					add_trust = {
						who = ROOT
						value = 10
						mutual = yes
					}
				}
				add_country_modifier = {
					name = overlord_military_mission
					duration = 7300
				}
				clr_country_flag = overlord_funding_support
			}
			overlord_military_mission = {
				overlord = {
					add_trust = {
						who = ROOT
						value = 10
						mutual = yes
					}
				}
				add_country_modifier = {
					name = overlord_military_mission
					duration = 7300
				}
				clr_country_flag = overlord_military_mission
			}
		}
		add_opinion = {
			who = FROM
			modifier = overlord_military_aid
		}
	}
}
country_event = {
	id = tributary_events.32
	title = tributary_events.32.t
	desc = tributary_events.32.d
	picture = IMPERIAL_SEAL_eventPicture
	is_triggered_only = yes
	trigger = {
		has_country_modifier = overlord_military_mission
		overlord = {
			NOT = {
				any_rival_country = {
					defensive_war_with = ROOT
				}
			}
		}
	}
	option = {
		name = "tributary_events.32.a"
		remove_country_modifier = overlord_military_mission
	}
}
