country_event = {
	id = flavor_eng.0001
	title = "flavor_eng.0001.name"
	desc = "flavor_eng.0001.desc"
	picture = REFORM_eventPicture
	trigger = {
		has_country_modifier = longbowmen_modifier
		mil_tech = 15
	}
	is_triggered_only = yes
	option = {
		name = "flavor_eng.0001.opta"
		remove_country_modifier = longbowmen_modifier
	}
}
country_event = {
	id = flavor_eng.9105
	title = "flavor_eng.EVTNAME9105"
	desc = "flavor_eng.EVTDESC9105"
	picture = REFORM_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1485
		NOT = {
			is_year = 1509
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
	}
	mean_time_to_happen = {
		months = 72
	}
	immediate = {
		hidden_effect = {
			set_variable = {
				which = nobles_loyalty_removed_a
				value = 5
			}
			set_variable = {
				which = nobles_loyalty_added_a
				value = 5
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTA9105"
		ai_chance = {
			factor = 75
		}
		if = {
			limit = {
				check_variable = {
					which = estate_greater_nobles_weight_share
					value = 0.05
				}
				OR = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						which = estate_lesser_nobles_weight_share
					}
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.10
					}
				}
			}
			custom_tooltip = t_estate_greater_nobles_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = greater_nobles_loyalty_removed
					value = 0
				}
				set_variable = {
					which = greater_nobles_loyalty_removed
					which = nobles_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -64
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -32
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -16
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -8
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -4
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -2
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -1
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_greater_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_greater_nobles_loyalty
						}
						set_variable = {
							which = estate_greater_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_lesser_nobles_weight_share
					value = 0.15
				}
				OR = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						which = estate_greater_nobles_weight_share
					}
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.25
					}
				}
			}
			custom_tooltip = t_estate_lesser_nobles_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = lesser_nobles_loyalty_removed
					value = 0
				}
				set_variable = {
					which = lesser_nobles_loyalty_removed
					which = nobles_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -64
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -32
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -16
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -8
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -4
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -2
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -1
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = lesser_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_lesser_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_lesser_nobles_loyalty
						}
						set_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		add_years_of_income = -0.5
		add_country_modifier = {
			name = justices_of_peace
			duration = -1
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9105"
		ai_chance = {
			factor = 25
		}
		if = {
			limit = {
				check_variable = {
					which = estate_greater_nobles_weight_share
					value = 0.05
				}
				OR = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						which = estate_lesser_nobles_weight_share
					}
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.10
					}
				}
			}
			custom_tooltip = t_estate_greater_nobles_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = greater_nobles_loyalty_added
					value = 0
				}
				set_variable = {
					which = greater_nobles_loyalty_added
					which = nobles_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 64
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 32
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 16
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 8
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 4
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 2
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 1
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_greater_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_greater_nobles_loyalty
						}
						set_variable = {
							which = estate_greater_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_lesser_nobles_weight_share
					value = 0.15
				}
				OR = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						which = estate_greater_nobles_weight_share
					}
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.25
					}
				}
			}
			custom_tooltip = t_estate_lesser_nobles_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = lesser_nobles_loyalty_added
					value = 0
				}
				set_variable = {
					which = lesser_nobles_loyalty_added
					which = nobles_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 64
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 32
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 16
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 8
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 4
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 2
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 1
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_lesser_nobles_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = lesser_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_lesser_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_lesser_nobles_loyalty
						}
						set_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
	}
}
country_event = {
	id = flavor_eng.9106
	title = "flavor_eng.EVTNAME9106"
	desc = "flavor_eng.EVTDESC9106"
	picture = COURT_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1485
		NOT = {
			is_year = 1550
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		is_at_war = no
	}
	mean_time_to_happen = {
		years = 50
	}
	option = {
		name = "flavor_eng.EVTOPTA9106"
		ai_chance = {
			factor = 75
		}
		add_adm_power = 50
		random_owned_province = {
			add_province_modifier = {
				name = "nobles_organizing"
				duration = 1825
			}
			hidden_effect = {
				set_variable = {
					which = added_unrest
					value = 5
				}
				hidden_effect = {
					province_event = {
						id = stacking_unrest.002
					}
				}
			}
			custom_tooltip = added_unrest_5
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9106"
		ai_chance = {
			factor = 25
		}
		add_adm_power = -25
	}
}
country_event = {
	id = flavor_eng.9107
	title = "flavor_eng.EVTNAME9107"
	desc = "flavor_eng.EVTDESC9107"
	picture = LIBERUM_VETO_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1470
		NOT = {
			is_year = 1600
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		is_at_war = no
	}
	mean_time_to_happen = {
		years = 50
	}
	option = {
		name = "flavor_eng.EVTOPTA9107"
		ai_chance = {
			factor = 90
		}
		add_country_modifier = {
			name = "eng_court_star_chamber"
			duration = -1
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9107"
		ai_chance = {
			factor = 10
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
	}
}
country_event = {
	id = flavor_eng.9108
	title = "flavor_eng.EVTNAME9108"
	desc = "flavor_eng.EVTDESC9108"
	picture = REFORM_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1509
		NOT = {
			is_year = 1521
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		is_at_war = no
	}
	mean_time_to_happen = {
		years = 25
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					is_capital = no
				}
				set_province_flag = enclosure_movement
			}
			random_owned_province = {
				limit = {
					is_capital = no
					NOT = {
						has_province_flag = enclosure_movement
					}
				}
				set_province_flag = enclosure_movement
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTA9108"
		ai_chance = {
			factor = 75
		}
		capital_scope = {
			if = {
				limit = {
					has_province_modifier = rural_development_efforts
				}
				extend_province_modifier = {
					name = rural_development_efforts
					duration = 3625
				}
			}
			else = {
				add_province_modifier = {
					name = rural_development_efforts
					duration = 3625
				}
			}
		}
		random_list = {
			30 = {}
			40 = {
				custom_tooltip = stability_points_lost_50
				hidden_effect = {
					subtract_variable = {
						which = stability_points
						value = 50
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = stability_points
									value = 0
								}
							}
						}
						add_stability = -1
						country_event = {
							id = POP_Stability.003
						}
						if = {
							limit = {
								is_emperor_of_china = yes
							}
							add_mandate = -5
						}
					}
				}
			}
			30 = {
				add_stability = -1
				hidden_effect = {
					country_event = {
						id = POP_Stability.003
					}
				}
				if = {
					limit = {
						is_emperor_of_china = yes
					}
					add_mandate = -5
				}
			}
		}
		every_owned_province = {
			limit = {
				has_province_flag = enclosure_movement
			}
			add_province_modifier = {
				name = "nobles_organizing"
				duration = 1825
			}
			hidden_effect = {
				set_variable = {
					which = added_unrest
					value = 5
				}
				hidden_effect = {
					province_event = {
						id = stacking_unrest.002
					}
				}
			}
			custom_tooltip = added_unrest_5
			clr_province_flag = enclosure_movement
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9108"
		ai_chance = {
			factor = 25
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
	}
}
country_event = {
	id = flavor_eng.9109
	title = "flavor_eng.EVTNAME9109"
	desc = "flavor_eng.EVTDESC9109"
	picture = POPE_PREACHING_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1530
		NOT = {
			is_year = 1560
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		religion = catholic
		is_female = no
		OR = {
			has_regency = no
			has_consort_regency = yes
		}
		check_variable = {
			which = protestant_population
			value = 15
		}
		PAP = {
			exists = yes
			religion = catholic
		}
		NOT = {
			has_dlc = "Rule Britannia"
		}
	}
	mean_time_to_happen = {
		months = 72
	}
	option = {
		name = "flavor_eng.EVTOPTA9109"
		ai_chance = {
			factor = 75
		}
		change_religion = protestant
		add_treasury = 250
		add_stability = -2
		hidden_effect = {
			country_event = {
				id = POP_Stability.003
			}
		}
		if = {
			limit = {
				is_emperor_of_china = yes
			}
			add_mandate = -10
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9109"
		ai_chance = {
			factor = 25
		}
		PAP = {
			add_opinion = {
				who = ROOT
				modifier = accepted_supremacy_of_rome
			}
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
	}
}
country_event = {
	id = flavor_eng.9113
	title = "flavor_eng.EVTNAME9113"
	desc = "flavor_eng.EVTDESC9113"
	picture = COURT_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1530
		NOT = {
			is_year = 1560
		}
		has_regency = yes
		has_consort_regency = no
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		owns = 246
	}
	mean_time_to_happen = {
		months = 360
		modifier = {
			factor = 0.8
			NOT = {
				legitimacy = 80
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTA9113"
		246 = {
			spawn_rebels = {
				type = pretender_rebels
				size = 2
				leader = "Jane Grey"
				female = yes
			}
		}
		add_stability = -1
		hidden_effect = {
			country_event = {
				id = POP_Stability.003
			}
		}
		if = {
			limit = {
				is_emperor_of_china = yes
			}
			add_mandate = -5
		}
	}
}
country_event = {
	id = flavor_eng.9114
	title = "flavor_eng.EVTNAME9114"
	desc = "flavor_eng.EVTDESC9114"
	picture = COURT_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1500
		NOT = {
			is_year = 1600
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		religion = protestant
		OR = {
			marriage_with = SPA
			junior_union_with = SPA
		}
		SPA = {
			religion = catholic
		}
	}
	mean_time_to_happen = {
		years = 50
		modifier = {
			factor = 0.1
			junior_union_with = SPA
		}
	}
	option = {
		name = "flavor_eng.EVTOPTA9114"
		ai_chance = {
			factor = 15
			modifier = {
				factor = 20
				junior_union_with = SPA
			}
		}
		change_religion = catholic
		SPA = {
			add_opinion = {
				who = ROOT
				modifier = accepted_supremacy_of_rome
			}
		}
		PAP = {
			add_opinion = {
				who = ROOT
				modifier = accepted_supremacy_of_rome
			}
		}
		add_stability = -3
		hidden_effect = {
			country_event = {
				id = POP_Stability.003
			}
		}
		if = {
			limit = {
				is_emperor_of_china = yes
			}
			add_mandate = -15
		}
		add_country_modifier = {
			name = religious_intolerance
			duration = 3650
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9114"
		ai_chance = {
			factor = 85
		}
		SPA = {
			add_opinion = {
				who = ROOT
				modifier = eng_tolerates_religious_freedom
				years = 10
			}
		}
		PAP = {
			add_opinion = {
				who = ROOT
				modifier = eng_tolerates_religious_freedom
			}
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
		add_country_modifier = {
			name = edict_of_tolerance
			duration = 3650
		}
	}
}
country_event = {
	id = flavor_eng.9115
	title = "flavor_eng.EVTNAME9115"
	desc = "flavor_eng.EVTDESC9115"
	picture = MERCHANTS_TALKING_eventPicture
	fire_only_once = yes
	trigger = {
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		is_year = 1540
		NOT = {
			is_year = 1640
		}
		has_discovered = 295
		OR = {
			exists = RUS
			exists = MOS
		}
		295 = {
			OR = {
				owned_by = RUS
				owned_by = MOS
			}
		}
	}
	mean_time_to_happen = {
		months = 300
	}
	option = {
		name = "flavor_eng.EVTOPTA9115"
		295 = {
			add_trade_modifier = {
				who = ROOT
				duration = -1
				power = 20
				key = the_muskovy_trade_company
			}
		}
	}
}
country_event = {
	id = flavor_eng.9116
	title = "flavor_eng.EVTNAME9116"
	desc = "flavor_eng.EVTDESC9116"
	picture = ADVISOR_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1550
		NOT = {
			is_year = 1590
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		NOT = {
			advisor_exists = 236
		}
		OR = {
			owns = 235
			owns = 236
		}
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "EXCELLENTCMNISTER"
		add_adm_power = 25
		if = {
			limit = {
				owns = 235
			}
			define_advisor = {
				type = spymaster
				name = "Francis Walsingham"
				culture = english
				location = 235
				skill = 3
				discount = yes
			}
		}
		if = {
			limit = {
				NOT = {
					owns = 235
				}
				owns = 236
			}
			define_advisor = {
				type = spymaster
				name = "Francis Walsingham"
				culture = english
				location = 236
				skill = 3
				discount = yes
			}
		}
	}
}
country_event = {
	id = flavor_eng.9117
	title = "flavor_eng.EVTNAME9117"
	desc = "flavor_eng.EVTDESC9117"
	picture = ADVISOR_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1537
		NOT = {
			is_year = 1579
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		owns = 236
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "flavor_eng.EVTOPTA9117"
		236 = {
			if = {
				limit = {
					has_province_modifier = urban_development_efforts
				}
				extend_province_modifier = {
					name = urban_development_efforts
					duration = 3625
				}
			}
			else = {
				add_province_modifier = {
					name = urban_development_efforts
					duration = 3625
				}
			}
		}
		add_inflation = -3
		define_advisor = {
			type = treasurer
			name = "Thomas Gresham"
			culture = english
			discount = yes
			location = 236
			skill = 3
		}
	}
}
country_event = {
	id = flavor_eng.9118
	title = "flavor_eng.EVTNAME9118"
	desc = "flavor_eng.EVTDESC9118"
	picture = ANGRY_MOB_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1500
		NOT = {
			is_year = 1600
		}
		religion = protestant
		NOT = {
			has_country_modifier = aristocracy_modifier
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		OR = {
			owns = 246
			owns = 247
		}
	}
	mean_time_to_happen = {
		years = 130
		modifier = {
			factor = 0.8
			NOT = {
				legitimacy = 90
			}
		}
		modifier = {
			factor = 0.8
			has_regency = yes
		}
	}
	immediate = {
		hidden_effect = {
			set_variable = {
				which = nobles_loyalty_added_a
				value = 10
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTA9118"
		ai_chance = {
			factor = 60
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
		if = {
			limit = {
				owns = 246
			}
			246 = {
				add_province_modifier = {
					name = "nobles_organizing"
					duration = 3650
				}
				hidden_effect = {
					set_variable = {
						which = added_unrest
						value = 10
					}
					hidden_effect = {
						province_event = {
							id = stacking_unrest.002
						}
					}
				}
				custom_tooltip = added_unrest_10
			}
		}
		if = {
			limit = {
				owns = 409
			}
			409 = {
				add_province_modifier = {
					name = "nobles_organizing"
					duration = 1825
				}
				hidden_effect = {
					set_variable = {
						which = added_unrest
						value = 5
					}
					hidden_effect = {
						province_event = {
							id = stacking_unrest.002
						}
					}
				}
				custom_tooltip = added_unrest_5
			}
		}
		if = {
			limit = {
				owns = 245
			}
			245 = {
				add_province_modifier = {
					name = "nobles_organizing"
					duration = 1825
				}
				hidden_effect = {
					set_variable = {
						which = added_unrest
						value = 5
					}
					hidden_effect = {
						province_event = {
							id = stacking_unrest.002
						}
					}
				}
				custom_tooltip = added_unrest_5
			}
		}
		if = {
			limit = {
				owns = 244
			}
			244 = {
				add_province_modifier = {
					name = "nobles_organizing"
					duration = 1825
				}
				hidden_effect = {
					set_variable = {
						which = added_unrest
						value = 5
					}
					hidden_effect = {
						province_event = {
							id = stacking_unrest.002
						}
					}
				}
				custom_tooltip = added_unrest_5
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_modifier = narrowminded_modifier
				}
			}
			add_country_modifier = {
				name = narrowminded_modifier
				duration = 1825
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9118"
		ai_chance = {
			factor = 30
		}
		if = {
			limit = {
				owns = 246
			}
			246 = {
				add_province_modifier = {
					name = "nobles_organizing"
					duration = 3650
				}
				hidden_effect = {
					set_variable = {
						which = added_unrest
						value = 10
					}
					hidden_effect = {
						province_event = {
							id = stacking_unrest.002
						}
					}
				}
				custom_tooltip = added_unrest_10
			}
		}
		if = {
			limit = {
				NOT = {
					owns = 246
				}
				owns = 409
			}
			409 = {
				add_province_modifier = {
					name = "nobles_organizing"
					duration = 3650
				}
				hidden_effect = {
					set_variable = {
						which = added_unrest
						value = 10
					}
					hidden_effect = {
						province_event = {
							id = stacking_unrest.002
						}
					}
				}
				custom_tooltip = added_unrest_10
			}
		}
		add_country_modifier = {
			name = aristocracy_modifier
			duration = 1825
		}
	}
	option = {
		name = "flavor_eng.EVTOPTC9118"
		ai_chance = {
			factor = 10
		}
		random_list = {
			30 = {}
			40 = {
				custom_tooltip = stability_points_lost_50
				hidden_effect = {
					subtract_variable = {
						which = stability_points
						value = 50
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = stability_points
									value = 0
								}
							}
						}
						add_stability = -1
						country_event = {
							id = POP_Stability.003
						}
						if = {
							limit = {
								is_emperor_of_china = yes
							}
							add_mandate = -5
						}
					}
				}
			}
			30 = {
				add_stability = -1
				hidden_effect = {
					country_event = {
						id = POP_Stability.003
					}
				}
				if = {
					limit = {
						is_emperor_of_china = yes
					}
					add_mandate = -5
				}
			}
		}
		add_country_modifier = {
			name = aristocracy_modifier
			duration = 3650
		}
	}
}
country_event = {
	id = flavor_eng.9119
	title = "flavor_eng.EVTNAME9119"
	desc = "flavor_eng.EVTDESC9119"
	picture = ECONOMY_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1500
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		owns = 236
		236 = {
			has_building = stock_exchange
		}
	}
	mean_time_to_happen = {
		years = 65
	}
	option = {
		name = "flavor_eng.EVTOPTA9119"
		ai_chance = {
			factor = 50
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
		add_years_of_income = 1
		add_inflation = 8
	}
	option = {
		name = "flavor_eng.EVTOPTB9119"
		ai_chance = {
			factor = 50
		}
		custom_tooltip = stability_points_gained_100
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 100
			}
			country_event = {
				id = POP_Stability.002
			}
		}
		add_inflation = -3
	}
}
country_event = {
	id = flavor_eng.9122
	title = "flavor_eng.EVTNAME9122"
	desc = "flavor_eng.EVTDESC9122"
	picture = ANGRY_MOB_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1520
		NOT = {
			is_year = 1616
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		religion = protestant
		ireland_region = {
			owned_by = ROOT
		}
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "flavor_eng.EVTOPTA9122"
		random_owned_province = {
			limit = {
				region = ireland_region
			}
			add_province_modifier = {
				name = "nobles_organizing"
				duration = 3650
			}
			hidden_effect = {
				set_variable = {
					which = added_unrest
					value = 10
				}
				hidden_effect = {
					province_event = {
						id = stacking_unrest.002
					}
				}
			}
			custom_tooltip = added_unrest_10
		}
	}
}
country_event = {
	id = flavor_eng.9123
	title = "flavor_eng.EVTNAME9123"
	desc = "flavor_eng.EVTDESC9123"
	picture = REFORM_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1600
		NOT = {
			is_year = 1700
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		government = monarchy
	}
	mean_time_to_happen = {
		years = 150
		modifier = {
			factor = 0.8
			NOT = {
				stability = 1
			}
		}
		modifier = {
			factor = 0.8
			num_of_loans = 6
		}
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
					is_capital = no
					NOT = {
						has_province_modifier = refusal_of_petition_of_rights
					}
				}
				set_province_flag = refusal_of_petition_of_rights
			}
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
					is_capital = no
					NOT = {
						has_province_modifier = refusal_of_petition_of_rights
					}
				}
				set_province_flag = refusal_of_petition_of_rights
			}
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
					is_capital = no
					NOT = {
						has_province_modifier = refusal_of_petition_of_rights
					}
				}
				set_province_flag = refusal_of_petition_of_rights
			}
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
					is_capital = no
					NOT = {
						has_province_modifier = refusal_of_petition_of_rights
					}
				}
				set_province_flag = refusal_of_petition_of_rights
			}
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
					is_capital = no
					NOT = {
						has_province_modifier = refusal_of_petition_of_rights
					}
				}
				set_province_flag = refusal_of_petition_of_rights
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTA9123"
		ai_chance = {
			factor = 75
		}
		random_list = {
			30 = {}
			40 = {
				custom_tooltip = stability_points_lost_50
				hidden_effect = {
					subtract_variable = {
						which = stability_points
						value = 50
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = stability_points
									value = 0
								}
							}
						}
						add_stability = -1
						country_event = {
							id = POP_Stability.003
						}
						if = {
							limit = {
								is_emperor_of_china = yes
							}
							add_mandate = -5
						}
					}
				}
			}
			30 = {
				add_stability = -1
				hidden_effect = {
					country_event = {
						id = POP_Stability.003
					}
				}
				if = {
					limit = {
						is_emperor_of_china = yes
					}
					add_mandate = -5
				}
			}
		}
		add_country_modifier = {
			name = the_petition_of_rights
			duration = 7300
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9123"
		ai_chance = {
			factor = 25
		}
		add_stability = -2
		hidden_effect = {
			country_event = {
				id = POP_Stability.003
			}
		}
		if = {
			limit = {
				is_emperor_of_china = yes
			}
			add_mandate = -10
		}
		set_country_flag = refusal_of_petition_of_rights
		every_owned_province = {
			limit = {
				has_province_flag = refusal_of_petition_of_rights
			}
			add_province_modifier = {
				name = refusal_of_petition_of_rights
				duration = 3650
			}
			clr_province_flag = refusal_of_petition_of_rights
		}
	}
}
country_event = {
	id = flavor_eng.9124
	title = "flavor_eng.EVTNAME9124"
	desc = "flavor_eng.EVTDESC9124"
	picture = LIBERUM_VETO_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1600
		NOT = {
			is_year = 1700
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		government = monarchy
		has_country_flag = refusal_of_petition_of_rights
	}
	mean_time_to_happen = {
		months = 300
		modifier = {
			factor = 0.7
			is_year = 1670
		}
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
					is_capital = no
				}
				set_province_flag = refusal_of_petition_of_rights
			}
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
					is_capital = no
					NOT = {
						has_province_flag = refusal_of_petition_of_rights
					}
				}
				set_province_flag = refusal_of_petition_of_rights
			}
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
					is_capital = no
					NOT = {
						has_province_flag = refusal_of_petition_of_rights
					}
				}
				set_province_flag = refusal_of_petition_of_rights
			}
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
					is_capital = no
					NOT = {
						has_province_flag = refusal_of_petition_of_rights
					}
				}
				set_province_flag = refusal_of_petition_of_rights
			}
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
					is_capital = no
					NOT = {
						has_province_flag = refusal_of_petition_of_rights
					}
				}
				set_province_flag = refusal_of_petition_of_rights
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTA9124"
		ai_chance = {
			factor = 75
		}
		add_stability = -2
		hidden_effect = {
			country_event = {
				id = POP_Stability.003
			}
		}
		if = {
			limit = {
				is_emperor_of_china = yes
			}
			add_mandate = -10
		}
		every_owned_province = {
			limit = {
				has_province_flag = refusal_of_petition_of_rights
			}
			add_province_modifier = {
				name = "nobles_organizing"
				duration = 3650
			}
			hidden_effect = {
				set_variable = {
					which = added_unrest
					value = 10
				}
				hidden_effect = {
					province_event = {
						id = stacking_unrest.002
					}
				}
			}
			custom_tooltip = added_unrest_10
			clr_province_flag = refusal_of_petition_of_rights
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9124"
		ai_chance = {
			factor = 25
		}
		clr_country_flag = refusal_of_petition_of_rights
		random_list = {
			30 = {}
			40 = {
				custom_tooltip = stability_points_lost_50
				hidden_effect = {
					subtract_variable = {
						which = stability_points
						value = 50
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = stability_points
									value = 0
								}
							}
						}
						add_stability = -1
						country_event = {
							id = POP_Stability.003
						}
						if = {
							limit = {
								is_emperor_of_china = yes
							}
							add_mandate = -5
						}
					}
				}
			}
			30 = {
				add_stability = -1
				hidden_effect = {
					country_event = {
						id = POP_Stability.003
					}
				}
				if = {
					limit = {
						is_emperor_of_china = yes
					}
					add_mandate = -5
				}
			}
		}
		add_country_modifier = {
			name = the_petition_of_rights
			duration = 7300
		}
	}
}
country_event = {
	id = flavor_eng.9127
	title = "flavor_eng.EVTNAME9127"
	desc = "flavor_eng.EVTDESC9127"
	picture = SHIP_SAILING_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1600
		NOT = {
			is_year = 1700
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
	}
	mean_time_to_happen = {
		years = 165
	}
	option = {
		name = "flavor_eng.EVTOPTA9127"
		ai_chance = {
			factor = 75
		}
		add_dip_power = 100
	}
	option = {
		name = "flavor_eng.EVTOPTB9127"
		ai_chance = {
			factor = 25
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
	}
}
country_event = {
	id = flavor_eng.9129
	title = "flavor_eng.EVTNAME9129"
	desc = "flavor_eng.EVTDESC9129"
	picture = REFORM_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1600
		NOT = {
			is_year = 1700
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		OR = {
			religion = protestant
			religion = reformed
		}
	}
	mean_time_to_happen = {
		months = 1200
	}
	option = {
		name = "flavor_eng.EVTOPTA9129"
		ai_chance = {
			factor = 45
		}
		random_list = {
			30 = {}
			40 = {
				custom_tooltip = stability_points_lost_50
				hidden_effect = {
					subtract_variable = {
						which = stability_points
						value = 50
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = stability_points
									value = 0
								}
							}
						}
						add_stability = -1
						country_event = {
							id = POP_Stability.003
						}
						if = {
							limit = {
								is_emperor_of_china = yes
							}
							add_mandate = -5
						}
					}
				}
			}
			30 = {
				add_stability = -1
				hidden_effect = {
					country_event = {
						id = POP_Stability.003
					}
				}
				if = {
					limit = {
						is_emperor_of_china = yes
					}
					add_mandate = -5
				}
			}
		}
		add_country_modifier = {
			name = the_decree_of_indulgence
			duration = -1
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9129"
		ai_chance = {
			factor = 45
		}
		random_list = {
			30 = {}
			40 = {
				custom_tooltip = stability_points_lost_50
				hidden_effect = {
					subtract_variable = {
						which = stability_points
						value = 50
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = stability_points
									value = 0
								}
							}
						}
						add_stability = -1
						country_event = {
							id = POP_Stability.003
						}
						if = {
							limit = {
								is_emperor_of_china = yes
							}
							add_mandate = -5
						}
					}
				}
			}
			30 = {
				add_stability = -1
				hidden_effect = {
					country_event = {
						id = POP_Stability.003
					}
				}
				if = {
					limit = {
						is_emperor_of_china = yes
					}
					add_mandate = -5
				}
			}
		}
		add_country_modifier = {
			name = bill_of_test
			duration = -1
		}
	}
	option = {
		name = "flavor_eng.EVTOPTC9129"
		ai_chance = {
			factor = 10
		}
		change_religion = catholic
		add_stability = -3
		hidden_effect = {
			country_event = {
				id = POP_Stability.003
			}
		}
		if = {
			limit = {
				is_emperor_of_china = yes
			}
			add_mandate = -15
		}
	}
}
country_event = {
	id = flavor_eng.9134
	title = "flavor_eng.EVTNAME9134"
	desc = "flavor_eng.EVTDESC9134"
	picture = ECONOMY_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1650
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
	}
	mean_time_to_happen = {
		years = 100
		modifier = {
			factor = 0.75
			economic_ideas = 4
		}
	}
	option = {
		name = "flavor_eng.EVTOPTA9134"
		add_inflation = -3
	}
}
country_event = {
	id = flavor_eng.9139
	title = "flavor_eng.EVTNAME9139"
	desc = "flavor_eng.EVTDESC9139"
	picture = ANGRY_MOB_eventPicture
	fire_only_once = yes
	trigger = {
		NOT = {
			has_country_flag = ENG_had_event_9139
		}
		NOT = {
			has_country_flag = ENG_had_event_9143
		}
		is_year = 1700
		NOT = {
			is_year = 1800
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		NOT = {
			dynasty = Stuart
		}
	}
	mean_time_to_happen = {
		years = 115
	}
	immediate = {
		set_country_flag = ENG_had_event_9139
	}
	option = {
		name = "flavor_eng.EVTOPTA9139"
		if = {
			limit = {
				highlands_area = {
					owned_by = ROOT
				}
			}
			random_owned_province = {
				limit = {
					area = highlands_area
				}
				spawn_rebels = {
					type = pretender_rebels
					size = 2
					leader = "James Stuart"
				}
			}
		}
		if = {
			limit = {
				NOT = {
					highlands_area = {
						owned_by = ROOT
					}
				}
				lowlands_area = {
					owned_by = ROOT
				}
			}
			random_owned_province = {
				limit = {
					area = lowlands_area
				}
				spawn_rebels = {
					type = pretender_rebels
					size = 2
					leader = "James Stuart"
				}
			}
		}
		if = {
			limit = {
				NOT = {
					highlands_area = {
						owned_by = ROOT
					}
				}
				NOT = {
					lowlands_area = {
						owned_by = ROOT
					}
				}
				north_england_region = {
					owned_by = ROOT
				}
				south_england_region = {
					owned_by = ROOT
				}
			}
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
				}
				spawn_rebels = {
					type = pretender_rebels
					size = 2
					leader = "James Stuart"
				}
			}
		}
	}
}
country_event = {
	id = flavor_eng.9140
	title = "flavor_eng.EVTNAME9140"
	desc = "flavor_eng.EVTDESC9140"
	picture = ADVISOR_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1700
		NOT = {
			is_year = 1745
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		NOT = {
			advisor_exists = 284
		}
		OR = {
			owns = 2386
			owns = 236
		}
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "EXCELLENTCMNISTER"
		add_adm_power = 25
		if = {
			limit = {
				owns = 2386
			}
			define_advisor = {
				type = statesman
				name = "Robert Walpole"
				culture = english
				location = 238
				skill = 3
				discount = yes
			}
		}
		if = {
			limit = {
				NOT = {
					owns = 2386
				}
				owns = 236
			}
			define_advisor = {
				type = statesman
				name = "Robert Walpole"
				culture = english
				location = 236
				skill = 3
				discount = yes
			}
		}
	}
}
country_event = {
	id = flavor_eng.9141
	title = "flavor_eng.EVTNAME9141"
	desc = "flavor_eng.EVTDESC9141"
	picture = NAVAL_MILITARY_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1700
		NOT = {
			is_year = 1800
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		exists = SPA
		is_rival = SPA
	}
	mean_time_to_happen = {
		years = 125
	}
	option = {
		name = "flavor_eng.EVTOPTA9141"
		ai_chance = {
			factor = 75
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
		add_casus_belli = {
			target = SPA
			type = cb_insult
			months = 12
		}
		SPA = {
			add_opinion = {
				who = ROOT
				modifier = eng_captain_jenkins_incident
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9141"
		ai_chance = {
			factor = 25
		}
		add_prestige = -10
	}
}
country_event = {
	id = flavor_eng.9143
	title = "flavor_eng.EVTNAME9143"
	desc = "flavor_eng.EVTDESC9143"
	picture = ANGRY_MOB_eventPicture
	fire_only_once = yes
	trigger = {
		NOT = {
			has_country_flag = ENG_had_event_9139
		}
		NOT = {
			has_country_flag = ENG_had_event_9143
		}
		is_year = 1700
		NOT = {
			is_year = 1800
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		NOT = {
			dynasty = Stuart
		}
	}
	mean_time_to_happen = {
		years = 115
	}
	immediate = {
		set_country_flag = ENG_had_event_9143
	}
	option = {
		name = "flavor_eng.EVTOPTA9143"
		if = {
			limit = {
				highlands_area = {
					owned_by = ROOT
				}
			}
			random_owned_province = {
				limit = {
					area = highlands_area
				}
				spawn_rebels = {
					type = pretender_rebels
					size = 2
					leader = "James Stuart"
				}
			}
		}
		if = {
			limit = {
				NOT = {
					highlands_area = {
						owned_by = ROOT
					}
				}
				lowlands_area = {
					owned_by = ROOT
				}
			}
			random_owned_province = {
				limit = {
					area = lowlands_area
				}
				spawn_rebels = {
					type = pretender_rebels
					size = 2
					leader = "James Stuart"
				}
			}
		}
		if = {
			limit = {
				NOT = {
					highlands_area = {
						owned_by = ROOT
					}
				}
				NOT = {
					lowlands_area = {
						owned_by = ROOT
					}
				}
				north_england_region = {
					owned_by = ROOT
				}
				south_england_region = {
					owned_by = ROOT
				}
			}
			random_owned_province = {
				limit = {
					OR = {
						region = south_england_region
						region = north_england_region
					}
				}
				spawn_rebels = {
					type = pretender_rebels
					size = 2
					leader = "James Stuart"
				}
			}
		}
	}
}
country_event = {
	id = flavor_eng.9144
	title = "flavor_eng.EVTNAME9144"
	desc = "flavor_eng.EVTDESC9144"
	picture = ADVISOR_eventPicture
	trigger = {
		is_year = 1735
		NOT = {
			is_year = 1778
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		NOT = {
			advisor_exists = 293
		}
		owns = 236
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "EXCELLENTCMNISTER"
		add_adm_power = 25
		if = {
			limit = {
				owns = 236
			}
			define_advisor = {
				type = statesman
				name = "W. Pitt the Elder"
				culture = english
				location = 236
				skill = 3
				discount = yes
			}
		}
	}
}
country_event = {
	id = flavor_eng.9145
	title = "flavor_eng.EVTNAME9145"
	desc = "flavor_eng.EVTDESC9145"
	picture = MERCHANTS_TALKING_eventPicture
	is_triggered_only = yes
	option = {
		name = "flavor_eng.EVTOPTA9145"
		add_treasury = 100
	}
}
country_event = {
	id = flavor_eng.9150
	title = "flavor_eng.EVTNAME9150"
	desc = "flavor_eng.EVTDESC9150"
	picture = ADVISOR_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1781
		NOT = {
			is_year = 1806
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		NOT = {
			advisor_exists = 315
		}
		OR = {
			owns = 235
			owns = 236
		}
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "EXCELLENTCMNISTER"
		add_adm_power = 25
		if = {
			limit = {
				owns = 235
			}
			define_advisor = {
				type = statesman
				name = "W. Pitt the Younger"
				culture = english
				location = 235
				skill = 3
				discount = yes
			}
		}
		if = {
			limit = {
				NOT = {
					owns = 235
				}
				owns = 236
			}
			define_advisor = {
				type = statesman
				name = "W. Pitt the Younger"
				culture = english
				location = 236
				skill = 3
				discount = yes
			}
		}
	}
}
country_event = {
	id = flavor_eng.9193
	title = "flavor_eng.EVTNAME9193"
	desc = "flavor_eng.EVTDESC9193"
	picture = DIPLOMACY_eventPicture
	trigger = {
		is_year = 1650
		NOT = {
			is_year = 1700
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		is_at_war = no
		exists = POR
		OR = {
			AND = {
				tag = ENG
				north_england_region = {
					owned_by = ENG
					has_port = yes
				}
			}
			AND = {
				tag = GBR
				north_england_region = {
					owned_by = GBR
					has_port = yes
				}
			}
			AND = {
				tag = ENG
				south_england_region = {
					owned_by = ENG
					has_port = yes
				}
			}
			AND = {
				tag = GBR
				south_england_region = {
					owned_by = GBR
					has_port = yes
				}
			}
		}
	}
	mean_time_to_happen = {
		years = 40
	}
	option = {
		name = "flavor_eng.EVTOPTA9193"
		ai_chance = {
			factor = 75
		}
		random_list = {
			30 = {}
			40 = {
				custom_tooltip = stability_points_lost_50
				hidden_effect = {
					subtract_variable = {
						which = stability_points
						value = 50
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = stability_points
									value = 0
								}
							}
						}
						add_stability = -1
						country_event = {
							id = POP_Stability.003
						}
						if = {
							limit = {
								is_emperor_of_china = yes
							}
							add_mandate = -5
						}
					}
				}
			}
			30 = {
				add_stability = -1
				hidden_effect = {
					country_event = {
						id = POP_Stability.003
					}
				}
				if = {
					limit = {
						is_emperor_of_china = yes
					}
					add_mandate = -5
				}
			}
		}
		POR = {
			add_opinion = {
				who = ROOT
				modifier = accepted_meuthen_agreement
			}
		}
		random_owned_province = {
			limit = {
				OR = {
					region = south_england_region
					region = north_england_region
				}
				has_port = yes
			}
			if = {
				limit = {
					has_province_modifier = urban_development_efforts
				}
				extend_province_modifier = {
					name = urban_development_efforts
					duration = 3625
				}
			}
			else = {
				add_province_modifier = {
					name = urban_development_efforts
					duration = 3625
				}
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9193"
		ai_chance = {
			factor = 25
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
		POR = {
			add_opinion = {
				who = ROOT
				modifier = denounced_meuthen_agreement
			}
		}
	}
}
country_event = {
	id = flavor_eng.9182
	title = "flavor_eng.EVTNAME9182"
	desc = "flavor_eng.EVTDESC9182"
	picture = ASSASSINATION_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1600
		NOT = {
			is_year = 1650
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
		OR = {
			religion = protestant
			religion = reformed
		}
		any_owned_province = {
			is_capital = no
			check_variable = {
				which = catholic
				value = 6
			}
			can_spawn_rebels = catholic_rebels
		}
		any_owned_province = {
			is_capital = no
			check_variable = {
				which = catholic
				value = 6
			}
			can_spawn_rebels = catholic_rebels
			NOT = {
				has_province_modifier = nationalists_organizing
			}
		}
	}
	mean_time_to_happen = {
		years = 50
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					is_capital = no
					check_variable = {
						which = catholic
						value = 6
					}
					can_spawn_rebels = catholic_rebels
					NOT = {
						has_province_modifier = nationalists_organizing
					}
				}
				set_province_flag = gunpowder_plot
			}
			random_owned_province = {
				limit = {
					is_capital = no
					check_variable = {
						which = catholic
						value = 6
					}
					can_spawn_rebels = catholic_rebels
					NOT = {
						has_province_flag = gunpowder_plot
					}
					NOT = {
						has_province_modifier = nationalists_organizing
					}
				}
				set_province_flag = gunpowder_plot
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTA9182"
		ai_chance = {
			factor = 75
		}
		custom_tooltip = stability_points_gained_50
		hidden_effect = {
			change_variable = {
				which = stability_points
				value = 50
			}
			country_event = {
				id = POP_Stability.002
			}
		}
		every_owned_province = {
			limit = {
				has_province_flag = gunpowder_plot
			}
			add_province_modifier = {
				name = "fanatics_organizing"
				duration = 1825
			}
			hidden_effect = {
				set_variable = {
					which = added_unrest
					value = 5
				}
				hidden_effect = {
					province_event = {
						id = stacking_unrest.002
					}
				}
			}
			custom_tooltip = added_unrest_5
		}
		if = {
			limit = {
				PAP = {
					exists = yes
					religion = catholic
				}
			}
			PAP = {
				add_opinion = {
					who = ROOT
					modifier = eng_harsh_punishment_of_catholics
				}
			}
		}
		if = {
			limit = {
				SPA = {
					exists = yes
					religion = catholic
				}
			}
			SPA = {
				add_opinion = {
					who = ROOT
					modifier = eng_harsh_punishment_of_catholics
					years = 10
				}
			}
		}
		if = {
			limit = {
				FRA = {
					exists = yes
					religion = catholic
				}
			}
			FRA = {
				add_opinion = {
					who = ROOT
					modifier = eng_harsh_punishment_of_catholics
					years = 10
				}
			}
		}
	}
	option = {
		name = "flavor_eng.EVTOPTB9182"
		ai_chance = {
			factor = 25
		}
		add_stability = -2
		hidden_effect = {
			country_event = {
				id = POP_Stability.003
			}
		}
		if = {
			limit = {
				is_emperor_of_china = yes
			}
			add_mandate = -10
		}
	}
}
country_event = {
	id = flavor_eng.9200
	title = "flavor_eng.EVTNAME9200"
	desc = "flavor_eng.EVTDESC9200"
	picture = ECONOMY_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1651
		NOT = {
			is_year = 1670
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "EXCELLENT"
		add_adm_power = 10
		add_prestige = 10
	}
}
country_event = {
	id = flavor_eng.9201
	title = "flavor_eng.EVTNAME9201"
	desc = "flavor_eng.EVTDESC9201"
	picture = ECONOMY_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1776
		NOT = {
			is_year = 1790
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "EXCELLENT"
		add_adm_power = 10
		add_prestige = 10
	}
}
country_event = {
	id = flavor_eng.9202
	title = "flavor_eng.EVTNAME9202"
	desc = "flavor_eng.EVTDESC9202"
	picture = INVENTION_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1750
		NOT = {
			is_year = 1776
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "EXCELLENT"
		add_adm_power = 10
		add_prestige = 10
	}
}
country_event = {
	id = flavor_eng.9203
	title = "flavor_eng.EVTNAME9203"
	desc = "flavor_eng.EVTDESC9203"
	picture = ECONOMY_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1689
		NOT = {
			is_year = 1700
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "EXCELLENT"
		add_adm_power = 10
		add_prestige = 10
	}
}
country_event = {
	id = flavor_eng.9204
	title = "flavor_eng.EVTNAME9204"
	desc = "flavor_eng.EVTDESC9204"
	picture = INVENTION_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1687
		NOT = {
			is_year = 1713
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "EXCELLENT"
		add_adm_power = 10
		add_prestige = 10
	}
}
country_event = {
	id = flavor_eng.9205
	title = "flavor_eng.EVTNAME9205"
	desc = "flavor_eng.EVTDESC9205"
	picture = ECONOMY_eventPicture
	fire_only_once = yes
	trigger = {
		is_year = 1593
		NOT = {
			is_year = 1616
		}
		NOT = {
			advisor_exists = 245
		}
		OR = {
			AND = {
				tag = ENG
				NOT = {
					exists = GBR
				}
			}
			tag = GBR
		}
	}
	mean_time_to_happen = {
		years = 25
	}
	option = {
		name = "GLORYTOOURNATION"
		add_prestige = 2
		define_advisor = {
			name = "William Shakespeare"
			location = 236
			culture = english
			skill = 2
			type = artist
			discount = yes
		}
	}
}
country_event = {
	id = flavor_eng.9250
	title = "flavor_eng.EVTNAME9250"
	desc = "flavor_eng.EVTDESC9250"
	picture = WAR_OF_THE_ROSES_eventPicture
	fire_only_once = yes
	trigger = {
		tag = ENG
		has_regency = no
		has_heir = no
		is_lesser_in_union = no
		NOT = {
			ruler_has_personality = infertile_personality
		}
		NOT = {
			has_country_flag = had_war_of_the_roses
		}
		NOT = {
			has_disaster = war_of_the_roses
		}
		NOT = {
			is_year = 1500
		}
	}
	mean_time_to_happen = {
		months = 60
	}
	option = {
		name = "flavor_eng.EVTOPTA9250"
		add_ruler_modifier = {
			name = low_fertility
			duration = -1
		}
	}
}
country_event = {
	id = flavor_eng.9251
	title = "flavor_eng.EVTNAME9251"
	desc = "flavor_eng.EVTDESC9251"
	picture = WAR_OF_THE_ROSES_eventPicture
	fire_only_once = yes
	trigger = {
		tag = ENG
		has_ruler_modifier = low_fertility
		has_heir = yes
	}
	mean_time_to_happen = {
		months = 1
	}
	option = {
		name = "flavor_eng.EVTOPTA9251"
		remove_country_modifier = low_fertility
	}
}
country_event = {
	id = flavor_eng.9237
	title = flavor_eng.9237.t
	desc = flavor_eng.9237.d
	picture = DIPLOMACY_eventPicture
	fire_only_once = yes
	mean_time_to_happen = {
		months = 1
	}
	trigger = {
		has_country_flag = had_war_of_the_roses
		OR = {
			dynasty = York
			dynasty = Lancaster
		}
		is_lesser_in_union = no
		NOT = {
			had_country_flag = {
				flag = had_war_of_the_roses
				days = 1095
			}
		}
	}
	option = {
		name = flavor_eng.9237.a
		ai_chance = {
			factor = 0
		}
		every_owned_province = {
			hidden_effect = {
				set_variable = {
					which = added_unrest
					value = 5
				}
				hidden_effect = {
					province_event = {
						id = stacking_unrest.002
					}
				}
			}
			custom_tooltip = added_unrest_5
		}
		add_prestige = 10
	}
	option = {
		name = flavor_eng.9237.b
		ai_chance = {
			factor = 100
		}
		if = {
			limit = {
				stability = 3
			}
			add_adm_power = 50
		}
		else = {
			add_stability = 1
		}
		define_heir = {
			claim = 100
			name = "Henry #0"
			dynasty = "Tudor"
			culture = english
			adm = 3
			dip = 4
			mil = 2
			age = 24
		}
	}
}
