country_event = {
	id = consort_events.1
	title = consort_events.1.t
	picture = GOOD_WITH_MONARCH_eventPicture
	desc = {
		trigger = {
			religion_group = christian
			NOT = {
				has_ruler_flag = widow_widower
			}
		}
		desc = consort_events.1.da
	}
	desc = {
		trigger = {
			religion_group = christian
			has_ruler_flag = widow_widower
		}
		desc = consort_events.1.db
	}
	desc = {
		trigger = {
			religion_group = christian
		}
		desc = consort_events.1.dc
	}
	desc = {
		trigger = {
			NOT = {
				religion_group = christian
			}
		}
		desc = consort_events.1.dd
	}
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = no
		has_regency = no
		is_lesser_in_union = no
		num_of_cities = 2
		government = monarchy
		NOT = {
			AND = {
				OR = {
					has_reform = elective_monarchy
					has_reform = elective_monarchy_legacy
					has_reform = mamluk_government_legacy
				}
			}
		}
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		num_of_royal_marriages = 4
		NOT = {
			has_ruler_flag = approached_by_leading_families_of_the_realm
		}
		OR = {
			has_heir = no
			NOT = {
				heir_claim = 50
			}
		}
		any_owned_province = {
			is_capital = no
			is_state = yes
			is_in_capital_area = yes
			OR = {
				has_province_flag = lesser_nobles_control_province
				has_province_flag = greater_nobles_control_province
			}
			check_variable = {
				which = estate_greater_nobles_weight_share
				value = 0.07
			}
			check_variable = {
				which = estate_greater_nobles_loyalty
				value = 0.30
			}
		}
	}
	immediate = {
		hidden_effect = {
			set_ruler_flag = approached_by_leading_families_of_the_realm
			random_owned_province = {
				limit = {
					is_capital = no
					is_state = yes
					is_in_capital_area = yes
					OR = {
						has_province_flag = lesser_nobles_control_province
						has_province_flag = greater_nobles_control_province
					}
				}
				save_event_target_as = origin_of_queens_family
			}
			set_variable = {
				which = nobles_loyalty_removed_a
				value = 5
			}
		}
	}
	mean_time_to_happen = {
		months = 360
	}
	option = {
		name = consort_events.1.a
		custom_tooltip = consort_events.1.a.tt
		add_years_of_income = 0.15
		event_target:origin_of_queens_family = {
			add_province_modifier = {
				name = "domain_of_spouses_family"
				duration = -1
			}
		}
		define_consort = {}
	}
	option = {
		name = consort_events.1.b
		add_prestige = 5
		if = {
			limit = {
				check_variable = {
					which = estate_greater_nobles_weight_share
					value = 0.05
				}
				OR = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						which = estate_lesser_nobles_weight_share
					}
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.10
					}
				}
			}
			custom_tooltip = t_estate_greater_nobles_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = greater_nobles_loyalty_removed
					value = 0
				}
				set_variable = {
					which = greater_nobles_loyalty_removed
					which = nobles_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -64
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -32
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -16
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -8
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -4
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -2
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -1
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_greater_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_greater_nobles_loyalty
						}
						set_variable = {
							which = estate_greater_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_lesser_nobles_weight_share
					value = 0.15
				}
				OR = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						which = estate_greater_nobles_weight_share
					}
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.25
					}
				}
			}
			custom_tooltip = t_estate_lesser_nobles_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = lesser_nobles_loyalty_removed
					value = 0
				}
				set_variable = {
					which = lesser_nobles_loyalty_removed
					which = nobles_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -64
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -32
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -16
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -8
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -4
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -2
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = -1
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = lesser_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_lesser_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_lesser_nobles_loyalty
						}
						set_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
	}
}
country_event = {
	id = consort_events.2
	title = consort_events.2.t
	desc = consort_events.2.d
	picture = ROYAL_COUPLE_FUTURE_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_foreign_consort = no
		is_lesser_in_union = no
		num_of_cities = 2
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		NOT = {
			has_ruler_flag = has_lowborn_consort
		}
		NOT = {
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		any_owned_province = {
			OR = {
				has_province_flag = lesser_nobles_control_province
				has_province_flag = greater_nobles_control_province
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					is_capital = no
					OR = {
						is_state = yes
						is_in_capital_area = yes
						NOT = {
							has_province_flag = burghers_control_province
						}
					}
				}
				save_event_target_as = origin_of_queens_family
			}
			random_owned_province = {
				limit = {
					is_capital = no
					OR = {
						is_state = yes
						is_in_capital_area = yes
					}
					OR = {
						has_province_flag = lesser_nobles_control_province
						has_province_flag = greater_nobles_control_province
					}
					development = 15
				}
				save_event_target_as = origin_of_queens_family
			}
			random_owned_province = {
				limit = {
					is_capital = no
					OR = {
						is_state = yes
						is_in_capital_area = yes
					}
					OR = {
						has_province_flag = lesser_nobles_control_province
						has_province_flag = greater_nobles_control_province
					}
					development = 20
				}
				save_event_target_as = origin_of_queens_family
			}
			random_owned_province = {
				limit = {
					is_capital = no
					OR = {
						is_state = yes
						is_in_capital_area = yes
					}
					OR = {
						has_province_flag = lesser_nobles_control_province
						has_province_flag = greater_nobles_control_province
					}
					development = 25
				}
				save_event_target_as = origin_of_queens_family
			}
		}
	}
	is_triggered_only = yes
	option = {
		name = consort_events.2.a
		custom_tooltip = consort_events.2.a.tt
		event_target:origin_of_queens_family = {
			add_province_modifier = {
				name = "domain_of_spouses_family"
				duration = -1
			}
		}
	}
}
country_event = {
	id = consort_events.3
	title = consort_events.3.t
	picture = ROYAL_COUPLE_FUTURE_eventPicture
	desc = {
		trigger = {
			always = yes
		}
		desc = consort_events.3.d
	}
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		has_foreign_consort = no
		NOT = {
			has_ruler_flag = has_lowborn_consort
		}
		has_regency = no
		any_owned_province = {
			has_province_modifier = domain_of_spouses_family
		}
	}
	immediate = {
		hidden_effect = {
			random_list = {
				15 = {
					set_country_flag = develop_seat_province
				}
				15 = {
					set_country_flag = pay_money
				}
				15 = {
					set_country_flag = pay_legitimacy_or_give_noble_influence
				}
				15 = {
					set_country_flag = kick_advisor
				}
				15 = {
					set_country_flag = pay_mil_trad
				}
				15 = {
					set_country_flag = pay_nav_trad
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 800
		modifier = {
			factor = 0.9
			check_variable = {
				which = estate_greater_nobles_weight_share
				value = 0.5
			}
		}
		modifier = {
			factor = 0.65
			has_ruler_flag = accepted_help_from_spouses_family
		}
		modifier = {
			factor = 1.5
			has_ruler_flag = helped_spouses_family
		}
	}
	option = {
		name = consort_events.3.a
		if = {
			limit = {
				has_ruler_flag = accepted_help_from_spouses_family
			}
			clr_ruler_flag = accepted_help_from_spouses_family
		}
		set_ruler_flag = helped_spouses_family
		trigger_switch = {
			on_trigger = has_country_flag
			develop_seat_province = {
				custom_tooltip = consort_events.3.a.tt.1
				random_owned_province = {
					limit = {
						has_province_modifier = domain_of_spouses_family
					}
					add_province_modifier = {
						name = "developping_consort_seat"
						duration = 3650
					}
				}
				add_adm_power = -100
				clr_country_flag = develop_seat_province
			}
			pay_money = {
				custom_tooltip = consort_events.3.a.tt.2
				add_years_of_income = -0.25
				clr_country_flag = pay_money
			}
			pay_legitimacy_or_give_noble_influence = {
				custom_tooltip = consort_events.3.a.tt.3
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						add_local_autonomy = 15
					}
				}
				else = {
					add_legitimacy = -10
					add_horde_unity = -10
				}
				clr_country_flag = pay_legitimacy_or_give_noble_influence
			}
			kick_advisor = {
				custom_tooltip = consort_events.3.a.tt.4
				kill_advisor = random
				add_adm_power = -50
				clr_country_flag = kick_advisor
			}
			pay_mil_trad = {
				if = {
					limit = {
						army_tradition = 50
					}
					custom_tooltip = consort_events.3.a.tt.5
					add_army_tradition = -20
				}
				if = {
					limit = {
						NOT = {
							army_tradition = 50
						}
					}
					custom_tooltip = consort_events.3.a.tt.6b
					add_corruption = 1
				}
				clr_country_flag = pay_mil_trad
			}
			pay_nav_trad = {
				if = {
					limit = {
						OR = {
							num_of_ports = 5
							navy_tradition = 50
						}
					}
					custom_tooltip = consort_events.3.a.tt.6
					add_navy_tradition = -20
				}
				if = {
					limit = {
						NOT = {
							num_of_ports = 5
						}
						NOT = {
							navy_tradition = 50
						}
					}
					custom_tooltip = consort_events.3.a.tt.6b
					add_corruption = 1
				}
				clr_country_flag = pay_nav_trad
			}
		}
		custom_tooltip = consort_events.3.a.tt.0
	}
	option = {
		name = consort_events.3.b
		custom_tooltip = consort_events.3.b.tt
		set_ruler_flag = refused_to_help_spouses_family
		add_prestige = -5
		random_owned_province = {
			limit = {
				has_province_modifier = domain_of_spouses_family
			}
			add_local_autonomy = 25
		}
	}
}
country_event = {
	id = consort_events.4
	title = consort_events.4.t
	desc = consort_events.4.d
	picture = KING_DOING_GREAT_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		is_lesser_in_union = no
		has_consort = yes
		has_foreign_consort = no
		NOT = {
			has_ruler_flag = has_lowborn_consort
		}
		NOT = {
			has_ruler_flag = refused_to_help_consort_regents_family
		}
		has_regency = no
		any_owned_province = {
			has_province_modifier = domain_of_spouses_family
		}
	}
	immediate = {
		hidden_effect = {
			if = {
				limit = {
					has_ruler_flag = helped_spouses_family
				}
				clr_ruler_flag = helped_spouses_family
			}
			random_owned_province = {
				limit = {
					has_province_modifier = domain_of_spouses_family
				}
				save_event_target_as = domain_of_spouses_family_province
			}
			random_list = {
				15 = {
					set_country_flag = in_laws_fund_development
				}
				15 = {
					set_country_flag = in_laws_provide_mil_advisor
				}
				15 = {
					set_country_flag = in_laws_provide_dip_advisor
				}
				15 = {
					set_country_flag = in_laws_provide_help_with_nobility
				}
				15 = {
					set_country_flag = in_laws_provide_adm_advisor
				}
				15 = {
					set_country_flag = in_laws_provide_money
				}
			}
			set_variable = {
				which = greater_nobles_loyalty_added_a
				value = 5
			}
		}
	}
	mean_time_to_happen = {
		months = 600
		modifier = {
			factor = 1.5
			has_ruler_flag = accepted_help_from_spouses_family
		}
		modifier = {
			factor = 0.95
			consort_dip = 4
		}
		modifier = {
			factor = 0.95
			consort_dip = 5
		}
		modifier = {
			factor = 0.9
			consort_dip = 6
		}
		modifier = {
			factor = 0.5
			has_ruler_flag = helped_spouses_family
		}
	}
	option = {
		name = consort_events.4.a
		set_ruler_flag = accepted_help_from_spouses_family
		trigger_switch = {
			on_trigger = has_country_flag
			in_laws_fund_development = {
				custom_tooltip = consort_events.4.a.tt.1
				random_owned_province = {
					limit = {
						is_state = yes
					}
					add_province_modifier = {
						name = "developping_consort_seat"
						duration = 3650
					}
					custom_tooltip = desc_developping_consort_seat
				}
				clr_country_flag = in_laws_fund_development
			}
			in_laws_provide_money = {
				custom_tooltip = consort_events.4.a.tt.2
				add_years_of_income = 0.15
				clr_country_flag = in_laws_provide_money
			}
			in_laws_provide_mil_advisor = {
				custom_tooltip = consort_events.4.a.tt.3
				if = {
					limit = {
						monthly_income = 35
					}
					define_advisor = {
						type = recruitmaster
						skill = 3
						culture = event_target:domain_of_spouses_family_province
						religion = event_target:domain_of_spouses_family_province
						discount = yes
					}
				}
				else = {
					define_advisor = {
						type = recruitmaster
						culture = event_target:domain_of_spouses_family_province
						religion = event_target:domain_of_spouses_family_province
						skill = 2
						discount = yes
					}
				}
				clr_country_flag = in_laws_provide_mil_advisor
			}
			in_laws_provide_dip_advisor = {
				custom_tooltip = consort_events.4.a.tt.4
				if = {
					limit = {
						monthly_income = 35
					}
					define_advisor = {
						type = trader
						culture = event_target:domain_of_spouses_family_province
						religion = event_target:domain_of_spouses_family_province
						skill = 3
						discount = yes
					}
				}
				else = {
					define_advisor = {
						type = trader
						culture = event_target:domain_of_spouses_family_province
						religion = event_target:domain_of_spouses_family_province
						skill = 2
						discount = yes
					}
				}
			}
			in_laws_provide_help_with_nobility = {
				custom_tooltip = consort_events.4.a.tt.5
				custom_tooltip = estate_greater_nobles_loyalty_added_a
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					hidden_effect = {
						set_variable = {
							which = greater_nobles_loyalty_added
							value = 0
						}
						set_variable = {
							which = greater_nobles_loyalty_added
							which = greater_nobles_loyalty_added_a
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 64
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 64
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.64
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 64
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 32
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 32
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.32
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 32
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 16
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 16
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.16
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 16
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 8
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 8
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.08
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 8
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 4
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 4
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.04
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 4
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 2
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 2
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.02
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 2
							}
						}
						if = {
							limit = {
								check_variable = {
									which = greater_nobles_loyalty_added
									value = 1
								}
							}
							add_estate_loyalty = {
								estate = estate_greater_nobles
								loyalty = 1
							}
							change_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.01
							}
							subtract_variable = {
								which = greater_nobles_loyalty_added
								value = 1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = estate_greater_nobles_loyalty
									value = 1
								}
							}
							set_variable = {
								which = estate_greater_nobles_loyalty
								value = 1
							}
						}
						every_owned_province = {
							limit = {
								has_province_flag = greater_nobles_control_province
							}
							hidden_effect = {
								set_variable = {
									which = estate_greater_nobles_loyalty
									which = owner
								}
								set_variable = {
									which = EstateProv_UnrestSave
									which = EstateProv_Unrest
								}
								set_variable = {
									which = EstateProv_Unrest
									which = estate_greater_nobles_loyalty
								}
								set_variable = {
									which = estate_greater_nobles_loyalty
									value = 0
								}
								if = {
									limit = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.6
										}
									}
									set_province_flag = loss
									subtract_variable = {
										which = EstateProv_Unrest
										value = 0.6
									}
								}
								else_if = {
									limit = {
										NOT = {
											check_variable = {
												which = EstateProv_Unrest
												value = 0.401
											}
										}
									}
									set_province_flag = gain
									subtract_variable = {
										which = EstateProv_Unrest
										value = 0.4
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = -1
									}
								}
								else = {
									set_variable = {
										which = EstateProv_Unrest
										value = 0
									}
								}
								multiply_variable = {
									which = EstateProv_Unrest
									value = 16.62
								}
								set_variable = {
									which = inp_m_exp
									which = EstateProv_Unrest
								}
								if = {
									limit = {
										NOT = {
											check_variable = {
												which = inp_m_exp
												value = 0
											}
										}
									}
									set_variable = {
										which = exp_val
										value = 0
									}
									change_variable = {
										which = err.math.exp.undef
										value = 1
									}
								}
								else_if = {
									limit = {
										is_variable_equal = {
											which = inp_m_exp
											value = 0
										}
									}
									set_variable = {
										which = exp_val
										value = 0
									}
								}
								else = {
									set_variable = {
										which = exp_m_exp
										value = 1.7
									}
									set_variable = {
										which = int_m_exp
										which = exp_m_exp
									}
									multiply_variable = {
										which = int_m_exp
										value = 0.001
									}
									multiply_variable = {
										which = int_m_exp
										value = 1000
									}
									set_variable = {
										which = dec_m_exp
										which = exp_m_exp
									}
									subtract_variable = {
										which = dec_m_exp
										which = int_m_exp
									}
									set_variable = {
										which = inp
										which = inp_m_exp
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = inp
													value = 0.001
												}
											}
										}
										set_variable = {
											which = ln_val
											value = 0
										}
										change_variable = {
											which = err.math.ln.undef
											value = 1
										}
									}
									else = {
										set_variable = {
											which = ln_val
											value = 0
										}
										set_variable = {
											which = scale
											value = 10000
										}
										set_variable = {
											which = k
											value = 0
										}
										set_variable = {
											which = k_div
											which = scale
										}
										while = {
											limit = {
												check_variable = {
													which = inp
													value = 2.001
												}
											}
											multiply_variable = {
												which = inp
												value = 0.5
											}
											change_variable = {
												which = ln_val
												value = 6931.472
											}
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = inp
														value = 1
													}
												}
											}
											multiply_variable = {
												which = inp
												value = 2
											}
											subtract_variable = {
												which = ln_val
												value = 6931.472
											}
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = k
														value = 10
													}
												}
											}
											change_variable = {
												which = k
												value = 1
											}
											multiply_variable = {
												which = k_div
												value = 0.5
											}
											set_variable = {
												which = t_m_ln
												which = scale
											}
											change_variable = {
												which = t_m_ln
												which = k_div
											}
											if = {
												limit = {
													check_variable = {
														which = inp
														which = t_m_ln
													}
												}
												divide_variable = {
													which = inp
													which = t_m_ln
												}
												multiply_variable = {
													which = inp
													which = scale
												}
												set_variable = {
													which = lt_ind
													which = k
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 6
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 8
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 9
																}
															}
															if = {
																limit = {
																	check_variable = {
																		which = lt_ind
																		value = 10
																	}
																}
																set_variable = {
																	which = lt_val
																	value = 9.761
																}
															}
															else = {
																set_variable = {
																	which = lt_val
																	value = 19.512
																}
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 38.986
															}
														}
													}
													else = {
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 7
																}
															}
															set_variable = {
																which = lt_val
																value = 77.821
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 155.042
															}
														}
													}
												}
												else = {
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 3
															}
														}
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 4
																}
															}
															if = {
																limit = {
																	check_variable = {
																		which = lt_ind
																		value = 5
																	}
																}
																set_variable = {
																	which = lt_val
																	value = 307.717
																}
															}
															else = {
																set_variable = {
																	which = lt_val
																	value = 606.246
																}
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 1177.83
															}
														}
													}
													else = {
														if = {
															limit = {
																check_variable = {
																	which = lt_ind
																	value = 2
																}
															}
															set_variable = {
																which = lt_val
																value = 2231.436
															}
														}
														else = {
															set_variable = {
																which = lt_val
																value = 4054.651
															}
														}
													}
												}
												set_variable = {
													which = lt_ind
													value = 0
												}
												change_variable = {
													which = ln_val
													which = lt_val
												}
											}
											set_variable = {
												which = t_m_ln
												value = 0
											}
										}
										divide_variable = {
											which = ln_val
											value = 10000
										}
										set_variable = {
											which = scale
											value = 0
										}
										set_variable = {
											which = k
											value = 0
										}
										set_variable = {
											which = k_div
											value = 0
										}
										set_variable = {
											which = lt_val
											value = 0
										}
									}
									set_variable = {
										which = inp
										value = 0
									}
									multiply_variable = {
										which = dec_m_exp
										which = ln_val
									}
									set_variable = {
										which = math.e.expnt
										which = dec_m_exp
									}
									set_variable = {
										which = math.e.return
										value = 1
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = math.e.expnt
													value = -6.999
												}
											}
										}
										set_variable = {
											which = exp_val
											value = 0
										}
									}
									else = {
										while = {
											limit = {
												check_variable = {
													which = math.e.expnt
													value = 1
												}
											}
											subtract_variable = {
												which = math.e.expnt
												value = 1
											}
											multiply_variable = {
												which = math.e.return
												value = 2.718
											}
										}
										while = {
											limit = {
												NOT = {
													check_variable = {
														which = math.e.expnt
														value = 0
													}
												}
											}
											change_variable = {
												which = math.e.expnt
												value = 1
											}
											divide_variable = {
												which = math.e.return
												value = 2.718
											}
										}
										set_variable = {
											which = math.e.sm
											value = 1
										}
										if = {
											limit = {
												NOT = {
													is_variable_equal = {
														which = math.e.expnt
														value = 0
													}
												}
											}
											set_variable = {
												which = math.e.sq
												which = math.e.expnt
											}
											multiply_variable = {
												which = math.e.sq
												which = math.e.expnt
											}
											set_variable = {
												which = math.e.fct
												value = 2
											}
											set_variable = {
												which = math.e.fctl
												value = 2
											}
											set_variable = {
												which = math.e.a1
												which = math.e.sq
											}
											set_variable = {
												which = math.e.a2
												which = math.e.expnt
											}
											set_variable = {
												which = math.e.a3
												value = 2
											}
											set_variable = {
												which = math.e.tmp
												which = math.e.a2
											}
											multiply_variable = {
												which = math.e.tmp
												which = math.e.a3
											}
											change_variable = {
												which = math.e.tmp
												which = math.e.a1
											}
											divide_variable = {
												which = math.e.tmp
												which = math.e.fct
											}
											change_variable = {
												which = math.e.sm
												which = math.e.tmp
											}
											set_variable = {
												which = math.e.prec
												value = 3
											}
											subtract_variable = {
												which = math.e.prec
												value = 1
											}
											while = {
												limit = {
													check_variable = {
														which = math.e.prec
														value = 1
													}
												}
												subtract_variable = {
													which = math.e.prec
													value = 1
												}
												change_variable = {
													which = math.e.fctl
													value = 1
												}
												multiply_variable = {
													which = math.e.fct
													which = math.e.fctl
												}
												change_variable = {
													which = math.e.fctl
													value = 1
												}
												multiply_variable = {
													which = math.e.fct
													which = math.e.fctl
												}
												multiply_variable = {
													which = math.e.a1
													which = math.e.sq
												}
												multiply_variable = {
													which = math.e.a2
													which = math.e.sq
												}
												change_variable = {
													which = math.e.a3
													value = 2
												}
												set_variable = {
													which = math.e.tmp
													which = math.e.a2
												}
												multiply_variable = {
													which = math.e.tmp
													which = math.e.a3
												}
												change_variable = {
													which = math.e.tmp
													which = math.e.a1
												}
												divide_variable = {
													which = math.e.tmp
													which = math.e.fct
												}
												change_variable = {
													which = math.e.sm
													which = math.e.tmp
												}
											}
										}
										multiply_variable = {
											which = math.e.return
											which = math.e.sm
										}
										set_variable = {
											which = exp_val
											which = math.e.return
										}
										set_variable = {
											which = math.e.sm
											value = 0
										}
										set_variable = {
											which = math.e.tmp
											value = 0
										}
										set_variable = {
											which = math.e.a1
											value = 0
										}
										set_variable = {
											which = math.e.a2
											value = 0
										}
										set_variable = {
											which = math.e.a3
											value = 0
										}
										set_variable = {
											which = math.e.fctl
											value = 0
										}
										set_variable = {
											which = math.e.fct
											value = 0
										}
										set_variable = {
											which = math.e.prec
											value = 0
										}
										set_variable = {
											which = math.e.sq
											value = 0
										}
									}
									set_variable = {
										which = math.e.expnt
										value = 0
									}
									set_variable = {
										which = math.e.return
										value = 0
									}
									while = {
										limit = {
											check_variable = {
												which = int_m_exp
												value = 1
											}
										}
										subtract_variable = {
											which = int_m_exp
											value = 1
										}
										multiply_variable = {
											which = exp_val
											which = inp_m_exp
										}
									}
									set_variable = {
										which = exp_m_exp
										value = 0
									}
									set_variable = {
										which = int_m_exp
										value = 0
									}
									set_variable = {
										which = dec_m_exp
										value = 0
									}
									set_variable = {
										which = ln_val
										value = 0
									}
								}
								set_variable = {
									which = inp_m_exp
									value = 0
								}
								set_variable = {
									which = EstateProv_Unrest
									which = exp_val
								}
								set_variable = {
									which = exp_val
									value = 0
								}
								export_to_variable = {
									which = EstateProv_LA
									value = local_autonomy
								}
								multiply_variable = {
									which = EstateProv_LA
									value = 0.008
								}
								change_variable = {
									which = EstateProv_LA
									value = 0.2
								}
								multiply_variable = {
									which = EstateProv_Unrest
									which = EstateProv_LA
								}
								set_variable = {
									which = EstateProv_Unrest_Inp
									which = EstateProv_Unrest
								}
								if = {
									limit = {
										has_province_flag = loss
									}
									clr_province_flag = loss
									multiply_variable = {
										which = EstateProv_Unrest
										value = -1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 0.1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 10
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 25.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 25.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_25.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_25.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_25.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 12.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 12.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_12.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_12.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_12.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 6.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 6.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_6.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_6.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_6.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 3.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 3.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_3.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_3.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_3.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 1.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 1.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_1.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_1.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_1.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.1
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.1
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestLoss_0.1
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestLoss_0.1
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								else_if = {
									limit = {
										has_province_flag = gain
									}
									clr_province_flag = gain
									multiply_variable = {
										which = EstateProv_Unrest
										value = 1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 0.1
									}
									multiply_variable = {
										which = EstateProv_Unrest
										value = 10
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 25.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 25.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_25.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_25.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
										remove_province_modifier = EstateProv_UnrestGain_25.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 12.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 12.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_12.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_12.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
										remove_province_modifier = EstateProv_UnrestGain_12.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 6.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 6.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_6.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_6.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
										remove_province_modifier = EstateProv_UnrestGain_6.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 3.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 3.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_3.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_3.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
										remove_province_modifier = EstateProv_UnrestGain_3.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 1.6
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 1.6
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_1.6
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_1.6
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
										remove_province_modifier = EstateProv_UnrestGain_1.6
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.8
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.8
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.8
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.8
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
										remove_province_modifier = EstateProv_UnrestGain_0.8
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.4
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.4
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.4
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.4
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
										remove_province_modifier = EstateProv_UnrestGain_0.4
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.2
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.2
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.2
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.2
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
										remove_province_modifier = EstateProv_UnrestGain_0.2
									}
									if = {
										limit = {
											check_variable = {
												which = EstateProv_Unrest_Inp
												value = 0.1
											}
										}
										subtract_variable = {
											which = EstateProv_Unrest_Inp
											value = 0.1
										}
										if = {
											limit = {
												NOT = {
													has_province_modifier = EstateProv_UnrestGain_0.1
												}
											}
											add_province_modifier = {
												name = EstateProv_UnrestGain_0.1
												duration = -1
												hidden = yes
											}
										}
									}
									else_if = {
										limit = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
										remove_province_modifier = EstateProv_UnrestGain_0.1
									}
								}
								if = {
									limit = {
										check_variable = {
											which = EstateProv_UnrestSave
											value = 0.001
										}
									}
									if = {
										limit = {
											NOT = {
												check_variable = {
													which = EstateProv_Unrest
													value = 0.001
												}
											}
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_25.6
											}
											remove_province_modifier = EstateProv_UnrestGain_25.6
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_12.8
											}
											remove_province_modifier = EstateProv_UnrestGain_12.8
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_6.4
											}
											remove_province_modifier = EstateProv_UnrestGain_6.4
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_3.2
											}
											remove_province_modifier = EstateProv_UnrestGain_3.2
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_1.6
											}
											remove_province_modifier = EstateProv_UnrestGain_1.6
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.8
											}
											remove_province_modifier = EstateProv_UnrestGain_0.8
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.4
											}
											remove_province_modifier = EstateProv_UnrestGain_0.4
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.2
											}
											remove_province_modifier = EstateProv_UnrestGain_0.2
										}
										if = {
											limit = {
												has_province_modifier = EstateProv_UnrestGain_0.1
											}
											remove_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
								}
								else_if = {
									limit = {
										NOT = {
											check_variable = {
												which = EstateProv_UnrestSave
												value = 0
											}
										}
										check_variable = {
											which = EstateProv_Unrest
											value = 0
										}
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_25.6
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_12.8
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_6.4
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_3.2
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
										remove_province_modifier = EstateProv_UnrestLoss_1.6
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.8
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.4
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.2
									}
									if = {
										limit = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
										remove_province_modifier = EstateProv_UnrestLoss_0.1
									}
								}
								if = {
									limit = {
										is_variable_equal = {
											which = EstateProv_Unrest
											value = 0
										}
									}
									set_variable = {
										which = EstateProv_Unrest
										value = 0
									}
								}
								set_variable = {
									which = EstateProv_UnrestSave
									value = 0
								}
								set_variable = {
									which = EstateProv_LA
									value = 0
								}
								set_variable = {
									which = EstateProv_Unrest_Inp
									value = 0
								}
							}
						}
					}
				}
				else = {
					add_legitimacy = 10
					add_horde_unity = 10
				}
				clr_country_flag = in_laws_provide_help_with_nobility
			}
			in_laws_provide_adm_advisor = {
				custom_tooltip = consort_events.4.a.tt.6
				if = {
					limit = {
						monthly_income = 35
					}
					define_advisor = {
						type = natural_scientist
						culture = event_target:domain_of_spouses_family_province
						religion = event_target:domain_of_spouses_family_province
						skill = 3
						discount = yes
					}
				}
				else = {
					define_advisor = {
						type = natural_scientist
						culture = event_target:domain_of_spouses_family_province
						religion = event_target:domain_of_spouses_family_province
						skill = 2
						discount = yes
					}
				}
				clr_country_flag = pay_nav_trad
			}
		}
		custom_tooltip = consort_events.4.a.tt.0
	}
	option = {
		name = consort_events.4.b
		add_prestige = 5
		custom_tooltip = consort_events.4.b.tt
	}
}
country_event = {
	id = consort_events.5
	title = consort_events.5.t
	desc = consort_events.5.d
	picture = DIPLOMACY_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		is_lesser_in_union = no
		NOT = {
			has_ruler_flag = has_lowborn_consort
		}
		has_consort_regency = yes
		any_owned_province = {
			has_province_modifier = domain_of_spouses_family
		}
	}
	immediate = {
		hidden_effect = {
			random_list = {
				15 = {
					set_country_flag = develop_seat_province
				}
				15 = {
					set_country_flag = pay_money
				}
				15 = {
					set_country_flag = pay_legitimacy_or_give_noble_influence
				}
				15 = {
					set_country_flag = kick_advisor
				}
				15 = {
					set_country_flag = pay_mil_trad
				}
				15 = {
					set_country_flag = pay_nav_trad
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 500
	}
	option = {
		name = consort_events.5.a
		if = {
			limit = {
				has_ruler_flag = accepted_help_from_regents_family
			}
			clr_ruler_flag = accepted_help_from_regents_family
		}
		if = {
			limit = {
				has_ruler_flag = refused_to_help_consort_regents_family
			}
			clr_ruler_flag = refused_to_help_consort_regents_family
		}
		set_ruler_flag = helped_spouses_family
		trigger_switch = {
			on_trigger = has_country_flag
			develop_seat_province = {
				custom_tooltip = consort_events.3.a.tt.1
				random_owned_province = {
					limit = {
						has_province_modifier = domain_of_spouses_family
					}
					add_province_modifier = {
						name = "developping_consort_seat"
						duration = 3650
					}
				}
				add_adm_power = -70
				add_dip_power = -70
				clr_country_flag = develop_seat_province
			}
			pay_money = {
				custom_tooltip = consort_events.3.a.tt.2
				add_years_of_income = -0.35
				clr_country_flag = pay_money
			}
			pay_legitimacy_or_give_noble_influence = {
				custom_tooltip = consort_events.3.a.tt.3
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_weight_share
							value = 0.01
						}
					}
					every_owned_province = {
						limit = {
							has_province_flag = greater_nobles_control_province
						}
						add_local_autonomy = 15
					}
				}
				else = {
					add_prestige = -10
				}
				clr_country_flag = pay_legitimacy_or_give_noble_influence
			}
			kick_advisor = {
				custom_tooltip = consort_events.3.a.tt.4
				kill_advisor = random
				add_adm_power = -75
				clr_country_flag = kick_advisor
			}
			pay_mil_trad = {
				if = {
					limit = {
						army_tradition = 50
					}
					custom_tooltip = consort_events.3.a.tt.5
					add_army_tradition = -25
				}
				if = {
					limit = {
						NOT = {
							army_tradition = 50
						}
					}
					custom_tooltip = consort_events.3.a.tt.6b
					add_corruption = 1
				}
				clr_country_flag = pay_mil_trad
			}
			pay_nav_trad = {
				if = {
					limit = {
						OR = {
							num_of_ports = 5
							navy_tradition = 50
						}
					}
					custom_tooltip = consort_events.3.a.tt.6
					add_navy_tradition = -25
				}
				if = {
					limit = {
						NOT = {
							num_of_ports = 5
						}
						NOT = {
							navy_tradition = 50
						}
					}
					custom_tooltip = consort_events.3.a.tt.6b
					add_corruption = 1
				}
				clr_country_flag = pay_nav_trad
			}
		}
		custom_tooltip = consort_events.3.a.tt.0
	}
	option = {
		name = consort_events.5.b
		custom_tooltip = consort_events.5.b.tt
		set_ruler_flag = refused_to_help_consort_regents_family
		add_prestige = -5
		random_owned_province = {
			limit = {
				has_province_modifier = domain_of_spouses_family
			}
			add_local_autonomy = 35
		}
	}
}
country_event = {
	id = consort_events.6
	title = consort_events.6.t
	desc = consort_events.6.d
	picture = ROYAL_COUPLE_FUTURE_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		is_lesser_in_union = no
		has_consort = no
		has_regency = no
		num_of_cities = 2
		government = monarchy
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		NOT = {
			AND = {
				OR = {
					has_reform = elective_monarchy
					has_reform = elective_monarchy_legacy
					has_reform = mamluk_government_legacy
				}
			}
		}
		NOT = {
			has_ruler_flag = turned_down_marriage_offer_for_love
		}
		any_owned_province = {
			has_province_flag = greater_nobles_control_province
		}
		any_owned_province = {
			is_capital = no
			NOT = {
				has_province_flag = greater_nobles_control_province
			}
			NOT = {
				has_province_flag = tribals_control_province
			}
		}
	}
	mean_time_to_happen = {
		months = 1200
		modifier = {
			factor = 4
			OR = {
				ruler_has_personality = malevolent_personality
				ruler_has_personality = naive_personality
				ruler_has_personality = cruel_personality
				ruler_has_personality = infertile_personality
				ruler_has_personality = babbling_buffoon_personality
			}
		}
		modifier = {
			factor = 0.9
			OR = {
				ruler_has_personality = charismatic_negotiator_personality
				ruler_has_personality = silver_tongue_personality
				ruler_has_personality = well_connected_personality
			}
		}
		modifier = {
			factor = 0.9
			OR = {
				ruler_has_personality = kind_hearted_personality
				ruler_has_personality = benevolent_personality
			}
		}
		modifier = {
			factor = 0.9
			OR = {
				ruler_has_personality = sinner_personality
				ruler_has_personality = drunkard_personality
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					is_capital = no
					NOT = {
						has_province_flag = greater_nobles_control_province
					}
					NOT = {
						has_province_flag = tribals_control_province
					}
				}
				save_event_target_as = consort_home
			}
			set_variable = {
				which = greater_nobles_loyalty_removed_a
				value = 10
			}
		}
	}
	option = {
		name = consort_events.6.a
		set_ruler_flag = has_lowborn_consort
		define_consort = {}
		add_ruler_modifier = {
			name = consort_of_the_people
		}
		event_target:consort_home = {
			add_province_modifier = {
				name = home_of_consort
				duration = -1
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_greater_nobles_weight_share
					value = 0.01
				}
			}
			custom_tooltip = estate_greater_nobles_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = greater_nobles_loyalty_removed
					value = 0
				}
				set_variable = {
					which = greater_nobles_loyalty_removed
					which = greater_nobles_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -64
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -32
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -16
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -8
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -4
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -2
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = -1
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = greater_nobles_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_greater_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_greater_nobles_loyalty
						}
						set_variable = {
							which = estate_greater_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		add_prestige = -10
		add_legitimacy = -20
	}
	option = {
		name = consort_events.6.b
		set_ruler_flag = turned_down_marriage_offer_for_love
	}
}
country_event = {
	id = consort_events.51
	title = consort_events.51.t
	picture = KING_DOING_GREAT_eventPicture
	desc = {
		trigger = {
			can_heir_be_child_of_consort = yes
			NOT = {
				AND = {
					OR = {
						has_reform = elective_monarchy
						has_reform = elective_monarchy_legacy
						has_reform = mamluk_government_legacy
					}
				}
			}
		}
		desc = consort_events.51.da
	}
	desc = {
		trigger = {
			OR = {
				has_heir = no
				can_heir_be_child_of_consort = no
				AND = {
					OR = {
						has_reform = elective_monarchy
						has_reform = elective_monarchy_legacy
						has_reform = mamluk_government_legacy
					}
				}
			}
		}
		desc = consort_events.51.db
	}
	trigger = {
		has_dlc = "Rights of Man"
		is_lesser_in_union = no
		has_consort = yes
		has_foreign_consort = yes
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		any_country = {
			has_given_consort_to = ROOT
			exists = yes
		}
		NOT = {
			has_ruler_flag = approached_by_consorts_foreign_family
		}
	}
	immediate = {
		hidden_effect = {
			set_ruler_flag = approached_by_consorts_foreign_family
			random_known_country = {
				limit = {
					has_given_consort_to = ROOT
				}
				save_event_target_as = origin_country_of_consort
			}
		}
	}
	mean_time_to_happen = {
		months = 360
	}
	option = {
		name = consort_events.51.a
		custom_tooltip = consort_events.51.a.tt
		add_dip_power = 10
		event_target:origin_country_of_consort = {
			add_opinion = {
				who = ROOT
				modifier = we_are_kin
			}
		}
	}
}
country_event = {
	id = consort_events.52
	title = consort_events.52.t
	desc = consort_events.52.da
	picture = KINGS_CHOICE_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		NOT = {
			has_country_modifier = heretic_royalty
		}
		NOT = {
			is_tribal = yes
		}
		NOT = {
			is_nomad = yes
		}
		NOT = {
			religion = tengri_pagan_reformed
		}
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		any_country = {
			has_given_consort_to = ROOT
			NOT = {
				religion = ROOT
			}
		}
		NOT = {
			has_consort_flag = the_people_dislike_infidel_consort
		}
	}
	immediate = {
		hidden_effect = {
			set_consort_flag = the_people_dislike_infidel_consort
			random_known_country = {
				limit = {
					has_given_consort_to = ROOT
				}
				save_event_target_as = origin_country_of_consort
			}
		}
	}
	mean_time_to_happen = {
		months = 360
	}
	option = {
		name = consort_events.52.a
		custom_tooltip = consort_events.52.a.tt
		add_country_modifier = {
			name = "heretic_royalty"
			duration = 3650
		}
	}
	option = {
		name = consort_events.52.b
		custom_tooltip = consort_events.52.b.tt
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
				has_foreign_consort = yes
			}
			random_country = {
				limit = {
					is_origin_of_consort = ROOT
				}
				hidden_effect = {
					country_event = {
						id = consort_events.205
						days = 1
					}
				}
				tooltip = {
					add_opinion = {
						who = ROOT
						modifier = offended_by_divorce
					}
					add_casus_belli = {
						target = ROOT
						type = cb_insult
						months = 60
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
				has_foreign_consort = no
				any_owned_province = {
					has_province_modifier = domain_of_spouses_family
				}
			}
			every_owned_province = {
				limit = {
					has_province_modifier = domain_of_spouses_family
				}
				add_province_modifier = {
					name = angered_nobles
					duration = 7300
				}
			}
		}
		if = {
			limit = {
				NOT = {
					religion_group = christian
				}
			}
			custom_tooltip = divorce.a.tt
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							any_country = {
								is_origin_of_consort = ROOT
							}
						}
					}
					remove_consort = yes
					country_event = {
						id = consort_events.206
					}
				}
			}
			define_consort = {}
		}
		if = {
			limit = {
				OR = {
					AND = {
						religion_group = christian
						NOT = {
							religion = catholic
						}
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
			}
			custom_tooltip = divorce.b.tt
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							any_country = {
								is_origin_of_consort = ROOT
							}
						}
					}
					remove_consort = yes
					country_event = {
						id = consort_events.206
					}
				}
			}
		}
		if = {
			limit = {
				religion = catholic
				exists = PAP
			}
			country_event = {
				id = consort_events.201
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						NOT = {
							exists = PAP
						}
						religion = catholic
					}
				}
			}
			add_prestige = -15
		}
	}
}
country_event = {
	id = consort_events.53
	title = consort_events.53.t
	desc = consort_events.53.d
	picture = KINGS_CHOICE_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_regency = no
		has_consort = yes
		is_lesser_in_union = no
		NOT = {
			is_tribal = yes
		}
		NOT = {
			is_nomad = yes
		}
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		any_country = {
			has_given_consort_to = ROOT
			OR = {
				war_with = ROOT
				is_rival = ROOT
				is_enemy = ROOT
			}
		}
		AND = {
			OR = {
				advisor = army_organiser
				advisor = army_reformer
				advisor = commandant
				advisor = grand_captain
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = quartermaster
				advisor = colonel
			}
		}
		NOT = {
			has_ruler_modifier = without_spouse_advice
		}
	}
	immediate = {
		hidden_effect = {
			random_known_country = {
				limit = {
					has_given_consort_to = ROOT
				}
				save_event_target_as = origin_country_of_consort
			}
		}
	}
	mean_time_to_happen = {
		months = 360
	}
	option = {
		name = consort_events.53.a
		custom_tooltip = consort_events.53.a.tt
		add_adm_power = -35
		if = {
			limit = {
				advisor = army_organiser
			}
			remove_advisor = army_organiser
		}
		if = {
			limit = {
				advisor = army_reformer
			}
			remove_advisor = army_reformer
		}
		if = {
			limit = {
				advisor = commandant
			}
			remove_advisor = commandant
		}
		if = {
			limit = {
				advisor = grand_captain
			}
			remove_advisor = grand_captain
		}
		if = {
			limit = {
				advisor = recruitmaster
			}
			remove_advisor = recruitmaster
		}
		if = {
			limit = {
				advisor = fortification_expert
			}
			remove_advisor = fortification_expert
		}
		if = {
			limit = {
				advisor = quartermaster
			}
			remove_advisor = quartermaster
		}
	}
	option = {
		name = consort_events.53.b
		custom_tooltip = consort_events.53.b.tt
		add_ruler_modifier = {
			name = "without_spouse_advice"
			duration = 1825
		}
	}
}
country_event = {
	id = consort_events.54
	title = consort_events.54.t
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		OR = {
			consort_dip = 5
			consort_adm = 5
			consort_mil = 5
		}
		NOT = {
			has_ruler_modifier = without_spouse_advice
		}
		NOT = {
			has_country_modifier = consort_adm_advice
		}
		NOT = {
			has_country_modifier = consort_dip_advice
		}
		NOT = {
			has_country_modifier = consort_mil_advice
		}
	}
	picture = {
		trigger = {
			has_female_consort = yes
		}
		picture = QUEEN_AT_COUNCIL_TABLE_eventPicture
	}
	picture = {
		trigger = {
			has_female_consort = no
		}
		picture = BABBLING_BAFFOON_eventPicture
	}
	desc = {
		trigger = {
			has_ruler_flag = high_adm
		}
		desc = consort_events.54.da
	}
	desc = {
		trigger = {
			has_ruler_flag = high_dip
		}
		desc = consort_events.54.db
	}
	desc = {
		trigger = {
			has_ruler_flag = high_mil
		}
		desc = consort_events.54.dc
	}
	desc = {
		trigger = {
			NOT = {
				has_ruler_flag = high_adm
				has_ruler_flag = high_dip
				has_ruler_flag = high_mil
			}
		}
		desc = consort_events.54.dd
	}
	immediate = {
		hidden_effect = {
			export_to_variable = {
				which = consort_admVar
				value = consort_adm
			}
			export_to_variable = {
				which = consort_dipVar
				value = consort_dip
			}
			export_to_variable = {
				which = consort_milVar
				value = consort_mil
			}
			if = {
				limit = {
					OR = {
						AND = {
							check_variable = {
								which = consort_milVar
								which = consort_admVar
							}
							NOT = {
								check_variable = {
									which = consort_admVar
									which = consort_milVar
								}
							}
							check_variable = {
								which = consort_milVar
								which = consort_dipVar
							}
							NOT = {
								check_variable = {
									which = consort_dipVar
									which = consort_milVar
								}
							}
						}
						AND = {
							check_variable = {
								which = consort_milVar
								which = consort_admVar
							}
							NOT = {
								check_variable = {
									which = consort_admVar
									which = consort_milVar
								}
							}
							check_variable = {
								which = consort_milVar
								which = consort_dipVar
							}
						}
						AND = {
							check_variable = {
								which = consort_milVar
								which = consort_dipVar
							}
							NOT = {
								check_variable = {
									which = consort_dipVar
									which = consort_milVar
								}
							}
							check_variable = {
								which = consort_milVar
								which = consort_amdVar
							}
						}
					}
				}
				set_ruler_flag = high_mil
			}
			if = {
				limit = {
					OR = {
						AND = {
							check_variable = {
								which = consort_admVar
								which = consort_dipVar
							}
							NOT = {
								check_variable = {
									which = consort_dipVar
									which = consort_admVar
								}
							}
							check_variable = {
								which = consort_admVar
								which = consort_milVar
							}
							NOT = {
								check_variable = {
									which = consort_milVar
									which = consort_admVar
								}
							}
						}
						AND = {
							check_variable = {
								which = consort_admVar
								which = consort_dipVar
							}
							check_variable = {
								which = consort_admVar
								which = consort_milVar
							}
							NOT = {
								check_variable = {
									which = consort_milVar
									which = consort_admVar
								}
							}
						}
					}
				}
				set_ruler_flag = high_adm
			}
			if = {
				limit = {
					check_variable = {
						which = consort_dip
						which = consort_adm
					}
					NOT = {
						check_variable = {
							which = consort_adm
							which = consort_dip
						}
					}
					check_variable = {
						which = consort_dip
						which = consort_mil
					}
					NOT = {
						check_variable = {
							which = consort_mil
							which = consort_dip
						}
					}
				}
				set_ruler_flag = high_dip
			}
		}
	}
	mean_time_to_happen = {
		months = 600
	}
	option = {
		name = consort_events.54.a
		add_country_modifier = {
			name = "consort_adm_advice"
			duration = 7300
		}
		clr_ruler_flag = high_adm
		trigger = {
			has_ruler_flag = high_adm
		}
	}
	option = {
		name = consort_events.54.b
		add_country_modifier = {
			name = "consort_dip_advice"
			duration = 7300
		}
		clr_ruler_flag = high_dip
		trigger = {
			has_ruler_flag = high_dip
		}
	}
	option = {
		name = consort_events.54.c
		add_country_modifier = {
			name = "consort_mil_advice"
			duration = 7300
		}
		clr_ruler_flag = high_mil
		trigger = {
			has_ruler_flag = high_mil
		}
	}
	option = {
		name = consort_events.54.d
		random_list = {
			30 = {
				add_country_modifier = {
					name = "consort_adm_advice"
					duration = 7300
				}
			}
			30 = {
				add_country_modifier = {
					name = "consort_dip_advice"
					duration = 7300
				}
			}
			30 = {
				add_country_modifier = {
					name = "consort_mil_advice"
					duration = 7300
				}
			}
		}
		clr_ruler_flag = high_adm
		clr_ruler_flag = high_dip
		clr_ruler_flag = high_mil
		trigger = {
			NOT = {
				has_ruler_flag = high_adm
				has_ruler_flag = high_dip
				has_ruler_flag = high_mil
			}
		}
	}
	after = {
		if = {
			limit = {
				NOT = {
					has_global_flag = show_for_developers
				}
			}
			set_variable = {
				which = consort_admVar
				value = 0
			}
			set_variable = {
				which = consort_dipVar
				value = 0
			}
			set_variable = {
				which = consort_milVar
				value = 0
			}
		}
	}
}
country_event = {
	id = consort_events.55
	title = consort_events.55.t
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		has_foreign_consort = yes
		NOT = {
			has_consort_regency = yes
		}
		ruler_consort_marriage_length = 2
		NOT = {
			has_consort_flag = consort_was_thrown_party
		}
		NOT = {
			has_consort_flag = no_party_for_consort
		}
		any_country = {
			has_given_consort_to = ROOT
		}
	}
	picture = {
		trigger = {
			has_dlc = "Women in History"
			has_female_consort = yes
		}
		picture = FEMALES_eventPicture
	}
	picture = {
		trigger = {
			NOT = {
				has_dlc = "Women in History"
			}
		}
		picture = CONSORT_DOING_BADLY_eventPicture
	}
	immediate = {
		hidden_effect = {
			random_known_country = {
				limit = {
					has_given_consort_to = ROOT
				}
				save_event_target_as = origin_country_of_consort
			}
		}
	}
	desc = {
		trigger = {
			event_target:origin_country_of_consort = {
				OR = {
					is_rival = ROOT
					is_enemy = ROOT
					war_with = ROOT
				}
			}
			has_heir = yes
			can_heir_be_child_of_consort = yes
		}
		desc = consort_events.55.da
	}
	desc = {
		trigger = {
			event_target:origin_country_of_consort = {
				OR = {
					is_rival = ROOT
					is_enemy = ROOT
					war_with = ROOT
				}
			}
			has_heir = no
		}
		desc = consort_events.55.db
	}
	desc = {
		trigger = {
			event_target:origin_country_of_consort = {
				OR = {
					is_rival = ROOT
					is_enemy = ROOT
					war_with = ROOT
				}
			}
			has_heir = yes
			can_heir_be_child_of_consort = no
		}
		desc = consort_events.55.dc
	}
	desc = {
		trigger = {
			NOT = {
				event_target:origin_country_of_consort = {
					OR = {
						is_rival = ROOT
						is_enemy = ROOT
						war_with = ROOT
					}
				}
			}
			has_heir = yes
			can_heir_be_child_of_consort = yes
		}
		desc = consort_events.55.dd
	}
	desc = {
		trigger = {
			NOT = {
				event_target:origin_country_of_consort = {
					OR = {
						is_rival = ROOT
						is_enemy = ROOT
						war_with = ROOT
					}
				}
			}
			has_heir = no
		}
		desc = consort_events.55.de
	}
	desc = {
		trigger = {
			NOT = {
				event_target:origin_country_of_consort = {
					OR = {
						is_rival = ROOT
						is_enemy = ROOT
						war_with = ROOT
					}
				}
			}
			has_heir = yes
			can_heir_be_child_of_consort = no
		}
		desc = consort_events.55.df
	}
	mean_time_to_happen = {
		months = 360
	}
	option = {
		name = consort_events.55.a
		custom_tooltip = consort_events.55.a.tt
		add_adm_power = -35
		add_treasury = -25
		hidden_effect = {
			set_consort_flag = consort_was_thrown_party
			country_event = {
				id = consort_events.60
				days = 180
			}
		}
	}
	option = {
		name = consort_events.55.b
		custom_tooltip = consort_events.55.b.tt
		set_consort_flag = no_party_for_consort
	}
}
country_event = {
	id = consort_events.56
	title = consort_events.56.t
	desc = consort_events.56.d
	picture = ROYAL_COUPLE_FUTURE_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		any_country = {
			marriage_with = ROOT
			has_consort = yes
			has_consort_regency = no
			has_foreign_consort = yes
			is_origin_of_consort = ROOT
			NOT = {
				is_tribal = yes
			}
			NOT = {
				is_nomad = yes
			}
		}
		OR = {
			NOT = {
				has_ruler_flag = asked_foreign_in_laws_for_help
			}
			had_ruler_flag = {
				flag = asked_foreign_in_laws_for_help
				days = 7300
			}
		}
		OR = {
			num_of_loans = 1
			NOT = {
				treasury = 100
			}
			NOT = {
				manpower_percentage = 0.7
			}
		}
	}
	mean_time_to_happen = {
		months = 250
	}
	immediate = {
		hidden_effect = {
			random_country = {
				limit = {
					marriage_with = ROOT
					has_consort = yes
					has_consort_regency = no
					has_foreign_consort = yes
					is_origin_of_consort = ROOT
				}
				save_event_target_as = marriage_partner
			}
		}
	}
	option = {
		trigger = {
			OR = {
				num_of_loans = 1
				NOT = {
					treasury = 100
				}
			}
		}
		name = consort_events.56.a
		custom_tooltip = consort_events.56.a.tt
		set_ruler_flag = asked_foreign_in_laws_for_help
		set_country_flag = asked_consort_for_money
		event_target:marriage_partner = {
			country_event = {
				id = consort_events.57
				days = 30
			}
		}
	}
	option = {
		trigger = {
			NOT = {
				adm_power = 500
			}
		}
		name = consort_events.56.b
		custom_tooltip = consort_events.56.b.tt
		set_ruler_flag = asked_foreign_in_laws_for_help
		set_country_flag = asked_consort_for_adm
		event_target:marriage_partner = {
			country_event = {
				id = consort_events.57
				days = 30
			}
		}
	}
	option = {
		trigger = {
			NOT = {
				dip_power = 500
			}
		}
		name = consort_events.56.c
		custom_tooltip = consort_events.56.c.tt
		set_ruler_flag = asked_foreign_in_laws_for_help
		set_country_flag = asked_consort_for_dip
		event_target:marriage_partner = {
			country_event = {
				id = consort_events.57
				days = 30
			}
		}
	}
	option = {
		trigger = {
			NOT = {
				mil_power = 500
			}
		}
		name = consort_events.56.e
		custom_tooltip = consort_events.56.e.tt
		set_ruler_flag = asked_foreign_in_laws_for_help
		set_country_flag = asked_consort_for_mil
		event_target:marriage_partner = {
			country_event = {
				id = consort_events.57
				days = 30
			}
		}
	}
	option = {
		trigger = {
			NOT = {
				manpower_percentage = 0.7
			}
		}
		name = consort_events.56.f
		custom_tooltip = consort_events.56.f.tt
		set_ruler_flag = asked_foreign_in_laws_for_help
		set_country_flag = asked_consort_for_manpower
		event_target:marriage_partner = {
			country_event = {
				id = consort_events.57
				days = 30
			}
		}
	}
	option = {
		name = consort_events.56.g
		add_prestige = 5
	}
}
country_event = {
	id = consort_events.57
	title = consort_events.57.t
	picture = {
		trigger = {
			has_female_consort = yes
		}
		picture = QUEEN_AT_COUNCIL_TABLE_eventPicture
	}
	picture = {
		trigger = {
			has_female_consort = no
		}
		picture = BABBLING_BAFFOON_eventPicture
	}
	desc = {
		trigger = {
			FROM = {
				has_country_flag = asked_consort_for_money
			}
		}
		desc = consort_events.57.da
	}
	desc = {
		trigger = {
			FROM = {
				has_country_flag = asked_consort_for_adm
			}
		}
		desc = consort_events.57.db
	}
	desc = {
		trigger = {
			FROM = {
				has_country_flag = asked_consort_for_dip
			}
		}
		desc = consort_events.57.dc
	}
	desc = {
		trigger = {
			FROM = {
				has_country_flag = asked_consort_for_mil
			}
		}
		desc = consort_events.57.dd
	}
	desc = {
		trigger = {
			FROM = {
				has_country_flag = asked_consort_for_manpower
			}
		}
		desc = consort_events.57.de
	}
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			if = {
				limit = {
					FROM = {
						has_country_flag = asked_consort_for_money
					}
				}
				export_to_variable = {
					which = money_to_give
					value = monthly_income
					who = ROOT
				}
				multiply_variable = {
					which = money_to_give
					value = 6
				}
				export_to_variable = {
					which = money_available
					value = treasury
					who = ROOT
				}
				if = {
					limit = {
						check_variable = {
							which = money_to_give
							which = money_available
						}
					}
					set_variable = {
						which = money_to_give
						which = money_available
					}
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					FROM = {
						has_country_flag = asked_consort_for_manpower
					}
				}
				if = {
					limit = {
						manpower_percentage = 0.2
					}
					export_to_variable = {
						which = our_manpower
						value = max_manpower
						who = ROOT
					}
					multiply_variable = {
						which = our_manpower
						value = 0.2
					}
				}
				if = {
					limit = {
						NOT = {
							manpower_percentage = 0.2
						}
					}
					export_to_variable = {
						which = our_manpower
						value = manpower
						who = ROOT
					}
				}
				export_to_variable = {
					which = their_manpower_need
					value = max_manpower
					who = FROM
				}
				export_to_variable = {
					which = their_manpower
					value = manpower
					who = FROM
				}
				subtract_variable = {
					which = their_manpower_need
					which = their_manpower
				}
				if = {
					limit = {
						check_variable = {
							which = our_manpower
							which = their_manpower_need
						}
					}
					set_variable = {
						which = manpower_to_send
						which = their_manpower_need
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = our_manpower
								which = their_manpower_need
							}
						}
					}
					set_variable = {
						which = manpower_to_send
						which = our_manpower
					}
				}
			}
		}
	}
	option = {
		trigger = {
			FROM = {
				has_country_flag = asked_consort_for_money
			}
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.25
				has_opinion = {
					who = FROM
					value = 150
				}
			}
			modifier = {
				factor = 0.5
				NOT = {
					has_opinion = {
						who = FROM
						value = 100
					}
				}
			}
			modifier = {
				factor = 0
				NOT = {
					has_opinion = {
						who = FROM
						value = 50
					}
				}
			}
		}
		name = consort_events.57.a
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = money_to_give
						value = 25
					}
				}
			}
			add_treasury = -10
		}
		if = {
			limit = {
				check_variable = {
					which = money_to_give
					value = 25
				}
				NOT = {
					check_variable = {
						which = money_to_give
						value = 50
					}
				}
			}
			add_treasury = -25
		}
		if = {
			limit = {
				check_variable = {
					which = money_to_give
					value = 50
				}
				NOT = {
					check_variable = {
						which = money_to_give
						value = 100
					}
				}
			}
			add_treasury = -50
		}
		if = {
			limit = {
				check_variable = {
					which = money_to_give
					value = 100
				}
				NOT = {
					check_variable = {
						which = money_to_give
						value = 250
					}
				}
			}
			add_treasury = -100
		}
		if = {
			limit = {
				check_variable = {
					which = money_to_give
					value = 250
				}
			}
			add_treasury = -250
		}
		FROM = {
			country_event = {
				id = consort_events.58
				days = 5
			}
		}
		reverse_add_opinion = {
			who = FROM
			modifier = grateful_for_aid
		}
	}
	option = {
		trigger = {
			FROM = {
				has_country_flag = asked_consort_for_adm
			}
		}
		name = consort_events.57.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.25
				has_opinion = {
					who = FROM
					value = 150
				}
			}
			modifier = {
				factor = 0.5
				NOT = {
					has_opinion = {
						who = FROM
						value = 100
					}
				}
			}
			modifier = {
				factor = 0
				NOT = {
					has_opinion = {
						who = FROM
						value = 50
					}
				}
			}
		}
		add_adm_power = -25
		FROM = {
			country_event = {
				id = consort_events.58
				days = 5
			}
		}
		reverse_add_opinion = {
			who = FROM
			modifier = grateful_for_aid
		}
	}
	option = {
		trigger = {
			FROM = {
				has_country_flag = asked_consort_for_dip
			}
		}
		name = consort_events.57.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.25
				has_opinion = {
					who = FROM
					value = 150
				}
			}
			modifier = {
				factor = 0.5
				NOT = {
					has_opinion = {
						who = FROM
						value = 100
					}
				}
			}
			modifier = {
				factor = 0
				NOT = {
					has_opinion = {
						who = FROM
						value = 50
					}
				}
			}
		}
		add_dip_power = -25
		FROM = {
			country_event = {
				id = consort_events.58
				days = 5
			}
		}
		reverse_add_opinion = {
			who = FROM
			modifier = grateful_for_aid
		}
	}
	option = {
		trigger = {
			FROM = {
				has_country_flag = asked_consort_for_mil
			}
		}
		name = consort_events.57.d
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.25
				has_opinion = {
					who = FROM
					value = 150
				}
			}
			modifier = {
				factor = 0.5
				NOT = {
					has_opinion = {
						who = FROM
						value = 100
					}
				}
			}
			modifier = {
				factor = 0
				NOT = {
					has_opinion = {
						who = FROM
						value = 50
					}
				}
			}
		}
		add_mil_power = -25
		FROM = {
			country_event = {
				id = consort_events.58
				days = 5
			}
		}
		reverse_add_opinion = {
			who = FROM
			modifier = grateful_for_aid
		}
	}
	option = {
		trigger = {
			FROM = {
				has_country_flag = asked_consort_for_manpower
			}
		}
		name = consort_events.57.e
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.25
				has_opinion = {
					who = FROM
					value = 150
				}
			}
			modifier = {
				factor = 0.5
				NOT = {
					has_opinion = {
						who = FROM
						value = 100
					}
				}
			}
			modifier = {
				factor = 0
				NOT = {
					has_opinion = {
						who = FROM
						value = 50
					}
				}
			}
			modifier = {
				factor = 0
				NOT = {
					max_manpower = 10
				}
			}
		}
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = manpower_to_send
						value = 0.5
					}
				}
			}
			add_yearly_manpower = -0.1
		}
		if = {
			limit = {
				check_variable = {
					which = manpower_to_send
					value = 0.5
				}
				NOT = {
					check_variable = {
						which = manpower_to_send
						value = 1
					}
				}
			}
			add_yearly_manpower = -0.5
		}
		if = {
			limit = {
				check_variable = {
					which = manpower_to_send
					value = 1
				}
				NOT = {
					check_variable = {
						which = manpower_to_send
						value = 2.5
					}
				}
			}
			add_manpower = -1
		}
		if = {
			limit = {
				check_variable = {
					which = manpower_to_send
					value = 2.5
				}
				NOT = {
					check_variable = {
						which = manpower_to_send
						value = 5
					}
				}
			}
			add_manpower = -2.5
		}
		if = {
			limit = {
				check_variable = {
					which = manpower_to_send
					value = 5
				}
			}
			add_manpower = -5
		}
		FROM = {
			country_event = {
				id = consort_events.58
				days = 5
			}
		}
		reverse_add_opinion = {
			who = FROM
			modifier = grateful_for_aid
		}
	}
	option = {
		name = consort_events.57.f
		ai_chance = {
			factor = 50
			modifier = {
				factor = 10.0
				NOT = {
					has_opinion = {
						who = FROM
						value = -50
					}
				}
			}
			modifier = {
				factor = 0.5
				NOT = {
					has_opinion = {
						who = FROM
						value = 100
					}
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					who = FROM
					value = 150
				}
			}
		}
		reverse_add_opinion = {
			who = FROM
			modifier = denied_aid
		}
		add_opinion = {
			who = FROM
			modifier = outrageous_demands
		}
		FROM = {
			country_event = {
				id = consort_events.59
				days = 5
			}
		}
	}
}
country_event = {
	id = consort_events.58
	title = consort_events.58.t
	picture = GOOD_WITH_MONARCH_eventPicture
	desc = {
		trigger = {
			has_country_flag = asked_consort_for_money
		}
		desc = consort_events.58.da
	}
	desc = {
		trigger = {
			has_country_flag = asked_consort_for_adm
		}
		desc = consort_events.58.db
	}
	desc = {
		trigger = {
			has_country_flag = asked_consort_for_dip
		}
		desc = consort_events.58.dc
	}
	desc = {
		trigger = {
			has_country_flag = asked_consort_for_mil
		}
		desc = consort_events.58.dd
	}
	desc = {
		trigger = {
			has_country_flag = asked_consort_for_manpower
		}
		desc = consort_events.58.de
	}
	is_triggered_only = yes
	option = {
		name = consort_events.58.a
		if = {
			limit = {
				has_country_flag = asked_consort_for_money
			}
			FROM = {
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = money_to_give
								value = 25
							}
						}
					}
					ROOT = {
						add_treasury = 10
					}
				}
				if = {
					limit = {
						check_variable = {
							which = money_to_give
							value = 25
						}
						NOT = {
							check_variable = {
								which = money_to_give
								value = 50
							}
						}
					}
					ROOT = {
						add_treasury = 25
					}
				}
				if = {
					limit = {
						check_variable = {
							which = money_to_give
							value = 50
						}
						NOT = {
							check_variable = {
								which = money_to_give
								value = 100
							}
						}
					}
					ROOT = {
						add_treasury = 50
					}
				}
				if = {
					limit = {
						check_variable = {
							which = money_to_give
							value = 100
						}
						NOT = {
							check_variable = {
								which = money_to_give
								value = 250
							}
						}
					}
					ROOT = {
						add_treasury = 100
					}
				}
				if = {
					limit = {
						check_variable = {
							which = money_to_give
							value = 250
						}
					}
					ROOT = {
						add_treasury = 250
					}
				}
			}
			clr_country_flag = asked_consort_for_money
		}
		if = {
			limit = {
				has_country_flag = asked_consort_for_adm
			}
			add_adm_power = 25
			clr_country_flag = asked_consort_for_adm
		}
		if = {
			limit = {
				has_country_flag = asked_consort_for_dip
			}
			add_dip_power = 25
			clr_country_flag = asked_consort_for_dip
		}
		if = {
			limit = {
				has_country_flag = asked_consort_for_mil
			}
			add_mil_power = 25
			clr_country_flag = asked_consort_for_mil
		}
		if = {
			limit = {
				has_country_flag = asked_consort_for_manpower
			}
			FROM = {
				if = {
					limit = {
						check_variable = {
							which = manpower_to_send
							value = 0.1
						}
						NOT = {
							check_variable = {
								which = manpower_to_send
								value = 0.5
							}
						}
					}
					ROOT = {
						add_yearly_manpower = 0.1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_to_send
							value = 0.5
						}
						NOT = {
							check_variable = {
								which = manpower_to_send
								value = 1
							}
						}
					}
					ROOT = {
						add_yearly_manpower = 0.5
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_to_send
							value = 1
						}
						NOT = {
							check_variable = {
								which = manpower_to_send
								value = 2.5
							}
						}
					}
					ROOT = {
						add_manpower = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_to_send
							value = 2.5
						}
						NOT = {
							check_variable = {
								which = manpower_to_send
								value = 5
							}
						}
					}
					ROOT = {
						add_manpower = 2.5
					}
				}
				if = {
					limit = {
						check_variable = {
							which = manpower_to_send
							value = 5
						}
					}
					ROOT = {
						add_manpower = 5
					}
				}
			}
			clr_country_flag = asked_consort_for_manpower
		}
		tooltip = {
			add_opinion = {
				who = FROM
				modifier = grateful_for_aid
			}
		}
	}
}
country_event = {
	id = consort_events.59
	title = consort_events.59.t
	desc = consort_events.59.d
	picture = BAD_WITH_MONARCH_eventPicture
	is_triggered_only = yes
	option = {
		name = consort_events.59.a
		tooltip = {
			add_opinion = {
				who = FROM
				modifier = denied_aid
			}
			reverse_add_opinion = {
				who = FROM
				modifier = outrageous_demands
			}
		}
		clr_country_flag = asked_consort_for_money
		clr_country_flag = asked_consort_for_adm
		clr_country_flag = asked_consort_for_dip
		clr_country_flag = asked_consort_for_mil
		clr_country_flag = asked_consort_for_manpower
	}
}
country_event = {
	id = consort_events.60
	title = consort_events.60.t
	desc = consort_events.60.d
	picture = KING_DOING_GREAT_eventPicture
	is_triggered_only = yes
	trigger = {
		has_consort_flag = consort_was_thrown_party
	}
	option = {
		name = consort_events.60.a
		add_country_modifier = {
			name = "life_of_the_party"
			duration = 7300
		}
	}
}
country_event = {
	id = consort_events.61
	title = consort_events.61.t
	desc = consort_events.61.da
	picture = KINGS_CHOICE_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		has_foreign_consort = yes
		is_lesser_in_union = no
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		NOT = {
			has_country_modifier = heretic_royalty
		}
		any_owned_province = {
			is_capital = no
			has_owner_religion = yes
			is_reformation_center = no
		}
		any_country = {
			has_given_consort_to = ROOT
			NOT = {
				religion = ROOT
			}
		}
		AND = {
			OR = {
				advisor = treasurer
				advisor = philosopher
				advisor = artist
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
				advisor = natural_scientist
				advisor = alderman
				advisor = architect
				advisor = high_judge
				advisor = acardinal
				advisor = astronomist
				advisor = jewish_financier
				advisor = composer
			}
		}
		NOT = {
			has_consort_flag = the_people_dislike_infidel_consort
		}
	}
	immediate = {
		hidden_effect = {
			set_consort_flag = consort_influenced_change_of_religion
			random_known_country = {
				limit = {
					has_given_consort_to = ROOT
				}
				save_event_target_as = origin_country_of_consort
			}
			random_owned_province = {
				limit = {
					is_capital = no
					has_owner_religion = yes
					is_reformation_center = no
					NOT = {
						religion = event_target:origin_country_of_consort
					}
				}
				save_event_target_as = province_under_religious_influence
			}
		}
	}
	mean_time_to_happen = {
		months = 360
	}
	option = {
		name = consort_events.61.a
		event_target:province_under_religious_influence = {
			change_religion = event_target:origin_country_of_consort
			add_province_modifier = {
				name = angered_believers
				duration = 1825
			}
		}
	}
	option = {
		name = consort_events.61.b
		add_prestige = -5
		event_target:province_under_religious_influence = {
			change_religion = event_target:origin_country_of_consort
		}
	}
}
country_event = {
	id = consort_events.101
	title = consort_events.101.t
	picture = QUEEN_AND_MALE_HEIR_eventPicture
	desc = consort_events.101.d
	trigger = {
		has_dlc = "Rights of Man"
		NOT = {
			has_country_flag = primogeniture_succession
		}
		NOT = {
			AND = {
				OR = {
					has_reform = elective_monarchy
					has_reform = elective_monarchy_legacy
					has_reform = mamluk_government_legacy
				}
			}
		}
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		has_heir = yes
		has_consort = yes
		is_lesser_in_union = no
		has_consort_regency = no
		OR = {
			has_female_consort = no
			AND = {
				has_female_consort = yes
				NOT = {
					consort_age = 47
				}
			}
		}
		can_heir_be_child_of_consort = no
		ruler_consort_marriage_length = 7
	}
	mean_time_to_happen = {
		months = 350
	}
	immediate = {
		hidden_effect = {
			random_list = {
				33 = {
					set_ruler_flag = mil_child
				}
				33 = {
					set_ruler_flag = adm_child
				}
				33 = {
					set_ruler_flag = dip_child
				}
			}
			if = {
				limit = {
					OR = {
						culture_group = tartar_group
						culture_group = altaic
						culture_group = tungusic
						culture_group = japanese
						religion = confucianism
					}
				}
				set_ruler_flag = boy_child
			}
			else = {
				random_list = {
					75 = {
						set_ruler_flag = boy_child
					}
					25 = {
						set_ruler_flag = girl_child
					}
				}
			}
		}
	}
	option = {
		name = consort_events.101.a
		custom_tooltip = consort_events.101.a.tt
		if = {
			limit = {
				has_ruler_flag = boy_child
			}
			if = {
				limit = {
					has_ruler_flag = mil_child
				}
				define_heir = {
					mil = 1
					female = no
					age = 6
					dynasty = ROOT
					claim = 80
				}
			}
			if = {
				limit = {
					has_ruler_flag = adm_child
				}
				define_heir = {
					adm = 1
					female = no
					age = 6
					dynasty = ROOT
					claim = 80
				}
			}
			if = {
				limit = {
					has_ruler_flag = dip_child
				}
				define_heir = {
					dip = 1
					female = no
					age = 6
					dynasty = ROOT
					claim = 80
				}
			}
		}
		if = {
			limit = {
				has_ruler_flag = girl_child
			}
			if = {
				limit = {
					has_ruler_flag = mil_child
				}
				define_heir = {
					mil = 1
					female = yes
					age = 6
					dynasty = ROOT
					claim = 80
				}
			}
			if = {
				limit = {
					has_ruler_flag = adm_child
				}
				define_heir = {
					adm = 1
					female = yes
					age = 6
					dynasty = ROOT
					claim = 80
				}
			}
			if = {
				limit = {
					has_ruler_flag = dip_child
				}
				define_heir = {
					dip = 1
					female = yes
					age = 6
					dynasty = ROOT
					claim = 80
				}
			}
		}
		clr_ruler_flag = girl_child
		clr_ruler_flag = boy_child
		clr_ruler_flag = mil_child
		clr_ruler_flag = adm_child
		clr_ruler_flag = dip_child
	}
	option = {
		name = consort_events.101.b
		custom_tooltip = consort_events.101.b.tt
		clr_ruler_flag = girl_child
		clr_ruler_flag = boy_child
		clr_ruler_flag = mil_child
		clr_ruler_flag = adm_child
		clr_ruler_flag = dip_child
	}
}
country_event = {
	id = consort_events.102
	title = consort_events.102.t
	picture = QUEEN_AND_MALE_HEIR_eventPicture
	desc = {
		trigger = {
			has_ruler_flag = girl_child
		}
		desc = consort_events.102.da
	}
	desc = {
		trigger = {
			has_ruler_flag = boy_child
		}
		desc = consort_events.102.db
	}
	trigger = {
		is_lesser_in_union = no
		has_dlc = "Rights of Man"
		NOT = {
			has_country_flag = primogeniture_succession
		}
		NOT = {
			AND = {
				OR = {
					has_reform = elective_monarchy
					has_reform = elective_monarchy_legacy
					has_reform = mamluk_government_legacy
				}
			}
		}
		NOT = {
			has_consort_flag = favorite_played
		}
		has_heir = yes
		has_consort = yes
		can_heir_be_child_of_consort = yes
		consort_age = 30
	}
	mean_time_to_happen = {
		months = 700
	}
	immediate = {
		hidden_effect = {
			random_list = {
				33 = {
					set_ruler_flag = mil_child
				}
				33 = {
					set_ruler_flag = adm_child
				}
				33 = {
					set_ruler_flag = dip_child
				}
			}
			if = {
				limit = {
					OR = {
						culture_group = tartar_group
						culture_group = altaic
						culture_group = tungusic
						culture_group = japanese
						religion = confucianism
					}
				}
				set_ruler_flag = boy_child
			}
			else = {
				random_list = {
					75 = {
						set_ruler_flag = boy_child
					}
					25 = {
						set_ruler_flag = girl_child
					}
				}
			}
			set_consort_flag = favorite_played
		}
	}
	option = {
		trigger = {
			consort_age = 30
			NOT = {
				consort_age = 52
			}
		}
		name = consort_events.102.a
		custom_tooltip = consort_events.102.a.tt
		if = {
			limit = {
				has_ruler_flag = boy_child
			}
			if = {
				limit = {
					has_ruler_flag = mil_child
				}
				define_heir = {
					mil = 2
					female = no
					age = 6
					dynasty = ROOT
					claim = 60
				}
			}
			if = {
				limit = {
					has_ruler_flag = adm_child
				}
				define_heir = {
					adm = 2
					female = no
					age = 6
					dynasty = ROOT
					claim = 60
				}
			}
			if = {
				limit = {
					has_ruler_flag = dip_child
				}
				define_heir = {
					dip = 2
					female = no
					age = 6
					dynasty = ROOT
					claim = 60
				}
			}
		}
		if = {
			limit = {
				has_ruler_flag = girl_child
			}
			if = {
				limit = {
					has_ruler_flag = mil_child
				}
				define_heir = {
					mil = 2
					female = yes
					age = 6
					dynasty = ROOT
					claim = 60
				}
			}
			if = {
				limit = {
					has_ruler_flag = adm_child
				}
				define_heir = {
					adm = 2
					female = yes
					age = 6
					dynasty = ROOT
					claim = 60
				}
			}
			if = {
				limit = {
					has_ruler_flag = dip_child
				}
				define_heir = {
					dip = 2
					female = yes
					age = 6
					dynasty = ROOT
					claim = 60
				}
			}
		}
		clr_ruler_flag = girl_child
		clr_ruler_flag = boy_child
		clr_ruler_flag = mil_child
		clr_ruler_flag = adm_child
		clr_ruler_flag = dip_child
	}
	option = {
		trigger = {
			consort_age = 52
		}
		name = consort_events.102.a
		custom_tooltip = consort_events.102.a.tt
		if = {
			limit = {
				has_ruler_flag = boy_child
			}
			if = {
				limit = {
					has_ruler_flag = mil_child
				}
				define_heir = {
					mil = 2
					female = no
					age = 30
					dynasty = ROOT
					claim = 60
				}
			}
			if = {
				limit = {
					has_ruler_flag = adm_child
				}
				define_heir = {
					adm = 2
					female = no
					age = 30
					dynasty = ROOT
					claim = 60
				}
			}
			if = {
				limit = {
					has_ruler_flag = dip_child
				}
				define_heir = {
					dip = 2
					female = no
					age = 30
					dynasty = ROOT
					claim = 60
				}
			}
		}
		if = {
			limit = {
				has_ruler_flag = girl_child
			}
			if = {
				limit = {
					has_ruler_flag = mil_child
				}
				define_heir = {
					mil = 2
					female = yes
					age = 30
					dynasty = ROOT
					claim = 60
				}
			}
			if = {
				limit = {
					has_ruler_flag = adm_child
				}
				define_heir = {
					adm = 2
					female = yes
					age = 30
					dynasty = ROOT
					claim = 60
				}
			}
			if = {
				limit = {
					has_ruler_flag = dip_child
				}
				define_heir = {
					dip = 2
					female = yes
					age = 30
					dynasty = ROOT
					claim = 60
				}
			}
		}
		clr_ruler_flag = girl_child
		clr_ruler_flag = boy_child
		clr_ruler_flag = mil_child
		clr_ruler_flag = adm_child
		clr_ruler_flag = dip_child
	}
	option = {
		trigger = {
			consort_age = 52
			OR = {
				religion_group = christian
				religion_group = muslim
				religion = jewish
				has_adopted_cult = islam_cult
				has_adopted_cult = christianity_cult
				has_adopted_cult = jewish_cult
			}
		}
		name = consort_events.102.b
		custom_tooltip = consort_events.102.b.tt
		if = {
			limit = {
				has_ruler_flag = boy_child
			}
			if = {
				limit = {
					has_ruler_flag = mil_child
				}
				define_advisor = {
					female = no
					name = Adam
					skill = 3
					type = commandant
					discount = yes
				}
			}
			if = {
				limit = {
					has_ruler_flag = adm_child
				}
				define_advisor = {
					female = no
					name = Adam
					skill = 3
					type = theologian
					discount = yes
				}
			}
			if = {
				limit = {
					has_ruler_flag = dip_child
				}
				define_advisor = {
					female = no
					name = Adam
					skill = 3
					type = statesman
					discount = yes
				}
			}
		}
		if = {
			limit = {
				has_ruler_flag = girl_child
			}
			if = {
				limit = {
					has_ruler_flag = mil_child
				}
				define_advisor = {
					female = yes
					name = Miriam
					skill = 3
					type = commandant
					discount = yes
				}
			}
			if = {
				limit = {
					has_ruler_flag = adm_child
				}
				define_advisor = {
					female = yes
					name = Miriam
					skill = 3
					type = theologian
					discount = yes
				}
			}
			if = {
				limit = {
					has_ruler_flag = dip_child
				}
				define_advisor = {
					female = yes
					name = Miriam
					skill = 3
					type = statesman
					discount = yes
				}
			}
		}
		clr_ruler_flag = girl_child
		clr_ruler_flag = boy_child
		clr_ruler_flag = mil_child
		clr_ruler_flag = adm_child
		clr_ruler_flag = dip_child
	}
	option = {
		name = consort_events.101.b
		custom_tooltip = consort_events.101.b.tt
		clr_ruler_flag = girl_child
		clr_ruler_flag = boy_child
		clr_ruler_flag = mil_child
		clr_ruler_flag = adm_child
		clr_ruler_flag = dip_child
	}
}
country_event = {
	id = consort_events.103
	title = consort_events.103.t
	desc = consort_events.103.d
	picture = CONSORT_DOING_BADLY_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		is_lesser_in_union = no
		NOT = {
			AND = {
				OR = {
					has_reform = elective_monarchy
					has_reform = elective_monarchy_legacy
					has_reform = mamluk_government_legacy
				}
			}
		}
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		has_consort = yes
		has_consort_regency = no
		ruler_consort_marriage_length = 3
		has_heir = no
	}
	mean_time_to_happen = {
		months = 600
		modifier = {
			factor = 0.5
			religion_group = christian
		}
	}
	immediate = {
		hidden_effect = {
			if = {
				limit = {
					OR = {
						culture_group = tartar_group
						culture_group = altaic
						culture_group = tungusic
						culture_group = japanese
						religion = confucianism
					}
				}
				set_ruler_flag = male_cousin
			}
			else = {
				random_list = {
					75 = {
						set_ruler_flag = male_cousin
					}
					25 = {
						set_ruler_flag = female_cousin
					}
				}
			}
		}
	}
	option = {
		name = consort_events.103.b
		custom_tooltip = consort_events.103.b.tt
		if = {
			limit = {
				has_ruler_flag = male_cousin
			}
			define_heir = {
				claim = 60
				male = yes
				age = 30
			}
		}
		if = {
			limit = {
				has_ruler_flag = female_cousin
			}
			define_heir = {
				claim = 60
				female = yes
				age = 30
			}
		}
		clr_ruler_flag = male_cousin
		clr_ruler_flag = female_cousin
	}
	option = {
		name = consort_events.103.c
		custom_tooltip = consort_events.103.c.tt
		add_prestige = -5
		clr_ruler_flag = male_cousin
		clr_ruler_flag = female_cousin
	}
	option = {
		name = consort_events.103.a
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
				has_foreign_consort = yes
			}
			random_country = {
				limit = {
					is_origin_of_consort = ROOT
				}
				hidden_effect = {
					country_event = {
						id = consort_events.205
						days = 1
					}
				}
				tooltip = {
					add_opinion = {
						who = ROOT
						modifier = offended_by_divorce
					}
					add_casus_belli = {
						target = ROOT
						type = cb_insult
						months = 60
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
				has_foreign_consort = no
				any_owned_province = {
					has_province_modifier = domain_of_spouses_family
				}
			}
			every_owned_province = {
				limit = {
					has_province_modifier = domain_of_spouses_family
				}
				add_province_modifier = {
					name = angered_nobles
					duration = 7300
				}
			}
		}
		if = {
			limit = {
				NOT = {
					religion_group = christian
				}
			}
			custom_tooltip = divorce.a.tt
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							any_country = {
								is_origin_of_consort = ROOT
							}
						}
					}
					remove_consort = yes
					country_event = {
						id = consort_events.206
					}
				}
			}
			define_consort = {}
		}
		if = {
			limit = {
				OR = {
					AND = {
						religion_group = christian
						NOT = {
							religion = catholic
						}
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
			}
			custom_tooltip = divorce.b.tt
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							any_country = {
								is_origin_of_consort = ROOT
							}
						}
					}
					remove_consort = yes
					country_event = {
						id = consort_events.206
					}
				}
			}
		}
		if = {
			limit = {
				religion = catholic
				exists = PAP
			}
			country_event = {
				id = consort_events.201
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						NOT = {
							exists = PAP
						}
						religion = catholic
					}
				}
			}
			add_prestige = -15
		}
		clr_ruler_flag = male_cousin
		clr_ruler_flag = female_cousin
	}
}
country_event = {
	id = consort_events.104
	title = consort_events.104.t
	picture = QUEEN_AND_MALE_HEIR_eventPicture
	desc = {
		trigger = {
			consort_mil = 5
		}
		desc = consort_events.104.da
	}
	desc = {
		trigger = {
			consort_adm = 5
			NOT = {
				consort_mil = 5
			}
		}
		desc = consort_events.104.db
	}
	desc = {
		trigger = {
			consort_dip = 5
			NOT = {
				consort_adm = 5
			}
			NOT = {
				consort_mil = 5
			}
		}
		desc = consort_events.104.dc
	}
	trigger = {
		has_dlc = "Rights of Man"
		NOT = {
			AND = {
				OR = {
					has_reform = elective_monarchy
					has_reform = elective_monarchy_legacy
					has_reform = mamluk_government_legacy
				}
			}
		}
		is_lesser_in_union = no
		has_consort = yes
		has_heir = yes
		heir_age = 6
		can_heir_be_child_of_consort = yes
		NOT = {
			heir_dip = 6
		}
		OR = {
			AND = {
				consort_adm = 5
				NOT = {
					heir_adm = 6
				}
			}
			AND = {
				consort_dip = 5
				NOT = {
					heir_dip = 6
				}
			}
			AND = {
				consort_mil = 5
				NOT = {
					heir_mil = 6
				}
			}
		}
		NOT = {
			has_heir_flag = taught_by_consort
		}
	}
	mean_time_to_happen = {
		months = 800
		modifier = {
			factor = 0.8
			consort_adm = 6
		}
		modifier = {
			factor = 0.8
			consort_adm = 6
		}
		modifier = {
			factor = 0.8
			consort_adm = 6
		}
	}
	immediate = {
		hidden_effect = {
			set_heir_flag = taught_by_consort
		}
	}
	option = {
		trigger = {
			NOT = {
				heir_adm = 6
			}
			OR = {
				consort_adm = 5
				AND = {
					consort_adm = 4
					AND = {
						has_consort = yes
						OR = {
							consort_has_personality = just_personality
							consort_has_personality = righteous_personality
							consort_has_personality = tolerant_personality
							consort_has_personality = free_thinker_personality
							consort_has_personality = calm_personality
							consort_has_personality = zealot_personality
							consort_has_personality = pious_personality
							consort_has_personality = lawgiver_personality
							consort_has_personality = midas_touched_personality
							consort_has_personality = incorruptible_personality
							consort_has_personality = architectural_visionary_personality
							consort_has_personality = scholar_personality
						}
					}
				}
			}
		}
		name = consort_events.104.a
		custom_tooltip = consort_events.104.a.tt
		add_adm_power = -40
		if = {
			limit = {
				NOT = {
					heir_adm = 6
				}
			}
			change_heir_adm = 1
		}
		else = {
			add_adm_power = 50
		}
	}
	option = {
		trigger = {
			NOT = {
				heir_dip = 6
			}
			OR = {
				consort_dip = 5
				AND = {
					consort_dip = 4
					AND = {
						has_consort = yes
						OR = {
							consort_has_personality = careful_personality
							consort_has_personality = entrepreneur_personality
							consort_has_personality = industrious_personality
							consort_has_personality = expansionist_personality
							consort_has_personality = navigator_personality
							consort_has_personality = well_connected_personality
							consort_has_personality = secretive_personality
							consort_has_personality = intricate_web_weaver_personality
							consort_has_personality = benevolent_personality
							consort_has_personality = charismatic_negotiator_personality
							consort_has_personality = silver_tongue_personality
						}
					}
				}
			}
		}
		name = consort_events.104.b
		custom_tooltip = consort_events.104.b.tt
		add_dip_power = -40
		if = {
			limit = {
				NOT = {
					heir_dip = 6
				}
			}
			change_heir_dip = 1
		}
		else = {
			add_dip_power = 50
		}
	}
	option = {
		trigger = {
			NOT = {
				heir_mil = 6
			}
			OR = {
				consort_mil = 5
				AND = {
					consort_mil = 4
					AND = {
						has_consort = yes
						OR = {
							consort_has_personality = bold_fighter_personality
							consort_has_personality = tactical_genius_personality
							consort_has_personality = fierce_negotiator_personality
							consort_has_personality = conqueror_personality
							consort_has_personality = strict_personality
							consort_has_personality = inspiring_leader_personality
							consort_has_personality = martial_educator_personality
							consort_has_personality = kind_hearted_personality
						}
					}
				}
			}
		}
		name = consort_events.104.c
		custom_tooltip = consort_events.104.c.tt
		add_mil_power = -40
		if = {
			limit = {
				NOT = {
					heir_mil = 6
				}
			}
			change_heir_mil = 1
		}
		else = {
			add_mil_power = 50
		}
	}
	option = {
		name = consort_events.104.d
		custom_tooltip = consort_events.104.d.tt
	}
}
country_event = {
	id = consort_events.201
	title = consort_events.201.t
	picture = POPE_PREACHING_eventPicture
	is_triggered_only = yes
	desc = {
		trigger = {
			papal_influence = 25
		}
		desc = consort_events.201.da
	}
	desc = {
		trigger = {
			NOT = {
				papal_influence = 25
			}
		}
		desc = consort_events.201.db
	}
	trigger = {
		religion = catholic
	}
	option = {
		trigger = {
			papal_influence = 25
		}
		name = consort_events.201.a
		custom_tooltip = consort_events.201.a.tt
		hidden_effect = {
			add_papal_influence = -25
		}
		set_ruler_flag = divorce_25
		hidden_effect = {
			PAP = {
				country_event = {
					id = consort_events.202
					days = 30
				}
			}
		}
	}
	option = {
		trigger = {
			papal_influence = 50
		}
		name = consort_events.201.b
		custom_tooltip = consort_events.201.b.tt
		hidden_effect = {
			add_papal_influence = -50
		}
		set_ruler_flag = divorce_50
		hidden_effect = {
			PAP = {
				country_event = {
					id = consort_events.202
					days = 30
				}
			}
		}
	}
	option = {
		trigger = {
			papal_influence = 75
		}
		name = consort_events.201.c
		custom_tooltip = consort_events.201.c.tt
		hidden_effect = {
			add_papal_influence = -75
		}
		set_ruler_flag = divorce_75
		hidden_effect = {
			PAP = {
				country_event = {
					id = consort_events.202
					days = 30
				}
			}
		}
	}
	option = {
		trigger = {
			papal_influence = 100
		}
		name = consort_events.201.e
		custom_tooltip = consort_events.201.e.tt
		hidden_effect = {
			add_papal_influence = -100
		}
		set_ruler_flag = divorce_100
		hidden_effect = {
			PAP = {
				country_event = {
					id = consort_events.202
					days = 30
				}
			}
		}
	}
	option = {
		trigger = {
			papal_influence = 25
		}
		name = consort_events.201.f
		custom_tooltip = consort_events.201.f.tt
	}
	option = {
		trigger = {
			NOT = {
				papal_influence = 25
			}
		}
		name = consort_events.201.g
		add_prestige = -5
	}
}
country_event = {
	id = consort_events.202
	title = consort_events.202.t
	desc = consort_events.202.d
	picture = CONSORT_DOING_BADLY_eventPicture
	is_triggered_only = yes
	trigger = {
		FROM = {
			has_consort = yes
		}
	}
	option = {
		name = consort_events.202.a
		ai_chance = {
			factor = 1
			modifier = {
				factor = 25
				FROM = {
					has_ruler_flag = divorce_25
				}
			}
			modifier = {
				factor = 50
				FROM = {
					has_ruler_flag = divorce_50
				}
			}
			modifier = {
				factor = 75
				FROM = {
					has_ruler_flag = divorce_75
				}
			}
		}
		hidden_effect = {
			FROM = {
				country_event = {
					id = consort_events.203
				}
				clr_ruler_flag = divorce_25
				clr_ruler_flag = divorce_50
				clr_ruler_flag = divorce_75
				clr_ruler_flag = divorce_100
			}
		}
	}
	option = {
		ai_chance = {
			factor = 75
		}
		trigger = {
			FROM = {
				has_ruler_flag = divorce_25
			}
		}
		name = consort_events.202.b
		custom_tooltip = consort_events.202.b.tt
		hidden_effect = {
			add_devotion = -13
		}
		hidden_effect = {
			FROM = {
				country_event = {
					id = consort_events.204
					days = 30
				}
			}
		}
		FROM = {
			clr_ruler_flag = divorce_25
		}
	}
	option = {
		ai_chance = {
			factor = 50
		}
		trigger = {
			FROM = {
				has_ruler_flag = divorce_50
			}
		}
		name = consort_events.202.b
		custom_tooltip = consort_events.202.c.tt
		hidden_effect = {
			add_devotion = -25
		}
		hidden_effect = {
			FROM = {
				country_event = {
					id = consort_events.204
					days = 30
				}
			}
		}
		FROM = {
			clr_ruler_flag = divorce_50
		}
	}
	option = {
		ai_chance = {
			factor = 25
		}
		trigger = {
			FROM = {
				has_ruler_flag = divorce_75
			}
		}
		name = consort_events.202.b
		custom_tooltip = consort_events.202.d.tt
		hidden_effect = {
			add_devotion = -38
		}
		hidden_effect = {
			FROM = {
				country_event = {
					id = consort_events.204
					days = 30
				}
			}
		}
		FROM = {
			clr_ruler_flag = divorce_75
		}
	}
	option = {
		ai_chance = {
			factor = 0
		}
		trigger = {
			FROM = {
				has_ruler_flag = divorce_100
			}
		}
		name = consort_events.202.b
		custom_tooltip = consort_events.202.e.tt
		hidden_effect = {
			add_devotion = -50
		}
		hidden_effect = {
			FROM = {
				country_event = {
					id = consort_events.204
					days = 30
				}
			}
		}
		FROM = {
			clr_ruler_flag = divorce_100
		}
	}
}
country_event = {
	id = consort_events.203
	title = consort_events.203.t
	desc = consort_events.203.d
	picture = CONSORT_DOING_BADLY_eventPicture
	is_triggered_only = yes
	trigger = {
		has_consort = yes
	}
	option = {
		name = consort_events.203.a
		custom_tooltip = consort_events.203.a.tt
		add_prestige = -15
		random_country = {
			limit = {
				has_given_consort_to = ROOT
			}
			tooltip = {
				add_opinion = {
					who = ROOT
					modifier = offended_by_divorce
				}
				add_casus_belli = {
					target = ROOT
					type = cb_insult
					months = 60
				}
			}
			hidden_effect = {
				country_event = {
					id = consort_events.205
					days = 15
				}
			}
		}
		random_owned_province = {
			limit = {
				has_province_modifier = domain_of_spouses_family
			}
			add_province_modifier = {
				name = angered_nobles
				duration = 7300
			}
		}
		if = {
			limit = {
				has_heir = yes
				can_heir_be_child_of_consort = yes
			}
			add_heir_claim = -30
		}
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						any_country = {
							has_given_consort_to = ROOT
						}
					}
				}
				remove_consort = yes
			}
			country_event = {
				id = consort_events.206
			}
		}
	}
	option = {
		name = consort_events.203.b
		custom_tooltip = consort_events.203.b.tt
	}
}
country_event = {
	id = consort_events.204
	title = consort_events.204.t
	desc = consort_events.204.d
	picture = CONSORT_DOING_BADLY_eventPicture
	is_triggered_only = yes
	option = {
		name = consort_events.202.b
	}
}
country_event = {
	id = consort_events.205
	title = consort_events.205.t
	desc = consort_events.205.d
	picture = CONSORT_DOING_BADLY_eventPicture
	is_triggered_only = yes
	option = {
		name = consort_events.205.a
		custom_tooltip = consort_events.205.a.tt
		hidden_effect = {
			FROM = {
				remove_consort = yes
				country_event = {
					id = consort_events.206
				}
			}
		}
		add_opinion = {
			who = FROM
			modifier = offended_by_divorce
		}
		add_casus_belli = {
			target = FROM
			type = cb_insult
			months = 60
		}
	}
}
country_event = {
	id = consort_events.206
	title = none
	desc = none
	picture = none
	is_triggered_only = yes
	hidden = yes
	immediate = {
		random_owned_province = {
			limit = {
				has_province_modifier = domain_of_spouses_family
			}
			remove_province_modifier = domain_of_spouses_family
		}
		clr_ruler_flag = accepted_help_from_spouses_family
		clr_ruler_flag = helped_spouses_family
		clr_ruler_flag = refused_to_help_spouses_family
		if = {
			limit = {
				has_ruler_flag = lowborn_consort
			}
			random_owned_province = {
				limit = {
					has_province_modifier = home_of_consort
				}
				remove_province_modifier = home_of_consort
			}
		}
		if = {
			limit = {
				has_ruler_flag = lowborn_consort
			}
			clr_ruler_flag = lowborn_consort
		}
		if = {
			limit = {
				has_country_modifier = consort_adm_advice
			}
			remove_country_modifier = consort_adm_advice
		}
		if = {
			limit = {
				has_country_modifier = consort_dip_advice
			}
			remove_country_modifier = consort_dip_advice
		}
		if = {
			limit = {
				has_country_modifier = consort_mil_advice
			}
			remove_country_modifier = consort_mil_advice
		}
		if = {
			limit = {
				has_country_modifier = without_spouse_advice
			}
			remove_country_modifier = without_spouse_advice
		}
		if = {
			limit = {
				has_country_modifier = life_of_the_party
			}
			remove_country_modifier = life_of_the_party
		}
		clr_ruler_flag = marriage_length
	}
	option = {
		name = exit
	}
}
country_event = {
	id = consort_events.301
	title = consort_events.301.t
	picture = KING_DOING_GREAT_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		NOT = {
			has_consort_regency = yes
		}
		ruler_consort_marriage_length = 10
		NOT = {
			ruler_consort_marriage_length = 12
		}
		NOT = {
			has_consort_flag = 10_years_anniversary
		}
	}
	immediate = {
		hidden_effect = {
			set_consort_flag = 10_years_anniversary
			if = {
				limit = {
					has_foreign_consort = yes
					any_country = {
						has_given_consort_to = ROOT
					}
				}
				random_country = {
					limit = {
						has_given_consort_to = ROOT
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					any_owned_province = {
						has_province_modifier = domain_of_spouses_family
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = domain_of_spouses_family
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					has_ruler_flag = has_lowborn_consort
					any_owned_province = {
						has_province_modifier = home_of_consort
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = home_of_consort
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					NOT = {
						has_saved_event_target = origin_of_consort
					}
				}
				set_consort_flag = home_province_lost
			}
		}
	}
	desc = {
		trigger = {
			has_foreign_consort = yes
			NOT = {
				has_ruler_modifier = consort_of_the_people
			}
			NOT = {
				has_country_modifier = life_of_the_party
			}
		}
		desc = consort_events.301.da
	}
	desc = {
		trigger = {
			has_foreign_consort = no
			NOT = {
				has_consort_flag = home_province_lost
			}
			NOT = {
				has_ruler_modifier = consort_of_the_people
			}
			NOT = {
				has_country_modifier = life_of_the_party
			}
		}
		desc = consort_events.301.db
	}
	desc = {
		trigger = {
			has_foreign_consort = no
			has_consort_flag = home_province_lost
			NOT = {
				has_ruler_modifier = consort_of_the_people
			}
			NOT = {
				has_country_modifier = life_of_the_party
			}
		}
		desc = consort_events.301.dc
	}
	desc = {
		trigger = {
			has_ruler_modifier = consort_of_the_people
		}
		desc = consort_events.301.dd
	}
	desc = {
		trigger = {
			has_country_modifier = life_of_the_party
			NOT = {
				has_ruler_modifier = consort_of_the_people
			}
		}
		desc = consort_events.301.de
	}
	mean_time_to_happen = {
		months = 150
	}
	option = {
		name = consort_events.301.a
		custom_tooltip = consort_events.301.a.tt
		add_treasury = 50
		clr_consort_flag = home_province_lost
	}
}
country_event = {
	id = consort_events.302
	title = consort_events.302.t
	picture = KING_DOING_GREAT_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		is_lesser_in_union = no
		NOT = {
			has_consort_regency = yes
		}
		ruler_consort_marriage_length = 20
		NOT = {
			ruler_consort_marriage_length = 22
		}
		NOT = {
			has_consort_flag = 20_years_anniversary
		}
	}
	immediate = {
		hidden_effect = {
			set_consort_flag = 20_years_anniversary
			if = {
				limit = {
					has_foreign_consort = yes
					any_country = {
						has_given_consort_to = ROOT
					}
				}
				random_country = {
					limit = {
						has_given_consort_to = ROOT
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					any_owned_province = {
						has_province_modifier = domain_of_spouses_family
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = domain_of_spouses_family
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					has_ruler_flag = has_lowborn_consort
					any_owned_province = {
						has_province_modifier = home_of_consort
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = home_of_consort
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					NOT = {
						has_saved_event_target = origin_of_consort
					}
				}
				set_consort_flag = home_province_lost
			}
		}
	}
	desc = {
		trigger = {
			has_foreign_consort = yes
			NOT = {
				has_ruler_modifier = consort_of_the_people
			}
			NOT = {
				has_country_modifier = life_of_the_party
			}
		}
		desc = consort_events.302.da
	}
	desc = {
		trigger = {
			has_foreign_consort = no
			NOT = {
				has_consort_flag = home_province_lost
			}
			NOT = {
				has_ruler_modifier = consort_of_the_people
			}
			NOT = {
				has_country_modifier = life_of_the_party
			}
		}
		desc = consort_events.302.db
	}
	desc = {
		trigger = {
			has_foreign_consort = no
			has_consort_flag = home_province_lost
		}
		desc = consort_events.302.dc
	}
	desc = {
		trigger = {
			has_ruler_modifier = consort_of_the_people
		}
		desc = consort_events.302.dd
	}
	desc = {
		trigger = {
			has_country_modifier = life_of_the_party
			NOT = {
				has_ruler_modifier = consort_of_the_people
			}
		}
		desc = consort_events.302.de
	}
	mean_time_to_happen = {
		months = 150
	}
	option = {
		name = consort_events.302.a
		custom_tooltip = consort_events.302.a.tt
		add_treasury = 50
		clr_consort_flag = home_province_lost
	}
}
country_event = {
	id = consort_events.303
	title = consort_events.303.t
	picture = QUEEN_AT_COUNCIL_TABLE_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		AND = {
			has_consort = yes
			OR = {
				consort_has_personality = careful_personality
				consort_has_personality = entrepreneur_personality
				consort_has_personality = industrious_personality
				consort_has_personality = expansionist_personality
				consort_has_personality = navigator_personality
				consort_has_personality = well_connected_personality
				consort_has_personality = secretive_personality
				consort_has_personality = intricate_web_weaver_personality
				consort_has_personality = benevolent_personality
				consort_has_personality = charismatic_negotiator_personality
				consort_has_personality = silver_tongue_personality
			}
		}
		NOT = {
			consort_has_personality = navigator_personality
		}
		NOT = {
			has_consort_flag = consort_has_impressed_with_dip_personality
		}
	}
	immediate = {
		hidden_effect = {
			set_consort_flag = consort_has_impressed_with_dip_personality
			if = {
				limit = {
					has_foreign_consort = yes
					any_country = {
						has_given_consort_to = ROOT
					}
				}
				random_country = {
					limit = {
						has_given_consort_to = ROOT
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					any_owned_province = {
						has_province_modifier = domain_of_spouses_family
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = domain_of_spouses_family
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					has_ruler_flag = has_lowborn_consort
					any_owned_province = {
						has_province_modifier = home_of_consort
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = home_of_consort
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					NOT = {
						has_saved_event_target = origin_of_consort
					}
				}
				set_consort_flag = home_province_lost
			}
		}
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = intricate_web_weaver_personality
				consort_has_personality = silver_tongue_personality
				consort_has_personality = secretive_personality
			}
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.303.da
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = expansionist_personality
				consort_has_personality = entrepreneur_personality
				consort_has_personality = industrious_personality
			}
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.303.db
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = careful_personality
				consort_has_personality = charismatic_negotiator_personality
				consort_has_personality = well_connected_personality
				consort_has_personality = benevolent_personality
			}
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.303.dc
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = intricate_web_weaver_personality
				consort_has_personality = silver_tongue_personality
				consort_has_personality = secretive_personality
			}
			has_consort_flag = home_province_lost
		}
		desc = consort_events.303.dd
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = expansionist_personality
				consort_has_personality = entrepreneur_personality
				consort_has_personality = industrious_personality
			}
			has_consort_flag = home_province_lost
		}
		desc = consort_events.303.de
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = careful_personality
				consort_has_personality = charismatic_negotiator_personality
				consort_has_personality = well_connected_personality
				consort_has_personality = benevolent_personality
			}
			has_consort_flag = home_province_lost
		}
		desc = consort_events.303.df
	}
	mean_time_to_happen = {
		months = 400
	}
	option = {
		name = consort_events.303.a
		add_dip_power = 50
		clr_consort_flag = home_province_lost
	}
}
country_event = {
	id = consort_events.304
	title = consort_events.304.t
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		AND = {
			has_consort = yes
			OR = {
				consort_has_personality = just_personality
				consort_has_personality = righteous_personality
				consort_has_personality = tolerant_personality
				consort_has_personality = free_thinker_personality
				consort_has_personality = calm_personality
				consort_has_personality = zealot_personality
				consort_has_personality = pious_personality
				consort_has_personality = lawgiver_personality
				consort_has_personality = midas_touched_personality
				consort_has_personality = incorruptible_personality
				consort_has_personality = architectural_visionary_personality
				consort_has_personality = scholar_personality
			}
		}
		NOT = {
			consort_has_personality = calm_personality
		}
		NOT = {
			has_consort_flag = consort_has_impressed_with_adm_personality
		}
	}
	picture = {
		trigger = {
			has_female_consort = yes
		}
		picture = QUEEN_AT_COUNCIL_TABLE_eventPicture
	}
	picture = {
		trigger = {
			has_female_consort = no
		}
		picture = BABBLING_BAFFOON_eventPicture
	}
	immediate = {
		hidden_effect = {
			set_consort_flag = consort_has_impressed_with_adm_personality
			if = {
				limit = {
					has_foreign_consort = yes
					any_country = {
						has_given_consort_to = ROOT
					}
				}
				random_country = {
					limit = {
						has_given_consort_to = ROOT
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					any_owned_province = {
						has_province_modifier = domain_of_spouses_family
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = domain_of_spouses_family
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					has_ruler_flag = has_lowborn_consort
					any_owned_province = {
						has_province_modifier = home_of_consort
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = home_of_consort
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					NOT = {
						has_saved_event_target = origin_of_consort
					}
				}
				set_consort_flag = home_province_lost
			}
		}
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = just_personality
				consort_has_personality = lawgiver_personality
				consort_has_personality = righteous_personality
				consort_has_personality = tolerant_personality
				consort_has_personality = incorruptible_personality
			}
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.304.da
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = free_thinker_personality
				consort_has_personality = architectural_visionary_personality
				consort_has_personality = scholar_personality
				consort_has_personality = midas_touched_personality
			}
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.304.db
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = zealot_personality
				consort_has_personality = pious_personality
			}
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.304.dc
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = just_personality
				consort_has_personality = lawgiver_personality
				consort_has_personality = righteous_personality
				consort_has_personality = tolerant_personality
				consort_has_personality = incorruptible_personality
			}
			has_consort_flag = home_province_lost
		}
		desc = consort_events.304.dd
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = free_thinker_personality
				consort_has_personality = architectural_visionary_personality
				consort_has_personality = scholar_personality
				consort_has_personality = midas_touched_personality
			}
			has_consort_flag = home_province_lost
		}
		desc = consort_events.304.de
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = zealot_personality
				consort_has_personality = pious_personality
			}
			has_consort_flag = home_province_lost
		}
		desc = consort_events.304.df
	}
	mean_time_to_happen = {
		months = 400
	}
	option = {
		name = consort_events.304.a
		add_adm_power = 50
		clr_consort_flag = home_province_lost
	}
}
country_event = {
	id = consort_events.305
	title = consort_events.305.t
	picture = GOOD_WITH_MONARCH_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		AND = {
			has_consort = yes
			OR = {
				consort_has_personality = bold_fighter_personality
				consort_has_personality = tactical_genius_personality
				consort_has_personality = fierce_negotiator_personality
				consort_has_personality = conqueror_personality
				consort_has_personality = strict_personality
				consort_has_personality = inspiring_leader_personality
				consort_has_personality = martial_educator_personality
				consort_has_personality = kind_hearted_personality
			}
		}
		NOT = {
			has_consort_flag = consort_has_impressed_with_mil_personality
		}
	}
	picture = {
		trigger = {
			has_female_consort = yes
		}
		picture = QUEEN_AT_COUNCIL_TABLE_eventPicture
	}
	picture = {
		trigger = {
			has_female_consort = no
		}
		picture = MILITARISTICALLY_TALENTED_RULER_eventPicture
	}
	immediate = {
		hidden_effect = {
			set_consort_flag = consort_has_impressed_with_mil_personality
			if = {
				limit = {
					has_foreign_consort = yes
					any_country = {
						has_given_consort_to = ROOT
					}
				}
				random_country = {
					limit = {
						has_given_consort_to = ROOT
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					any_owned_province = {
						has_province_modifier = domain_of_spouses_family
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = domain_of_spouses_family
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					has_ruler_flag = has_lowborn_consort
					any_owned_province = {
						has_province_modifier = home_of_consort
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = home_of_consort
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					NOT = {
						has_saved_event_target = origin_of_consort
					}
				}
				set_consort_flag = home_province_lost
			}
		}
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = bold_fighter_personality
				consort_has_personality = fierce_negotiator_personality
				consort_has_personality = conqueror_personality
				consort_has_personality = strict_personality
			}
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.305.da
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = inspiring_leader_personality
				consort_has_personality = martial_educator_personality
				consort_has_personality = kind_hearted_personality
				consort_has_personality = tactical_genius_personality
			}
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.305.db
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = bold_fighter_personality
				consort_has_personality = fierce_negotiator_personality
				consort_has_personality = conqueror_personality
				consort_has_personality = strict_personality
			}
			has_consort_flag = home_province_lost
		}
		desc = consort_events.305.dc
	}
	desc = {
		trigger = {
			OR = {
				consort_has_personality = inspiring_leader_personality
				consort_has_personality = martial_educator_personality
				consort_has_personality = kind_hearted_personality
				consort_has_personality = tactical_genius_personality
			}
			has_consort_flag = home_province_lost
		}
		desc = consort_events.305.dd
	}
	mean_time_to_happen = {
		months = 400
	}
	option = {
		name = consort_events.305.a
		add_mil_power = 50
		clr_consort_flag = home_province_lost
	}
}
country_event = {
	id = consort_events.306
	title = consort_events.306.t
	picture = KING_DOING_GREAT_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		has_consort_regency = no
		OR = {
			AND = {
				AND = {
					has_dlc = "Rights of Man"
					OR = {
						ruler_has_personality = just_personality
						ruler_has_personality = righteous_personality
						ruler_has_personality = tolerant_personality
						ruler_has_personality = free_thinker_personality
						ruler_has_personality = calm_personality
						ruler_has_personality = zealot_personality
						ruler_has_personality = pious_personality
						ruler_has_personality = lawgiver_personality
						ruler_has_personality = midas_touched_personality
						ruler_has_personality = incorruptible_personality
						ruler_has_personality = architectural_visionary_personality
						ruler_has_personality = scholar_personality
					}
				}
				AND = {
					has_consort = yes
					OR = {
						consort_has_personality = just_personality
						consort_has_personality = righteous_personality
						consort_has_personality = tolerant_personality
						consort_has_personality = free_thinker_personality
						consort_has_personality = calm_personality
						consort_has_personality = zealot_personality
						consort_has_personality = pious_personality
						consort_has_personality = lawgiver_personality
						consort_has_personality = midas_touched_personality
						consort_has_personality = incorruptible_personality
						consort_has_personality = architectural_visionary_personality
						consort_has_personality = scholar_personality
					}
				}
				NOT = {
					has_consort_flag = royal_couple_shared_adm_interests
				}
			}
			AND = {
				AND = {
					has_dlc = "Rights of Man"
					OR = {
						ruler_has_personality = careful_personality
						ruler_has_personality = entrepreneur_personality
						ruler_has_personality = industrious_personality
						ruler_has_personality = expansionist_personality
						ruler_has_personality = navigator_personality
						ruler_has_personality = well_connected_personality
						ruler_has_personality = secretive_personality
						ruler_has_personality = intricate_web_weaver_personality
						ruler_has_personality = benevolent_personality
						ruler_has_personality = charismatic_negotiator_personality
						ruler_has_personality = silver_tongue_personality
					}
				}
				AND = {
					has_consort = yes
					OR = {
						consort_has_personality = careful_personality
						consort_has_personality = entrepreneur_personality
						consort_has_personality = industrious_personality
						consort_has_personality = expansionist_personality
						consort_has_personality = navigator_personality
						consort_has_personality = well_connected_personality
						consort_has_personality = secretive_personality
						consort_has_personality = intricate_web_weaver_personality
						consort_has_personality = benevolent_personality
						consort_has_personality = charismatic_negotiator_personality
						consort_has_personality = silver_tongue_personality
					}
				}
				NOT = {
					has_consort_flag = royal_couple_shared_dip_interests
				}
			}
			AND = {
				AND = {
					has_dlc = "Rights of Man"
					OR = {
						ruler_has_personality = bold_fighter_personality
						ruler_has_personality = tactical_genius_personality
						ruler_has_personality = fierce_negotiator_personality
						ruler_has_personality = conqueror_personality
						ruler_has_personality = strict_personality
						ruler_has_personality = inspiring_leader_personality
						ruler_has_personality = martial_educator_personality
						ruler_has_personality = kind_hearted_personality
					}
				}
				AND = {
					has_consort = yes
					OR = {
						consort_has_personality = bold_fighter_personality
						consort_has_personality = tactical_genius_personality
						consort_has_personality = fierce_negotiator_personality
						consort_has_personality = conqueror_personality
						consort_has_personality = strict_personality
						consort_has_personality = inspiring_leader_personality
						consort_has_personality = martial_educator_personality
						consort_has_personality = kind_hearted_personality
					}
				}
				NOT = {
					has_consort_flag = royal_couple_shared_mil_interests
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			if = {
				limit = {
					has_foreign_consort = yes
					any_country = {
						has_given_consort_to = ROOT
					}
				}
				random_country = {
					limit = {
						has_given_consort_to = ROOT
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					any_owned_province = {
						has_province_modifier = domain_of_spouses_family
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = domain_of_spouses_family
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					has_foreign_consort = no
					has_ruler_flag = has_lowborn_consort
					any_owned_province = {
						has_province_modifier = home_of_consort
					}
				}
				random_owned_province = {
					limit = {
						has_province_modifier = home_of_consort
					}
					save_event_target_as = origin_of_consort
				}
			}
			if = {
				limit = {
					NOT = {
						has_saved_event_target = origin_of_consort
					}
				}
				set_consort_flag = home_province_lost
			}
			set_consort_flag = consort_has_affection_of_ruler
			if = {
				limit = {
					AND = {
						has_dlc = "Rights of Man"
						OR = {
							ruler_has_personality = just_personality
							ruler_has_personality = righteous_personality
							ruler_has_personality = tolerant_personality
							ruler_has_personality = free_thinker_personality
							ruler_has_personality = calm_personality
							ruler_has_personality = zealot_personality
							ruler_has_personality = pious_personality
							ruler_has_personality = lawgiver_personality
							ruler_has_personality = midas_touched_personality
							ruler_has_personality = incorruptible_personality
							ruler_has_personality = architectural_visionary_personality
							ruler_has_personality = scholar_personality
						}
					}
					AND = {
						has_consort = yes
						OR = {
							consort_has_personality = just_personality
							consort_has_personality = righteous_personality
							consort_has_personality = tolerant_personality
							consort_has_personality = free_thinker_personality
							consort_has_personality = calm_personality
							consort_has_personality = zealot_personality
							consort_has_personality = pious_personality
							consort_has_personality = lawgiver_personality
							consort_has_personality = midas_touched_personality
							consort_has_personality = incorruptible_personality
							consort_has_personality = architectural_visionary_personality
							consort_has_personality = scholar_personality
						}
					}
					NOT = {
						has_consort_flag = royal_couple_shared_adm_interests
					}
				}
				set_consort_flag = royal_couple_share_adm_interests
				set_consort_flag = royal_couple_shared_adm_interests
			}
			if = {
				limit = {
					AND = {
						has_dlc = "Rights of Man"
						OR = {
							ruler_has_personality = careful_personality
							ruler_has_personality = entrepreneur_personality
							ruler_has_personality = industrious_personality
							ruler_has_personality = expansionist_personality
							ruler_has_personality = navigator_personality
							ruler_has_personality = well_connected_personality
							ruler_has_personality = secretive_personality
							ruler_has_personality = intricate_web_weaver_personality
							ruler_has_personality = benevolent_personality
							ruler_has_personality = charismatic_negotiator_personality
							ruler_has_personality = silver_tongue_personality
						}
					}
					AND = {
						has_consort = yes
						OR = {
							consort_has_personality = careful_personality
							consort_has_personality = entrepreneur_personality
							consort_has_personality = industrious_personality
							consort_has_personality = expansionist_personality
							consort_has_personality = navigator_personality
							consort_has_personality = well_connected_personality
							consort_has_personality = secretive_personality
							consort_has_personality = intricate_web_weaver_personality
							consort_has_personality = benevolent_personality
							consort_has_personality = charismatic_negotiator_personality
							consort_has_personality = silver_tongue_personality
						}
					}
					NOT = {
						has_consort_flag = royal_couple_shared_dip_interests
					}
				}
				set_consort_flag = royal_couple_share_dip_interests
				set_consort_flag = royal_couple_shared_dip_interests
			}
			if = {
				limit = {
					AND = {
						has_dlc = "Rights of Man"
						OR = {
							ruler_has_personality = bold_fighter_personality
							ruler_has_personality = tactical_genius_personality
							ruler_has_personality = fierce_negotiator_personality
							ruler_has_personality = conqueror_personality
							ruler_has_personality = strict_personality
							ruler_has_personality = inspiring_leader_personality
							ruler_has_personality = martial_educator_personality
							ruler_has_personality = kind_hearted_personality
						}
					}
					AND = {
						has_consort = yes
						OR = {
							consort_has_personality = bold_fighter_personality
							consort_has_personality = tactical_genius_personality
							consort_has_personality = fierce_negotiator_personality
							consort_has_personality = conqueror_personality
							consort_has_personality = strict_personality
							consort_has_personality = inspiring_leader_personality
							consort_has_personality = martial_educator_personality
							consort_has_personality = kind_hearted_personality
						}
					}
					NOT = {
						has_consort_flag = royal_couple_shared_mil_interests
					}
				}
				set_consort_flag = royal_couple_share_mil_interests
				set_consort_flag = royal_couple_shared_mil_interests
			}
		}
	}
	desc = {
		trigger = {
			has_consort_flag = royal_couple_share_adm_interests
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.306.da
	}
	desc = {
		trigger = {
			has_consort_flag = royal_couple_share_dip_interests
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.306.db
	}
	desc = {
		trigger = {
			has_consort_flag = royal_couple_share_mil_interests
			NOT = {
				has_consort_flag = home_province_lost
			}
		}
		desc = consort_events.306.dc
	}
	desc = {
		trigger = {
			has_consort_flag = royal_couple_share_adm_interests
			has_consort_flag = home_province_lost
		}
		desc = consort_events.306.dd
	}
	desc = {
		trigger = {
			has_consort_flag = royal_couple_share_dip_interests
			has_consort_flag = home_province_lost
		}
		desc = consort_events.306.de
	}
	desc = {
		trigger = {
			has_consort_flag = royal_couple_share_mil_interests
			has_consort_flag = home_province_lost
		}
		desc = consort_events.306.df
	}
	mean_time_to_happen = {
		months = 1000
	}
	option = {
		name = consort_events.306.a
		if = {
			limit = {
				has_consort_flag = royal_couple_share_adm_interests
			}
			random_list = {
				80 = {
					add_adm_power = 100
				}
				20 = {
					change_adm = 1
				}
			}
		}
		if = {
			limit = {
				has_consort_flag = royal_couple_share_dip_interests
			}
			random_list = {
				80 = {
					add_dip_power = 100
				}
				20 = {
					change_dip = 1
				}
			}
		}
		if = {
			limit = {
				has_consort_flag = royal_couple_share_mil_interests
			}
			random_list = {
				80 = {
					add_mil_power = 100
				}
				20 = {
					change_mil = 1
				}
			}
		}
		clr_consort_flag = home_province_lost
		clr_consort_flag = royal_couple_share_adm_interests
		clr_consort_flag = royal_couple_share_dip_interests
		clr_consort_flag = royal_couple_share_mil_interests
	}
}
country_event = {
	id = consort_events.307
	title = consort_events.307.t
	picture = KING_DOING_GREAT_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		has_consort_regency = no
		NOT = {
			has_country_modifier = affectionate_royal_couple
		}
		OR = {
			AND = {
				AND = {
					has_dlc = "Rights of Man"
					OR = {
						ruler_has_personality = embezzler_personality
						ruler_has_personality = sinner_personality
						ruler_has_personality = greedy_personality
						ruler_has_personality = obsessive_perfectionist_personality
					}
				}
				AND = {
					has_consort = yes
					OR = {
						consort_has_personality = embezzler_personality
						consort_has_personality = sinner_personality
						consort_has_personality = greedy_personality
						consort_has_personality = obsessive_perfectionist_personality
					}
				}
				NOT = {
					has_consort_flag = royal_couple_shared_lack_in_adm_interests
				}
			}
			AND = {
				AND = {
					has_dlc = "Rights of Man"
					OR = {
						ruler_has_personality = indulgent_personality
						ruler_has_personality = babbling_buffoon_personality
						ruler_has_personality = cruel_personality
						ruler_has_personality = naive_personality
						ruler_has_personality = malevolent_personality
						ruler_has_personality = loose_lips_personality
					}
				}
				AND = {
					has_consort = yes
					OR = {
						consort_has_personality = indulgent_personality
						consort_has_personality = babbling_buffoon_personality
						consort_has_personality = cruel_personality
						consort_has_personality = naive_personality
						consort_has_personality = malevolent_personality
						consort_has_personality = loose_lips_personality
					}
				}
				NOT = {
					has_consort_flag = royal_couple_shared_lack_in_dip_interests
				}
			}
			AND = {
				AND = {
					has_dlc = "Rights of Man"
					OR = {
						ruler_has_personality = craven_personality
					}
				}
				AND = {
					consort_has_personality = craven_personality
				}
				NOT = {
					has_consort_flag = royal_couple_shared_lack_in_mil_interests
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			set_consort_flag = consort_has_affection_of_ruler
			if = {
				limit = {
					AND = {
						has_dlc = "Rights of Man"
						OR = {
							ruler_has_personality = embezzler_personality
							ruler_has_personality = sinner_personality
							ruler_has_personality = greedy_personality
							ruler_has_personality = obsessive_perfectionist_personality
						}
					}
					AND = {
						has_consort = yes
						OR = {
							consort_has_personality = embezzler_personality
							consort_has_personality = sinner_personality
							consort_has_personality = greedy_personality
							consort_has_personality = obsessive_perfectionist_personality
						}
					}
					NOT = {
						has_consort_flag = royal_couple_shared_lack_in_adm_interests
					}
				}
				set_consort_flag = royal_couple_share_lack_in_adm_interests
				set_consort_flag = royal_couple_shared_lack_in_adm_interests
			}
			if = {
				limit = {
					AND = {
						has_dlc = "Rights of Man"
						OR = {
							ruler_has_personality = indulgent_personality
							ruler_has_personality = babbling_buffoon_personality
							ruler_has_personality = cruel_personality
							ruler_has_personality = naive_personality
							ruler_has_personality = malevolent_personality
							ruler_has_personality = loose_lips_personality
						}
					}
					AND = {
						has_consort = yes
						OR = {
							consort_has_personality = indulgent_personality
							consort_has_personality = babbling_buffoon_personality
							consort_has_personality = cruel_personality
							consort_has_personality = naive_personality
							consort_has_personality = malevolent_personality
							consort_has_personality = loose_lips_personality
						}
					}
					NOT = {
						has_consort_flag = royal_couple_shared_lack_in_dip_interests
					}
				}
				set_consort_flag = royal_couple_share_lack_in_dip_interests
				set_consort_flag = royal_couple_shared_lack_in_dip_interests
			}
			if = {
				limit = {
					AND = {
						has_dlc = "Rights of Man"
						OR = {
							ruler_has_personality = craven_personality
						}
					}
					AND = {
						consort_has_personality = craven_personality
					}
					NOT = {
						has_consort_flag = royal_couple_shared_lack_in_mil_interests
					}
				}
				set_consort_flag = royal_couple_share_lack_in_mil_interests
				set_consort_flag = royal_couple_shared_lack_in_mil_interests
			}
		}
	}
	desc = {
		trigger = {
			has_consort_flag = royal_couple_share_lack_in_adm_interests
		}
		desc = consort_events.307.da
	}
	desc = {
		trigger = {
			has_consort_flag = royal_couple_share_lack_in_dip_interests
		}
		desc = consort_events.307.db
	}
	desc = {
		trigger = {
			has_consort_flag = royal_couple_share_lack_in_mil_interests
		}
		desc = consort_events.307.dc
	}
	mean_time_to_happen = {
		months = 700
	}
	option = {
		name = consort_events.307.a
		if = {
			limit = {
				has_consort_flag = royal_couple_share_lack_in_adm_interests
			}
			add_adm_power = -15
		}
		if = {
			limit = {
				has_consort_flag = royal_couple_share_lack_in_dip_interests
			}
			add_dip_power = -15
		}
		if = {
			limit = {
				has_consort_flag = royal_couple_share_lack_in_mil_interests
			}
			add_mil_power = -15
		}
		add_ruler_modifier = {
			name = affectionate_royal_couple
			duration = 1825
		}
		clr_consort_flag = home_province_lost
		clr_consort_flag = royal_couple_share_lack_in_adm_interests
		clr_consort_flag = royal_couple_share_lack_in_dip_interests
		clr_consort_flag = royal_couple_share_lack_in_mil_interests
	}
}
country_event = {
	id = consort_events.308
	title = consort_events.308.t
	picture = ROYAL_COUPLE_FUTURE_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = no
		is_lesser_in_union = no
		has_ruler_flag = widow_widower
		OR = {
			has_ruler_flag = had_10_years_anniversary
			has_ruler_flag = had_20_years_anniversary
			has_ruler_flag = consort_had_affection_of_ruler
		}
	}
	immediate = {
		hidden_effect = {
			set_ruler_flag = ruler_in_mourning
		}
	}
	desc = {
		trigger = {
			has_ruler_flag = had_10_years_anniversary
		}
		desc = consort_events.308.da
	}
	desc = {
		trigger = {
			has_ruler_flag = had_20_years_anniversary
		}
		desc = consort_events.308.db
	}
	desc = {
		trigger = {
			has_ruler_flag = consort_had_affection_of_ruler
		}
		desc = consort_events.308.dc
	}
	mean_time_to_happen = {
		months = 600
	}
	option = {
		name = consort_events.308.a
		if = {
			limit = {
				monthly_income = 25
			}
			add_years_of_income = -0.20
		}
		else = {
			add_treasury = -80
		}
		capital_scope = {
			add_province_modifier = {
				name = commemorative_statue
				duration = 3650
			}
		}
		clr_ruler_flag = had_10_years_anniversary
		clr_ruler_flag = had_20_years_anniversary
		clr_ruler_flag = consort_had_affection_of_ruler
	}
	option = {
		name = consort_events.308.b
		random_list = {
			80 = {
				add_ruler_modifier = {
					name = attention_to_detail
					duration = 1825
				}
			}
			20 = {
				add_ruler_modifier = {
					name = overworked_ruler_adm
					duration = 1825
				}
			}
		}
		trigger = {
			OR = {
				AND = {
					has_dlc = "Rights of Man"
					OR = {
						ruler_has_personality = just_personality
						ruler_has_personality = righteous_personality
						ruler_has_personality = tolerant_personality
						ruler_has_personality = free_thinker_personality
						ruler_has_personality = calm_personality
						ruler_has_personality = zealot_personality
						ruler_has_personality = pious_personality
						ruler_has_personality = lawgiver_personality
						ruler_has_personality = midas_touched_personality
						ruler_has_personality = incorruptible_personality
						ruler_has_personality = architectural_visionary_personality
						ruler_has_personality = scholar_personality
					}
				}
				adm = 5
			}
		}
		clr_ruler_flag = had_10_years_anniversary
		clr_ruler_flag = had_20_years_anniversary
		clr_ruler_flag = consort_had_affection_of_ruler
	}
	option = {
		name = consort_events.308.c
		random_list = {
			80 = {
				add_ruler_modifier = {
					name = focused_listener
					duration = 1825
				}
			}
			20 = {
				add_ruler_modifier = {
					name = overworked_ruler_dip
					duration = 1825
				}
			}
		}
		trigger = {
			OR = {
				AND = {
					has_dlc = "Rights of Man"
					OR = {
						ruler_has_personality = careful_personality
						ruler_has_personality = entrepreneur_personality
						ruler_has_personality = industrious_personality
						ruler_has_personality = expansionist_personality
						ruler_has_personality = navigator_personality
						ruler_has_personality = well_connected_personality
						ruler_has_personality = secretive_personality
						ruler_has_personality = intricate_web_weaver_personality
						ruler_has_personality = benevolent_personality
						ruler_has_personality = charismatic_negotiator_personality
						ruler_has_personality = silver_tongue_personality
					}
				}
				dip = 5
			}
		}
		clr_ruler_flag = had_10_years_anniversary
		clr_ruler_flag = had_20_years_anniversary
		clr_ruler_flag = consort_had_affection_of_ruler
	}
	option = {
		name = consort_events.308.d
		random_list = {
			80 = {
				add_ruler_modifier = {
					name = dedicated_strategist
					duration = 1825
				}
			}
			20 = {
				add_ruler_modifier = {
					name = overworked_ruler_mil
					duration = 1825
				}
			}
		}
		trigger = {
			OR = {
				AND = {
					has_dlc = "Rights of Man"
					OR = {
						ruler_has_personality = bold_fighter_personality
						ruler_has_personality = tactical_genius_personality
						ruler_has_personality = fierce_negotiator_personality
						ruler_has_personality = conqueror_personality
						ruler_has_personality = strict_personality
						ruler_has_personality = inspiring_leader_personality
						ruler_has_personality = martial_educator_personality
						ruler_has_personality = kind_hearted_personality
					}
				}
				mil = 5
			}
		}
		clr_ruler_flag = had_10_years_anniversary
		clr_ruler_flag = had_20_years_anniversary
		clr_ruler_flag = consort_had_affection_of_ruler
	}
	option = {
		name = consort_events.308.e
		clr_ruler_flag = had_10_years_anniversary
		clr_ruler_flag = had_20_years_anniversary
		clr_ruler_flag = consort_had_affection_of_ruler
	}
}
country_event = {
	id = consort_events.309
	title = consort_events.309.t
	desc = consort_events.309.da
	picture = {
		trigger = {
			has_female_consort = yes
		}
		picture = QUEEN_AT_COUNCIL_TABLE_eventPicture
	}
	picture = {
		trigger = {
			has_female_consort = no
		}
		picture = MILITARISTICALLY_TALENTED_RULER_eventPicture
	}
	trigger = {
		has_dlc = "Rights of Man"
		has_consort_regency = yes
		is_lesser_in_union = no
		NOT = {
			heir_adm = 3
		}
		NOT = {
			heir_dip = 3
		}
		NOT = {
			heir_mil = 3
		}
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		consort_dip = 3
		consort_mil = 3
		consort_adm = 3
		OR = {
			consort_adm = 6
			consort_dip = 6
			consort_mil = 6
		}
		NOT = {
			has_consort_flag = consort_decided_to_not_pursue_the_throne
		}
	}
	mean_time_to_happen = {
		months = 600
	}
	option = {
		name = consort_events.309.a
		custom_tooltip = consort_events.309.a.tt
		country_event = {
			id = consort_events.310
			days = 60
		}
	}
	option = {
		name = consort_events.309.b
		custom_tooltip = consort_events.309.b.tt
		set_consort_flag = "consort_decided_to_not_pursue_the_throne"
	}
}
country_event = {
	id = consort_events.310
	title = consort_events.310.t
	desc = consort_events.310.da
	picture = GOOD_WITH_MONARCH_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		has_consort_regency = yes
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
	}
	is_triggered_only = yes
	option = {
		name = consort_events.310.a
		change_consort_regent_to_ruler = yes
		set_heir_flag = had_throne_stolen
		add_ruler_modifier = {
			name = devious_ruler
		}
		if = {
			limit = {
				culture_group = chinese_group
			}
			country_event = {
				id = tianxia.35
			}
		}
	}
	option = {
		name = consort_events.310.b
	}
}
country_event = {
	id = consort_events.311
	title = consort_events.311.t
	desc = consort_events.311.d
	picture = {
		trigger = {
			has_female_consort = yes
		}
		picture = QUEEN_AT_COUNCIL_TABLE_eventPicture
	}
	picture = {
		trigger = {
			has_female_consort = no
		}
		picture = MILITARISTICALLY_TALENTED_RULER_eventPicture
	}
	trigger = {
		has_dlc = "Rights of Man"
		is_lesser_in_union = no
		has_consort = yes
		has_consort_regency = no
		any_owned_province = {
			NOT = {
				has_province_flag = tribals_control_province
			}
			is_capital = no
		}
		NOT = {
			has_ruler_modifier = consort_of_the_people
		}
	}
	mean_time_to_happen = {
		months = 700
		modifier = {
			factor = 10
			OR = {
				consort_has_personality = malevolent_personality
				consort_has_personality = cruel_personality
			}
		}
		modifier = {
			factor = 0.8
			OR = {
				consort_has_personality = silver_tongue_personality
				consort_has_personality = well_connected_personality
			}
		}
		modifier = {
			factor = 0.8
			OR = {
				consort_has_personality = kind_hearted_personality
				consort_has_personality = benevolent_personality
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					NOT = {
						has_province_flag = tribals_control_province
					}
					is_capital = no
				}
				save_event_target_as = poor_province
			}
		}
	}
	option = {
		name = consort_events.311.a
		if = {
			limit = {
				monthly_income = 30
			}
			add_years_of_income = -0.25
		}
		else = {
			add_treasury = -90
		}
		add_adm_power = -15
		add_ruler_modifier = {
			name = consort_of_the_people
		}
	}
	option = {
		name = consort_events.311.b
		add_legitimacy = 5
	}
}
country_event = {
	id = consort_events.312
	title = consort_events.312.t
	picture = {
		trigger = {
			OR = {
				has_ruler_flag = consort_adm_advisor
				has_ruler_flag = consort_dip_advisor
			}
		}
		picture = QUEEN_AT_COUNCIL_TABLE_eventPicture
	}
	picture = {
		trigger = {
			has_ruler_flag = consort_mil_advisor
			has_dlc = "Women in History"
		}
		picture = FEMALE_GENERAL_eventPicture
	}
	picture = {
		trigger = {
			has_ruler_flag = consort_mil_advisor
			NOT = {
				has_dlc = "Women in History"
			}
		}
		picture = QUEEN_AT_COUNCIL_TABLE_eventPicture
	}
	desc = {
		trigger = {
			has_ruler_flag = consort_adm_advisor
		}
		desc = consort_events.312.da
	}
	desc = {
		trigger = {
			has_ruler_flag = consort_dip_advisor
		}
		desc = consort_events.312.db
	}
	desc = {
		trigger = {
			has_ruler_flag = consort_mil_advisor
		}
		desc = consort_events.312.dc
	}
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		OR = {
			AND = {
				consort_adm = 4
				AND = {
					OR = {
						advisor = treasurer
						advisor = philosopher
						advisor = artist
						advisor = theologian
						advisor = master_of_mint
						advisor = inquisitor
						advisor = natural_scientist
						advisor = alderman
						advisor = architect
						advisor = high_judge
						advisor = acardinal
						advisor = astronomist
						advisor = jewish_financier
						advisor = composer
					}
				}
			}
			AND = {
				consort_dip = 4
				AND = {
					OR = {
						advisor = statesman
						advisor = diplomat
						advisor = naval_reformer
						advisor = trader
						advisor = colonial_governor
						advisor = navigator
						advisor = spymaster
						advisor = collector
						advisor = sheriff
						advisor = banker
						advisor = grand_admiral
						advisor = lord_proprietor
						advisor = rear_admiral
					}
				}
			}
			AND = {
				consort_mil = 4
				AND = {
					OR = {
						advisor = army_organiser
						advisor = army_reformer
						advisor = commandant
						advisor = grand_captain
						advisor = recruitmaster
						advisor = fortification_expert
						advisor = quartermaster
						advisor = colonel
					}
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 460
	}
	immediate = {
		hidden_effect = {
			if = {
				limit = {
					consort_adm = 4
					AND = {
						OR = {
							advisor = treasurer
							advisor = philosopher
							advisor = artist
							advisor = theologian
							advisor = master_of_mint
							advisor = inquisitor
							advisor = natural_scientist
							advisor = alderman
							advisor = architect
							advisor = high_judge
							advisor = acardinal
							advisor = astronomist
							advisor = jewish_financier
							advisor = composer
						}
					}
				}
				set_ruler_flag = consort_adm_advisor
			}
			if = {
				limit = {
					consort_mil = 4
					AND = {
						OR = {
							advisor = army_organiser
							advisor = army_reformer
							advisor = commandant
							advisor = grand_captain
							advisor = recruitmaster
							advisor = fortification_expert
							advisor = quartermaster
							advisor = colonel
						}
					}
					NOT = {
						has_ruler_flag = consort_adm_advisor
					}
				}
				set_ruler_flag = consort_mil_advisor
			}
			if = {
				limit = {
					consort_dip = 4
					AND = {
						OR = {
							advisor = statesman
							advisor = diplomat
							advisor = naval_reformer
							advisor = trader
							advisor = colonial_governor
							advisor = navigator
							advisor = spymaster
							advisor = collector
							advisor = sheriff
							advisor = banker
							advisor = grand_admiral
							advisor = lord_proprietor
							advisor = rear_admiral
						}
					}
					NOT = {
						has_ruler_flag = consort_adm_advisor
					}
					NOT = {
						has_ruler_flag = consort_mil_advisor
					}
				}
				set_ruler_flag = consort_dip_advisor
			}
			if = {
				limit = {
					has_foreign_consort = yes
					any_country = {
						has_given_consort_to = ROOT
						exists = yes
					}
				}
				set_country_flag = foreign_advisor_origin
				random_country = {
					limit = {
						has_given_consort_to = ROOT
						exists = yes
					}
					save_event_target_as = consort_from_here
				}
			}
			else_if = {
				limit = {
					any_owned_province = {
						has_province_modifier = domain_of_spouses_family
					}
				}
				set_country_flag = internal_advisor_origin
				random_owned_province = {
					limit = {
						has_province_modifier = domain_of_spouses_family
					}
					save_event_target_as = internal_origin_province
				}
			}
			else = {
				set_country_flag = no_foreign_advisor_origin
			}
		}
	}
	option = {
		name = consort_events.312.a
		custom_tooltip = consort_events.312.a.tt
		trigger_switch = {
			on_trigger = has_ruler_flag
			consort_adm_advisor = {
				trigger_switch = {
					on_trigger = has_country_flag
					foreign_advisor_origin = {
						if = {
							limit = {
								NOT = {
									monthly_income = 25
								}
							}
							define_advisor = {
								type = natural_scientist
								skill = 2
								discount = yes
								female = yes
								culture = event_target:consort_from_here
								religion = event_target:consort_from_here
							}
						}
						else = {
							define_advisor = {
								type = natural_scientist
								skill = 3
								discount = yes
								female = yes
								culture = event_target:consort_from_here
								religion = event_target:consort_from_here
							}
						}
					}
					internal_advisor_origin = {
						if = {
							limit = {
								NOT = {
									monthly_income = 25
								}
							}
							define_advisor = {
								type = natural_scientist
								skill = 2
								discount = yes
								female = yes
								culture = event_target:internal_origin_province
								religion = event_target:internal_origin_province
							}
						}
						else = {
							define_advisor = {
								type = natural_scientist
								skill = 3
								discount = yes
								female = yes
								culture = event_target:internal_origin_province
								religion = event_target:internal_origin_province
							}
						}
					}
					no_foreign_advisor_origin = {
						if = {
							limit = {
								NOT = {
									monthly_income = 25
								}
							}
							define_advisor = {
								type = natural_scientist
								skill = 2
								discount = yes
								female = yes
							}
						}
						else = {
							define_advisor = {
								type = natural_scientist
								skill = 3
								discount = yes
								female = yes
							}
						}
					}
				}
			}
			consort_dip_advisor = {
				trigger_switch = {
					on_trigger = has_country_flag
					foreign_advisor_origin = {
						if = {
							limit = {
								NOT = {
									monthly_income = 25
								}
							}
							define_advisor = {
								type = statesman
								skill = 2
								discount = yes
								female = yes
								culture = event_target:consort_from_here
								religion = event_target:consort_from_here
							}
						}
						else = {
							define_advisor = {
								type = statesman
								skill = 3
								discount = yes
								female = yes
								culture = event_target:consort_from_here
								religion = event_target:consort_from_here
							}
						}
					}
					internal_advisor_origin = {
						if = {
							limit = {
								NOT = {
									monthly_income = 25
								}
							}
							define_advisor = {
								type = statesman
								skill = 2
								discount = yes
								female = yes
								culture = event_target:internal_origin_province
								religion = event_target:internal_origin_province
							}
						}
						else = {
							define_advisor = {
								type = statesman
								skill = 3
								discount = yes
								female = yes
								culture = event_target:internal_origin_province
								religion = event_target:internal_origin_province
							}
						}
					}
					no_foreign_advisor_origin = {
						if = {
							limit = {
								NOT = {
									monthly_income = 25
								}
							}
							define_advisor = {
								type = statesman
								skill = 2
								discount = yes
								female = yes
							}
						}
						else = {
							define_advisor = {
								type = statesman
								skill = 3
								discount = yes
								female = yes
							}
						}
					}
				}
			}
			consort_mil_advisor = {
				trigger_switch = {
					on_trigger = has_country_flag
					foreign_advisor_origin = {
						if = {
							limit = {
								NOT = {
									monthly_income = 25
								}
							}
							define_advisor = {
								type = commandant
								skill = 2
								discount = yes
								female = yes
								culture = event_target:consort_from_here
								religion = event_target:consort_from_here
							}
						}
						else = {
							define_advisor = {
								type = commandant
								skill = 3
								discount = yes
								female = yes
								culture = event_target:consort_from_here
								religion = event_target:consort_from_here
							}
						}
					}
					internal_advisor_origin = {
						if = {
							limit = {
								NOT = {
									monthly_income = 25
								}
							}
							define_advisor = {
								type = commandant
								skill = 2
								discount = yes
								female = yes
								culture = event_target:internal_origin_province
								religion = event_target:internal_origin_province
							}
						}
						else = {
							define_advisor = {
								type = commandant
								skill = 3
								discount = yes
								female = yes
								culture = event_target:internal_origin_province
								religion = event_target:internal_origin_province
							}
						}
					}
					no_foreign_advisor_origin = {
						if = {
							limit = {
								NOT = {
									monthly_income = 25
								}
							}
							define_advisor = {
								type = commandant
								skill = 2
								discount = yes
								female = yes
							}
						}
						else = {
							define_advisor = {
								type = commandant
								skill = 3
								discount = yes
								female = yes
							}
						}
					}
				}
			}
		}
	}
	option = {
		trigger = {
			has_ruler_flag = consort_adm_advisor
		}
		name = consort_events.312.b
		custom_tooltip = consort_events.312.b.tt
		add_adm_power = 50
	}
	option = {
		trigger = {
			has_ruler_flag = consort_dip_advisor
		}
		name = consort_events.312.c
		custom_tooltip = consort_events.312.c.tt
		add_dip_power = 50
	}
	option = {
		trigger = {
			has_ruler_flag = consort_mil_advisor
		}
		name = consort_events.312.d
		custom_tooltip = consort_events.312.d.tt
		add_mil_power = 50
	}
	after = {
		clr_ruler_flag = consort_adm_advisor
		clr_ruler_flag = consort_dip_advisor
		clr_ruler_flag = consort_mil_advisor
		clr_country_flag = no_foreign_advisor_origin
		clr_country_flag = foreign_advisor_origin
		clr_country_flag = internal_advisor_origin
	}
}
country_event = {
	id = consort_events.313
	title = consort_events.313.t
	desc = consort_events.313.d
	picture = NEW_HEIR_eventPicture
	trigger = {
		has_dlc = "Rights of Man"
		is_lesser_in_union = no
		has_heir = yes
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		has_consort = yes
		has_consort_regency = no
		war_exhaustion = 2
		OR = {
			has_female_consort = no
			AND = {
				has_female_consort = yes
				NOT = {
					consort_age = 46
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 300
		modifier = {
			factor = 0.75
			ruler_has_personality = fertile_personality
		}
		modifier = {
			factor = 0.75
			consort_has_personality = fertile_personality
		}
	}
	option = {
		name = consort_events.313.a
		custom_tooltip = consort_events.313.a.tt
		add_war_exhaustion = -2
	}
}
country_event = {
	id = consort_events.314
	title = consort_events.314.t
	picture = CONSORT_DOING_BADLY_eventPicture
	desc = {
		trigger = {
			can_heir_be_child_of_consort = yes
		}
		desc = consort_events.314.da
	}
	desc = {
		trigger = {
			can_heir_be_child_of_consort = no
		}
		desc = consort_events.314.db
	}
	trigger = {
		has_dlc = "Rights of Man"
		is_lesser_in_union = no
		has_consort = yes
		has_consort_regency = no
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		NOT = {
			capital_scope = {
				has_province_modifier = tyrannical_ruler
			}
		}
		OR = {
			AND = {
				has_female_consort = no
				OR = {
					employed_advisor = {
						is_female = yes
						type = treasurer
					}
					employed_advisor = {
						is_female = yes
						type = philosopher
					}
					employed_advisor = {
						is_female = yes
						type = artist
					}
					employed_advisor = {
						is_female = yes
						type = master_of_mint
					}
					employed_advisor = {
						is_female = yes
						type = natural_scientist
					}
				}
			}
			AND = {
				has_female_consort = yes
				OR = {
					employed_advisor = {
						is_male = yes
						type = treasurer
					}
					employed_advisor = {
						is_male = yes
						type = philosopher
					}
					employed_advisor = {
						is_male = yes
						type = artist
					}
					employed_advisor = {
						is_male = yes
						type = master_of_mint
					}
					employed_advisor = {
						is_male = yes
						type = natural_scientist
					}
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 1000
		modifier = {
			factor = 0.75
			OR = {
				ruler_has_personality = cruel_personality
				ruler_has_personality = infertile_personality
				ruler_has_personality = babbling_buffoon_personality
				ruler_has_personality = naive_personality
			}
		}
		modifier = {
			factor = 0.75
			OR = {
				consort_has_personality = sinner_personality
				consort_has_personality = drunkard_personality
				consort_has_personality = fertile_personality
			}
		}
	}
	option = {
		name = consort_events.314.a
		custom_tooltip = consort_events.314.a.tt
		if = {
			limit = {
				can_heir_be_child_of_consort = yes
				has_female_consort = yes
			}
			random = {
				chance = 50
				country_event = {
					id = consort_events.315
					days = 150
					random = 500
				}
			}
		}
		if = {
			limit = {
				OR = {
					can_heir_be_child_of_consort = no
					has_female_consort = no
				}
			}
			add_prestige = -5
		}
	}
	option = {
		name = consort_events.314.b
		custom_tooltip = consort_events.314.b.tt
		hidden_effect = {
			if = {
				limit = {
					advisor = treasurer
				}
				remove_advisor = treasurer
			}
			if = {
				limit = {
					advisor = philosopher
				}
				remove_advisor = philosopher
			}
			if = {
				limit = {
					advisor = artist
				}
				remove_advisor = artist
			}
			if = {
				limit = {
					advisor = master_of_mint
				}
				remove_advisor = master_of_mint
			}
			if = {
				limit = {
					advisor = natural_scientist
				}
				remove_advisor = natural_scientist
			}
		}
		if = {
			limit = {
				monthly_income = 30
			}
			add_years_of_income = -0.25
		}
		else = {
			add_treasury = -90
		}
		hidden_effect = {
			if = {
				limit = {
					can_heir_be_child_of_consort = yes
					has_female_consort = yes
				}
				random = {
					chance = 10
					country_event = {
						id = consort_events.315
						days = 150
						random = 500
					}
				}
			}
		}
	}
	option = {
		name = consort_events.314.c
		custom_tooltip = consort_events.314.c.tt
		hidden_effect = {
			if = {
				limit = {
					advisor = treasurer
				}
				kill_advisor = treasurer
			}
			if = {
				limit = {
					advisor = philosopher
				}
				kill_advisor = philosopher
			}
			if = {
				limit = {
					advisor = artist
				}
				kill_advisor = artist
			}
			if = {
				limit = {
					advisor = master_of_mint
				}
				kill_advisor = master_of_mint
			}
			if = {
				limit = {
					advisor = natural_scientist
				}
				kill_advisor = natural_scientist
			}
		}
		capital_scope = {
			area = {
				add_province_modifier = {
					name = tyrannical_ruler
					duration = 5475
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					can_heir_be_child_of_consort = yes
					has_female_consort = yes
				}
				random = {
					chance = 10
					country_event = {
						id = consort_events.315
						days = 150
						random = 500
					}
				}
			}
		}
	}
	option = {
		trigger = {
			has_female_consort = yes
		}
		name = consort_events.314.d
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
				has_foreign_consort = yes
			}
			random_country = {
				limit = {
					is_origin_of_consort = ROOT
				}
				hidden_effect = {
					country_event = {
						id = consort_events.205
						days = 1
					}
				}
				tooltip = {
					add_opinion = {
						who = ROOT
						modifier = offended_by_divorce
					}
					add_casus_belli = {
						target = ROOT
						type = cb_insult
						months = 60
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
				has_foreign_consort = no
				any_owned_province = {
					has_province_modifier = domain_of_spouses_family
				}
			}
			every_owned_province = {
				limit = {
					has_province_modifier = domain_of_spouses_family
				}
				add_province_modifier = {
					name = angered_nobles
					duration = 7300
				}
			}
		}
		if = {
			limit = {
				NOT = {
					religion_group = christian
				}
			}
			custom_tooltip = divorce.a.tt
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							any_country = {
								is_origin_of_consort = ROOT
							}
						}
					}
					remove_consort = yes
					country_event = {
						id = consort_events.206
					}
				}
			}
			define_consort = {}
		}
		if = {
			limit = {
				OR = {
					AND = {
						religion_group = christian
						NOT = {
							religion = catholic
						}
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
			}
			custom_tooltip = divorce.b.tt
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							any_country = {
								is_origin_of_consort = ROOT
							}
						}
					}
					remove_consort = yes
					country_event = {
						id = consort_events.206
					}
				}
			}
		}
		if = {
			limit = {
				religion = catholic
				exists = PAP
			}
			country_event = {
				id = consort_events.201
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						NOT = {
							exists = PAP
						}
						religion = catholic
					}
				}
			}
			add_prestige = -15
		}
	}
	option = {
		trigger = {
			has_female_consort = no
		}
		name = consort_events.314.e
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
				has_foreign_consort = yes
			}
			random_country = {
				limit = {
					is_origin_of_consort = ROOT
				}
				hidden_effect = {
					country_event = {
						id = consort_events.205
						days = 1
					}
				}
				tooltip = {
					add_opinion = {
						who = ROOT
						modifier = offended_by_divorce
					}
					add_casus_belli = {
						target = ROOT
						type = cb_insult
						months = 60
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
				has_foreign_consort = no
				any_owned_province = {
					has_province_modifier = domain_of_spouses_family
				}
			}
			every_owned_province = {
				limit = {
					has_province_modifier = domain_of_spouses_family
				}
				add_province_modifier = {
					name = angered_nobles
					duration = 7300
				}
			}
		}
		if = {
			limit = {
				NOT = {
					religion_group = christian
				}
			}
			custom_tooltip = divorce.a.tt
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							any_country = {
								is_origin_of_consort = ROOT
							}
						}
					}
					remove_consort = yes
					country_event = {
						id = consort_events.206
					}
				}
			}
			define_consort = {}
		}
		if = {
			limit = {
				OR = {
					AND = {
						religion_group = christian
						NOT = {
							religion = catholic
						}
					}
					AND = {
						religion = catholic
						NOT = {
							exists = PAP
						}
					}
				}
			}
			custom_tooltip = divorce.b.tt
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							any_country = {
								is_origin_of_consort = ROOT
							}
						}
					}
					remove_consort = yes
					country_event = {
						id = consort_events.206
					}
				}
			}
		}
		if = {
			limit = {
				religion = catholic
				exists = PAP
			}
			country_event = {
				id = consort_events.201
			}
		}
		if = {
			limit = {
				OR = {
					NOT = {
						religion = catholic
					}
					AND = {
						NOT = {
							exists = PAP
						}
						religion = catholic
					}
				}
			}
			add_prestige = -15
		}
	}
}
country_event = {
	id = consort_events.315
	title = consort_events.315.t
	picture = CONSORT_DOING_BADLY_eventPicture
	desc = consort_events.315.d
	trigger = {
		has_dlc = "Rights of Man"
		has_consort = yes
		is_lesser_in_union = no
		has_consort_regency = no
		has_female_consort = yes
		NOT = {
			AND = {
				AND = {
					OR = {
						has_reform = competitive_inheritance
						has_reform = ottoman_government_legacy
					}
				}
				religion_group = muslim
			}
		}
		has_heir = yes
		can_heir_be_child_of_consort = yes
		NOT = {
			has_heir_flag = suspected_bastard
		}
	}
	mean_time_to_happen = {
		months = 1000
		modifier = {
			factor = 0.75
			OR = {
				consort_has_personality = sinner_personality
				consort_has_personality = drunkard_personality
			}
		}
	}
	option = {
		name = consort_events.315.a
		add_prestige = -5
		add_heir_claim = -30
		set_heir_flag = suspected_bastard
	}
}
