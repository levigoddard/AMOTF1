namespace = trade_policy_events
country_event = {
	id = trade_policy_events.1
	title = trade_policy_events.1.t
	desc = trade_policy_events.1.d
	picture = TRADE_GOODS_eventPicture
	trigger = {
		has_dlc = "Cradle of Civilization"
		any_owned_province = {
			NOT = {
				has_province_modifier = foreign_merchant_community
			}
			base_production = 1
			OR = {
				has_building = merchant_guild
				has_building = trade_depot
				has_building = customs_house
				has_building = stock_exchange
				has_province_flag = trade_center_modifier_has
			}
		}
		any_active_trade_node = {
			any_country = {
				NOT = {
					tag = ROOT
				}
				trading_policy_in_node = {
					node = PREV
					policy = establish_communities
				}
			}
			any_trade_node_member_province = {
				owned_by = ROOT
				base_production = 1
				OR = {
					has_building = merchant_guild
					has_building = trade_depot
					has_building = customs_house
					has_building = stock_exchange
					has_province_flag = trade_center_modifier_has
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_active_trade_node = {
				limit = {
					any_country = {
						NOT = {
							tag = ROOT
						}
						trading_policy_in_node = {
							node = PREV
							policy = establish_communities
						}
					}
					any_trade_node_member_province = {
						owned_by = ROOT
						base_production = 1
						OR = {
							has_building = merchant_guild
							has_building = trade_depot
							has_building = customs_house
							has_building = stock_exchange
							has_province_flag = trade_center_modifier_has
						}
					}
				}
				random_country = {
					limit = {
						NOT = {
							tag = ROOT
						}
						trading_policy_in_node = {
							node = PREV
							policy = establish_communities
						}
					}
					save_event_target_as = community_country
				}
				random_trade_node_member_province = {
					limit = {
						owned_by = ROOT
						base_production = 1
						OR = {
							has_building = merchant_guild
							has_building = trade_depot
							has_building = customs_house
							has_building = stock_exchange
							has_province_flag = trade_center_modifier_has
						}
					}
					save_event_target_as = quarter_city
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 560
	}
	option = {
		name = trade_policy_events.1.a
		event_target:community_country = {
			add_opinion = {
				modifier = growing_merchant_community
				who = ROOT
			}
		}
		event_target:quarter_city = {
			add_province_modifier = {
				name = "foreign_merchant_community"
				duration = 3650
			}
		}
	}
	option = {
		name = trade_policy_events.1.b
		event_target:community_country = {
			add_opinion = {
				modifier = merchants_discriminated
				who = ROOT
			}
		}
		event_target:quarter_city = {
			add_province_modifier = {
				name = "foreign_merchants_discriminated"
				duration = 3650
			}
		}
	}
}
country_event = {
	id = trade_policy_events.2
	title = trade_policy_events.2.t
	desc = trade_policy_events.2.d
	picture = TRADE_GOODS_eventPicture
	trigger = {
		has_dlc = "Cradle of Civilization"
		any_active_trade_node = {
			ROOT = {
				trading_policy_in_node = {
					node = PREV
					policy = establish_communities
				}
			}
			any_trade_node_member_province = {
				NOT = {
					owned_by = ROOT
				}
				NOT = {
					has_province_modifier = local_goods_in_demand
				}
				base_production = 1
				OR = {
					has_province_flag = gems
					has_province_flag = gold
					has_province_flag = urban_goods_rank_3
				}
				owner = {
					NOT = {
						war_with = ROOT
					}
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_active_trade_node = {
				limit = {
					ROOT = {
						trading_policy_in_node = {
							node = PREV
							policy = establish_communities
						}
					}
					any_trade_node_member_province = {
						NOT = {
							owned_by = ROOT
						}
						NOT = {
							has_province_modifier = local_goods_in_demand
						}
						base_production = 1
						OR = {
							has_province_flag = gems
							has_province_flag = gold
							has_province_flag = urban_goods_rank_3
						}
						owner = {
							NOT = {
								war_with = ROOT
							}
						}
					}
				}
				random_trade_node_member_province = {
					limit = {
						NOT = {
							owned_by = ROOT
						}
						NOT = {
							has_province_modifier = local_goods_in_demand
						}
						base_production = 1
						OR = {
							has_province_flag = gems
							has_province_flag = gold
							has_province_flag = urban_goods_rank_3
						}
						owner = {
							NOT = {
								war_with = ROOT
							}
						}
					}
					save_event_target_as = trade_province
					owner = {
						save_event_target_as = trade_province_country
					}
				}
			}
			set_variable = {
				which = burghers_loyalty_removed_a
				value = 5
			}
			set_variable = {
				which = burghers_loyalty_added_a
				value = 5
			}
		}
	}
	mean_time_to_happen = {
		months = 560
	}
	option = {
		name = trade_policy_events.2.a
		if = {
			limit = {
				check_variable = {
					which = estate_burghers_weight_share
					value = 0.01
				}
			}
			custom_tooltip = estate_burghers_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = burghers_loyalty_added
					value = 0
				}
				set_variable = {
					which = burghers_loyalty_added
					which = burghers_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 64
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 32
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 16
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 8
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 4
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 2
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 1
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_burghers_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_burghers_loyalty
						}
						set_variable = {
							which = estate_burghers_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		add_years_of_income = 0.2
		event_target:trade_province_country = {
			add_opinion = {
				modifier = making_us_rich
				who = ROOT
			}
			hidden_effect = {
				country_event = {
					id = trade_policy_events.3
				}
			}
		}
		tooltip = {
			event_target:trade_province = {
				add_province_modifier = {
					name = "local_goods_in_demand"
					duration = 5475
				}
			}
		}
	}
	option = {
		name = trade_policy_events.2.b
		if = {
			limit = {
				check_variable = {
					which = estate_burghers_weight_share
					value = 0.01
				}
			}
			custom_tooltip = estate_burghers_loyalty_removed_a
			hidden_effect = {
				set_variable = {
					which = burghers_loyalty_removed
					value = 0
				}
				set_variable = {
					which = burghers_loyalty_removed
					which = burghers_loyalty_removed_a
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -64
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.64
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -32
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.32
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -16
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.16
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -8
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.08
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -4
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.04
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -2
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.02
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_removed
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = -1
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = -0.01
					}
					subtract_variable = {
						which = burghers_loyalty_removed
						value = 1
					}
				}
				if = {
					limit = {
						NOT = {
							check_variable = {
								which = estate_burghers_loyalty
								value = 0.01
							}
						}
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 0.01
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_burghers_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_burghers_loyalty
						}
						set_variable = {
							which = estate_burghers_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		event_target:trade_province_country = {
			add_opinion = {
				modifier = meddled_in_trade
				who = ROOT
			}
		}
	}
}
country_event = {
	id = trade_policy_events.3
	title = trade_policy_events.3.t
	desc = trade_policy_events.3.d
	picture = TRADE_GOODS_eventPicture
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			set_variable = {
				which = burghers_loyalty_added_a
				value = 5
			}
		}
	}
	option = {
		name = trade_policy_events.3.a
		if = {
			limit = {
				check_variable = {
					which = estate_burghers_weight_share
					value = 0.01
				}
			}
			custom_tooltip = estate_burghers_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = burghers_loyalty_added
					value = 0
				}
				set_variable = {
					which = burghers_loyalty_added
					which = burghers_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 64
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 32
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 16
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 8
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 4
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 2
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = burghers_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_city_burghers
						loyalty = 1
					}
					change_variable = {
						which = estate_burghers_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = burghers_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_burghers_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_burghers_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = burghers_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_burghers_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_burghers_loyalty
						}
						set_variable = {
							which = estate_burghers_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		event_target:trade_province = {
			add_province_modifier = {
				name = "local_goods_in_demand"
				duration = 5475
			}
		}
	}
}
country_event = {
	id = trade_policy_events.4
	title = trade_policy_events.4.t
	desc = trade_policy_events.4.d
	picture = TRADE_GOODS_eventPicture
	trigger = {
		has_dlc = "Cradle of Civilization"
		any_active_trade_node = {
			any_country = {
				NOT = {
					tag = ROOT
				}
				NOT = {
					war_with = ROOT
				}
				trading_policy_in_node = {
					node = PREV
					policy = improve_inland_routes
				}
			}
			any_trade_node_member_province = {
				owned_by = ROOT
				NOT = {
					has_province_flag = caught_foreign_agents
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_active_trade_node = {
				limit = {
					any_country = {
						NOT = {
							tag = ROOT
						}
						NOT = {
							war_with = ROOT
						}
						trading_policy_in_node = {
							node = PREV
							policy = improve_inland_routes
						}
					}
					any_trade_node_member_province = {
						owned_by = ROOT
						NOT = {
							has_province_flag = caught_foreign_agents
						}
					}
				}
				random_country = {
					limit = {
						NOT = {
							tag = ROOT
						}
						NOT = {
							war_with = ROOT
						}
						trading_policy_in_node = {
							node = PREV
							policy = improve_inland_routes
						}
					}
					save_event_target_as = spy_country
				}
				random_trade_node_member_province = {
					limit = {
						owned_by = ROOT
						NOT = {
							has_province_flag = caught_foreign_agents
						}
					}
					save_event_target_as = agents_caught_province
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 560
	}
	option = {
		name = trade_policy_events.4.a
		event_target:agents_caught_province = {
			if = {
				limit = {
					has_province_modifier = urban_development_efforts
				}
				extend_province_modifier = {
					name = urban_development_efforts
					duration = 3625
				}
			}
			else = {
				add_province_modifier = {
					name = urban_development_efforts
					duration = 3625
				}
			}
			set_province_flag = caught_foreign_agents
		}
	}
}
country_event = {
	id = trade_policy_events.5
	title = trade_policy_events.5.t
	desc = trade_policy_events.5.d
	picture = CARAVAN_EVENT_Picture
	trigger = {
		has_dlc = "Cradle of Civilization"
		any_active_trade_node = {
			ROOT = {
				trading_policy_in_node = {
					node = PREV
					policy = improve_inland_routes
				}
			}
			any_trade_node_member_province = {
				NOT = {
					owned_by = ROOT
				}
				is_wasteland = no
				is_sea = no
				base_production = 1
				NOT = {
					owner = {
						war_with = ROOT
					}
				}
				is_capital = no
				NOT = {
					has_province_flag = bandits_handled_by_foreigners
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_active_trade_node = {
				limit = {
					ROOT = {
						trading_policy_in_node = {
							node = PREV
							policy = improve_inland_routes
						}
					}
					any_trade_node_member_province = {
						NOT = {
							owned_by = ROOT
						}
						is_capital = no
						is_wasteland = no
						is_sea = no
						base_production = 1
						NOT = {
							owner = {
								war_with = ROOT
							}
						}
						NOT = {
							has_province_flag = bandits_handled_by_foreigners
						}
					}
				}
				random_trade_node_member_province = {
					limit = {
						is_wasteland = no
						is_sea = no
						NOT = {
							owned_by = ROOT
						}
						is_capital = no
						base_production = 1
						NOT = {
							owner = {
								war_with = ROOT
							}
						}
						NOT = {
							has_province_flag = bandits_handled_by_foreigners
						}
					}
					save_event_target_as = banditprovince
					owner = {
						save_event_target_as = banditprovince_owner
					}
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 560
	}
	option = {
		name = trade_policy_events.5.a
		add_years_of_income = -0.1
		tooltip = {
			event_target:banditprovince_owner = {
				add_opinion = {
					modifier = helped_clear_out_bandits
					who = ROOT
				}
			}
			event_target:banditprovince = {
				add_province_modifier = {
					name = outsiders_cleared_our_merchants
					duration = 3650
				}
				set_province_flag = bandits_handled_by_foreigners
			}
		}
		hidden_effect = {
			event_target:banditprovince_owner = {
				country_event = {
					id = trade_policy_events.6
				}
			}
		}
	}
	option = {
		name = trade_policy_events.5.b
		event_target:banditprovince = {
			add_trade_modifier = {
				who = root
				duration = 3650
				power = -10
				key = merchants_hampered_by_bandits
			}
		}
	}
}
country_event = {
	id = trade_policy_events.6
	title = trade_policy_events.6.t
	desc = trade_policy_events.6.d
	picture = CARAVAN_EVENT_Picture
	is_triggered_only = yes
	option = {
		name = trade_policy_events.6.a
		add_opinion = {
			modifier = helped_clear_out_bandits
			who = FROM
		}
		event_target:banditprovince = {
			add_province_modifier = {
				name = outsiders_cleared_our_merchants
				duration = 3650
			}
		}
	}
}
country_event = {
	id = trade_policy_events.7
	title = trade_policy_events.7.t
	desc = trade_policy_events.7.d
	picture = TRADE_GOODS_eventPicture
	trigger = {
		has_dlc = "Cradle of Civilization"
		any_active_trade_node = {
			any_country = {
				NOT = {
					tag = ROOT
				}
				trading_policy_in_node = {
					node = PREV
					policy = maximize_profit
				}
				NOT = {
					war_with = ROOT
				}
			}
			any_trade_node_member_province = {
				owned_by = ROOT
				is_capital = no
				base_production = 1
				NOT = {
					has_province_modifier = local_protectionism
				}
				NOT = {
					has_province_modifier = local_merchants_outcompeted
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_active_trade_node = {
				limit = {
					any_country = {
						NOT = {
							tag = ROOT
						}
						trading_policy_in_node = {
							node = PREV
							policy = maximize_profit
						}
						NOT = {
							war_with = ROOT
						}
					}
					any_trade_node_member_province = {
						owned_by = ROOT
						is_capital = no
						base_production = 1
						NOT = {
							has_province_modifier = local_protectionism
						}
						NOT = {
							has_province_modifier = local_merchants_outcompeted
						}
					}
				}
				random_country = {
					limit = {
						NOT = {
							tag = ROOT
						}
						trading_policy_in_node = {
							node = PREV
							policy = maximize_profit
						}
						NOT = {
							war_with = ROOT
						}
					}
					save_event_target_as = trader_country
				}
				random_trade_node_member_province = {
					limit = {
						owned_by = ROOT
						is_capital = no
						base_production = 1
						NOT = {
							has_province_modifier = local_protectionism
						}
						NOT = {
							has_province_modifier = local_merchants_outcompeted
						}
					}
					save_event_target_as = trade_province
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 560
	}
	option = {
		name = trade_policy_events.7.a
		event_target:trader_country = {
			add_opinion = {
				who = ROOT
				modifier = protectionism
			}
		}
		event_target:trade_province = {
			add_province_modifier = {
				name = local_protectionism
				duration = 3650
			}
		}
	}
	option = {
		name = trade_policy_events.7.b
		event_target:trade_province = {
			add_province_modifier = {
				name = local_merchants_outcompeted
				duration = 3650
			}
		}
	}
}
country_event = {
	id = trade_policy_events.8
	title = trade_policy_events.8.t
	desc = trade_policy_events.8.d
	picture = TRADE_GOODS_eventPicture
	trigger = {
		has_dlc = "Cradle of Civilization"
		any_active_trade_node = {
			ROOT = {
				trading_policy_in_node = {
					node = PREV
					policy = maximize_profit
				}
			}
			any_trade_node_member_province = {
				owned_by = ROOT
				is_capital = no
				NOT = {
					has_province_flag = developing_business_here
				}
				base_production = 1
				OR = {
					has_building = merchant_guild
					has_building = trade_depot
					has_building = customs_house
					has_building = stock_exchange
					has_province_flag = trade_center_modifier_has
				}
				OR = {
					has_province_flag = gems
					has_province_flag = gold
					has_province_flag = urban_goods_rank_3
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_active_trade_node = {
				limit = {
					ROOT = {
						trading_policy_in_node = {
							node = PREV
							policy = maximize_profit
						}
					}
					any_trade_node_member_province = {
						owned_by = ROOT
						is_capital = no
						base_production = 1
						NOT = {
							has_province_flag = developing_business_here
						}
						OR = {
							has_building = merchant_guild
							has_building = trade_depot
							has_building = customs_house
							has_building = stock_exchange
							has_province_flag = trade_center_modifier_has
						}
						OR = {
							has_province_flag = gems
							has_province_flag = gold
							has_province_flag = urban_goods_rank_3
						}
					}
				}
				random_trade_node_member_province = {
					limit = {
						owned_by = ROOT
						is_capital = no
						base_production = 1
						NOT = {
							has_province_flag = developing_business_here
						}
						OR = {
							has_building = merchant_guild
							has_building = trade_depot
							has_building = customs_house
							has_building = stock_exchange
							has_province_flag = trade_center_modifier_has
						}
						OR = {
							has_province_flag = gems
							has_province_flag = gold
							has_province_flag = urban_goods_rank_3
						}
					}
					save_event_target_as = developing_business_province
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 560
	}
	option = {
		name = trade_policy_events.8.a
		event_target:developing_business_province = {
			if = {
				limit = {
					has_province_modifier = rural_development_efforts
				}
				extend_province_modifier = {
					name = rural_development_efforts
					duration = 7250
				}
			}
			else = {
				add_province_modifier = {
					name = rural_development_efforts
					duration = 7250
				}
			}
			set_province_flag = developing_business_here
		}
	}
}
country_event = {
	id = trade_policy_events.9
	title = trade_policy_events.9.t
	desc = trade_policy_events.9.d
	picture = TRADE_GOODS_eventPicture
	trigger = {
		has_dlc = "Cradle of Civilization"
		any_active_trade_node = {
			ROOT = {
				trading_policy_in_node = {
					node = PREV
					policy = maximize_profit
				}
			}
			NOT = {
				has_trade_modifier = {
					who = ROOT
					key = influential_trading_family
				}
			}
			any_trade_node_member_province = {
				NOT = {
					owned_by = ROOT
				}
				is_capital = no
				is_wasteland = no
				is_sea = no
				is_empty = no
				base_production = 1
				NOT = {
					same_continent = CAPITAL
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			set_saved_name = {
				key = prominent_merchant
				type = advisor
				scope = ROOT
			}
			random_active_trade_node = {
				limit = {
					ROOT = {
						trading_policy_in_node = {
							node = PREV
							policy = maximize_profit
						}
					}
					NOT = {
						has_trade_modifier = {
							who = ROOT
							key = influential_trading_family
						}
					}
					any_trade_node_member_province = {
						NOT = {
							owned_by = ROOT
						}
						is_capital = no
						is_wasteland = no
						is_sea = no
						is_empty = no
						base_production = 1
						NOT = {
							same_continent = CAPITAL
						}
					}
				}
				random_trade_node_member_province = {
					limit = {
						NOT = {
							owned_by = ROOT
						}
						is_capital = no
						NOT = {
							same_continent = CAPITAL
						}
						is_wasteland = no
						is_sea = no
						is_empty = no
						base_production = 1
					}
					save_event_target_as = foreign_province
					owner = {
						save_event_target_as = foreign_province_owner
					}
				}
			}
			random_owned_province = {
				limit = {
					is_capital = yes
				}
				save_event_target_as = merchant_family_province
			}
			random_owned_province = {
				limit = {
					is_state = yes
					OR = {
						has_building = merchant_guild
						has_building = trade_depot
						has_building = customs_house
						has_building = stock_exchange
						has_province_flag = trade_center_modifier_has
					}
				}
				save_event_target_as = merchant_family_province
			}
			random_owned_province = {
				limit = {
					is_state = yes
					OR = {
						has_building = trade_depot
						has_building = customs_house
						has_building = stock_exchange
						has_province_flag = trade_center_modifier_has
					}
				}
				save_event_target_as = merchant_family_province
			}
			random_owned_province = {
				limit = {
					is_state = yes
					OR = {
						has_building = customs_house
						has_building = stock_exchange
						has_province_flag = trade_center_modifier_has
					}
				}
				save_event_target_as = merchant_family_province
			}
		}
	}
	mean_time_to_happen = {
		months = 560
	}
	option = {
		name = trade_policy_events.9.a
		trigger = {
			event_target:foreign_province = {
				any_neighbor_province = {
					NOT = {
						has_discovered = ROOT
					}
				}
			}
		}
		event_target:foreign_province = {
			every_neighbor_province = {
				limit = {
					is_city = yes
				}
				owner = {
					discover_province = ROOT
				}
			}
			owner = {
				add_spy_network_from = {
					who = ROOT
					value = 50
				}
			}
		}
		hidden_effect = {
			clear_saved_name = prominent_merchant
		}
	}
	option = {
		name = trade_policy_events.9.b
		event_target:foreign_province = {
			add_trade_modifier = {
				who = root
				duration = 3650
				power = 10
				key = influential_trading_family
			}
		}
		hidden_effect = {
			clear_saved_name = prominent_merchant
		}
	}
	option = {
		name = trade_policy_events.9.c
		if = {
			limit = {
				NOT = {
					monthly_income = 25
				}
			}
			define_advisor = {
				name = prominent_merchant
				type = trader
				skill = 2
				discount = yes
				culture = event_target:merchant_family_province
				religion = event_target:merchant_family_province
			}
		}
		else = {
			define_advisor = {
				name = prominent_merchant
				type = trader
				skill = 2
				discount = yes
				culture = event_target:merchant_family_province
				religion = event_target:merchant_family_province
			}
		}
	}
}
country_event = {
	id = trade_policy_events.10
	title = trade_policy_events.10.t
	desc = trade_policy_events.10.d
	picture = TRADE_GOODS_eventPicture
	trigger = {
		has_dlc = "Cradle of Civilization"
		any_active_trade_node = {
			strongest_trade_power = {
				NOT = {
					tag = ROOT
				}
				NOT = {
					war_with = ROOT
				}
				trading_policy_in_node = {
					node = PREV
					policy = maximize_profit
				}
			}
			any_trade_node_member_province = {
				owned_by = ROOT
				base_production = 2
				NOT = {
					has_province_modifier = unregulated_economic_growth
				}
				NOT = {
					has_province_modifier = regulated_economic_growth
				}
				OR = {
					has_building = merchant_guild
					has_building = trade_depot
					has_building = customs_house
					has_building = stock_exchange
					has_province_flag = trade_center_modifier_has
				}
				OR = {
					has_province_flag = gems
					has_province_flag = gold
					has_province_flag = urban_goods_rank_3
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_active_trade_node = {
				limit = {
					strongest_trade_power = {
						NOT = {
							tag = ROOT
						}
						NOT = {
							war_with = ROOT
						}
						trading_policy_in_node = {
							node = PREV
							policy = maximize_profit
						}
					}
					any_trade_node_member_province = {
						owned_by = ROOT
						base_production = 2
						NOT = {
							has_province_modifier = unregulated_economic_growth
						}
						NOT = {
							has_province_modifier = regulated_economic_growth
						}
						OR = {
							has_building = merchant_guild
							has_building = trade_depot
							has_building = customs_house
							has_building = stock_exchange
							has_province_flag = trade_center_modifier_has
						}
						OR = {
							has_province_flag = gems
							has_province_flag = gold
							has_province_flag = urban_goods_rank_3
						}
					}
				}
				random_trade_node_member_province = {
					limit = {
						owned_by = ROOT
						base_production = 2
						NOT = {
							has_province_modifier = unregulated_economic_growth
						}
						NOT = {
							has_province_modifier = regulated_economic_growth
						}
						OR = {
							has_building = merchant_guild
							has_building = trade_depot
							has_building = customs_house
							has_building = stock_exchange
							has_province_flag = trade_center_modifier_has
						}
						OR = {
							has_province_flag = gems
							has_province_flag = gold
							has_province_flag = urban_goods_rank_3
						}
					}
					save_event_target_as = trade_province
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 660
	}
	option = {
		name = trade_policy_events.10.a
		event_target:trade_province = {
			add_province_modifier = {
				name = "regulated_economic_growth"
				duration = 3650
			}
		}
	}
	option = {
		name = trade_policy_events.10.b
		random_list = {
			25 = {
				event_target:trade_province = {
					if = {
						limit = {
							has_province_modifier = urban_decay
						}
						extend_province_modifier = {
							name = urban_decay
							duration = 3625
						}
					}
					else = {
						add_province_modifier = {
							name = urban_decay
							duration = 3625
						}
					}
				}
			}
			75 = {}
		}
		event_target:trade_province = {
			add_province_modifier = {
				name = "unregulated_economic_growth"
				duration = 3650
			}
		}
	}
}
country_event = {
	id = trade_policy_events.11
	title = trade_policy_events.11.t
	desc = trade_policy_events.11.d
	picture = SAD_MERCHANT_eventPicture
	trigger = {
		has_dlc = "Cradle of Civilization"
		any_active_trade_node = {
			strongest_trade_power = {
				OR = {
					NOT = {
						tag = ROOT
					}
					AND = {
						tag = ROOT
						NOT = {
							trading_policy_in_node = {
								node = PREV
								policy = maximize_profit
							}
						}
					}
				}
			}
			any_trade_node_member_province = {
				owned_by = ROOT
				base_production = 2
				NOT = {
					has_province_modifier = lack_of_demand_for_local_goods
				}
				OR = {
					has_province_flag = gems
					has_province_flag = gold
					has_province_flag = urban_goods_rank_3
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			random_active_trade_node = {
				limit = {
					strongest_trade_power = {
						OR = {
							NOT = {
								tag = ROOT
							}
							AND = {
								tag = ROOT
								NOT = {
									trading_policy_in_node = {
										node = PREV
										policy = maximize_profit
									}
								}
							}
						}
					}
					any_trade_node_member_province = {
						owned_by = ROOT
						base_production = 2
						NOT = {
							has_province_modifier = lack_of_demand_for_local_goods
						}
						OR = {
							has_province_flag = gems
							has_province_flag = gold
							has_province_flag = urban_goods_rank_3
						}
					}
				}
				random_trade_node_member_province = {
					limit = {
						owned_by = ROOT
						base_production = 2
						NOT = {
							has_province_modifier = lack_of_demand_for_local_goods
						}
						OR = {
							has_province_flag = gems
							has_province_flag = gold
							has_province_flag = urban_goods_rank_3
						}
					}
					save_event_target_as = trade_province
				}
			}
		}
	}
	mean_time_to_happen = {
		months = 660
	}
	option = {
		name = trade_policy_events.11.a
		event_target:trade_province = {
			add_province_modifier = {
				name = "lack_of_demand_for_local_goods"
				duration = 3650
			}
		}
	}
}
