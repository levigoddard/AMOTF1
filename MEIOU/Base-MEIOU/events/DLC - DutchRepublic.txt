namespace = dutch_republic
country_event = {
	id = dutch_republic.1
	title = "dutch_republic.1.t"
	desc = "dutch_republic.1.d"
	picture = GOOD_WITH_MONARCH_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_orangists_in_power = yes
		any_neighbor_country = {
			government = monarchy
			absolutism = 70
			NOT = {
				has_opinion_modifier = {
					who = ROOT
					modifier = embraced_absolutism
				}
			}
			NOT = {
				has_opinion_modifier = {
					who = ROOT
					modifier = rejected_absolutism
				}
			}
		}
	}
	option = {
		name = "dutch_republic.1.a"
		change_statists_vs_orangists = 0.25
		set_country_flag = supported_orangists
		clr_country_flag = supported_statists
		every_neighbor_country = {
			limit = {
				government = monarchy
				absolutism = 70
			}
			add_opinion = {
				who = ROOT
				modifier = embraced_absolutism
			}
		}
	}
	option = {
		name = "dutch_republic.1.b"
		change_statists_vs_orangists = -0.25
		set_country_flag = supported_statists
		clr_country_flag = supported_orangists
		every_neighbor_country = {
			limit = {
				government = monarchy
				absolutism = 70
			}
			add_opinion = {
				who = ROOT
				modifier = rejected_absolutism
			}
		}
	}
}
country_event = {
	id = dutch_republic.2
	title = "dutch_republic.2.t"
	desc = "dutch_republic.2.d"
	picture = ADVISOR_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_orangists_in_power = yes
		OR = {
			advisor = statesman
			advisor = diplomat
			advisor = trader
			advisor = colonial_governor
		}
	}
	option = {
		name = "dutch_republic.2.a"
		change_statists_vs_orangists = 0.25
		set_country_flag = supported_orangists
		clr_country_flag = supported_statists
		remove_advisor = statesman
		remove_advisor = diplomat
		remove_advisor = trader
		remove_advisor = colonial_governor
	}
	option = {
		name = "dutch_republic.2.b"
		change_statists_vs_orangists = -0.25
		set_country_flag = supported_statists
		clr_country_flag = supported_orangists
		add_dip_power = -50
	}
}
country_event = {
	id = dutch_republic.3
	title = "dutch_republic.3.t"
	desc = "dutch_republic.3.d"
	picture = RELIGIOUS_TURMOIL_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_orangists_in_power = yes
		OR = {
			religion = protestant
			religion = reformed
		}
		NOT = {
			religious_unity = 1.0
		}
	}
	option = {
		name = "dutch_republic.3.a"
		change_statists_vs_orangists = 0.25
		set_country_flag = supported_orangists
		clr_country_flag = supported_statists
		add_country_modifier = {
			name = sermons_for_princes
			duration = 1825
		}
	}
	option = {
		name = "dutch_republic.3.b"
		change_statists_vs_orangists = -0.25
		set_country_flag = supported_statists
		clr_country_flag = supported_orangists
		add_country_modifier = {
			name = no_sermons_for_princes
			duration = 1825
		}
	}
}
country_event = {
	id = dutch_republic.4
	title = "dutch_republic.4.t"
	desc = "dutch_republic.4.d"
	picture = ACCUSATION_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_orangists_in_power = yes
	}
	option = {
		name = "dutch_republic.4.a"
		change_statists_vs_orangists = 0.25
		set_country_flag = supported_orangists
		clr_country_flag = supported_statists
		add_country_modifier = {
			name = angered_traders
			duration = 1825
		}
	}
	option = {
		name = "dutch_republic.4.b"
		change_statists_vs_orangists = -0.25
		set_country_flag = supported_statists
		clr_country_flag = supported_orangists
		add_adm_power = -25
		add_dip_power = -25
	}
}
country_event = {
	id = dutch_republic.5
	title = "dutch_republic.5.t"
	desc = "dutch_republic.5.d"
	picture = RELIGION_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_orangists_in_power = yes
		has_country_flag = supported_orangists
	}
	option = {
		name = "dutch_republic.5.a"
		clr_country_flag = supported_orangists
		add_adm_power = 25
		add_prestige = 10
		add_republican_tradition = -5
	}
	option = {
		name = "dutch_republic.5.b"
		clr_country_flag = supported_orangists
		add_papal_influence = 10
		add_prestige = -5
	}
}
country_event = {
	id = dutch_republic.6
	title = "dutch_republic.6.t"
	desc = "dutch_republic.6.d"
	picture = DEBATE_REPUBLICAN_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_orangists_in_power = yes
		has_country_flag = supported_statists
	}
	option = {
		name = "dutch_republic.6.a"
		clr_country_flag = supported_statists
		add_army_tradition = -10
	}
	option = {
		name = "dutch_republic.6.b"
		clr_country_flag = supported_statists
		add_mil_power = -50
	}
}
country_event = {
	id = dutch_republic.7
	title = "dutch_republic.7.t"
	desc = "dutch_republic.7.d"
	picture = DEBATE_REPUBLICAN_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_orangists_in_power = yes
		has_country_flag = supported_statists
	}
	option = {
		name = "dutch_republic.7.a"
		clr_country_flag = supported_statists
		change_statists_vs_orangists = -0.1
		add_republican_tradition = 5
	}
}
country_event = {
	id = dutch_republic.8
	title = "dutch_republic.8.t"
	desc = "dutch_republic.8.d"
	picture = LIBERUM_VETO_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_orangists_in_power = yes
		has_country_flag = supported_orangists
	}
	option = {
		name = "dutch_republic.8.a"
		clr_country_flag = supported_orangists
		add_country_modifier = {
			name = no_taxes_for_tyrants
			duration = 1825
		}
	}
}
country_event = {
	id = dutch_republic.9
	title = "dutch_republic.9.t"
	desc = "dutch_republic.9.d"
	picture = ASSASSINATION_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		statists_vs_orangists = 0.9
		advisor = spymaster
	}
	option = {
		name = "dutch_republic.9.a"
		ai_chance = {
			factor = 20
		}
		change_statists_vs_orangists = -0.75
		kill_ruler = yes
		add_republican_tradition = -10
	}
	option = {
		name = "dutch_republic.9.b"
		ai_chance = {
			factor = 80
		}
		custom_tooltip = "dutch_republic.9.b.tt"
		kill_advisor = spymaster
		add_republican_tradition = 3
	}
}
country_event = {
	id = dutch_republic.10
	title = "dutch_republic.10.t"
	desc = "dutch_republic.10.d"
	picture = LIBERUM_VETO_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		statists_vs_orangists = 0.9
	}
	option = {
		name = "dutch_republic.10.a"
		add_republican_tradition = -5
	}
}
country_event = {
	id = dutch_republic.11
	title = "dutch_republic.11.t"
	desc = "dutch_republic.11.d"
	picture = DIPLOMACY_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		had_recent_war = 3
		has_truce = yes
		any_known_country = {
			truce_with = ROOT
			OR = {
				AND = {
					OR = {
						AND = {
							has_reform = parliamentary_monarchy
							has_reform = delegated_rulers
						}
						has_reform = english_monarchy_legacy
					}
				}
				AND = {
					OR = {
						AND = {
							has_reform = parliamentary_monarchy
							has_reform = bureaucracy
							has_reform = hereditary_elite
						}
						has_reform = dutch_republic_legacy
					}
				}
			}
			is_statists_in_power = yes
			NOT = {
				has_country_flag = accepted_act_of_seclusion
			}
		}
	}
	option = {
		name = "dutch_republic.11.a"
		random_known_country = {
			limit = {
				truce_with = ROOT
				OR = {
					AND = {
						OR = {
							AND = {
								has_reform = parliamentary_monarchy
								has_reform = delegated_rulers
							}
							has_reform = english_monarchy_legacy
						}
					}
					AND = {
						OR = {
							AND = {
								has_reform = parliamentary_monarchy
								has_reform = bureaucracy
								has_reform = hereditary_elite
							}
							has_reform = dutch_republic_legacy
						}
					}
				}
				is_statists_in_power = yes
			}
			country_event = {
				id = dutch_republic.12
				days = 7
				tooltip = "dutch_republic.11.a.tt"
			}
		}
	}
	option = {
		name = "dutch_republic.11.b"
		add_prestige = 5
	}
}
country_event = {
	id = dutch_republic.12
	title = "dutch_republic.12.t"
	desc = "dutch_republic.12.d"
	picture = DIPLOMACY_eventPicture
	is_triggered_only = yes
	option = {
		name = "dutch_republic.12.a"
		change_statists_vs_orangists = -0.75
		ai_chance = {
			factor = 75
			modifier = {
				factor = 0.1
				NOT = {
					stability = 1
				}
			}
		}
		set_country_flag = supported_statists
		clr_country_flag = supported_orangists
		random_list = {
			30 = {}
			40 = {
				custom_tooltip = stability_points_lost_50
				hidden_effect = {
					subtract_variable = {
						which = stability_points
						value = 50
					}
					if = {
						limit = {
							NOT = {
								check_variable = {
									which = stability_points
									value = 0
								}
							}
						}
						add_stability = -1
						country_event = {
							id = POP_Stability.003
						}
						if = {
							limit = {
								is_emperor_of_china = yes
							}
							add_mandate = -5
						}
					}
				}
			}
			30 = {
				add_stability = -1
				hidden_effect = {
					country_event = {
						id = POP_Stability.003
					}
				}
				if = {
					limit = {
						is_emperor_of_china = yes
					}
					add_mandate = -5
				}
			}
		}
		add_country_modifier = {
			name = act_of_seclusion
			duration = 7300
		}
		set_country_flag = accepted_act_of_seclusion
	}
	option = {
		name = "dutch_republic.12.b"
		ai_chance = {
			factor = 25
		}
		change_statists_vs_orangists = 0.25
		set_country_flag = supported_orangists
		clr_country_flag = supported_statists
		add_prestige = 10
	}
}
country_event = {
	id = dutch_republic.13
	title = "dutch_republic.13.t"
	desc = "dutch_republic.13.d"
	picture = DIPLOMACY_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_statists_in_power = yes
		num_of_royal_marriages = 1
	}
	option = {
		name = "dutch_republic.13.a"
		change_statists_vs_orangists = -0.25
		set_country_flag = supported_statists
		clr_country_flag = supported_orangists
		every_known_country = {
			limit = {
				marriage_with = ROOT
			}
			add_opinion = {
				who = ROOT
				modifier = uncertain_marriage_ties
			}
		}
	}
	option = {
		name = "dutch_republic.13.b"
		change_statists_vs_orangists = 0.25
		set_country_flag = supported_orangists
		clr_country_flag = supported_statists
		every_known_country = {
			limit = {
				marriage_with = ROOT
			}
			add_opinion = {
				who = ROOT
				modifier = ensured_stable_rule
			}
		}
	}
}
country_event = {
	id = dutch_republic.14
	title = "dutch_republic.14.t"
	desc = "dutch_republic.14.d"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_statists_in_power = yes
		OR = {
			num_of_generals = 1
			num_of_conquistadors = 1
		}
		is_monarch_leader = no
		NOT = {
			num_of_admirals = 1
		}
		NOT = {
			tag = AAA
		}
	}
	option = {
		name = "dutch_republic.14.a"
		change_statists_vs_orangists = -0.25
		set_country_flag = supported_statists
		clr_country_flag = supported_orangists
		kill_leader = {
			type = random
		}
		add_mil_power = 50
	}
	option = {
		name = "dutch_republic.14.b"
		change_statists_vs_orangists = 0.25
		set_country_flag = supported_orangists
		clr_country_flag = supported_statists
		create_advisor = commandant
	}
}
country_event = {
	id = dutch_republic.15
	title = "dutch_republic.15.t"
	desc = "dutch_republic.15.d"
	picture = LIBERUM_VETO_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_statists_in_power = yes
	}
	immediate = {
		hidden_effect = {
			set_variable = {
				which = nobles_loyalty_added_a
				value = 10
			}
		}
	}
	option = {
		name = "dutch_republic.15.a"
		change_statists_vs_orangists = -0.25
		set_country_flag = supported_statists
		clr_country_flag = supported_orangists
		random_owned_province = {
			limit = {
				NOT = {
					has_province_modifier = nobles_organizing
				}
			}
			add_province_modifier = {
				name = "nobles_organizing"
				duration = 1825
			}
			hidden_effect = {
				set_variable = {
					which = added_unrest
					value = 5
				}
				hidden_effect = {
					province_event = {
						id = stacking_unrest.002
					}
				}
			}
			custom_tooltip = added_unrest_5
		}
	}
	option = {
		name = "dutch_republic.15.b"
		change_statists_vs_orangists = 0.25
		set_country_flag = supported_orangists
		clr_country_flag = supported_statists
		if = {
			limit = {
				check_variable = {
					which = estate_greater_nobles_weight_share
					value = 0.05
				}
				OR = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						which = estate_lesser_nobles_weight_share
					}
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.10
					}
				}
			}
			custom_tooltip = t_estate_greater_nobles_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = greater_nobles_loyalty_added
					value = 0
				}
				set_variable = {
					which = greater_nobles_loyalty_added
					which = nobles_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 64
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 32
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 16
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 8
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 4
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 2
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = greater_nobles_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_greater_nobles
						loyalty = 1
					}
					change_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = greater_nobles_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_greater_nobles_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = greater_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_greater_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_greater_nobles_loyalty
						}
						set_variable = {
							which = estate_greater_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = estate_lesser_nobles_weight_share
					value = 0.15
				}
				OR = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						which = estate_greater_nobles_weight_share
					}
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.25
					}
				}
			}
			custom_tooltip = t_estate_lesser_nobles_loyalty_added_a
			hidden_effect = {
				set_variable = {
					which = lesser_nobles_loyalty_added
					value = 0
				}
				set_variable = {
					which = lesser_nobles_loyalty_added
					which = nobles_loyalty_added_a
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 64
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 64
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.64
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 64
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 32
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 32
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.32
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 32
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 16
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 16
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.16
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 16
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 8
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 8
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.08
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 8
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 4
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 4
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.04
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 4
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 2
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 2
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.02
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 2
					}
				}
				if = {
					limit = {
						check_variable = {
							which = lesser_nobles_loyalty_added
							value = 1
						}
					}
					add_estate_loyalty = {
						estate = estate_lesser_nobles
						loyalty = 1
					}
					change_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.01
					}
					subtract_variable = {
						which = lesser_nobles_loyalty_added
						value = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 1
						}
					}
					set_variable = {
						which = estate_lesser_nobles_loyalty
						value = 1
					}
				}
				every_owned_province = {
					limit = {
						has_province_flag = lesser_nobles_control_province
					}
					hidden_effect = {
						set_variable = {
							which = estate_lesser_nobles_loyalty
							which = owner
						}
						set_variable = {
							which = EstateProv_UnrestSave
							which = EstateProv_Unrest
						}
						set_variable = {
							which = EstateProv_Unrest
							which = estate_lesser_nobles_loyalty
						}
						set_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_Unrest
									value = 0.6
								}
							}
							set_province_flag = loss
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.6
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_Unrest
										value = 0.401
									}
								}
							}
							set_province_flag = gain
							subtract_variable = {
								which = EstateProv_Unrest
								value = 0.4
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
						}
						else = {
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						multiply_variable = {
							which = EstateProv_Unrest
							value = 16.62
						}
						set_variable = {
							which = inp_m_exp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								NOT = {
									check_variable = {
										which = inp_m_exp
										value = 0
									}
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
							change_variable = {
								which = err.math.exp.undef
								value = 1
							}
						}
						else_if = {
							limit = {
								is_variable_equal = {
									which = inp_m_exp
									value = 0
								}
							}
							set_variable = {
								which = exp_val
								value = 0
							}
						}
						else = {
							set_variable = {
								which = exp_m_exp
								value = 1.7
							}
							set_variable = {
								which = int_m_exp
								which = exp_m_exp
							}
							multiply_variable = {
								which = int_m_exp
								value = 0.001
							}
							multiply_variable = {
								which = int_m_exp
								value = 1000
							}
							set_variable = {
								which = dec_m_exp
								which = exp_m_exp
							}
							subtract_variable = {
								which = dec_m_exp
								which = int_m_exp
							}
							set_variable = {
								which = inp
								which = inp_m_exp
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = inp
											value = 0.001
										}
									}
								}
								set_variable = {
									which = ln_val
									value = 0
								}
								change_variable = {
									which = err.math.ln.undef
									value = 1
								}
							}
							else = {
								set_variable = {
									which = ln_val
									value = 0
								}
								set_variable = {
									which = scale
									value = 10000
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									which = scale
								}
								while = {
									limit = {
										check_variable = {
											which = inp
											value = 2.001
										}
									}
									multiply_variable = {
										which = inp
										value = 0.5
									}
									change_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = inp
												value = 1
											}
										}
									}
									multiply_variable = {
										which = inp
										value = 2
									}
									subtract_variable = {
										which = ln_val
										value = 6931.472
									}
								}
								multiply_variable = {
									which = inp
									which = scale
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = k
												value = 10
											}
										}
									}
									change_variable = {
										which = k
										value = 1
									}
									multiply_variable = {
										which = k_div
										value = 0.5
									}
									set_variable = {
										which = t_m_ln
										which = scale
									}
									change_variable = {
										which = t_m_ln
										which = k_div
									}
									if = {
										limit = {
											check_variable = {
												which = inp
												which = t_m_ln
											}
										}
										divide_variable = {
											which = inp
											which = t_m_ln
										}
										multiply_variable = {
											which = inp
											which = scale
										}
										set_variable = {
											which = lt_ind
											which = k
										}
										if = {
											limit = {
												check_variable = {
													which = lt_ind
													value = 6
												}
											}
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 8
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 9
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 10
															}
														}
														set_variable = {
															which = lt_val
															value = 9.761
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 19.512
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 38.986
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 7
														}
													}
													set_variable = {
														which = lt_val
														value = 77.821
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 155.042
													}
												}
											}
										}
										else = {
											if = {
												limit = {
													check_variable = {
														which = lt_ind
														value = 3
													}
												}
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 4
														}
													}
													if = {
														limit = {
															check_variable = {
																which = lt_ind
																value = 5
															}
														}
														set_variable = {
															which = lt_val
															value = 307.717
														}
													}
													else = {
														set_variable = {
															which = lt_val
															value = 606.246
														}
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 1177.83
													}
												}
											}
											else = {
												if = {
													limit = {
														check_variable = {
															which = lt_ind
															value = 2
														}
													}
													set_variable = {
														which = lt_val
														value = 2231.436
													}
												}
												else = {
													set_variable = {
														which = lt_val
														value = 4054.651
													}
												}
											}
										}
										set_variable = {
											which = lt_ind
											value = 0
										}
										change_variable = {
											which = ln_val
											which = lt_val
										}
									}
									set_variable = {
										which = t_m_ln
										value = 0
									}
								}
								divide_variable = {
									which = ln_val
									value = 10000
								}
								set_variable = {
									which = scale
									value = 0
								}
								set_variable = {
									which = k
									value = 0
								}
								set_variable = {
									which = k_div
									value = 0
								}
								set_variable = {
									which = lt_val
									value = 0
								}
							}
							set_variable = {
								which = inp
								value = 0
							}
							multiply_variable = {
								which = dec_m_exp
								which = ln_val
							}
							set_variable = {
								which = math.e.expnt
								which = dec_m_exp
							}
							set_variable = {
								which = math.e.return
								value = 1
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = math.e.expnt
											value = -6.999
										}
									}
								}
								set_variable = {
									which = exp_val
									value = 0
								}
							}
							else = {
								while = {
									limit = {
										check_variable = {
											which = math.e.expnt
											value = 1
										}
									}
									subtract_variable = {
										which = math.e.expnt
										value = 1
									}
									multiply_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								while = {
									limit = {
										NOT = {
											check_variable = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									change_variable = {
										which = math.e.expnt
										value = 1
									}
									divide_variable = {
										which = math.e.return
										value = 2.718
									}
								}
								set_variable = {
									which = math.e.sm
									value = 1
								}
								if = {
									limit = {
										NOT = {
											is_variable_equal = {
												which = math.e.expnt
												value = 0
											}
										}
									}
									set_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									multiply_variable = {
										which = math.e.sq
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.fct
										value = 2
									}
									set_variable = {
										which = math.e.fctl
										value = 2
									}
									set_variable = {
										which = math.e.a1
										which = math.e.sq
									}
									set_variable = {
										which = math.e.a2
										which = math.e.expnt
									}
									set_variable = {
										which = math.e.a3
										value = 2
									}
									set_variable = {
										which = math.e.tmp
										which = math.e.a2
									}
									multiply_variable = {
										which = math.e.tmp
										which = math.e.a3
									}
									change_variable = {
										which = math.e.tmp
										which = math.e.a1
									}
									divide_variable = {
										which = math.e.tmp
										which = math.e.fct
									}
									change_variable = {
										which = math.e.sm
										which = math.e.tmp
									}
									set_variable = {
										which = math.e.prec
										value = 3
									}
									subtract_variable = {
										which = math.e.prec
										value = 1
									}
									while = {
										limit = {
											check_variable = {
												which = math.e.prec
												value = 1
											}
										}
										subtract_variable = {
											which = math.e.prec
											value = 1
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										change_variable = {
											which = math.e.fctl
											value = 1
										}
										multiply_variable = {
											which = math.e.fct
											which = math.e.fctl
										}
										multiply_variable = {
											which = math.e.a1
											which = math.e.sq
										}
										multiply_variable = {
											which = math.e.a2
											which = math.e.sq
										}
										change_variable = {
											which = math.e.a3
											value = 2
										}
										set_variable = {
											which = math.e.tmp
											which = math.e.a2
										}
										multiply_variable = {
											which = math.e.tmp
											which = math.e.a3
										}
										change_variable = {
											which = math.e.tmp
											which = math.e.a1
										}
										divide_variable = {
											which = math.e.tmp
											which = math.e.fct
										}
										change_variable = {
											which = math.e.sm
											which = math.e.tmp
										}
									}
								}
								multiply_variable = {
									which = math.e.return
									which = math.e.sm
								}
								set_variable = {
									which = exp_val
									which = math.e.return
								}
								set_variable = {
									which = math.e.sm
									value = 0
								}
								set_variable = {
									which = math.e.tmp
									value = 0
								}
								set_variable = {
									which = math.e.a1
									value = 0
								}
								set_variable = {
									which = math.e.a2
									value = 0
								}
								set_variable = {
									which = math.e.a3
									value = 0
								}
								set_variable = {
									which = math.e.fctl
									value = 0
								}
								set_variable = {
									which = math.e.fct
									value = 0
								}
								set_variable = {
									which = math.e.prec
									value = 0
								}
								set_variable = {
									which = math.e.sq
									value = 0
								}
							}
							set_variable = {
								which = math.e.expnt
								value = 0
							}
							set_variable = {
								which = math.e.return
								value = 0
							}
							while = {
								limit = {
									check_variable = {
										which = int_m_exp
										value = 1
									}
								}
								subtract_variable = {
									which = int_m_exp
									value = 1
								}
								multiply_variable = {
									which = exp_val
									which = inp_m_exp
								}
							}
							set_variable = {
								which = exp_m_exp
								value = 0
							}
							set_variable = {
								which = int_m_exp
								value = 0
							}
							set_variable = {
								which = dec_m_exp
								value = 0
							}
							set_variable = {
								which = ln_val
								value = 0
							}
						}
						set_variable = {
							which = inp_m_exp
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest
							which = exp_val
						}
						set_variable = {
							which = exp_val
							value = 0
						}
						export_to_variable = {
							which = EstateProv_LA
							value = local_autonomy
						}
						multiply_variable = {
							which = EstateProv_LA
							value = 0.008
						}
						change_variable = {
							which = EstateProv_LA
							value = 0.2
						}
						multiply_variable = {
							which = EstateProv_Unrest
							which = EstateProv_LA
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							which = EstateProv_Unrest
						}
						if = {
							limit = {
								has_province_flag = loss
							}
							clr_province_flag = loss
							multiply_variable = {
								which = EstateProv_Unrest
								value = -1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestLoss_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestLoss_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						else_if = {
							limit = {
								has_province_flag = gain
							}
							clr_province_flag = gain
							multiply_variable = {
								which = EstateProv_Unrest
								value = 1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 0.1
							}
							multiply_variable = {
								which = EstateProv_Unrest
								value = 10
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 25.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 25.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_25.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_25.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_25.6
								}
								remove_province_modifier = EstateProv_UnrestGain_25.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 12.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 12.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_12.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_12.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_12.8
								}
								remove_province_modifier = EstateProv_UnrestGain_12.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 6.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 6.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_6.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_6.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_6.4
								}
								remove_province_modifier = EstateProv_UnrestGain_6.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 3.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 3.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_3.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_3.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_3.2
								}
								remove_province_modifier = EstateProv_UnrestGain_3.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 1.6
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 1.6
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_1.6
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_1.6
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_1.6
								}
								remove_province_modifier = EstateProv_UnrestGain_1.6
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.8
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.8
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.8
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.8
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.8
								}
								remove_province_modifier = EstateProv_UnrestGain_0.8
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.4
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.4
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.4
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.4
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.4
								}
								remove_province_modifier = EstateProv_UnrestGain_0.4
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.2
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.2
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.2
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.2
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.2
								}
								remove_province_modifier = EstateProv_UnrestGain_0.2
							}
							if = {
								limit = {
									check_variable = {
										which = EstateProv_Unrest_Inp
										value = 0.1
									}
								}
								subtract_variable = {
									which = EstateProv_Unrest_Inp
									value = 0.1
								}
								if = {
									limit = {
										NOT = {
											has_province_modifier = EstateProv_UnrestGain_0.1
										}
									}
									add_province_modifier = {
										name = EstateProv_UnrestGain_0.1
										duration = -1
										hidden = yes
									}
								}
							}
							else_if = {
								limit = {
									has_province_modifier = EstateProv_UnrestGain_0.1
								}
								remove_province_modifier = EstateProv_UnrestGain_0.1
							}
						}
						if = {
							limit = {
								check_variable = {
									which = EstateProv_UnrestSave
									value = 0.001
								}
							}
							if = {
								limit = {
									NOT = {
										check_variable = {
											which = EstateProv_Unrest
											value = 0.001
										}
									}
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_25.6
									}
									remove_province_modifier = EstateProv_UnrestGain_25.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_12.8
									}
									remove_province_modifier = EstateProv_UnrestGain_12.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_6.4
									}
									remove_province_modifier = EstateProv_UnrestGain_6.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_3.2
									}
									remove_province_modifier = EstateProv_UnrestGain_3.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_1.6
									}
									remove_province_modifier = EstateProv_UnrestGain_1.6
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.8
									}
									remove_province_modifier = EstateProv_UnrestGain_0.8
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.4
									}
									remove_province_modifier = EstateProv_UnrestGain_0.4
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.2
									}
									remove_province_modifier = EstateProv_UnrestGain_0.2
								}
								if = {
									limit = {
										has_province_modifier = EstateProv_UnrestGain_0.1
									}
									remove_province_modifier = EstateProv_UnrestGain_0.1
								}
							}
						}
						else_if = {
							limit = {
								NOT = {
									check_variable = {
										which = EstateProv_UnrestSave
										value = 0
									}
								}
								check_variable = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_25.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_25.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_12.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_12.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_6.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_6.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_3.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_3.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_1.6
								}
								remove_province_modifier = EstateProv_UnrestLoss_1.6
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.8
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.8
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.4
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.4
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.2
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.2
							}
							if = {
								limit = {
									has_province_modifier = EstateProv_UnrestLoss_0.1
								}
								remove_province_modifier = EstateProv_UnrestLoss_0.1
							}
						}
						if = {
							limit = {
								is_variable_equal = {
									which = EstateProv_Unrest
									value = 0
								}
							}
							set_variable = {
								which = EstateProv_Unrest
								value = 0
							}
						}
						set_variable = {
							which = EstateProv_UnrestSave
							value = 0
						}
						set_variable = {
							which = EstateProv_LA
							value = 0
						}
						set_variable = {
							which = EstateProv_Unrest_Inp
							value = 0
						}
					}
				}
			}
		}
	}
}
country_event = {
	id = dutch_republic.16
	title = "dutch_republic.16.t"
	desc = "dutch_republic.16.d"
	picture = FEAST_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_statists_in_power = yes
		has_country_flag = supported_statists
	}
	option = {
		name = "dutch_republic.16.a"
		add_prestige = 20
		add_adm_power = -25
		add_dip_power = -25
		clr_country_flag = supported_statists
	}
	option = {
		name = "dutch_republic.16.b"
		add_republican_tradition = 5
		add_adm_power = -50
		add_dip_power = -50
		clr_country_flag = supported_statists
	}
}
country_event = {
	id = dutch_republic.17
	title = "dutch_republic.17.t"
	desc = "dutch_republic.17.d"
	picture = BAD_WITH_MONARCH_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_statists_in_power = yes
		has_country_flag = supported_orangists
	}
	option = {
		name = "dutch_republic.17.a"
		add_prestige = -5
		clr_country_flag = supported_orangists
	}
	option = {
		name = "dutch_republic.17.b"
		add_adm_power = -10
		add_dip_power = -10
		add_mil_power = -10
		clr_country_flag = supported_orangists
	}
}
country_event = {
	id = dutch_republic.18
	title = "dutch_republic.18.t"
	desc = "dutch_republic.18.d"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_statists_in_power = yes
		has_country_flag = supported_orangists
	}
	option = {
		name = "dutch_republic.18.a"
		add_army_tradition = 10
		change_statists_vs_orangists = 0.1
		clr_country_flag = supported_orangists
	}
	option = {
		name = "dutch_republic.18.b"
		add_navy_tradition = 10
		change_statists_vs_orangists = 0.1
		clr_country_flag = supported_orangists
	}
}
country_event = {
	id = dutch_republic.19
	title = "dutch_republic.19.t"
	desc = "dutch_republic.19.d"
	picture = DEBATE_REPUBLICAN_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		is_statists_in_power = yes
		has_country_flag = supported_statists
	}
	option = {
		name = "dutch_republic.19.a"
		add_country_modifier = {
			name = distrust_among_nobles
			duration = 1825
		}
		clr_country_flag = supported_orangists
	}
}
country_event = {
	id = dutch_republic.20
	title = "dutch_republic.20.t"
	desc = "dutch_republic.20.d"
	picture = ASSASSINATION_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		OR = {
			has_country_flag = supported_orangists
			has_country_flag = supported_statists
		}
		NOT = {
			statists_vs_orangists = 0.1
		}
		OR = {
			advisor = army_organiser
			advisor = army_reformer
			advisor = commandant
			advisor = quartermaster
			advisor = grand_captain
			advisor = recruitmaster
		}
	}
	option = {
		name = "dutch_republic.20.a"
		ai_chance = {
			factor = 20
		}
		change_statists_vs_orangists = 1.0
		kill_ruler = yes
		add_republican_tradition = -15
	}
	option = {
		name = "dutch_republic.20.b"
		ai_chance = {
			factor = 80
		}
		if = {
			limit = {
				advisor = army_organiser
			}
			kill_advisor = army_organiser
		}
		if = {
			limit = {
				advisor = army_reformer
			}
			kill_advisor = army_reformer
		}
		if = {
			limit = {
				advisor = commandant
			}
			kill_advisor = commandant
		}
		if = {
			limit = {
				advisor = quartermaster
			}
			kill_advisor = quartermaster
		}
		if = {
			limit = {
				advisor = grand_captain
			}
			kill_advisor = grand_captain
		}
		if = {
			limit = {
				advisor = recruitmaster
			}
			kill_advisor = recruitmaster
		}
		capital_scope = {
			add_province_modifier = {
				name = "nobles_organizing"
				duration = 3650
			}
			hidden_effect = {
				set_variable = {
					which = added_unrest
					value = 10
				}
				hidden_effect = {
					province_event = {
						id = stacking_unrest.002
					}
				}
			}
			custom_tooltip = added_unrest_10
		}
		add_republican_tradition = 5
	}
}
country_event = {
	id = dutch_republic.21
	title = "dutch_republic.21.t"
	desc = "dutch_republic.21.d"
	picture = DEBATE_REPUBLICAN_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		OR = {
			has_country_flag = supported_orangists
			has_country_flag = supported_statists
		}
		NOT = {
			statists_vs_orangists = 0.1
		}
	}
	option = {
		name = "dutch_republic.21.a"
		add_adm_power = -25
		add_dip_power = -25
		add_mil_power = -25
	}
}
country_event = {
	id = dutch_republic.22
	title = "dutch_republic.22.t"
	desc = "dutch_republic.22.d"
	picture = BATTLE_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		OR = {
			has_country_flag = supported_orangists
			has_country_flag = supported_statists
		}
		is_at_war = yes
		OR = {
			num_of_generals = 1
			num_of_conquistadors = 1
		}
	}
	option = {
		name = "dutch_republic.22.a"
		add_country_modifier = {
			name = supported_orangists_in_war
			duration = 3650
			hidden = yes
		}
		change_statists_vs_orangists = 0.25
		add_army_tradition = 10
		add_mil_power = 100
	}
	option = {
		name = "dutch_republic.22.b"
		change_statists_vs_orangists = -0.1
		add_war_exhaustion = -2.5
		add_republican_tradition = 2
	}
}
country_event = {
	id = dutch_republic.23
	title = "dutch_republic.23.t"
	desc = "dutch_republic.23.d"
	picture = BATTLE_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		OR = {
			has_country_flag = supported_orangists
			has_country_flag = supported_statists
		}
		is_at_war = yes
		any_rival_country = {
			war_with = ROOT
		}
	}
	option = {
		name = "dutch_republic.23.a"
		add_country_modifier = {
			name = supported_orangists_in_war
			duration = 3650
			hidden = yes
		}
		change_statists_vs_orangists = 0.25
		add_country_modifier = {
			name = orangists_rally_against_rival
			duration = 1825
		}
	}
	option = {
		name = "dutch_republic.23.b"
		change_statists_vs_orangists = -0.1
		add_war_exhaustion = -2.5
	}
}
country_event = {
	id = dutch_republic.24
	title = "dutch_republic.24.t"
	desc = "dutch_republic.24.d"
	picture = DEBATE_REPUBLICAN_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		OR = {
			has_country_flag = supported_orangists
			has_country_flag = supported_statists
		}
		is_at_war = no
		has_country_modifier = supported_orangists_in_war
	}
	option = {
		name = "dutch_republic.24.a"
		change_statists_vs_orangists = -0.25
		add_mil_power = -100
	}
	option = {
		name = "dutch_republic.24.b"
		add_republican_tradition = -5
	}
}
country_event = {
	id = dutch_republic.25
	title = "dutch_republic.25.t"
	desc = "dutch_republic.25.d"
	picture = WOUNDED_SOLDIERS_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		OR = {
			has_country_flag = supported_orangists
			has_country_flag = supported_statists
		}
		is_at_war = no
		war_exhaustion = 10
	}
	option = {
		name = "dutch_republic.25.a"
		change_statists_vs_orangists = -0.25
		add_war_exhaustion = -5
	}
	option = {
		name = "dutch_republic.25.b"
		change_statists_vs_orangists = -0.1
	}
}
province_event = {
	id = dutch_republic.26
	title = "dutch_republic.26.t"
	desc = "dutch_republic.26.d"
	picture = MERCHANTS_TALKING_eventPicture
	is_mtth_scaled_to_size = 1
	trigger = {
		has_dlc = "Res Publica"
		owner = {
			OR = {
				AND = {
					OR = {
						AND = {
							has_reform = parliamentary_monarchy
							has_reform = delegated_rulers
						}
						has_reform = english_monarchy_legacy
					}
				}
				AND = {
					OR = {
						AND = {
							has_reform = parliamentary_monarchy
							has_reform = bureaucracy
							has_reform = hereditary_elite
						}
						has_reform = dutch_republic_legacy
					}
				}
			}
			OR = {
				has_country_flag = supported_orangists
				has_country_flag = supported_statists
			}
		}
		OR = {
			has_province_modifier = center_of_trade_modifier
			has_province_modifier = inland_center_of_trade_modifier
			AND = {
				OR = {
					has_building = harbour_infrastructure_1
					has_building = harbour_infrastructure_2
					has_building = harbour_infrastructure_3x
					has_building = harbour_infrastructure_4
					has_building = harbour_infrastructure_5
				}
			}
			has_province_modifier = minor_center_of_trade_modifier
			has_province_modifier = minor_inland_center_of_trade_modifier
		}
	}
	mean_time_to_happen = {
		years = 83
	}
	option = {
		name = "dutch_republic.26.a"
		owner = {
			change_statists_vs_orangists = -0.15
		}
	}
	option = {
		name = "dutch_republic.26.b"
		add_province_modifier = {
			name = local_regenten_upset
			duration = 1095
		}
	}
}
country_event = {
	id = dutch_republic.27
	title = "dutch_republic.27.t"
	desc = "dutch_republic.27.d"
	picture = BORDER_TENSION_eventPicture
	is_triggered_only = yes
	trigger = {
		has_dlc = "Res Publica"
		OR = {
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = delegated_rulers
					}
					has_reform = english_monarchy_legacy
				}
			}
			AND = {
				OR = {
					AND = {
						has_reform = parliamentary_monarchy
						has_reform = bureaucracy
						has_reform = hereditary_elite
					}
					has_reform = dutch_republic_legacy
				}
			}
		}
		OR = {
			has_country_flag = supported_orangists
			has_country_flag = supported_statists
		}
		any_neighbor_country = {
			NOT = {
				has_opinion = {
					who = ROOT
					value = 0
				}
			}
			ROOT = {
				is_threat = PREV
			}
		}
	}
	option = {
		name = "dutch_republic.27.a"
		change_statists_vs_orangists = -0.15
	}
	option = {
		name = "dutch_republic.27.b"
		random_owned_province = {
			limit = {
				any_neighbor_province = {
					owner = {
						NOT = {
							has_opinion = {
								who = ROOT
								value = 0
							}
						}
						ROOT = {
							is_threat = PREV
						}
					}
				}
			}
			add_province_modifier = {
				name = local_regenten_upset
				duration = 1095
			}
		}
	}
}
province_event = {
	id = dutch_republic.28
	title = "dutch_republic.28.t"
	desc = "dutch_republic.28.d"
	picture = BORDER_TENSION_eventPicture
	is_mtth_scaled_to_size = 1
	trigger = {
		has_dlc = "Res Publica"
		owner = {
			OR = {
				AND = {
					OR = {
						AND = {
							has_reform = parliamentary_monarchy
							has_reform = delegated_rulers
						}
						has_reform = english_monarchy_legacy
					}
				}
				AND = {
					OR = {
						AND = {
							has_reform = parliamentary_monarchy
							has_reform = bureaucracy
							has_reform = hereditary_elite
						}
						has_reform = dutch_republic_legacy
					}
				}
			}
		}
		OR = {
			has_country_flag = supported_orangists
			has_country_flag = supported_statists
		}
		any_neighbor_province = {
			owner = {
				NOT = {
					has_opinion = {
						who = ROOT
						value = 0
					}
				}
				is_threat = ROOT
			}
		}
	}
	mean_time_to_happen = {
		years = 83
	}
	option = {
		name = "dutch_republic.28.a"
		owner = {
			change_statists_vs_orangists = 0.15
		}
	}
	option = {
		name = "dutch_republic.28.b"
		add_province_modifier = {
			name = local_nobles_upset
			duration = 1095
		}
	}
}
province_event = {
	id = dutch_republic.29
	title = "dutch_republic.29.t"
	desc = "dutch_republic.29.d"
	picture = MILITARY_CAMP_eventPicture
	is_mtth_scaled_to_size = 1
	trigger = {
		has_dlc = "Res Publica"
		owner = {
			OR = {
				AND = {
					OR = {
						AND = {
							has_reform = parliamentary_monarchy
							has_reform = delegated_rulers
						}
						has_reform = english_monarchy_legacy
					}
				}
				AND = {
					OR = {
						AND = {
							has_reform = parliamentary_monarchy
							has_reform = bureaucracy
							has_reform = hereditary_elite
						}
						has_reform = dutch_republic_legacy
					}
				}
			}
		}
		OR = {
			has_country_flag = supported_orangists
			has_country_flag = supported_statists
		}
		any_neighbor_province = {
			owner = {
				NOT = {
					has_opinion = {
						who = ROOT
						value = 0
					}
				}
				is_enemy = ROOT
			}
		}
	}
	mean_time_to_happen = {
		years = 83
	}
	option = {
		name = "dutch_republic.29.a"
		owner = {
			change_statists_vs_orangists = 0.15
		}
	}
	option = {
		name = "dutch_republic.29.b"
		add_province_modifier = {
			name = local_nobles_upset
			duration = 1095
		}
	}
}
province_event = {
	id = dutch_republic.30
	title = "dutch_republic.30.t"
	desc = "dutch_republic.30.d"
	picture = DEBATE_REPUBLICAN_eventPicture
	is_mtth_scaled_to_size = 1
	trigger = {
		owner = {
			OR = {
				AND = {
					OR = {
						AND = {
							has_reform = parliamentary_monarchy
							has_reform = delegated_rulers
						}
						has_reform = english_monarchy_legacy
					}
				}
				AND = {
					OR = {
						AND = {
							has_reform = parliamentary_monarchy
							has_reform = bureaucracy
							has_reform = hereditary_elite
						}
						has_reform = dutch_republic_legacy
					}
				}
			}
			OR = {
				has_country_flag = supported_orangists
				has_country_flag = supported_statists
			}
			capital_scope = {
				region = low_countries_region
			}
		}
		has_dlc = "Res Publica"
		OR = {
			province_id = 96
			province_id = 97
			province_id = 98
			province_id = 99
			province_id = 100
			province_id = 2370
		}
	}
	mean_time_to_happen = {
		years = 83
	}
	option = {
		name = "dutch_republic.30.a"
		owner = {
			change_statists_vs_orangists = 0.15
		}
		if = {
			limit = {
				owner = {
					is_statists_in_power = no
				}
			}
			add_province_modifier = {
				name = local_regenten_upset
				duration = 1095
			}
		}
	}
	option = {
		name = "dutch_republic.30.b"
		owner = {
			change_statists_vs_orangists = -0.15
		}
		if = {
			limit = {
				owner = {
					is_orangists_in_power = no
				}
			}
			add_province_modifier = {
				name = local_nobles_upset
				duration = 1095
			}
		}
	}
}
